{
	"id": "1a5c59a772fe819c8ac1d353af6296cb",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.27",
	"solcLongVersion": "0.8.27+commit.40a35a09",
	"input": {
		"language": "Solidity",
		"sources": {
			"Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/ERC721ABurnable.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/Azuki-ERC721A-ERC721ABurnable?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.3\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport './IERC721ABurnable.sol';\nimport '../ERC721A.sol';\n\n/**\n * @title ERC721ABurnable.\n *\n * @dev ERC721A token that can be irreversibly burned (destroyed).\n */\nabstract contract ERC721ABurnable is ERC721A, IERC721ABurnable {\n    /**\n     * @dev Burns `tokenId`. See {ERC721A-_burn}.\n     *\n     * Requirements:\n     *\n     * - The caller must own `tokenId` or be an approved operator.\n     */\n    function burn(uint256 tokenId) public virtual override {\n        _burn(tokenId, true);\n    }\n}\n"
			},
			"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/Azuki-ERC721A-ERC721ABurnable?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.3\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport './IERC721A.sol';\n\n/**\n * @dev Interface of ERC721 token receiver.\n */\ninterface ERC721A__IERC721Receiver {\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n/**\n * @title ERC721A\n *\n * @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n * Non-Fungible Token Standard, including the Metadata extension.\n * Optimized for lower gas during batch mints.\n *\n * Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n * starting from `_startTokenId()`.\n *\n * Assumptions:\n *\n * - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n * - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\n */\ncontract ERC721A is IERC721A {\n    // Bypass for a `--via-ir` bug (https://github.com/chiru-labs/ERC721A/pull/364).\n    struct TokenApprovalRef {\n        address value;\n    }\n\n    // =============================================================\n    //                           CONSTANTS\n    // =============================================================\n\n    // Mask of an entry in packed address data.\n    uint256 private constant _BITMASK_ADDRESS_DATA_ENTRY = (1 << 64) - 1;\n\n    // The bit position of `numberMinted` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_MINTED = 64;\n\n    // The bit position of `numberBurned` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_BURNED = 128;\n\n    // The bit position of `aux` in packed address data.\n    uint256 private constant _BITPOS_AUX = 192;\n\n    // Mask of all 256 bits in packed address data except the 64 bits for `aux`.\n    uint256 private constant _BITMASK_AUX_COMPLEMENT = (1 << 192) - 1;\n\n    // The bit position of `startTimestamp` in packed ownership.\n    uint256 private constant _BITPOS_START_TIMESTAMP = 160;\n\n    // The bit mask of the `burned` bit in packed ownership.\n    uint256 private constant _BITMASK_BURNED = 1 << 224;\n\n    // The bit position of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITPOS_NEXT_INITIALIZED = 225;\n\n    // The bit mask of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITMASK_NEXT_INITIALIZED = 1 << 225;\n\n    // The bit position of `extraData` in packed ownership.\n    uint256 private constant _BITPOS_EXTRA_DATA = 232;\n\n    // Mask of all 256 bits in a packed ownership except the 24 bits for `extraData`.\n    uint256 private constant _BITMASK_EXTRA_DATA_COMPLEMENT = (1 << 232) - 1;\n\n    // The mask of the lower 160 bits for addresses.\n    uint256 private constant _BITMASK_ADDRESS = (1 << 160) - 1;\n\n    // The maximum `quantity` that can be minted with {_mintERC2309}.\n    // This limit is to prevent overflows on the address data entries.\n    // For a limit of 5000, a total of 3.689e15 calls to {_mintERC2309}\n    // is required to cause an overflow, which is unrealistic.\n    uint256 private constant _MAX_MINT_ERC2309_QUANTITY_LIMIT = 5000;\n\n    // The `Transfer` event signature is given by:\n    // `keccak256(bytes(\"Transfer(address,address,uint256)\"))`.\n    bytes32 private constant _TRANSFER_EVENT_SIGNATURE =\n        0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef;\n\n    // =============================================================\n    //                            STORAGE\n    // =============================================================\n\n    // The next token ID to be minted.\n    uint256 private _currentIndex;\n\n    // The number of tokens burned.\n    uint256 private _burnCounter;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to ownership details\n    // An empty struct value does not necessarily mean the token is unowned.\n    // See {_packedOwnershipOf} implementation for details.\n    //\n    // Bits Layout:\n    // - [0..159]   `addr`\n    // - [160..223] `startTimestamp`\n    // - [224]      `burned`\n    // - [225]      `nextInitialized`\n    // - [232..255] `extraData`\n    mapping(uint256 => uint256) private _packedOwnerships;\n\n    // Mapping owner address to address data.\n    //\n    // Bits Layout:\n    // - [0..63]    `balance`\n    // - [64..127]  `numberMinted`\n    // - [128..191] `numberBurned`\n    // - [192..255] `aux`\n    mapping(address => uint256) private _packedAddressData;\n\n    // Mapping from token ID to approved address.\n    mapping(uint256 => TokenApprovalRef) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // =============================================================\n    //                          CONSTRUCTOR\n    // =============================================================\n\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        _currentIndex = _startTokenId();\n    }\n\n    // =============================================================\n    //                   TOKEN COUNTING OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the starting token ID.\n     * To change the starting token ID, please override this function.\n     */\n    function _startTokenId() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev Returns the next token ID to be minted.\n     */\n    function _nextTokenId() internal view virtual returns (uint256) {\n        return _currentIndex;\n    }\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        // Counter underflow is impossible as _burnCounter cannot be incremented\n        // more than `_currentIndex - _startTokenId()` times.\n        unchecked {\n            return _currentIndex - _burnCounter - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev Returns the total amount of tokens minted in the contract.\n     */\n    function _totalMinted() internal view virtual returns (uint256) {\n        // Counter underflow is impossible as `_currentIndex` does not decrement,\n        // and it is initialized to `_startTokenId()`.\n        unchecked {\n            return _currentIndex - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev Returns the total number of tokens burned.\n     */\n    function _totalBurned() internal view virtual returns (uint256) {\n        return _burnCounter;\n    }\n\n    // =============================================================\n    //                    ADDRESS DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        if (owner == address(0)) _revert(BalanceQueryForZeroAddress.selector);\n        return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens minted by `owner`.\n     */\n    function _numberMinted(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_MINTED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens burned by or on behalf of `owner`.\n     */\n    function _numberBurned(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_BURNED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     */\n    function _getAux(address owner) internal view returns (uint64) {\n        return uint64(_packedAddressData[owner] >> _BITPOS_AUX);\n    }\n\n    /**\n     * Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     * If there are multiple variables, please pack them into a uint64.\n     */\n    function _setAux(address owner, uint64 aux) internal virtual {\n        uint256 packed = _packedAddressData[owner];\n        uint256 auxCasted;\n        // Cast `aux` with assembly to avoid redundant masking.\n        assembly {\n            auxCasted := aux\n        }\n        packed = (packed & _BITMASK_AUX_COMPLEMENT) | (auxCasted << _BITPOS_AUX);\n        _packedAddressData[owner] = packed;\n    }\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        // The interface IDs are constants representing the first 4 bytes\n        // of the XOR of all function selectors in the interface.\n        // See: [ERC165](https://eips.ethereum.org/EIPS/eip-165)\n        // (e.g. `bytes4(i.functionA.selector ^ i.functionB.selector ^ ...)`)\n        return\n            interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\n            interfaceId == 0x80ac58cd || // ERC165 interface ID for ERC721.\n            interfaceId == 0x5b5e139f; // ERC165 interface ID for ERC721Metadata.\n    }\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        if (!_exists(tokenId)) _revert(URIQueryForNonexistentToken.selector);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '';\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, it can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return '';\n    }\n\n    // =============================================================\n    //                     OWNERSHIPS OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        return address(uint160(_packedOwnershipOf(tokenId)));\n    }\n\n    /**\n     * @dev Gas spent here starts off proportional to the maximum mint batch size.\n     * It gradually moves to O(1) as tokens get transferred around over time.\n     */\n    function _ownershipOf(uint256 tokenId) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnershipOf(tokenId));\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct at `index`.\n     */\n    function _ownershipAt(uint256 index) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnerships[index]);\n    }\n\n    /**\n     * @dev Returns whether the ownership slot at `index` is initialized.\n     * An uninitialized slot does not necessarily mean that the slot has no owner.\n     */\n    function _ownershipIsInitialized(uint256 index) internal view virtual returns (bool) {\n        return _packedOwnerships[index] != 0;\n    }\n\n    /**\n     * @dev Initializes the ownership slot minted at `index` for efficiency purposes.\n     */\n    function _initializeOwnershipAt(uint256 index) internal virtual {\n        if (_packedOwnerships[index] == 0) {\n            _packedOwnerships[index] = _packedOwnershipOf(index);\n        }\n    }\n\n    /**\n     * Returns the packed ownership data of `tokenId`.\n     */\n    function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {\n        if (_startTokenId() <= tokenId) {\n            packed = _packedOwnerships[tokenId];\n            // If the data at the starting slot does not exist, start the scan.\n            if (packed == 0) {\n                if (tokenId >= _currentIndex) _revert(OwnerQueryForNonexistentToken.selector);\n                // Invariant:\n                // There will always be an initialized ownership slot\n                // (i.e. `ownership.addr != address(0) && ownership.burned == false`)\n                // before an unintialized ownership slot\n                // (i.e. `ownership.addr == address(0) && ownership.burned == false`)\n                // Hence, `tokenId` will not underflow.\n                //\n                // We can directly compare the packed value.\n                // If the address is zero, packed will be zero.\n                for (;;) {\n                    unchecked {\n                        packed = _packedOwnerships[--tokenId];\n                    }\n                    if (packed == 0) continue;\n                    if (packed & _BITMASK_BURNED == 0) return packed;\n                    // Otherwise, the token is burned, and we must revert.\n                    // This handles the case of batch burned tokens, where only the burned bit\n                    // of the starting slot is set, and remaining slots are left uninitialized.\n                    _revert(OwnerQueryForNonexistentToken.selector);\n                }\n            }\n            // Otherwise, the data exists and we can skip the scan.\n            // This is possible because we have already achieved the target condition.\n            // This saves 2143 gas on transfers of initialized tokens.\n            // If the token is not burned, return `packed`. Otherwise, revert.\n            if (packed & _BITMASK_BURNED == 0) return packed;\n        }\n        _revert(OwnerQueryForNonexistentToken.selector);\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct from `packed`.\n     */\n    function _unpackedOwnership(uint256 packed) private pure returns (TokenOwnership memory ownership) {\n        ownership.addr = address(uint160(packed));\n        ownership.startTimestamp = uint64(packed >> _BITPOS_START_TIMESTAMP);\n        ownership.burned = packed & _BITMASK_BURNED != 0;\n        ownership.extraData = uint24(packed >> _BITPOS_EXTRA_DATA);\n    }\n\n    /**\n     * @dev Packs ownership data into a single uint256.\n     */\n    function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // `owner | (block.timestamp << _BITPOS_START_TIMESTAMP) | flags`.\n            result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags))\n        }\n    }\n\n    /**\n     * @dev Returns the `nextInitialized` flag set if `quantity` equals 1.\n     */\n    function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {\n        // For branchless setting of the `nextInitialized` flag.\n        assembly {\n            // `(quantity == 1) << _BITPOS_NEXT_INITIALIZED`.\n            result := shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1))\n        }\n    }\n\n    // =============================================================\n    //                      APPROVAL OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     */\n    function approve(address to, uint256 tokenId) public payable virtual override {\n        _approve(to, tokenId, true);\n    }\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        if (!_exists(tokenId)) _revert(ApprovalQueryForNonexistentToken.selector);\n\n        return _tokenApprovals[tokenId].value;\n    }\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _operatorApprovals[_msgSenderERC721A()][operator] = approved;\n        emit ApprovalForAll(_msgSenderERC721A(), operator, approved);\n    }\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted. See {_mint}.\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool result) {\n        if (_startTokenId() <= tokenId) {\n            if (tokenId < _currentIndex) {\n                uint256 packed;\n                while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId;\n                result = packed & _BITMASK_BURNED == 0;\n            }\n        }\n    }\n\n    /**\n     * @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`.\n     */\n    function _isSenderApprovedOrOwner(\n        address approvedAddress,\n        address owner,\n        address msgSender\n    ) private pure returns (bool result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // Mask `msgSender` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            msgSender := and(msgSender, _BITMASK_ADDRESS)\n            // `msgSender == owner || msgSender == approvedAddress`.\n            result := or(eq(msgSender, owner), eq(msgSender, approvedAddress))\n        }\n    }\n\n    /**\n     * @dev Returns the storage slot and value for the approved address of `tokenId`.\n     */\n    function _getApprovedSlotAndAddress(uint256 tokenId)\n        private\n        view\n        returns (uint256 approvedAddressSlot, address approvedAddress)\n    {\n        TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId];\n        // The following is equivalent to `approvedAddress = _tokenApprovals[tokenId].value`.\n        assembly {\n            approvedAddressSlot := tokenApproval.slot\n            approvedAddress := sload(approvedAddressSlot)\n        }\n    }\n\n    // =============================================================\n    //                      TRANSFER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        // Mask `from` to the lower 160 bits, in case the upper bits somehow aren't clean.\n        from = address(uint160(uint256(uint160(from)) & _BITMASK_ADDRESS));\n\n        if (address(uint160(prevOwnershipPacked)) != from) _revert(TransferFromIncorrectOwner.selector);\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        // The nested ifs save around 20+ gas over a compound boolean condition.\n        if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n            if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector);\n\n        _beforeTokenTransfers(from, to, tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // We can directly increment and decrement the balances.\n            --_packedAddressData[from]; // Updates: `balance -= 1`.\n            ++_packedAddressData[to]; // Updates: `balance += 1`.\n\n            // Updates:\n            // - `address` to the next owner.\n            // - `startTimestamp` to the timestamp of transfering.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                to,\n                _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n        uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\n        assembly {\n            // Emit the `Transfer` event.\n            log4(\n                0, // Start of data (0, since no data).\n                0, // End of data (0, since no data).\n                _TRANSFER_EVENT_SIGNATURE, // Signature.\n                from, // `from`.\n                toMasked, // `to`.\n                tokenId // `tokenId`.\n            )\n        }\n        if (toMasked == 0) _revert(TransferToZeroAddress.selector);\n\n        _afterTokenTransfers(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        safeTransferFrom(from, to, tokenId, '');\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public payable virtual override {\n        transferFrom(from, to, tokenId);\n        if (to.code.length != 0)\n            if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\n                _revert(TransferToNonERC721ReceiverImplementer.selector);\n            }\n    }\n\n    /**\n     * @dev Hook that is called before a set of serially-ordered token IDs\n     * are about to be transferred. This includes minting.\n     * And also called before burning one token.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _beforeTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after a set of serially-ordered token IDs\n     * have been transferred. This includes minting.\n     * And also called after one token has been burned.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` has been minted for `to`.\n     * - When `to` is zero, `tokenId` has been burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _afterTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n     *\n     * `from` - Previous owner of the given token ID.\n     * `to` - Target address that will receive the token.\n     * `tokenId` - Token ID to be transferred.\n     * `_data` - Optional data to send along with the call.\n     *\n     * Returns whether the call correctly returned the expected magic value.\n     */\n    function _checkContractOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\n            bytes4 retval\n        ) {\n            return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector;\n        } catch (bytes memory reason) {\n            if (reason.length == 0) {\n                _revert(TransferToNonERC721ReceiverImplementer.selector);\n            }\n            assembly {\n                revert(add(32, reason), mload(reason))\n            }\n        }\n    }\n\n    // =============================================================\n    //                        MINT OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _mint(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (quantity == 0) _revert(MintZeroQuantity.selector);\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are incredibly unrealistic.\n        // `balance` and `numberMinted` have a maximum limit of 2**64.\n        // `tokenId` has a maximum limit of 2**256.\n        unchecked {\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\n\n            if (toMasked == 0) _revert(MintToZeroAddress.selector);\n\n            uint256 end = startTokenId + quantity;\n            uint256 tokenId = startTokenId;\n\n            do {\n                assembly {\n                    // Emit the `Transfer` event.\n                    log4(\n                        0, // Start of data (0, since no data).\n                        0, // End of data (0, since no data).\n                        _TRANSFER_EVENT_SIGNATURE, // Signature.\n                        0, // `address(0)`.\n                        toMasked, // `to`.\n                        tokenId // `tokenId`.\n                    )\n                }\n                // The `!=` check ensures that large values of `quantity`\n                // that overflows uint256 will make the loop run out of gas.\n            } while (++tokenId != end);\n\n            _currentIndex = end;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * This function is intended for efficient minting only during contract creation.\n     *\n     * It emits only one {ConsecutiveTransfer} as defined in\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n     * instead of a sequence of {Transfer} event(s).\n     *\n     * Calling this function outside of contract creation WILL make your contract\n     * non-compliant with the ERC721 standard.\n     * For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n     * {ConsecutiveTransfer} event is only permissible during contract creation.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {ConsecutiveTransfer} event.\n     */\n    function _mintERC2309(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (to == address(0)) _revert(MintToZeroAddress.selector);\n        if (quantity == 0) _revert(MintZeroQuantity.selector);\n        if (quantity > _MAX_MINT_ERC2309_QUANTITY_LIMIT) _revert(MintERC2309QuantityExceedsLimit.selector);\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are unrealistic due to the above check for `quantity` to be below the limit.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            emit ConsecutiveTransfer(startTokenId, startTokenId + quantity - 1, address(0), to);\n\n            _currentIndex = startTokenId + quantity;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n     * - `quantity` must be greater than 0.\n     *\n     * See {_mint}.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _safeMint(\n        address to,\n        uint256 quantity,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, quantity);\n\n        unchecked {\n            if (to.code.length != 0) {\n                uint256 end = _currentIndex;\n                uint256 index = end - quantity;\n                do {\n                    if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {\n                        _revert(TransferToNonERC721ReceiverImplementer.selector);\n                    }\n                } while (index < end);\n                // Reentrancy protection.\n                if (_currentIndex != end) _revert(bytes4(0));\n            }\n        }\n    }\n\n    /**\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\n     */\n    function _safeMint(address to, uint256 quantity) internal virtual {\n        _safeMint(to, quantity, '');\n    }\n\n    // =============================================================\n    //                       APPROVAL OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Equivalent to `_approve(to, tokenId, false)`.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _approve(to, tokenId, false);\n    }\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(\n        address to,\n        uint256 tokenId,\n        bool approvalCheck\n    ) internal virtual {\n        address owner = ownerOf(tokenId);\n\n        if (approvalCheck && _msgSenderERC721A() != owner)\n            if (!isApprovedForAll(owner, _msgSenderERC721A())) {\n                _revert(ApprovalCallerNotOwnerNorApproved.selector);\n            }\n\n        _tokenApprovals[tokenId].value = to;\n        emit Approval(owner, to, tokenId);\n    }\n\n    // =============================================================\n    //                        BURN OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Equivalent to `_burn(tokenId, false)`.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        _burn(tokenId, false);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        address from = address(uint160(prevOwnershipPacked));\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        if (approvalCheck) {\n            // The nested ifs save around 20+ gas over a compound boolean condition.\n            if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n                if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector);\n        }\n\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // Updates:\n            // - `balance -= 1`.\n            // - `numberBurned += 1`.\n            //\n            // We can directly decrement the balance, and increment the number burned.\n            // This is equivalent to `packed -= 1; packed += 1 << _BITPOS_NUMBER_BURNED;`.\n            _packedAddressData[from] += (1 << _BITPOS_NUMBER_BURNED) - 1;\n\n            // Updates:\n            // - `address` to the last owner.\n            // - `startTimestamp` to the timestamp of burning.\n            // - `burned` to `true`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                from,\n                (_BITMASK_BURNED | _BITMASK_NEXT_INITIALIZED) | _nextExtraData(from, address(0), prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, address(0), tokenId);\n        _afterTokenTransfers(from, address(0), tokenId, 1);\n\n        // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times.\n        unchecked {\n            _burnCounter++;\n        }\n    }\n\n    // =============================================================\n    //                     EXTRA DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Directly sets the extra data for the ownership data `index`.\n     */\n    function _setExtraDataAt(uint256 index, uint24 extraData) internal virtual {\n        uint256 packed = _packedOwnerships[index];\n        if (packed == 0) _revert(OwnershipNotInitializedForExtraData.selector);\n        uint256 extraDataCasted;\n        // Cast `extraData` with assembly to avoid redundant masking.\n        assembly {\n            extraDataCasted := extraData\n        }\n        packed = (packed & _BITMASK_EXTRA_DATA_COMPLEMENT) | (extraDataCasted << _BITPOS_EXTRA_DATA);\n        _packedOwnerships[index] = packed;\n    }\n\n    /**\n     * @dev Called during each token transfer to set the 24bit `extraData` field.\n     * Intended to be overridden by the cosumer contract.\n     *\n     * `previousExtraData` - the value of `extraData` before transfer.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _extraData(\n        address from,\n        address to,\n        uint24 previousExtraData\n    ) internal view virtual returns (uint24) {}\n\n    /**\n     * @dev Returns the next extra data for the packed ownership data.\n     * The returned result is shifted into position.\n     */\n    function _nextExtraData(\n        address from,\n        address to,\n        uint256 prevOwnershipPacked\n    ) private view returns (uint256) {\n        uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA);\n        return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA;\n    }\n\n    // =============================================================\n    //                       OTHER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the message sender (defaults to `msg.sender`).\n     *\n     * If you are writing GSN compatible contracts, you need to override this function.\n     */\n    function _msgSenderERC721A() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    /**\n     * @dev Converts a uint256 to its ASCII string decimal representation.\n     */\n    function _toString(uint256 value) internal pure virtual returns (string memory str) {\n        assembly {\n            // The maximum value of a uint256 contains 78 digits (1 byte per digit), but\n            // we allocate 0xa0 bytes to keep the free memory pointer 32-byte word aligned.\n            // We will need 1 word for the trailing zeros padding, 1 word for the length,\n            // and 3 words for a maximum of 78 digits. Total: 5 * 0x20 = 0xa0.\n            let m := add(mload(0x40), 0xa0)\n            // Update the free memory pointer to allocate.\n            mstore(0x40, m)\n            // Assign the `str` to the end.\n            str := sub(m, 0x20)\n            // Zeroize the slot after the string.\n            mstore(str, 0)\n\n            // Cache the end of the memory to calculate the length later.\n            let end := str\n\n            // We write the string from rightmost digit to leftmost digit.\n            // The following is essentially a do-while loop that also handles the zero case.\n            // prettier-ignore\n            for { let temp := value } 1 {} {\n                str := sub(str, 1)\n                // Write the character to the pointer.\n                // The ASCII index of the '0' character is 48.\n                mstore8(str, add(48, mod(temp, 10)))\n                // Keep dividing `temp` until zero.\n                temp := div(temp, 10)\n                // prettier-ignore\n                if iszero(temp) { break }\n            }\n\n            let length := sub(end, str)\n            // Move the pointer 32 bytes leftwards to make room for the length.\n            str := sub(str, 0x20)\n            // Store the length.\n            mstore(str, length)\n        }\n    }\n\n    /**\n     * @dev For more efficient reverts.\n     */\n    function _revert(bytes4 errorSelector) internal pure {\n        assembly {\n            mstore(0x00, errorSelector)\n            revert(0x00, 0x04)\n        }\n    }\n}\n"
			},
			"Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/IERC721ABurnable.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/Azuki-ERC721A-ERC721ABurnable?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.3\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport '../IERC721A.sol';\n\n/**\n * @dev Interface of ERC721ABurnable.\n */\ninterface IERC721ABurnable is IERC721A {\n    /**\n     * @dev Burns `tokenId`. See {ERC721A-_burn}.\n     *\n     * Requirements:\n     *\n     * - The caller must own `tokenId` or be an approved operator.\n     */\n    function burn(uint256 tokenId) external;\n}\n"
			},
			"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/IERC721A.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/Azuki-ERC721A-ERC721ABurnable?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.3\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\n/**\n * @dev Interface of ERC721A.\n */\ninterface IERC721A {\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error ApprovalCallerNotOwnerNorApproved();\n\n    /**\n     * The token does not exist.\n     */\n    error ApprovalQueryForNonexistentToken();\n\n    /**\n     * Cannot query the balance for the zero address.\n     */\n    error BalanceQueryForZeroAddress();\n\n    /**\n     * Cannot mint to the zero address.\n     */\n    error MintToZeroAddress();\n\n    /**\n     * The quantity of tokens minted must be more than zero.\n     */\n    error MintZeroQuantity();\n\n    /**\n     * The token does not exist.\n     */\n    error OwnerQueryForNonexistentToken();\n\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error TransferCallerNotOwnerNorApproved();\n\n    /**\n     * The token must be owned by `from`.\n     */\n    error TransferFromIncorrectOwner();\n\n    /**\n     * Cannot safely transfer to a contract that does not implement the\n     * ERC721Receiver interface.\n     */\n    error TransferToNonERC721ReceiverImplementer();\n\n    /**\n     * Cannot transfer to the zero address.\n     */\n    error TransferToZeroAddress();\n\n    /**\n     * The token does not exist.\n     */\n    error URIQueryForNonexistentToken();\n\n    /**\n     * The `quantity` minted with ERC2309 exceeds the safety limit.\n     */\n    error MintERC2309QuantityExceedsLimit();\n\n    /**\n     * The `extraData` cannot be set on an unintialized ownership slot.\n     */\n    error OwnershipNotInitializedForExtraData();\n\n    // =============================================================\n    //                            STRUCTS\n    // =============================================================\n\n    struct TokenOwnership {\n        // The address of the owner.\n        address addr;\n        // Stores the start time of ownership with minimal overhead for tokenomics.\n        uint64 startTimestamp;\n        // Whether the token has been burned.\n        bool burned;\n        // Arbitrary data similar to `startTimestamp` that can be set via {_extraData}.\n        uint24 extraData;\n    }\n\n    // =============================================================\n    //                         TOKEN COUNTERS\n    // =============================================================\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n\n    // =============================================================\n    //                            IERC721\n    // =============================================================\n\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables\n     * (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`,\n     * checking first that contract recipients are aware of the ERC721 protocol\n     * to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move\n     * this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external payable;\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n     * whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external payable;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n\n    // =============================================================\n    //                           IERC2309\n    // =============================================================\n\n    /**\n     * @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n     * (inclusive) is transferred from `from` to `to`, as defined in the\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n     *\n     * See {_mintERC2309} for more details.\n     */\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/ERC721ABurnable.sol": {
				"ERC721ABurnable": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721A token that can be irreversibly burned (destroyed).",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC721ABurnable.",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721A token that can be irreversibly burned (destroyed).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721ABurnable.\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/ERC721ABurnable.sol\":\"ERC721ABurnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/ERC721ABurnable.sol\":{\"keccak256\":\"0x3e80cd0ad775e5f1f7edec91cb68fc1bbe9639e95db22cedf04a7d1608702770\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fa472053f1094bac8445dbf3f283ff8cb8ad80585d2e27ddb951f2064ecbeb9\",\"dweb:/ipfs/QmZpn6ySq24KZTGx4KK4nQywyzRUTMyi9bAAFTqFzf4pjx\"]},\"Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/IERC721ABurnable.sol\":{\"keccak256\":\"0x79c0f16710e7243a647f6ec3c44e282f54f370c55cfe9d4834a9672391203fd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://506e60ac09a2e3ad7fe1eabc3d3f5b3393178280d55cc61d4b982da6f354942b\",\"dweb:/ipfs/QmQxJ4uEEdjPu28buKRVpdbTYqu19H99JBPU3AdjDyvhbN\"]},\"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":{\"keccak256\":\"0xbf164ed12ed2fb1eca6dba3afc7be8958a03cc8979f7302fda9c45d70cf3735d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://845f4ab43711e9a2e49f81519d6daef7bdbc98ba9ffcfe059f0fb2372c217288\",\"dweb:/ipfs/QmVxJtRznhL6M7daatv3HqL2S4joGMqiFzPS21SqK7r6h4\"]},\"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/IERC721A.sol\":{\"keccak256\":\"0xa50758be4b6557e7ffb8da3a58ab42d8c913849dfaeaf099ef2112d18fc0540c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e459408d4969a470969bebe5de840f0a1e1d014c9d9a273f6413f17a8ba69c2e\",\"dweb:/ipfs/QmYDd4TqiFStL25VebeP9KikYBnL6uSpoaxx7E2h6sLDG6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 127,
								"contract": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 129,
								"contract": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 131,
								"contract": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 133,
								"contract": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 137,
								"contract": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 141,
								"contract": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 146,
								"contract": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)59_storage)"
							},
							{
								"astId": 152,
								"contract": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(TokenApprovalRef)59_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenApprovalRef)59_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenApprovalRef)59_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenApprovalRef",
								"members": [
									{
										"astId": 58,
										"contract": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/ERC721ABurnable.sol:ERC721ABurnable",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/IERC721ABurnable.sol": {
				"IERC721ABurnable": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721ABurnable.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721ABurnable.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/IERC721ABurnable.sol\":\"IERC721ABurnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/IERC721ABurnable.sol\":{\"keccak256\":\"0x79c0f16710e7243a647f6ec3c44e282f54f370c55cfe9d4834a9672391203fd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://506e60ac09a2e3ad7fe1eabc3d3f5b3393178280d55cc61d4b982da6f354942b\",\"dweb:/ipfs/QmQxJ4uEEdjPu28buKRVpdbTYqu19H99JBPU3AdjDyvhbN\"]},\"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/IERC721A.sol\":{\"keccak256\":\"0xa50758be4b6557e7ffb8da3a58ab42d8c913849dfaeaf099ef2112d18fc0540c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e459408d4969a470969bebe5de840f0a1e1d014c9d9a273f6413f17a8ba69c2e\",\"dweb:/ipfs/QmYDd4TqiFStL25VebeP9KikYBnL6uSpoaxx7E2h6sLDG6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol": {
				"ERC721A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC721A",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":2185:44823  contract ERC721A is IERC721A {... */\n  mstore(0x40, 0x80)\n    /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":6236:6390  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":6310:6315  name_ */\n  dup2\n    /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":6302:6307  _name */\n  0x02\n    /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":6302:6315  _name = name_ */\n  swap1\n  dup2\n  tag_6\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":6335:6342  symbol_ */\n  dup1\n    /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":6325:6332  _symbol */\n  0x03\n    /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":6325:6342  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_8\n  swap2\n  swap1\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n    /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":6368:6383  _startTokenId() */\n  tag_9\n    /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":6368:6381  _startTokenId */\n  shl(0x20, tag_10)\n    /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":6368:6383  _startTokenId() */\n  0x20\n  shr\n  jump\t// in\ntag_9:\n    /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":6352:6365  _currentIndex */\n  0x00\n    /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":6352:6383  _currentIndex = _startTokenId() */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":6236:6390  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":2185:44823  contract ERC721A is IERC721A {... */\n  jump(tag_11)\n    /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":6716:6806  function _startTokenId() internal view virtual returns (uint256) {... */\ntag_10:\n    /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":6772:6779  uint256 */\n  0x00\n    /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":6798:6799  0 */\n  0x00\n    /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":6791:6799  return 0 */\n  swap1\n  pop\n    /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":6716:6806  function _startTokenId() internal view virtual returns (uint256) {... */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":7:82   */\ntag_13:\n    /* \"#utility.yul\":40:46   */\n  0x00\n    /* \"#utility.yul\":73:75   */\n  0x40\n    /* \"#utility.yul\":67:76   */\n  mload\n    /* \"#utility.yul\":57:76   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:82   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_14:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":211:328   */\ntag_15:\n    /* \"#utility.yul\":320:321   */\n  0x00\n    /* \"#utility.yul\":317:318   */\n  0x00\n    /* \"#utility.yul\":310:322   */\n  revert\n    /* \"#utility.yul\":334:451   */\ntag_16:\n    /* \"#utility.yul\":443:444   */\n  0x00\n    /* \"#utility.yul\":440:441   */\n  0x00\n    /* \"#utility.yul\":433:445   */\n  revert\n    /* \"#utility.yul\":457:574   */\ntag_17:\n    /* \"#utility.yul\":566:567   */\n  0x00\n    /* \"#utility.yul\":563:564   */\n  0x00\n    /* \"#utility.yul\":556:568   */\n  revert\n    /* \"#utility.yul\":580:682   */\ntag_18:\n    /* \"#utility.yul\":621:627   */\n  0x00\n    /* \"#utility.yul\":672:674   */\n  0x1f\n    /* \"#utility.yul\":668:675   */\n  not\n    /* \"#utility.yul\":663:665   */\n  0x1f\n    /* \"#utility.yul\":656:661   */\n  dup4\n    /* \"#utility.yul\":652:666   */\n  add\n    /* \"#utility.yul\":648:676   */\n  and\n    /* \"#utility.yul\":638:676   */\n  swap1\n  pop\n    /* \"#utility.yul\":580:682   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":688:868   */\ntag_19:\n    /* \"#utility.yul\":736:813   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":733:734   */\n  0x00\n    /* \"#utility.yul\":726:814   */\n  mstore\n    /* \"#utility.yul\":833:837   */\n  0x41\n    /* \"#utility.yul\":830:831   */\n  0x04\n    /* \"#utility.yul\":823:838   */\n  mstore\n    /* \"#utility.yul\":857:861   */\n  0x24\n    /* \"#utility.yul\":854:855   */\n  0x00\n    /* \"#utility.yul\":847:862   */\n  revert\n    /* \"#utility.yul\":874:1155   */\ntag_20:\n    /* \"#utility.yul\":957:984   */\n  tag_54\n    /* \"#utility.yul\":979:983   */\n  dup3\n    /* \"#utility.yul\":957:984   */\n  tag_18\n  jump\t// in\ntag_54:\n    /* \"#utility.yul\":949:955   */\n  dup2\n    /* \"#utility.yul\":945:985   */\n  add\n    /* \"#utility.yul\":1087:1093   */\n  dup2\n    /* \"#utility.yul\":1075:1085   */\n  dup2\n    /* \"#utility.yul\":1072:1094   */\n  lt\n    /* \"#utility.yul\":1051:1069   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1039:1049   */\n  dup3\n    /* \"#utility.yul\":1036:1070   */\n  gt\n    /* \"#utility.yul\":1033:1095   */\n  or\n    /* \"#utility.yul\":1030:1118   */\n  iszero\n  tag_55\n  jumpi\n    /* \"#utility.yul\":1098:1116   */\n  tag_56\n  tag_19\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":1030:1118   */\ntag_55:\n    /* \"#utility.yul\":1138:1148   */\n  dup1\n    /* \"#utility.yul\":1134:1136   */\n  0x40\n    /* \"#utility.yul\":1127:1149   */\n  mstore\n    /* \"#utility.yul\":917:1155   */\n  pop\n    /* \"#utility.yul\":874:1155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1161:1290   */\ntag_21:\n    /* \"#utility.yul\":1195:1201   */\n  0x00\n    /* \"#utility.yul\":1222:1242   */\n  tag_58\n  tag_13\n  jump\t// in\ntag_58:\n    /* \"#utility.yul\":1212:1242   */\n  swap1\n  pop\n    /* \"#utility.yul\":1251:1284   */\n  tag_59\n    /* \"#utility.yul\":1279:1283   */\n  dup3\n    /* \"#utility.yul\":1271:1277   */\n  dup3\n    /* \"#utility.yul\":1251:1284   */\n  tag_20\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1161:1290   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1296:1604   */\ntag_22:\n    /* \"#utility.yul\":1358:1362   */\n  0x00\n    /* \"#utility.yul\":1448:1466   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":1440:1446   */\n  dup3\n    /* \"#utility.yul\":1437:1467   */\n  gt\n    /* \"#utility.yul\":1434:1490   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":1470:1488   */\n  tag_62\n  tag_19\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1434:1490   */\ntag_61:\n    /* \"#utility.yul\":1508:1537   */\n  tag_63\n    /* \"#utility.yul\":1530:1536   */\n  dup3\n    /* \"#utility.yul\":1508:1537   */\n  tag_18\n  jump\t// in\ntag_63:\n    /* \"#utility.yul\":1500:1537   */\n  swap1\n  pop\n    /* \"#utility.yul\":1592:1596   */\n  0x20\n    /* \"#utility.yul\":1586:1590   */\n  dup2\n    /* \"#utility.yul\":1582:1597   */\n  add\n    /* \"#utility.yul\":1574:1597   */\n  swap1\n  pop\n    /* \"#utility.yul\":1296:1604   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1610:1749   */\ntag_23:\n    /* \"#utility.yul\":1699:1705   */\n  dup3\n    /* \"#utility.yul\":1694:1697   */\n  dup2\n    /* \"#utility.yul\":1689:1692   */\n  dup4\n    /* \"#utility.yul\":1683:1706   */\n  mcopy\n    /* \"#utility.yul\":1740:1741   */\n  0x00\n    /* \"#utility.yul\":1731:1737   */\n  dup4\n    /* \"#utility.yul\":1726:1729   */\n  dup4\n    /* \"#utility.yul\":1722:1738   */\n  add\n    /* \"#utility.yul\":1715:1742   */\n  mstore\n    /* \"#utility.yul\":1610:1749   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1755:2189   */\ntag_24:\n    /* \"#utility.yul\":1844:1849   */\n  0x00\n    /* \"#utility.yul\":1869:1935   */\n  tag_66\n    /* \"#utility.yul\":1885:1934   */\n  tag_67\n    /* \"#utility.yul\":1927:1933   */\n  dup5\n    /* \"#utility.yul\":1885:1934   */\n  tag_22\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1869:1935   */\n  tag_21\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1860:1935   */\n  swap1\n  pop\n    /* \"#utility.yul\":1958:1964   */\n  dup3\n    /* \"#utility.yul\":1951:1956   */\n  dup2\n    /* \"#utility.yul\":1944:1965   */\n  mstore\n    /* \"#utility.yul\":1996:2000   */\n  0x20\n    /* \"#utility.yul\":1989:1994   */\n  dup2\n    /* \"#utility.yul\":1985:2001   */\n  add\n    /* \"#utility.yul\":2034:2037   */\n  dup5\n    /* \"#utility.yul\":2025:2031   */\n  dup5\n    /* \"#utility.yul\":2020:2023   */\n  dup5\n    /* \"#utility.yul\":2016:2032   */\n  add\n    /* \"#utility.yul\":2013:2038   */\n  gt\n    /* \"#utility.yul\":2010:2122   */\n  iszero\n  tag_68\n  jumpi\n    /* \"#utility.yul\":2041:2120   */\n  tag_69\n  tag_17\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":2010:2122   */\ntag_68:\n    /* \"#utility.yul\":2131:2183   */\n  tag_70\n    /* \"#utility.yul\":2176:2182   */\n  dup5\n    /* \"#utility.yul\":2171:2174   */\n  dup3\n    /* \"#utility.yul\":2166:2169   */\n  dup6\n    /* \"#utility.yul\":2131:2183   */\n  tag_23\n  jump\t// in\ntag_70:\n    /* \"#utility.yul\":1850:2189   */\n  pop\n    /* \"#utility.yul\":1755:2189   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2209:2564   */\ntag_25:\n    /* \"#utility.yul\":2276:2281   */\n  0x00\n    /* \"#utility.yul\":2325:2328   */\n  dup3\n    /* \"#utility.yul\":2318:2322   */\n  0x1f\n    /* \"#utility.yul\":2310:2316   */\n  dup4\n    /* \"#utility.yul\":2306:2323   */\n  add\n    /* \"#utility.yul\":2302:2329   */\n  slt\n    /* \"#utility.yul\":2292:2414   */\n  tag_72\n  jumpi\n    /* \"#utility.yul\":2333:2412   */\n  tag_73\n  tag_16\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2292:2414   */\ntag_72:\n    /* \"#utility.yul\":2443:2449   */\n  dup2\n    /* \"#utility.yul\":2437:2450   */\n  mload\n    /* \"#utility.yul\":2468:2558   */\n  tag_74\n    /* \"#utility.yul\":2554:2557   */\n  dup5\n    /* \"#utility.yul\":2546:2552   */\n  dup3\n    /* \"#utility.yul\":2539:2543   */\n  0x20\n    /* \"#utility.yul\":2531:2537   */\n  dup7\n    /* \"#utility.yul\":2527:2544   */\n  add\n    /* \"#utility.yul\":2468:2558   */\n  tag_24\n  jump\t// in\ntag_74:\n    /* \"#utility.yul\":2459:2558   */\n  swap2\n  pop\n    /* \"#utility.yul\":2282:2564   */\n  pop\n    /* \"#utility.yul\":2209:2564   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2570:3423   */\ntag_3:\n    /* \"#utility.yul\":2669:2675   */\n  0x00\n    /* \"#utility.yul\":2677:2683   */\n  0x00\n    /* \"#utility.yul\":2726:2728   */\n  0x40\n    /* \"#utility.yul\":2714:2723   */\n  dup4\n    /* \"#utility.yul\":2705:2712   */\n  dup6\n    /* \"#utility.yul\":2701:2724   */\n  sub\n    /* \"#utility.yul\":2697:2729   */\n  slt\n    /* \"#utility.yul\":2694:2813   */\n  iszero\n  tag_76\n  jumpi\n    /* \"#utility.yul\":2732:2811   */\n  tag_77\n  tag_14\n  jump\t// in\ntag_77:\n    /* \"#utility.yul\":2694:2813   */\ntag_76:\n    /* \"#utility.yul\":2873:2874   */\n  0x00\n    /* \"#utility.yul\":2862:2871   */\n  dup4\n    /* \"#utility.yul\":2858:2875   */\n  add\n    /* \"#utility.yul\":2852:2876   */\n  mload\n    /* \"#utility.yul\":2903:2921   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":2895:2901   */\n  dup2\n    /* \"#utility.yul\":2892:2922   */\n  gt\n    /* \"#utility.yul\":2889:3006   */\n  iszero\n  tag_78\n  jumpi\n    /* \"#utility.yul\":2925:3004   */\n  tag_79\n  tag_15\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2889:3006   */\ntag_78:\n    /* \"#utility.yul\":3030:3104   */\n  tag_80\n    /* \"#utility.yul\":3096:3103   */\n  dup6\n    /* \"#utility.yul\":3087:3093   */\n  dup3\n    /* \"#utility.yul\":3076:3085   */\n  dup7\n    /* \"#utility.yul\":3072:3094   */\n  add\n    /* \"#utility.yul\":3030:3104   */\n  tag_25\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":3020:3104   */\n  swap3\n  pop\n    /* \"#utility.yul\":2823:3114   */\n  pop\n    /* \"#utility.yul\":3174:3176   */\n  0x20\n    /* \"#utility.yul\":3163:3172   */\n  dup4\n    /* \"#utility.yul\":3159:3177   */\n  add\n    /* \"#utility.yul\":3153:3178   */\n  mload\n    /* \"#utility.yul\":3205:3223   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":3197:3203   */\n  dup2\n    /* \"#utility.yul\":3194:3224   */\n  gt\n    /* \"#utility.yul\":3191:3308   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":3227:3306   */\n  tag_82\n  tag_15\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":3191:3308   */\ntag_81:\n    /* \"#utility.yul\":3332:3406   */\n  tag_83\n    /* \"#utility.yul\":3398:3405   */\n  dup6\n    /* \"#utility.yul\":3389:3395   */\n  dup3\n    /* \"#utility.yul\":3378:3387   */\n  dup7\n    /* \"#utility.yul\":3374:3396   */\n  add\n    /* \"#utility.yul\":3332:3406   */\n  tag_25\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3322:3406   */\n  swap2\n  pop\n    /* \"#utility.yul\":3124:3416   */\n  pop\n    /* \"#utility.yul\":2570:3423   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3429:3528   */\ntag_26:\n    /* \"#utility.yul\":3481:3487   */\n  0x00\n    /* \"#utility.yul\":3515:3520   */\n  dup2\n    /* \"#utility.yul\":3509:3521   */\n  mload\n    /* \"#utility.yul\":3499:3521   */\n  swap1\n  pop\n    /* \"#utility.yul\":3429:3528   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3534:3714   */\ntag_27:\n    /* \"#utility.yul\":3582:3659   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":3579:3580   */\n  0x00\n    /* \"#utility.yul\":3572:3660   */\n  mstore\n    /* \"#utility.yul\":3679:3683   */\n  0x22\n    /* \"#utility.yul\":3676:3677   */\n  0x04\n    /* \"#utility.yul\":3669:3684   */\n  mstore\n    /* \"#utility.yul\":3703:3707   */\n  0x24\n    /* \"#utility.yul\":3700:3701   */\n  0x00\n    /* \"#utility.yul\":3693:3708   */\n  revert\n    /* \"#utility.yul\":3720:4040   */\ntag_28:\n    /* \"#utility.yul\":3764:3770   */\n  0x00\n    /* \"#utility.yul\":3801:3802   */\n  0x02\n    /* \"#utility.yul\":3795:3799   */\n  dup3\n    /* \"#utility.yul\":3791:3803   */\n  div\n    /* \"#utility.yul\":3781:3803   */\n  swap1\n  pop\n    /* \"#utility.yul\":3848:3849   */\n  0x01\n    /* \"#utility.yul\":3842:3846   */\n  dup3\n    /* \"#utility.yul\":3838:3850   */\n  and\n    /* \"#utility.yul\":3869:3887   */\n  dup1\n    /* \"#utility.yul\":3859:3940   */\n  tag_87\n  jumpi\n    /* \"#utility.yul\":3925:3929   */\n  0x7f\n    /* \"#utility.yul\":3917:3923   */\n  dup3\n    /* \"#utility.yul\":3913:3930   */\n  and\n    /* \"#utility.yul\":3903:3930   */\n  swap2\n  pop\n    /* \"#utility.yul\":3859:3940   */\ntag_87:\n    /* \"#utility.yul\":3987:3989   */\n  0x20\n    /* \"#utility.yul\":3979:3985   */\n  dup3\n    /* \"#utility.yul\":3976:3990   */\n  lt\n    /* \"#utility.yul\":3956:3974   */\n  dup2\n    /* \"#utility.yul\":3953:3991   */\n  sub\n    /* \"#utility.yul\":3950:4034   */\n  tag_88\n  jumpi\n    /* \"#utility.yul\":4006:4024   */\n  tag_89\n  tag_27\n  jump\t// in\ntag_89:\n    /* \"#utility.yul\":3950:4034   */\ntag_88:\n    /* \"#utility.yul\":3771:4040   */\n  pop\n    /* \"#utility.yul\":3720:4040   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4046:4187   */\ntag_29:\n    /* \"#utility.yul\":4095:4099   */\n  0x00\n    /* \"#utility.yul\":4118:4121   */\n  dup2\n    /* \"#utility.yul\":4110:4121   */\n  swap1\n  pop\n    /* \"#utility.yul\":4141:4144   */\n  dup2\n    /* \"#utility.yul\":4138:4139   */\n  0x00\n    /* \"#utility.yul\":4131:4145   */\n  mstore\n    /* \"#utility.yul\":4175:4179   */\n  0x20\n    /* \"#utility.yul\":4172:4173   */\n  0x00\n    /* \"#utility.yul\":4162:4180   */\n  keccak256\n    /* \"#utility.yul\":4154:4180   */\n  swap1\n  pop\n    /* \"#utility.yul\":4046:4187   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4193:4286   */\ntag_30:\n    /* \"#utility.yul\":4230:4236   */\n  0x00\n    /* \"#utility.yul\":4277:4279   */\n  0x20\n    /* \"#utility.yul\":4272:4274   */\n  0x1f\n    /* \"#utility.yul\":4265:4270   */\n  dup4\n    /* \"#utility.yul\":4261:4275   */\n  add\n    /* \"#utility.yul\":4257:4280   */\n  div\n    /* \"#utility.yul\":4247:4280   */\n  swap1\n  pop\n    /* \"#utility.yul\":4193:4286   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4292:4399   */\ntag_31:\n    /* \"#utility.yul\":4336:4344   */\n  0x00\n    /* \"#utility.yul\":4386:4391   */\n  dup3\n    /* \"#utility.yul\":4380:4384   */\n  dup3\n    /* \"#utility.yul\":4376:4392   */\n  shl\n    /* \"#utility.yul\":4355:4392   */\n  swap1\n  pop\n    /* \"#utility.yul\":4292:4399   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4405:4798   */\ntag_32:\n    /* \"#utility.yul\":4474:4480   */\n  0x00\n    /* \"#utility.yul\":4524:4525   */\n  0x08\n    /* \"#utility.yul\":4512:4522   */\n  dup4\n    /* \"#utility.yul\":4508:4526   */\n  mul\n    /* \"#utility.yul\":4547:4644   */\n  tag_94\n    /* \"#utility.yul\":4577:4643   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":4566:4575   */\n  dup3\n    /* \"#utility.yul\":4547:4644   */\n  tag_31\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":4665:4704   */\n  tag_95\n    /* \"#utility.yul\":4695:4703   */\n  dup7\n    /* \"#utility.yul\":4684:4693   */\n  dup4\n    /* \"#utility.yul\":4665:4704   */\n  tag_31\n  jump\t// in\ntag_95:\n    /* \"#utility.yul\":4653:4704   */\n  swap6\n  pop\n    /* \"#utility.yul\":4737:4741   */\n  dup1\n    /* \"#utility.yul\":4733:4742   */\n  not\n    /* \"#utility.yul\":4726:4731   */\n  dup5\n    /* \"#utility.yul\":4722:4743   */\n  and\n    /* \"#utility.yul\":4713:4743   */\n  swap4\n  pop\n    /* \"#utility.yul\":4786:4790   */\n  dup1\n    /* \"#utility.yul\":4776:4784   */\n  dup7\n    /* \"#utility.yul\":4772:4791   */\n  and\n    /* \"#utility.yul\":4765:4770   */\n  dup5\n    /* \"#utility.yul\":4762:4792   */\n  or\n    /* \"#utility.yul\":4752:4792   */\n  swap3\n  pop\n    /* \"#utility.yul\":4481:4798   */\n  pop\n  pop\n    /* \"#utility.yul\":4405:4798   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4804:4881   */\ntag_33:\n    /* \"#utility.yul\":4841:4848   */\n  0x00\n    /* \"#utility.yul\":4870:4875   */\n  dup2\n    /* \"#utility.yul\":4859:4875   */\n  swap1\n  pop\n    /* \"#utility.yul\":4804:4881   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4887:4947   */\ntag_34:\n    /* \"#utility.yul\":4915:4918   */\n  0x00\n    /* \"#utility.yul\":4936:4941   */\n  dup2\n    /* \"#utility.yul\":4929:4941   */\n  swap1\n  pop\n    /* \"#utility.yul\":4887:4947   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4953:5095   */\ntag_35:\n    /* \"#utility.yul\":5003:5012   */\n  0x00\n    /* \"#utility.yul\":5036:5089   */\n  tag_99\n    /* \"#utility.yul\":5054:5088   */\n  tag_100\n    /* \"#utility.yul\":5063:5087   */\n  tag_101\n    /* \"#utility.yul\":5081:5086   */\n  dup5\n    /* \"#utility.yul\":5063:5087   */\n  tag_33\n  jump\t// in\ntag_101:\n    /* \"#utility.yul\":5054:5088   */\n  tag_34\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":5036:5089   */\n  tag_33\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":5023:5089   */\n  swap1\n  pop\n    /* \"#utility.yul\":4953:5095   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5101:5176   */\ntag_36:\n    /* \"#utility.yul\":5144:5147   */\n  0x00\n    /* \"#utility.yul\":5165:5170   */\n  dup2\n    /* \"#utility.yul\":5158:5170   */\n  swap1\n  pop\n    /* \"#utility.yul\":5101:5176   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5182:5451   */\ntag_37:\n    /* \"#utility.yul\":5292:5331   */\n  tag_104\n    /* \"#utility.yul\":5323:5330   */\n  dup4\n    /* \"#utility.yul\":5292:5331   */\n  tag_35\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":5353:5444   */\n  tag_105\n    /* \"#utility.yul\":5402:5443   */\n  tag_106\n    /* \"#utility.yul\":5426:5442   */\n  dup3\n    /* \"#utility.yul\":5402:5443   */\n  tag_36\n  jump\t// in\ntag_106:\n    /* \"#utility.yul\":5394:5400   */\n  dup5\n    /* \"#utility.yul\":5387:5391   */\n  dup5\n    /* \"#utility.yul\":5381:5392   */\n  sload\n    /* \"#utility.yul\":5353:5444   */\n  tag_32\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":5347:5351   */\n  dup3\n    /* \"#utility.yul\":5340:5445   */\n  sstore\n    /* \"#utility.yul\":5258:5451   */\n  pop\n    /* \"#utility.yul\":5182:5451   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5457:5530   */\ntag_38:\n    /* \"#utility.yul\":5502:5505   */\n  0x00\n    /* \"#utility.yul\":5523:5524   */\n  0x00\n    /* \"#utility.yul\":5516:5524   */\n  swap1\n  pop\n    /* \"#utility.yul\":5457:5530   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":5536:5725   */\ntag_39:\n    /* \"#utility.yul\":5613:5645   */\n  tag_109\n  tag_38\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":5654:5719   */\n  tag_110\n    /* \"#utility.yul\":5712:5718   */\n  dup2\n    /* \"#utility.yul\":5704:5710   */\n  dup5\n    /* \"#utility.yul\":5698:5702   */\n  dup5\n    /* \"#utility.yul\":5654:5719   */\n  tag_37\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":5589:5725   */\n  pop\n    /* \"#utility.yul\":5536:5725   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5731:5917   */\ntag_40:\n    /* \"#utility.yul\":5791:5911   */\ntag_112:\n    /* \"#utility.yul\":5808:5811   */\n  dup2\n    /* \"#utility.yul\":5801:5806   */\n  dup2\n    /* \"#utility.yul\":5798:5812   */\n  lt\n    /* \"#utility.yul\":5791:5911   */\n  iszero\n  tag_114\n  jumpi\n    /* \"#utility.yul\":5862:5901   */\n  tag_115\n    /* \"#utility.yul\":5899:5900   */\n  0x00\n    /* \"#utility.yul\":5892:5897   */\n  dup3\n    /* \"#utility.yul\":5862:5901   */\n  tag_39\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":5835:5836   */\n  0x01\n    /* \"#utility.yul\":5828:5833   */\n  dup2\n    /* \"#utility.yul\":5824:5837   */\n  add\n    /* \"#utility.yul\":5815:5837   */\n  swap1\n  pop\n    /* \"#utility.yul\":5791:5911   */\n  jump(tag_112)\ntag_114:\n    /* \"#utility.yul\":5731:5917   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5923:6466   */\ntag_41:\n    /* \"#utility.yul\":6024:6026   */\n  0x1f\n    /* \"#utility.yul\":6019:6022   */\n  dup3\n    /* \"#utility.yul\":6016:6027   */\n  gt\n    /* \"#utility.yul\":6013:6459   */\n  iszero\n  tag_117\n  jumpi\n    /* \"#utility.yul\":6058:6096   */\n  tag_118\n    /* \"#utility.yul\":6090:6095   */\n  dup2\n    /* \"#utility.yul\":6058:6096   */\n  tag_29\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":6142:6171   */\n  tag_119\n    /* \"#utility.yul\":6160:6170   */\n  dup5\n    /* \"#utility.yul\":6142:6171   */\n  tag_30\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":6132:6140   */\n  dup2\n    /* \"#utility.yul\":6128:6172   */\n  add\n    /* \"#utility.yul\":6325:6327   */\n  0x20\n    /* \"#utility.yul\":6313:6323   */\n  dup6\n    /* \"#utility.yul\":6310:6328   */\n  lt\n    /* \"#utility.yul\":6307:6356   */\n  iszero\n  tag_120\n  jumpi\n    /* \"#utility.yul\":6346:6354   */\n  dup2\n    /* \"#utility.yul\":6331:6354   */\n  swap1\n  pop\n    /* \"#utility.yul\":6307:6356   */\ntag_120:\n    /* \"#utility.yul\":6369:6449   */\n  tag_121\n    /* \"#utility.yul\":6425:6447   */\n  tag_122\n    /* \"#utility.yul\":6443:6446   */\n  dup6\n    /* \"#utility.yul\":6425:6447   */\n  tag_30\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":6415:6423   */\n  dup4\n    /* \"#utility.yul\":6411:6448   */\n  add\n    /* \"#utility.yul\":6398:6409   */\n  dup3\n    /* \"#utility.yul\":6369:6449   */\n  tag_40\n  jump\t// in\ntag_121:\n    /* \"#utility.yul\":6028:6459   */\n  pop\n  pop\n    /* \"#utility.yul\":6013:6459   */\ntag_117:\n    /* \"#utility.yul\":5923:6466   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6472:6589   */\ntag_42:\n    /* \"#utility.yul\":6526:6534   */\n  0x00\n    /* \"#utility.yul\":6576:6581   */\n  dup3\n    /* \"#utility.yul\":6570:6574   */\n  dup3\n    /* \"#utility.yul\":6566:6582   */\n  shr\n    /* \"#utility.yul\":6545:6582   */\n  swap1\n  pop\n    /* \"#utility.yul\":6472:6589   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6595:6764   */\ntag_43:\n    /* \"#utility.yul\":6639:6645   */\n  0x00\n    /* \"#utility.yul\":6672:6723   */\n  tag_125\n    /* \"#utility.yul\":6720:6721   */\n  0x00\n    /* \"#utility.yul\":6716:6722   */\n  not\n    /* \"#utility.yul\":6708:6713   */\n  dup5\n    /* \"#utility.yul\":6705:6706   */\n  0x08\n    /* \"#utility.yul\":6701:6714   */\n  mul\n    /* \"#utility.yul\":6672:6723   */\n  tag_42\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":6668:6724   */\n  not\n    /* \"#utility.yul\":6753:6757   */\n  dup1\n    /* \"#utility.yul\":6747:6751   */\n  dup4\n    /* \"#utility.yul\":6743:6758   */\n  and\n    /* \"#utility.yul\":6733:6758   */\n  swap2\n  pop\n    /* \"#utility.yul\":6646:6764   */\n  pop\n    /* \"#utility.yul\":6595:6764   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6769:7064   */\ntag_44:\n    /* \"#utility.yul\":6845:6849   */\n  0x00\n    /* \"#utility.yul\":6991:7020   */\n  tag_127\n    /* \"#utility.yul\":7016:7019   */\n  dup4\n    /* \"#utility.yul\":7010:7014   */\n  dup4\n    /* \"#utility.yul\":6991:7020   */\n  tag_43\n  jump\t// in\ntag_127:\n    /* \"#utility.yul\":6983:7020   */\n  swap2\n  pop\n    /* \"#utility.yul\":7053:7056   */\n  dup3\n    /* \"#utility.yul\":7050:7051   */\n  0x02\n    /* \"#utility.yul\":7046:7057   */\n  mul\n    /* \"#utility.yul\":7040:7044   */\n  dup3\n    /* \"#utility.yul\":7037:7058   */\n  or\n    /* \"#utility.yul\":7029:7058   */\n  swap1\n  pop\n    /* \"#utility.yul\":6769:7064   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7069:8464   */\ntag_7:\n    /* \"#utility.yul\":7186:7223   */\n  tag_129\n    /* \"#utility.yul\":7219:7222   */\n  dup3\n    /* \"#utility.yul\":7186:7223   */\n  tag_26\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":7288:7306   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":7280:7286   */\n  dup2\n    /* \"#utility.yul\":7277:7307   */\n  gt\n    /* \"#utility.yul\":7274:7330   */\n  iszero\n  tag_130\n  jumpi\n    /* \"#utility.yul\":7310:7328   */\n  tag_131\n  tag_19\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":7274:7330   */\ntag_130:\n    /* \"#utility.yul\":7354:7392   */\n  tag_132\n    /* \"#utility.yul\":7386:7390   */\n  dup3\n    /* \"#utility.yul\":7380:7391   */\n  sload\n    /* \"#utility.yul\":7354:7392   */\n  tag_28\n  jump\t// in\ntag_132:\n    /* \"#utility.yul\":7439:7506   */\n  tag_133\n    /* \"#utility.yul\":7499:7505   */\n  dup3\n    /* \"#utility.yul\":7491:7497   */\n  dup3\n    /* \"#utility.yul\":7485:7489   */\n  dup6\n    /* \"#utility.yul\":7439:7506   */\n  tag_41\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":7533:7534   */\n  0x00\n    /* \"#utility.yul\":7557:7561   */\n  0x20\n    /* \"#utility.yul\":7544:7561   */\n  swap1\n  pop\n    /* \"#utility.yul\":7589:7591   */\n  0x1f\n    /* \"#utility.yul\":7581:7587   */\n  dup4\n    /* \"#utility.yul\":7578:7592   */\n  gt\n    /* \"#utility.yul\":7606:7607   */\n  0x01\n    /* \"#utility.yul\":7601:8219   */\n  dup2\n  eq\n  tag_135\n  jumpi\n    /* \"#utility.yul\":8263:8264   */\n  0x00\n    /* \"#utility.yul\":8280:8286   */\n  dup5\n    /* \"#utility.yul\":8277:8354   */\n  iszero\n  tag_136\n  jumpi\n    /* \"#utility.yul\":8329:8338   */\n  dup3\n    /* \"#utility.yul\":8324:8327   */\n  dup8\n    /* \"#utility.yul\":8320:8339   */\n  add\n    /* \"#utility.yul\":8314:8340   */\n  mload\n    /* \"#utility.yul\":8305:8340   */\n  swap1\n  pop\n    /* \"#utility.yul\":8277:8354   */\ntag_136:\n    /* \"#utility.yul\":8380:8447   */\n  tag_137\n    /* \"#utility.yul\":8440:8446   */\n  dup6\n    /* \"#utility.yul\":8433:8438   */\n  dup3\n    /* \"#utility.yul\":8380:8447   */\n  tag_44\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":8374:8378   */\n  dup7\n    /* \"#utility.yul\":8367:8448   */\n  sstore\n    /* \"#utility.yul\":8236:8458   */\n  pop\n    /* \"#utility.yul\":7571:8458   */\n  jump(tag_134)\n    /* \"#utility.yul\":7601:8219   */\ntag_135:\n    /* \"#utility.yul\":7653:7657   */\n  0x1f\n    /* \"#utility.yul\":7649:7658   */\n  not\n    /* \"#utility.yul\":7641:7647   */\n  dup5\n    /* \"#utility.yul\":7637:7659   */\n  and\n    /* \"#utility.yul\":7687:7724   */\n  tag_138\n    /* \"#utility.yul\":7719:7723   */\n  dup7\n    /* \"#utility.yul\":7687:7724   */\n  tag_29\n  jump\t// in\ntag_138:\n    /* \"#utility.yul\":7746:7747   */\n  0x00\n    /* \"#utility.yul\":7760:7968   */\ntag_139:\n    /* \"#utility.yul\":7774:7781   */\n  dup3\n    /* \"#utility.yul\":7771:7772   */\n  dup2\n    /* \"#utility.yul\":7768:7782   */\n  lt\n    /* \"#utility.yul\":7760:7968   */\n  iszero\n  tag_141\n  jumpi\n    /* \"#utility.yul\":7853:7862   */\n  dup5\n    /* \"#utility.yul\":7848:7851   */\n  dup10\n    /* \"#utility.yul\":7844:7863   */\n  add\n    /* \"#utility.yul\":7838:7864   */\n  mload\n    /* \"#utility.yul\":7830:7836   */\n  dup3\n    /* \"#utility.yul\":7823:7865   */\n  sstore\n    /* \"#utility.yul\":7904:7905   */\n  0x01\n    /* \"#utility.yul\":7896:7902   */\n  dup3\n    /* \"#utility.yul\":7892:7906   */\n  add\n    /* \"#utility.yul\":7882:7906   */\n  swap2\n  pop\n    /* \"#utility.yul\":7951:7953   */\n  0x20\n    /* \"#utility.yul\":7940:7949   */\n  dup6\n    /* \"#utility.yul\":7936:7954   */\n  add\n    /* \"#utility.yul\":7923:7954   */\n  swap5\n  pop\n    /* \"#utility.yul\":7797:7801   */\n  0x20\n    /* \"#utility.yul\":7794:7795   */\n  dup2\n    /* \"#utility.yul\":7790:7802   */\n  add\n    /* \"#utility.yul\":7785:7802   */\n  swap1\n  pop\n    /* \"#utility.yul\":7760:7968   */\n  jump(tag_139)\ntag_141:\n    /* \"#utility.yul\":7996:8002   */\n  dup7\n    /* \"#utility.yul\":7987:7994   */\n  dup4\n    /* \"#utility.yul\":7984:8003   */\n  lt\n    /* \"#utility.yul\":7981:8160   */\n  iszero\n  tag_142\n  jumpi\n    /* \"#utility.yul\":8054:8063   */\n  dup5\n    /* \"#utility.yul\":8049:8052   */\n  dup10\n    /* \"#utility.yul\":8045:8064   */\n  add\n    /* \"#utility.yul\":8039:8065   */\n  mload\n    /* \"#utility.yul\":8097:8145   */\n  tag_143\n    /* \"#utility.yul\":8139:8143   */\n  0x1f\n    /* \"#utility.yul\":8131:8137   */\n  dup10\n    /* \"#utility.yul\":8127:8144   */\n  and\n    /* \"#utility.yul\":8116:8125   */\n  dup3\n    /* \"#utility.yul\":8097:8145   */\n  tag_43\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":8089:8095   */\n  dup4\n    /* \"#utility.yul\":8082:8146   */\n  sstore\n    /* \"#utility.yul\":8004:8160   */\n  pop\n    /* \"#utility.yul\":7981:8160   */\ntag_142:\n    /* \"#utility.yul\":8206:8207   */\n  0x01\n    /* \"#utility.yul\":8202:8203   */\n  0x02\n    /* \"#utility.yul\":8194:8200   */\n  dup9\n    /* \"#utility.yul\":8190:8204   */\n  mul\n    /* \"#utility.yul\":8186:8208   */\n  add\n    /* \"#utility.yul\":8180:8184   */\n  dup9\n    /* \"#utility.yul\":8173:8209   */\n  sstore\n    /* \"#utility.yul\":7608:8219   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7571:8458   */\ntag_134:\n  pop\n    /* \"#utility.yul\":7161:8464   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":7069:8464   */\n  pop\n  pop\n  jump\t// out\n    /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":2185:44823  contract ERC721A is IERC721A {... */\ntag_11:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":2185:44823  contract ERC721A is IERC721A {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      jump(tag_1)\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      jump(tag_1)\n    tag_16:\n      dup1\n      0x095ea7b3\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      jump(tag_1)\n    tag_18:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      revert(0x00, 0x00)\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":10454:11084  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      revert(0x00, 0x00)\n    tag_19:\n      pop\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11338:11436  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      revert(0x00, 0x00)\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18201:18424  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      revert(0x00, 0x00)\n    tag_31:\n      pop\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":17929:18051  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_5:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":7184:7501  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      revert(0x00, 0x00)\n    tag_42:\n      pop\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":21836:25283  function transferFrom(... */\n    tag_7:\n      tag_47\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25374:25561  function safeTransferFrom(... */\n    tag_8:\n      tag_51\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n    tag_51:\n      stop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":12699:12849  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      revert(0x00, 0x00)\n    tag_54:\n      pop\n      tag_55\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_56\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      tag_58\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":8335:8574  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      revert(0x00, 0x00)\n    tag_59:\n      pop\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11507:11609  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      revert(0x00, 0x00)\n    tag_65:\n      pop\n      tag_66\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      tag_68\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18751:18982  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      revert(0x00, 0x00)\n    tag_69:\n      pop\n      tag_70\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n    tag_70:\n      stop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26142:26547  function safeTransferFrom(... */\n    tag_13:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n    tag_74:\n      stop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11710:12032  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      revert(0x00, 0x00)\n    tag_78:\n      pop\n      tag_79\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_80\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      tag_82\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_82:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19132:19294  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      revert(0x00, 0x00)\n    tag_83:\n      pop\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":10454:11084  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_23:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":10539:10543  bool */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":10872:10882  0x01ffc9a7 */\n      0x01ffc9a7\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":10857:10882  interfaceId == 0x01ffc9a7 */\n      0xe0\n      shl\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":10857:10868  interfaceId */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":10857:10882  interfaceId == 0x01ffc9a7 */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":10857:10958  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_90\n      jumpi\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":10948:10958  0x80ac58cd */\n      0x80ac58cd\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":10933:10958  interfaceId == 0x80ac58cd */\n      0xe0\n      shl\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":10933:10944  interfaceId */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":10933:10958  interfaceId == 0x80ac58cd */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":10857:10958  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_90:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":10857:11034  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_91\n      jumpi\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11024:11034  0x5b5e139f */\n      0x5b5e139f\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11009:11034  interfaceId == 0x5b5e139f */\n      0xe0\n      shl\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11009:11020  interfaceId */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11009:11034  interfaceId == 0x5b5e139f */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":10857:11034  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_91:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":10838:11034  return... */\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":10454:11084  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11338:11436  function name() public view virtual override returns (string memory) {... */\n    tag_28:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11392:11405  string memory */\n      0x60\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11424:11429  _name */\n      0x02\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11417:11429  return _name */\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_94\n      jump\t// in\n    tag_95:\n      dup1\n      iszero\n      tag_96\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_97\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_96)\n    tag_97:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_98:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_98\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11338:11436  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18201:18424  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_35:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18277:18284  address */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18301:18317  _exists(tokenId) */\n      tag_100\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18309:18316  tokenId */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18301:18308  _exists */\n      tag_101\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18301:18317  _exists(tokenId) */\n      jump\t// in\n    tag_100:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18296:18369  if (!_exists(tokenId)) _revert(ApprovalQueryForNonexistentToken.selector) */\n      tag_102\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18319:18369  _revert(ApprovalQueryForNonexistentToken.selector) */\n      tag_103\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18327:18368  ApprovalQueryForNonexistentToken.selector */\n      shl(0xe0, 0xcf4700e4)\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18319:18326  _revert */\n      tag_104\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18319:18369  _revert(ApprovalQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_103:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18296:18369  if (!_exists(tokenId)) _revert(ApprovalQueryForNonexistentToken.selector) */\n    tag_102:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18387:18402  _tokenApprovals */\n      0x06\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18387:18411  _tokenApprovals[tokenId] */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18403:18410  tokenId */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18387:18411  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18387:18417  _tokenApprovals[tokenId].value */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18380:18417  return _tokenApprovals[tokenId].value */\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18201:18424  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":17929:18051  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_41:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18017:18044  _approve(to, tokenId, true) */\n      tag_106\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18026:18028  to */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18030:18037  tokenId */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18039:18043  true */\n      0x01\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18017:18025  _approve */\n      tag_107\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18017:18044  _approve(to, tokenId, true) */\n      jump\t// in\n    tag_106:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":17929:18051  function approve(address to, uint256 tokenId) public payable virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":7184:7501  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_44:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":7245:7252  uint256 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":7469:7484  _startTokenId() */\n      tag_109\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":7469:7482  _startTokenId */\n      tag_110\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":7469:7484  _startTokenId() */\n      jump\t// in\n    tag_109:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":7454:7466  _burnCounter */\n      sload(0x01)\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":7438:7451  _currentIndex */\n      sload(0x00)\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":7438:7466  _currentIndex - _burnCounter */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":7438:7484  _currentIndex - _burnCounter - _startTokenId() */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":7431:7484  return _currentIndex - _burnCounter - _startTokenId() */\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":7184:7501  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":21836:25283  function transferFrom(... */\n    tag_50:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":21973:22000  uint256 prevOwnershipPacked */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22003:22030  _packedOwnershipOf(tokenId) */\n      tag_112\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22022:22029  tokenId */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22003:22021  _packedOwnershipOf */\n      tag_113\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22003:22030  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_112:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":21973:22030  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":4075:4089  (1 << 160) - 1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22171:22175  from */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22155:22177  uint256(uint160(from)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22155:22196  uint256(uint160(from)) & _BITMASK_ADDRESS */\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22132:22198  from = address(uint160(uint256(uint160(from)) & _BITMASK_ADDRESS)) */\n      swap4\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22254:22258  from */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22213:22258  address(uint160(prevOwnershipPacked)) != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22229:22248  prevOwnershipPacked */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22213:22258  address(uint160(prevOwnershipPacked)) != from */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22209:22304  if (address(uint160(prevOwnershipPacked)) != from) _revert(TransferFromIncorrectOwner.selector) */\n      tag_114\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22260:22304  _revert(TransferFromIncorrectOwner.selector) */\n      tag_115\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22268:22303  TransferFromIncorrectOwner.selector */\n      shl(0xe0, 0xa1148100)\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22260:22267  _revert */\n      tag_104\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22260:22304  _revert(TransferFromIncorrectOwner.selector) */\n      jump\t// in\n    tag_115:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22209:22304  if (address(uint160(prevOwnershipPacked)) != from) _revert(TransferFromIncorrectOwner.selector) */\n    tag_114:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22316:22343  uint256 approvedAddressSlot */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22345:22368  address approvedAddress */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22372:22407  _getApprovedSlotAndAddress(tokenId) */\n      tag_116\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22399:22406  tokenId */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22372:22398  _getApprovedSlotAndAddress */\n      tag_117\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22372:22407  _getApprovedSlotAndAddress(tokenId) */\n      jump\t// in\n    tag_116:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22315:22407  (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22504:22572  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n      tag_118\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22529:22544  approvedAddress */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22546:22550  from */\n      dup8\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22552:22571  _msgSenderERC721A() */\n      tag_119\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22552:22569  _msgSenderERC721A */\n      tag_120\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22552:22571  _msgSenderERC721A() */\n      jump\t// in\n    tag_119:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22504:22528  _isSenderApprovedOrOwner */\n      tag_121\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22504:22572  _isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()) */\n      jump\t// in\n    tag_118:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22499:22687  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_122\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22591:22634  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_123\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22608:22612  from */\n      dup7\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22614:22633  _msgSenderERC721A() */\n      tag_124\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22614:22631  _msgSenderERC721A */\n      tag_120\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22614:22633  _msgSenderERC721A() */\n      jump\t// in\n    tag_124:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22591:22607  isApprovedForAll */\n      tag_87\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22591:22634  isApprovedForAll(from, _msgSenderERC721A()) */\n      jump\t// in\n    tag_123:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22586:22687  if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector) */\n      tag_125\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22636:22687  _revert(TransferCallerNotOwnerNorApproved.selector) */\n      tag_126\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22644:22686  TransferCallerNotOwnerNorApproved.selector */\n      shl(0xe0, 0x59c896be)\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22636:22643  _revert */\n      tag_104\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22636:22687  _revert(TransferCallerNotOwnerNorApproved.selector) */\n      jump\t// in\n    tag_126:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22586:22687  if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector) */\n    tag_125:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22499:22687  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n    tag_122:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22698:22741  _beforeTokenTransfers(from, to, tokenId, 1) */\n      tag_127\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22720:22724  from */\n      dup7\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22726:22728  to */\n      dup7\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22730:22737  tokenId */\n      dup7\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22739:22740  1 */\n      0x01\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22698:22719  _beforeTokenTransfers */\n      tag_128\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22698:22741  _beforeTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_127:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22830:22845  approvedAddress */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22827:22984  if approvedAddress {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22968:22969  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22947:22966  approvedAddressSlot */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22940:22970  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22827:22984  if approvedAddress {... */\n    tag_129:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23356:23374  _packedAddressData */\n      0x05\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23356:23380  _packedAddressData[from] */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23375:23379  from */\n      dup8\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23356:23380  _packedAddressData[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23354:23380  --_packedAddressData[from] */\n      dup2\n      sload\n      0x01\n      swap1\n      sub\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23424:23442  _packedAddressData */\n      0x05\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23424:23446  _packedAddressData[to] */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23443:23445  to */\n      dup7\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23424:23446  _packedAddressData[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23422:23446  ++_packedAddressData[to] */\n      dup2\n      sload\n      0x01\n      add\n      swap2\n      swap1\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23739:23882  _packOwnershipData(... */\n      tag_130\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23775:23777  to */\n      dup6\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23823:23868  _nextExtraData(from, to, prevOwnershipPacked) */\n      tag_131\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23838:23842  from */\n      dup9\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23844:23846  to */\n      dup9\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23848:23867  prevOwnershipPacked */\n      dup8\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23823:23837  _nextExtraData */\n      tag_132\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23823:23868  _nextExtraData(from, to, prevOwnershipPacked) */\n      jump\t// in\n    tag_131:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":3682:3690  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23795:23868  _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked) */\n      or\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23739:23757  _packOwnershipData */\n      tag_133\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23739:23882  _packOwnershipData(... */\n      jump\t// in\n    tag_130:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23710:23727  _packedOwnerships */\n      0x04\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23710:23736  _packedOwnerships[tokenId] */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23728:23735  tokenId */\n      dup7\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23710:23736  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23710:23882  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24050:24051  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":3682:3690  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23999:24018  prevOwnershipPacked */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23999:24046  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED */\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23999:24051  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0 */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23995:24612  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n      tag_134\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24071:24090  uint256 nextTokenId */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24103:24104  1 */\n      0x01\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24093:24100  tokenId */\n      dup6\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24093:24104  tokenId + 1 */\n      add\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24071:24104  uint256 nextTokenId = tokenId + 1 */\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24258:24259  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24224:24241  _packedOwnerships */\n      0x04\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24224:24254  _packedOwnerships[nextTokenId] */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24242:24253  nextTokenId */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24224:24254  _packedOwnerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24224:24259  _packedOwnerships[nextTokenId] == 0 */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24220:24598  if (_packedOwnerships[nextTokenId] == 0) {... */\n      tag_135\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24360:24373  _currentIndex */\n      sload(0x00)\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24345:24356  nextTokenId */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24345:24373  nextTokenId != _currentIndex */\n      eq\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24341:24580  if (nextTokenId != _currentIndex) {... */\n      tag_136\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24538:24557  prevOwnershipPacked */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24505:24522  _packedOwnerships */\n      0x04\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24505:24535  _packedOwnerships[nextTokenId] */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24523:24534  nextTokenId */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24505:24535  _packedOwnerships[nextTokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24505:24557  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24341:24580  if (nextTokenId != _currentIndex) {... */\n    tag_136:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24220:24598  if (_packedOwnerships[nextTokenId] == 0) {... */\n    tag_135:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24053:24612  {... */\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23995:24612  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_134:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24721:24737  uint256 toMasked */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":4075:4089  (1 << 160) - 1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24756:24758  to */\n      dup7\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24740:24760  uint256(uint160(to)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24740:24779  uint256(uint160(to)) & _BITMASK_ADDRESS */\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24721:24779  uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS */\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25111:25118  tokenId */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25076:25084  toMasked */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25043:25047  from */\n      dup9\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24986:25011  _TRANSFER_EVENT_SIGNATURE */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24932:24933  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24876:24877  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24854:25146  log4(... */\n      log4\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25181:25182  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25169:25177  toMasked */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25169:25182  toMasked == 0 */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25165:25223  if (toMasked == 0) _revert(TransferToZeroAddress.selector) */\n      tag_137\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25184:25223  _revert(TransferToZeroAddress.selector) */\n      tag_138\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25192:25222  TransferToZeroAddress.selector */\n      shl(0xe0, 0xea553b34)\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25184:25191  _revert */\n      tag_104\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25184:25223  _revert(TransferToZeroAddress.selector) */\n      jump\t// in\n    tag_138:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25165:25223  if (toMasked == 0) _revert(TransferToZeroAddress.selector) */\n    tag_137:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25234:25276  _afterTokenTransfers(from, to, tokenId, 1) */\n      tag_139\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25255:25259  from */\n      dup8\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25261:25263  to */\n      dup8\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25265:25272  tokenId */\n      dup8\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25274:25275  1 */\n      0x01\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25234:25254  _afterTokenTransfers */\n      tag_140\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25234:25276  _afterTokenTransfers(from, to, tokenId, 1) */\n      jump\t// in\n    tag_139:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":21963:25283  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":21836:25283  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25374:25561  function safeTransferFrom(... */\n    tag_53:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25515:25554  safeTransferFrom(from, to, tokenId, '') */\n      tag_142\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25532:25536  from */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25538:25540  to */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25542:25549  tokenId */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25515:25554  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25515:25531  safeTransferFrom */\n      tag_77\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25515:25554  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_142:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25374:25561  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":12699:12849  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_57:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":12771:12778  address */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":12813:12840  _packedOwnershipOf(tokenId) */\n      tag_144\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":12832:12839  tokenId */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":12813:12831  _packedOwnershipOf */\n      tag_113\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":12813:12840  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_144:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":12790:12842  return address(uint160(_packedOwnershipOf(tokenId))) */\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":12699:12849  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":8335:8574  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_63:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":8407:8414  uint256 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":8447:8448  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":8430:8449  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":8430:8435  owner */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":8430:8449  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":8426:8495  if (owner == address(0)) _revert(BalanceQueryForZeroAddress.selector) */\n      tag_146\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":8451:8495  _revert(BalanceQueryForZeroAddress.selector) */\n      tag_147\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":8459:8494  BalanceQueryForZeroAddress.selector */\n      shl(0xe0, 0x8f4eb604)\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":8451:8458  _revert */\n      tag_104\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":8451:8495  _revert(BalanceQueryForZeroAddress.selector) */\n      jump\t// in\n    tag_147:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":8426:8495  if (owner == address(0)) _revert(BalanceQueryForZeroAddress.selector) */\n    tag_146:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":2650:2663  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":8512:8530  _packedAddressData */\n      0x05\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":8512:8537  _packedAddressData[owner] */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":8531:8536  owner */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":8512:8537  _packedAddressData[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":8512:8567  _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":8505:8567  return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":8335:8574  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11507:11609  function symbol() public view virtual override returns (string memory) {... */\n    tag_67:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11563:11576  string memory */\n      0x60\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11595:11602  _symbol */\n      0x03\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11588:11602  return _symbol */\n      dup1\n      sload\n      tag_149\n      swap1\n      tag_94\n      jump\t// in\n    tag_149:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_150\n      swap1\n      tag_94\n      jump\t// in\n    tag_150:\n      dup1\n      iszero\n      tag_151\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_152\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_151)\n    tag_152:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_153:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_153\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_151:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11507:11609  function symbol() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18751:18982  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_73:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18897:18905  approved */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18845:18863  _operatorApprovals */\n      0x07\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18845:18884  _operatorApprovals[_msgSenderERC721A()] */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18864:18883  _msgSenderERC721A() */\n      tag_155\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18864:18881  _msgSenderERC721A */\n      tag_120\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18864:18883  _msgSenderERC721A() */\n      jump\t// in\n    tag_155:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18845:18884  _operatorApprovals[_msgSenderERC721A()] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18845:18894  _operatorApprovals[_msgSenderERC721A()][operator] */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18885:18893  operator */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18845:18894  _operatorApprovals[_msgSenderERC721A()][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18845:18905  _operatorApprovals[_msgSenderERC721A()][operator] = approved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18956:18964  operator */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18920:18975  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18935:18954  _msgSenderERC721A() */\n      tag_156\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18935:18952  _msgSenderERC721A */\n      tag_120\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18935:18954  _msgSenderERC721A() */\n      jump\t// in\n    tag_156:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18920:18975  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18966:18974  approved */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18920:18975  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      mload(0x40)\n      tag_157\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_157:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18751:18982  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26142:26547  function safeTransferFrom(... */\n    tag_77:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26311:26342  transferFrom(from, to, tokenId) */\n      tag_159\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26324:26328  from */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26330:26332  to */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26334:26341  tokenId */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26311:26323  transferFrom */\n      tag_50\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26311:26342  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_159:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26374:26375  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26356:26358  to */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26356:26370  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26356:26375  to.code.length != 0 */\n      eq\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26352:26541  if (to.code.length != 0)... */\n      tag_160\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26394:26450  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_161\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26425:26429  from */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26431:26433  to */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26435:26442  tokenId */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26444:26449  _data */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26394:26424  _checkContractOnERC721Received */\n      tag_162\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26394:26450  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_161:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26389:26541  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_163\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26470:26526  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      tag_164\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26478:26525  TransferToNonERC721ReceiverImplementer.selector */\n      shl(0xe0, 0xd1a57ed6)\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26470:26477  _revert */\n      tag_104\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26470:26526  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      jump\t// in\n    tag_164:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26389:26541  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n    tag_163:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26352:26541  if (to.code.length != 0)... */\n    tag_160:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26142:26547  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11710:12032  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_81:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11783:11796  string memory */\n      0x60\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11813:11829  _exists(tokenId) */\n      tag_166\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11821:11828  tokenId */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11813:11820  _exists */\n      tag_101\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11813:11829  _exists(tokenId) */\n      jump\t// in\n    tag_166:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11808:11876  if (!_exists(tokenId)) _revert(URIQueryForNonexistentToken.selector) */\n      tag_167\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11831:11876  _revert(URIQueryForNonexistentToken.selector) */\n      tag_168\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11839:11875  URIQueryForNonexistentToken.selector */\n      shl(0xe0, 0xa14c4b50)\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11831:11838  _revert */\n      tag_104\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11831:11876  _revert(URIQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_168:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11808:11876  if (!_exists(tokenId)) _revert(URIQueryForNonexistentToken.selector) */\n    tag_167:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11887:11908  string memory baseURI */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11911:11921  _baseURI() */\n      tag_169\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11911:11919  _baseURI */\n      tag_170\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11911:11921  _baseURI() */\n      jump\t// in\n    tag_169:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11887:11921  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11963:11964  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11944:11951  baseURI */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11938:11959  bytes(baseURI).length */\n      mload\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11938:11964  bytes(baseURI).length != 0 */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11938:12025  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      tag_171\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_172)\n    tag_171:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11991:11998  baseURI */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":12000:12018  _toString(tokenId) */\n      tag_173\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":12010:12017  tokenId */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":12000:12009  _toString */\n      tag_174\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":12000:12018  _toString(tokenId) */\n      jump\t// in\n    tag_173:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11974:12019  abi.encodePacked(baseURI, _toString(tokenId)) */\n      add(0x20, mload(0x40))\n      tag_175\n      swap3\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11938:12025  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n    tag_172:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11931:12025  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      swap2\n      pop\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11710:12032  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19132:19294  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_87:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19229:19233  bool */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19252:19270  _operatorApprovals */\n      0x07\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19252:19277  _operatorApprovals[owner] */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19271:19276  owner */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19252:19277  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19252:19287  _operatorApprovals[owner][operator] */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19278:19286  operator */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19252:19287  _operatorApprovals[owner][operator] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19245:19287  return _operatorApprovals[owner][operator] */\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19132:19294  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19543:19903  function _exists(uint256 tokenId) internal view virtual returns (bool result) {... */\n    tag_101:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19608:19619  bool result */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19654:19661  tokenId */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19635:19650  _startTokenId() */\n      tag_179\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19635:19648  _startTokenId */\n      tag_110\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19635:19650  _startTokenId() */\n      jump\t// in\n    tag_179:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19635:19661  _startTokenId() <= tokenId */\n      gt\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19631:19897  if (_startTokenId() <= tokenId) {... */\n      tag_180\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19691:19704  _currentIndex */\n      sload(0x00)\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19681:19688  tokenId */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19681:19704  tokenId < _currentIndex */\n      lt\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19677:19887  if (tokenId < _currentIndex) {... */\n      iszero\n      tag_181\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19724:19738  uint256 packed */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19756:19816  while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId */\n    tag_182:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19804:19805  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19773:19790  _packedOwnerships */\n      0x04\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19773:19799  _packedOwnerships[tokenId] */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19791:19798  tokenId */\n      dup6\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19773:19799  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19764:19799  packed = _packedOwnerships[tokenId] */\n      swap2\n      pop\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19763:19805  (packed = _packedOwnerships[tokenId]) == 0 */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19756:19816  while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId */\n      tag_183\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19807:19816  --tokenId */\n      dup3\n      tag_184\n      swap1\n      tag_185\n      jump\t// in\n    tag_184:\n      swap3\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19756:19816  while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId */\n      jump(tag_182)\n    tag_183:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19871:19872  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":3408:3416  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19843:19849  packed */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19843:19867  packed & _BITMASK_BURNED */\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19843:19872  packed & _BITMASK_BURNED == 0 */\n      eq\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19834:19872  result = packed & _BITMASK_BURNED == 0 */\n      swap2\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19706:19887  {... */\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19677:19887  if (tokenId < _currentIndex) {... */\n    tag_181:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19631:19897  if (_startTokenId() <= tokenId) {... */\n    tag_180:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19543:19903  function _exists(uint256 tokenId) internal view virtual returns (bool result) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44661:44821  function _revert(bytes4 errorSelector) internal pure {... */\n    tag_104:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44760:44773  errorSelector */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44754:44758  0x00 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44747:44774  mstore(0x00, errorSelector) */\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44800:44804  0x04 */\n      0x04\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44794:44798  0x00 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44787:44805  revert(0x00, 0x04) */\n      revert\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36309:36769  function _approve(... */\n    tag_107:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36433:36446  address owner */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36449:36465  ownerOf(tokenId) */\n      tag_188\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36457:36464  tokenId */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36449:36456  ownerOf */\n      tag_57\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36449:36465  ownerOf(tokenId) */\n      jump\t// in\n    tag_188:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36433:36465  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36480:36493  approvalCheck */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36480:36525  approvalCheck && _msgSenderERC721A() != owner */\n      dup1\n      iszero\n      tag_189\n      jumpi\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36520:36525  owner */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36497:36525  _msgSenderERC721A() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36497:36516  _msgSenderERC721A() */\n      tag_190\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36497:36514  _msgSenderERC721A */\n      tag_120\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36497:36516  _msgSenderERC721A() */\n      jump\t// in\n    tag_190:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36497:36525  _msgSenderERC721A() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36480:36525  approvalCheck && _msgSenderERC721A() != owner */\n    tag_189:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36476:36674  if (approvalCheck && _msgSenderERC721A() != owner)... */\n      iszero\n      tag_191\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36544:36588  isApprovedForAll(owner, _msgSenderERC721A()) */\n      tag_192\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36561:36566  owner */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36568:36587  _msgSenderERC721A() */\n      tag_193\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36568:36585  _msgSenderERC721A */\n      tag_120\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36568:36587  _msgSenderERC721A() */\n      jump\t// in\n    tag_193:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36544:36560  isApprovedForAll */\n      tag_87\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36544:36588  isApprovedForAll(owner, _msgSenderERC721A()) */\n      jump\t// in\n    tag_192:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36539:36674  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n      tag_194\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36608:36659  _revert(ApprovalCallerNotOwnerNorApproved.selector) */\n      tag_195\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36616:36658  ApprovalCallerNotOwnerNorApproved.selector */\n      shl(0xe0, 0xcfb3b942)\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36608:36615  _revert */\n      tag_104\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36608:36659  _revert(ApprovalCallerNotOwnerNorApproved.selector) */\n      jump\t// in\n    tag_195:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36539:36674  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n    tag_194:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36476:36674  if (approvalCheck && _msgSenderERC721A() != owner)... */\n    tag_191:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36717:36719  to */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36684:36699  _tokenApprovals */\n      0x06\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36684:36708  _tokenApprovals[tokenId] */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36700:36707  tokenId */\n      dup6\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36684:36708  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36684:36714  _tokenApprovals[tokenId].value */\n      0x00\n      add\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36684:36719  _tokenApprovals[tokenId].value = to */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36754:36761  tokenId */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36750:36752  to */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36734:36762  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36743:36748  owner */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36734:36762  Approval(owner, to, tokenId) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36423:36769  {... */\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36309:36769  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":6716:6806  function _startTokenId() internal view virtual returns (uint256) {... */\n    tag_110:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":6772:6779  uint256 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":6798:6799  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":6791:6799  return 0 */\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":6716:6806  function _startTokenId() internal view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14140:16118  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {... */\n    tag_113:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14207:14221  uint256 packed */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14256:14263  tokenId */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14237:14252  _startTokenId() */\n      tag_198\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14237:14250  _startTokenId */\n      tag_110\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14237:14252  _startTokenId() */\n      jump\t// in\n    tag_198:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14237:14263  _startTokenId() <= tokenId */\n      gt\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14233:16055  if (_startTokenId() <= tokenId) {... */\n      tag_199\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14288:14305  _packedOwnerships */\n      0x04\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14288:14314  _packedOwnerships[tokenId] */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14306:14313  tokenId */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14288:14314  _packedOwnerships[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14279:14314  packed = _packedOwnerships[tokenId] */\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14422:14423  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14412:14418  packed */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14412:14423  packed == 0 */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14408:15678  if (packed == 0) {... */\n      tag_200\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14458:14471  _currentIndex */\n      sload(0x00)\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14447:14454  tokenId */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14447:14471  tokenId >= _currentIndex */\n      lt\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14443:14520  if (tokenId >= _currentIndex) _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_201\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14473:14520  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_202\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14481:14519  OwnerQueryForNonexistentToken.selector */\n      shl(0xe0, 0xdf2d9b42)\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14473:14480  _revert */\n      tag_104\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14473:14520  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_202:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14443:14520  if (tokenId >= _currentIndex) _revert(OwnerQueryForNonexistentToken.selector) */\n    tag_201:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15067:15664  for (;;) {... */\n    tag_203:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15143:15160  _packedOwnerships */\n      0x04\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15143:15171  _packedOwnerships[--tokenId] */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15161:15170  --tokenId */\n      dup4\n      0x01\n      swap1\n      sub\n      swap4\n      pop\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15143:15171  _packedOwnerships[--tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15134:15171  packed = _packedOwnerships[--tokenId] */\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15229:15230  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15219:15225  packed */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15219:15230  packed == 0 */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15215:15240  if (packed == 0) continue */\n      iszero\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15232:15240  continue */\n      tag_205\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15215:15240  if (packed == 0) continue */\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15294:15295  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":3408:3416  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15266:15272  packed */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15266:15290  packed & _BITMASK_BURNED */\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15266:15295  packed & _BITMASK_BURNED == 0 */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15262:15310  if (packed & _BITMASK_BURNED == 0) return packed */\n      iszero\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15297:15310  return packed */\n      tag_197\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15262:15310  if (packed & _BITMASK_BURNED == 0) return packed */\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15598:15645  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_208\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15606:15644  OwnerQueryForNonexistentToken.selector */\n      shl(0xe0, 0xdf2d9b42)\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15598:15605  _revert */\n      tag_104\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15598:15645  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_208:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15067:15664  for (;;) {... */\n    tag_205:\n      jump(tag_203)\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14408:15678  if (packed == 0) {... */\n    tag_200:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":16028:16029  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":3408:3416  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":16000:16006  packed */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":16000:16024  packed & _BITMASK_BURNED */\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":16000:16029  packed & _BITMASK_BURNED == 0 */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15996:16044  if (packed & _BITMASK_BURNED == 0) return packed */\n      iszero\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":16031:16044  return packed */\n      tag_197\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15996:16044  if (packed & _BITMASK_BURNED == 0) return packed */\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14233:16055  if (_startTokenId() <= tokenId) {... */\n    tag_199:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":16064:16111  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_210\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":16072:16110  OwnerQueryForNonexistentToken.selector */\n      shl(0xe0, 0xdf2d9b42)\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":16064:16071  _revert */\n      tag_104\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":16064:16111  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_210:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14140:16118  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {... */\n    tag_197:\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":20761:21235  function _getApprovedSlotAndAddress(uint256 tokenId)... */\n    tag_117:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":20860:20887  uint256 approvedAddressSlot */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":20889:20912  address approvedAddress */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":20928:20966  TokenApprovalRef storage tokenApproval */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":20969:20984  _tokenApprovals */\n      0x06\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":20969:20993  _tokenApprovals[tokenId] */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":20985:20992  tokenId */\n      dup6\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":20969:20993  _tokenApprovals[tokenId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":20928:20993  TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId] */\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":21143:21161  tokenApproval.slot */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":21120:21161  approvedAddressSlot := tokenApproval.slot */\n      swap3\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":21199:21218  approvedAddressSlot */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":21193:21219  sload(approvedAddressSlot) */\n      sload\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":21174:21219  approvedAddress := sload(approvedAddressSlot) */\n      swap2\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":21106:21229  {... */\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":20761:21235  function _getApprovedSlotAndAddress(uint256 tokenId)... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":42691:42794  function _msgSenderERC721A() internal view virtual returns (address) {... */\n    tag_120:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":42751:42758  address */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":42777:42787  msg.sender */\n      caller\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":42770:42787  return msg.sender */\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":42691:42794  function _msgSenderERC721A() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":20007:20653  function _isSenderApprovedOrOwner(... */\n    tag_121:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":20152:20163  bool result */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":20314:20330  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":20307:20312  owner */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":20303:20331  and(owner, _BITMASK_ADDRESS) */\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":20294:20331  owner := and(owner, _BITMASK_ADDRESS) */\n      swap3\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":20472:20488  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":20461:20470  msgSender */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":20457:20489  and(msgSender, _BITMASK_ADDRESS) */\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":20444:20489  msgSender := and(msgSender, _BITMASK_ADDRESS) */\n      swap2\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":20620:20635  approvedAddress */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":20609:20618  msgSender */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":20606:20636  eq(msgSender, approvedAddress) */\n      eq\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":20598:20603  owner */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":20587:20596  msgSender */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":20584:20604  eq(msgSender, owner) */\n      eq\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":20581:20637  or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      or\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":20571:20637  result := or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":20007:20653  function _isSenderApprovedOrOwner(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":27191:27345  function _beforeTokenTransfers(... */\n    tag_128:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":42018:42322  function _nextExtraData(... */\n    tag_132:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":42149:42156  uint256 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":42168:42184  uint24 extraData */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":3803:3806  232 */\n      0xe8\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":42194:42213  prevOwnershipPacked */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":42194:42235  prevOwnershipPacked >> _BITPOS_EXTRA_DATA */\n      swap1\n      shr\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":42168:42236  uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA) */\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":3803:3806  232 */\n      0xe8\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":42261:42292  _extraData(from, to, extraData) */\n      tag_216\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":42272:42276  from */\n      dup7\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":42278:42280  to */\n      dup7\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":42282:42291  extraData */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":42261:42271  _extraData */\n      tag_217\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":42261:42292  _extraData(from, to, extraData) */\n      jump\t// in\n    tag_216:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":42253:42293  uint256(_extraData(from, to, extraData)) */\n      0xffffff\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":42253:42315  uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA */\n      swap1\n      shl\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":42246:42315  return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA */\n      swap2\n      pop\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":42018:42322  function _nextExtraData(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":16651:17094  function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {... */\n    tag_133:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":16731:16745  uint256 result */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":16896:16912  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":16889:16894  owner */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":16885:16913  and(owner, _BITMASK_ADDRESS) */\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":16876:16913  owner := and(owner, _BITMASK_ADDRESS) */\n      swap3\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":17071:17076  flags */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":17057:17068  timestamp() */\n      timestamp\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":17032:17055  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":17028:17069  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":17025:17077  or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags) */\n      or\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":17018:17023  owner */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":17015:17078  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":17005:17078  result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":16651:17094  function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":27992:28145  function _afterTokenTransfers(... */\n    tag_140:\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":28573:29246  function _checkContractOnERC721Received(... */\n    tag_162:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":28731:28735  bool */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":28776:28778  to */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":28751:28796  ERC721A__IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x150b7a02\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":28797:28816  _msgSenderERC721A() */\n      tag_221\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":28797:28814  _msgSenderERC721A */\n      tag_120\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":28797:28816  _msgSenderERC721A() */\n      jump\t// in\n    tag_221:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":28818:28822  from */\n      dup8\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":28824:28831  tokenId */\n      dup7\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":28833:28838  _data */\n      dup7\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":28751:28839  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      mload(0x40)\n      dup6\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_222\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_224\n      jumpi\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_225\n      swap2\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n      0x01\n    tag_224:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":28747:29240  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n      tag_227\n      jumpi\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_232\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_231)\n    tag_232:\n      0x60\n      swap2\n      pop\n    tag_231:\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":29046:29047  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":29029:29035  reason */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":29029:29042  reason.length */\n      mload\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":29029:29047  reason.length == 0 */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":29025:29138  if (reason.length == 0) {... */\n      tag_233\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":29067:29123  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      tag_234\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":29075:29122  TransferToNonERC721ReceiverImplementer.selector */\n      shl(0xe0, 0xd1a57ed6)\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":29067:29074  _revert */\n      tag_104\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":29067:29123  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      jump\t// in\n    tag_234:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":29025:29138  if (reason.length == 0) {... */\n    tag_233:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":29208:29214  reason */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":29202:29215  mload(reason) */\n      mload\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":29193:29199  reason */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":29189:29191  32 */\n      0x20\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":29185:29200  add(32, reason) */\n      add\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":29178:29216  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":28747:29240  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_227:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":28917:28971  ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":28907:28971  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":28907:28913  retval */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":28907:28971  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":28900:28971  return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      swap2\n      pop\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":28573:29246  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":12277:12369  function _baseURI() internal view virtual returns (string memory) {... */\n    tag_170:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":12328:12341  string memory */\n      0x60\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":12353:12362  return '' */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":12277:12369  function _baseURI() internal view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":42891:44599  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n    tag_174:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":42956:42973  string memory str */\n      0x60\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43384:43388  0xa0 */\n      0xa0\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43377:43381  0x40 */\n      0x40\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43371:43382  mload(0x40) */\n      mload\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43367:43389  add(mload(0x40), 0xa0) */\n      add\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43474:43475  m */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43468:43472  0x40 */\n      0x40\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43461:43476  mstore(0x40, m) */\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43547:43551  0x20 */\n      0x20\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43544:43545  m */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43540:43552  sub(m, 0x20) */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43533:43552  str := sub(m, 0x20) */\n      swap2\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43627:43628  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43622:43625  str */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43615:43629  mstore(str, 0) */\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43728:43731  str */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43962:43967  value */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43944:44363  for { let temp := value } 1 {} {... */\n    tag_238:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43970:43971  1 */\n      0x01\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43944:44363  for { let temp := value } 1 {} {... */\n      iszero\n      tag_240\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44009:44010  1 */\n      0x01\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44004:44007  str */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44000:44011  sub(str, 1) */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43993:44011  str := sub(str, 1) */\n      swap4\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44177:44179  10 */\n      0x0a\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44171:44175  temp */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44167:44180  mod(temp, 10) */\n      mod\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44163:44165  48 */\n      0x30\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44159:44181  add(48, mod(temp, 10)) */\n      add\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44154:44157  str */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44146:44182  mstore8(str, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44269:44271  10 */\n      0x0a\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44263:44267  temp */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44259:44272  div(temp, 10) */\n      div\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44251:44272  temp := div(temp, 10) */\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44334:44338  temp */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43944:44363  for { let temp := value } 1 {} {... */\n      tag_238\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44324:44349  if iszero(temp) { break } */\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43944:44363  for { let temp := value } 1 {} {... */\n    tag_240:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43948:43969  { let temp := value } */\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44400:44403  str */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44395:44398  end */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44391:44404  sub(end, str) */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44513:44517  0x20 */\n      0x20\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44508:44511  str */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44504:44518  sub(str, 0x20) */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44497:44518  str := sub(str, 0x20) */\n      swap4\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44576:44582  length */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44571:44574  str */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44564:44583  mstore(str, length) */\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":42994:44593  {... */\n      pop\n      pop\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":42891:44599  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":41729:41872  function _extraData(... */\n    tag_217:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":41862:41868  uint24 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":41729:41872  function _extraData(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:82   */\n    tag_243:\n        /* \"#utility.yul\":40:46   */\n      0x00\n        /* \"#utility.yul\":73:75   */\n      0x40\n        /* \"#utility.yul\":67:76   */\n      mload\n        /* \"#utility.yul\":57:76   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:82   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_244:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":211:328   */\n    tag_245:\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_246:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_247:\n        /* \"#utility.yul\":561:584   */\n      tag_290\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_246\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_291\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      0x00\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_291:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_248:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_293\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_247\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_22:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_296\n      tag_244\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":833:952   */\n    tag_295:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_297\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_248\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_249:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_250:\n        /* \"#utility.yul\":1268:1289   */\n      tag_300\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_249\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_25:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_302\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_250\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1617   */\n    tag_251:\n        /* \"#utility.yul\":1570:1576   */\n      0x00\n        /* \"#utility.yul\":1604:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1610   */\n      mload\n        /* \"#utility.yul\":1588:1610   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1617   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1623:1792   */\n    tag_252:\n        /* \"#utility.yul\":1707:1718   */\n      0x00\n        /* \"#utility.yul\":1741:1747   */\n      dup3\n        /* \"#utility.yul\":1736:1739   */\n      dup3\n        /* \"#utility.yul\":1729:1748   */\n      mstore\n        /* \"#utility.yul\":1781:1785   */\n      0x20\n        /* \"#utility.yul\":1776:1779   */\n      dup3\n        /* \"#utility.yul\":1772:1786   */\n      add\n        /* \"#utility.yul\":1757:1786   */\n      swap1\n      pop\n        /* \"#utility.yul\":1623:1792   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1798:1937   */\n    tag_253:\n        /* \"#utility.yul\":1887:1893   */\n      dup3\n        /* \"#utility.yul\":1882:1885   */\n      dup2\n        /* \"#utility.yul\":1877:1880   */\n      dup4\n        /* \"#utility.yul\":1871:1894   */\n      mcopy\n        /* \"#utility.yul\":1928:1929   */\n      0x00\n        /* \"#utility.yul\":1919:1925   */\n      dup4\n        /* \"#utility.yul\":1914:1917   */\n      dup4\n        /* \"#utility.yul\":1910:1926   */\n      add\n        /* \"#utility.yul\":1903:1930   */\n      mstore\n        /* \"#utility.yul\":1798:1937   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1943:2045   */\n    tag_254:\n        /* \"#utility.yul\":1984:1990   */\n      0x00\n        /* \"#utility.yul\":2035:2037   */\n      0x1f\n        /* \"#utility.yul\":2031:2038   */\n      not\n        /* \"#utility.yul\":2026:2028   */\n      0x1f\n        /* \"#utility.yul\":2019:2024   */\n      dup4\n        /* \"#utility.yul\":2015:2029   */\n      add\n        /* \"#utility.yul\":2011:2039   */\n      and\n        /* \"#utility.yul\":2001:2039   */\n      swap1\n      pop\n        /* \"#utility.yul\":1943:2045   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2051:2428   */\n    tag_255:\n        /* \"#utility.yul\":2139:2142   */\n      0x00\n        /* \"#utility.yul\":2167:2206   */\n      tag_308\n        /* \"#utility.yul\":2200:2205   */\n      dup3\n        /* \"#utility.yul\":2167:2206   */\n      tag_251\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":2222:2293   */\n      tag_309\n        /* \"#utility.yul\":2286:2292   */\n      dup2\n        /* \"#utility.yul\":2281:2284   */\n      dup6\n        /* \"#utility.yul\":2222:2293   */\n      tag_252\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":2215:2293   */\n      swap4\n      pop\n        /* \"#utility.yul\":2302:2367   */\n      tag_310\n        /* \"#utility.yul\":2360:2366   */\n      dup2\n        /* \"#utility.yul\":2355:2358   */\n      dup6\n        /* \"#utility.yul\":2348:2352   */\n      0x20\n        /* \"#utility.yul\":2341:2346   */\n      dup7\n        /* \"#utility.yul\":2337:2353   */\n      add\n        /* \"#utility.yul\":2302:2367   */\n      tag_253\n      jump\t// in\n    tag_310:\n        /* \"#utility.yul\":2392:2421   */\n      tag_311\n        /* \"#utility.yul\":2414:2420   */\n      dup2\n        /* \"#utility.yul\":2392:2421   */\n      tag_254\n      jump\t// in\n    tag_311:\n        /* \"#utility.yul\":2387:2390   */\n      dup5\n        /* \"#utility.yul\":2383:2422   */\n      add\n        /* \"#utility.yul\":2376:2422   */\n      swap2\n      pop\n        /* \"#utility.yul\":2143:2428   */\n      pop\n        /* \"#utility.yul\":2051:2428   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2434:2747   */\n    tag_30:\n        /* \"#utility.yul\":2547:2551   */\n      0x00\n        /* \"#utility.yul\":2585:2587   */\n      0x20\n        /* \"#utility.yul\":2574:2583   */\n      dup3\n        /* \"#utility.yul\":2570:2588   */\n      add\n        /* \"#utility.yul\":2562:2588   */\n      swap1\n      pop\n        /* \"#utility.yul\":2634:2643   */\n      dup2\n        /* \"#utility.yul\":2628:2632   */\n      dup2\n        /* \"#utility.yul\":2624:2644   */\n      sub\n        /* \"#utility.yul\":2620:2621   */\n      0x00\n        /* \"#utility.yul\":2609:2618   */\n      dup4\n        /* \"#utility.yul\":2605:2622   */\n      add\n        /* \"#utility.yul\":2598:2645   */\n      mstore\n        /* \"#utility.yul\":2662:2740   */\n      tag_313\n        /* \"#utility.yul\":2735:2739   */\n      dup2\n        /* \"#utility.yul\":2726:2732   */\n      dup5\n        /* \"#utility.yul\":2662:2740   */\n      tag_255\n      jump\t// in\n    tag_313:\n        /* \"#utility.yul\":2654:2740   */\n      swap1\n      pop\n        /* \"#utility.yul\":2434:2747   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2753:2830   */\n    tag_256:\n        /* \"#utility.yul\":2790:2797   */\n      0x00\n        /* \"#utility.yul\":2819:2824   */\n      dup2\n        /* \"#utility.yul\":2808:2824   */\n      swap1\n      pop\n        /* \"#utility.yul\":2753:2830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2836:2958   */\n    tag_257:\n        /* \"#utility.yul\":2909:2933   */\n      tag_316\n        /* \"#utility.yul\":2927:2932   */\n      dup2\n        /* \"#utility.yul\":2909:2933   */\n      tag_256\n      jump\t// in\n    tag_316:\n        /* \"#utility.yul\":2902:2907   */\n      dup2\n        /* \"#utility.yul\":2899:2934   */\n      eq\n        /* \"#utility.yul\":2889:2952   */\n      tag_317\n      jumpi\n        /* \"#utility.yul\":2948:2949   */\n      0x00\n        /* \"#utility.yul\":2945:2946   */\n      0x00\n        /* \"#utility.yul\":2938:2950   */\n      revert\n        /* \"#utility.yul\":2889:2952   */\n    tag_317:\n        /* \"#utility.yul\":2836:2958   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2964:3103   */\n    tag_258:\n        /* \"#utility.yul\":3010:3015   */\n      0x00\n        /* \"#utility.yul\":3048:3054   */\n      dup2\n        /* \"#utility.yul\":3035:3055   */\n      calldataload\n        /* \"#utility.yul\":3026:3055   */\n      swap1\n      pop\n        /* \"#utility.yul\":3064:3097   */\n      tag_319\n        /* \"#utility.yul\":3091:3096   */\n      dup2\n        /* \"#utility.yul\":3064:3097   */\n      tag_257\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":2964:3103   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3109:3438   */\n    tag_34:\n        /* \"#utility.yul\":3168:3174   */\n      0x00\n        /* \"#utility.yul\":3217:3219   */\n      0x20\n        /* \"#utility.yul\":3205:3214   */\n      dup3\n        /* \"#utility.yul\":3196:3203   */\n      dup5\n        /* \"#utility.yul\":3192:3215   */\n      sub\n        /* \"#utility.yul\":3188:3220   */\n      slt\n        /* \"#utility.yul\":3185:3304   */\n      iszero\n      tag_321\n      jumpi\n        /* \"#utility.yul\":3223:3302   */\n      tag_322\n      tag_244\n      jump\t// in\n    tag_322:\n        /* \"#utility.yul\":3185:3304   */\n    tag_321:\n        /* \"#utility.yul\":3343:3344   */\n      0x00\n        /* \"#utility.yul\":3368:3421   */\n      tag_323\n        /* \"#utility.yul\":3413:3420   */\n      dup5\n        /* \"#utility.yul\":3404:3410   */\n      dup3\n        /* \"#utility.yul\":3393:3402   */\n      dup6\n        /* \"#utility.yul\":3389:3411   */\n      add\n        /* \"#utility.yul\":3368:3421   */\n      tag_258\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":3358:3421   */\n      swap2\n      pop\n        /* \"#utility.yul\":3314:3431   */\n      pop\n        /* \"#utility.yul\":3109:3438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3444:3570   */\n    tag_259:\n        /* \"#utility.yul\":3481:3488   */\n      0x00\n        /* \"#utility.yul\":3521:3563   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3514:3519   */\n      dup3\n        /* \"#utility.yul\":3510:3564   */\n      and\n        /* \"#utility.yul\":3499:3564   */\n      swap1\n      pop\n        /* \"#utility.yul\":3444:3570   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3576:3672   */\n    tag_260:\n        /* \"#utility.yul\":3613:3620   */\n      0x00\n        /* \"#utility.yul\":3642:3666   */\n      tag_326\n        /* \"#utility.yul\":3660:3665   */\n      dup3\n        /* \"#utility.yul\":3642:3666   */\n      tag_259\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":3631:3666   */\n      swap1\n      pop\n        /* \"#utility.yul\":3576:3672   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3678:3796   */\n    tag_261:\n        /* \"#utility.yul\":3765:3789   */\n      tag_328\n        /* \"#utility.yul\":3783:3788   */\n      dup2\n        /* \"#utility.yul\":3765:3789   */\n      tag_260\n      jump\t// in\n    tag_328:\n        /* \"#utility.yul\":3760:3763   */\n      dup3\n        /* \"#utility.yul\":3753:3790   */\n      mstore\n        /* \"#utility.yul\":3678:3796   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3802:4024   */\n    tag_37:\n        /* \"#utility.yul\":3895:3899   */\n      0x00\n        /* \"#utility.yul\":3933:3935   */\n      0x20\n        /* \"#utility.yul\":3922:3931   */\n      dup3\n        /* \"#utility.yul\":3918:3936   */\n      add\n        /* \"#utility.yul\":3910:3936   */\n      swap1\n      pop\n        /* \"#utility.yul\":3946:4017   */\n      tag_330\n        /* \"#utility.yul\":4014:4015   */\n      0x00\n        /* \"#utility.yul\":4003:4012   */\n      dup4\n        /* \"#utility.yul\":3999:4016   */\n      add\n        /* \"#utility.yul\":3990:3996   */\n      dup5\n        /* \"#utility.yul\":3946:4017   */\n      tag_261\n      jump\t// in\n    tag_330:\n        /* \"#utility.yul\":3802:4024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4030:4152   */\n    tag_262:\n        /* \"#utility.yul\":4103:4127   */\n      tag_332\n        /* \"#utility.yul\":4121:4126   */\n      dup2\n        /* \"#utility.yul\":4103:4127   */\n      tag_260\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":4096:4101   */\n      dup2\n        /* \"#utility.yul\":4093:4128   */\n      eq\n        /* \"#utility.yul\":4083:4146   */\n      tag_333\n      jumpi\n        /* \"#utility.yul\":4142:4143   */\n      0x00\n        /* \"#utility.yul\":4139:4140   */\n      0x00\n        /* \"#utility.yul\":4132:4144   */\n      revert\n        /* \"#utility.yul\":4083:4146   */\n    tag_333:\n        /* \"#utility.yul\":4030:4152   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4158:4297   */\n    tag_263:\n        /* \"#utility.yul\":4204:4209   */\n      0x00\n        /* \"#utility.yul\":4242:4248   */\n      dup2\n        /* \"#utility.yul\":4229:4249   */\n      calldataload\n        /* \"#utility.yul\":4220:4249   */\n      swap1\n      pop\n        /* \"#utility.yul\":4258:4291   */\n      tag_335\n        /* \"#utility.yul\":4285:4290   */\n      dup2\n        /* \"#utility.yul\":4258:4291   */\n      tag_262\n      jump\t// in\n    tag_335:\n        /* \"#utility.yul\":4158:4297   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4303:4777   */\n    tag_40:\n        /* \"#utility.yul\":4371:4377   */\n      0x00\n        /* \"#utility.yul\":4379:4385   */\n      0x00\n        /* \"#utility.yul\":4428:4430   */\n      0x40\n        /* \"#utility.yul\":4416:4425   */\n      dup4\n        /* \"#utility.yul\":4407:4414   */\n      dup6\n        /* \"#utility.yul\":4403:4426   */\n      sub\n        /* \"#utility.yul\":4399:4431   */\n      slt\n        /* \"#utility.yul\":4396:4515   */\n      iszero\n      tag_337\n      jumpi\n        /* \"#utility.yul\":4434:4513   */\n      tag_338\n      tag_244\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":4396:4515   */\n    tag_337:\n        /* \"#utility.yul\":4554:4555   */\n      0x00\n        /* \"#utility.yul\":4579:4632   */\n      tag_339\n        /* \"#utility.yul\":4624:4631   */\n      dup6\n        /* \"#utility.yul\":4615:4621   */\n      dup3\n        /* \"#utility.yul\":4604:4613   */\n      dup7\n        /* \"#utility.yul\":4600:4622   */\n      add\n        /* \"#utility.yul\":4579:4632   */\n      tag_263\n      jump\t// in\n    tag_339:\n        /* \"#utility.yul\":4569:4632   */\n      swap3\n      pop\n        /* \"#utility.yul\":4525:4642   */\n      pop\n        /* \"#utility.yul\":4681:4683   */\n      0x20\n        /* \"#utility.yul\":4707:4760   */\n      tag_340\n        /* \"#utility.yul\":4752:4759   */\n      dup6\n        /* \"#utility.yul\":4743:4749   */\n      dup3\n        /* \"#utility.yul\":4732:4741   */\n      dup7\n        /* \"#utility.yul\":4728:4750   */\n      add\n        /* \"#utility.yul\":4707:4760   */\n      tag_258\n      jump\t// in\n    tag_340:\n        /* \"#utility.yul\":4697:4760   */\n      swap2\n      pop\n        /* \"#utility.yul\":4652:4770   */\n      pop\n        /* \"#utility.yul\":4303:4777   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4783:4901   */\n    tag_264:\n        /* \"#utility.yul\":4870:4894   */\n      tag_342\n        /* \"#utility.yul\":4888:4893   */\n      dup2\n        /* \"#utility.yul\":4870:4894   */\n      tag_256\n      jump\t// in\n    tag_342:\n        /* \"#utility.yul\":4865:4868   */\n      dup3\n        /* \"#utility.yul\":4858:4895   */\n      mstore\n        /* \"#utility.yul\":4783:4901   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4907:5129   */\n    tag_46:\n        /* \"#utility.yul\":5000:5004   */\n      0x00\n        /* \"#utility.yul\":5038:5040   */\n      0x20\n        /* \"#utility.yul\":5027:5036   */\n      dup3\n        /* \"#utility.yul\":5023:5041   */\n      add\n        /* \"#utility.yul\":5015:5041   */\n      swap1\n      pop\n        /* \"#utility.yul\":5051:5122   */\n      tag_344\n        /* \"#utility.yul\":5119:5120   */\n      0x00\n        /* \"#utility.yul\":5108:5117   */\n      dup4\n        /* \"#utility.yul\":5104:5121   */\n      add\n        /* \"#utility.yul\":5095:5101   */\n      dup5\n        /* \"#utility.yul\":5051:5122   */\n      tag_264\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":4907:5129   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5135:5754   */\n    tag_49:\n        /* \"#utility.yul\":5212:5218   */\n      0x00\n        /* \"#utility.yul\":5220:5226   */\n      0x00\n        /* \"#utility.yul\":5228:5234   */\n      0x00\n        /* \"#utility.yul\":5277:5279   */\n      0x60\n        /* \"#utility.yul\":5265:5274   */\n      dup5\n        /* \"#utility.yul\":5256:5263   */\n      dup7\n        /* \"#utility.yul\":5252:5275   */\n      sub\n        /* \"#utility.yul\":5248:5280   */\n      slt\n        /* \"#utility.yul\":5245:5364   */\n      iszero\n      tag_346\n      jumpi\n        /* \"#utility.yul\":5283:5362   */\n      tag_347\n      tag_244\n      jump\t// in\n    tag_347:\n        /* \"#utility.yul\":5245:5364   */\n    tag_346:\n        /* \"#utility.yul\":5403:5404   */\n      0x00\n        /* \"#utility.yul\":5428:5481   */\n      tag_348\n        /* \"#utility.yul\":5473:5480   */\n      dup7\n        /* \"#utility.yul\":5464:5470   */\n      dup3\n        /* \"#utility.yul\":5453:5462   */\n      dup8\n        /* \"#utility.yul\":5449:5471   */\n      add\n        /* \"#utility.yul\":5428:5481   */\n      tag_263\n      jump\t// in\n    tag_348:\n        /* \"#utility.yul\":5418:5481   */\n      swap4\n      pop\n        /* \"#utility.yul\":5374:5491   */\n      pop\n        /* \"#utility.yul\":5530:5532   */\n      0x20\n        /* \"#utility.yul\":5556:5609   */\n      tag_349\n        /* \"#utility.yul\":5601:5608   */\n      dup7\n        /* \"#utility.yul\":5592:5598   */\n      dup3\n        /* \"#utility.yul\":5581:5590   */\n      dup8\n        /* \"#utility.yul\":5577:5599   */\n      add\n        /* \"#utility.yul\":5556:5609   */\n      tag_263\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":5546:5609   */\n      swap3\n      pop\n        /* \"#utility.yul\":5501:5619   */\n      pop\n        /* \"#utility.yul\":5658:5660   */\n      0x40\n        /* \"#utility.yul\":5684:5737   */\n      tag_350\n        /* \"#utility.yul\":5729:5736   */\n      dup7\n        /* \"#utility.yul\":5720:5726   */\n      dup3\n        /* \"#utility.yul\":5709:5718   */\n      dup8\n        /* \"#utility.yul\":5705:5727   */\n      add\n        /* \"#utility.yul\":5684:5737   */\n      tag_258\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":5674:5737   */\n      swap2\n      pop\n        /* \"#utility.yul\":5629:5747   */\n      pop\n        /* \"#utility.yul\":5135:5754   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5760:6089   */\n    tag_62:\n        /* \"#utility.yul\":5819:5825   */\n      0x00\n        /* \"#utility.yul\":5868:5870   */\n      0x20\n        /* \"#utility.yul\":5856:5865   */\n      dup3\n        /* \"#utility.yul\":5847:5854   */\n      dup5\n        /* \"#utility.yul\":5843:5866   */\n      sub\n        /* \"#utility.yul\":5839:5871   */\n      slt\n        /* \"#utility.yul\":5836:5955   */\n      iszero\n      tag_352\n      jumpi\n        /* \"#utility.yul\":5874:5953   */\n      tag_353\n      tag_244\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":5836:5955   */\n    tag_352:\n        /* \"#utility.yul\":5994:5995   */\n      0x00\n        /* \"#utility.yul\":6019:6072   */\n      tag_354\n        /* \"#utility.yul\":6064:6071   */\n      dup5\n        /* \"#utility.yul\":6055:6061   */\n      dup3\n        /* \"#utility.yul\":6044:6053   */\n      dup6\n        /* \"#utility.yul\":6040:6062   */\n      add\n        /* \"#utility.yul\":6019:6072   */\n      tag_263\n      jump\t// in\n    tag_354:\n        /* \"#utility.yul\":6009:6072   */\n      swap2\n      pop\n        /* \"#utility.yul\":5965:6082   */\n      pop\n        /* \"#utility.yul\":5760:6089   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6095:6211   */\n    tag_265:\n        /* \"#utility.yul\":6165:6186   */\n      tag_356\n        /* \"#utility.yul\":6180:6185   */\n      dup2\n        /* \"#utility.yul\":6165:6186   */\n      tag_249\n      jump\t// in\n    tag_356:\n        /* \"#utility.yul\":6158:6163   */\n      dup2\n        /* \"#utility.yul\":6155:6187   */\n      eq\n        /* \"#utility.yul\":6145:6205   */\n      tag_357\n      jumpi\n        /* \"#utility.yul\":6201:6202   */\n      0x00\n        /* \"#utility.yul\":6198:6199   */\n      0x00\n        /* \"#utility.yul\":6191:6203   */\n      revert\n        /* \"#utility.yul\":6145:6205   */\n    tag_357:\n        /* \"#utility.yul\":6095:6211   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6217:6350   */\n    tag_266:\n        /* \"#utility.yul\":6260:6265   */\n      0x00\n        /* \"#utility.yul\":6298:6304   */\n      dup2\n        /* \"#utility.yul\":6285:6305   */\n      calldataload\n        /* \"#utility.yul\":6276:6305   */\n      swap1\n      pop\n        /* \"#utility.yul\":6314:6344   */\n      tag_359\n        /* \"#utility.yul\":6338:6343   */\n      dup2\n        /* \"#utility.yul\":6314:6344   */\n      tag_265\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":6217:6350   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6356:6824   */\n    tag_72:\n        /* \"#utility.yul\":6421:6427   */\n      0x00\n        /* \"#utility.yul\":6429:6435   */\n      0x00\n        /* \"#utility.yul\":6478:6480   */\n      0x40\n        /* \"#utility.yul\":6466:6475   */\n      dup4\n        /* \"#utility.yul\":6457:6464   */\n      dup6\n        /* \"#utility.yul\":6453:6476   */\n      sub\n        /* \"#utility.yul\":6449:6481   */\n      slt\n        /* \"#utility.yul\":6446:6565   */\n      iszero\n      tag_361\n      jumpi\n        /* \"#utility.yul\":6484:6563   */\n      tag_362\n      tag_244\n      jump\t// in\n    tag_362:\n        /* \"#utility.yul\":6446:6565   */\n    tag_361:\n        /* \"#utility.yul\":6604:6605   */\n      0x00\n        /* \"#utility.yul\":6629:6682   */\n      tag_363\n        /* \"#utility.yul\":6674:6681   */\n      dup6\n        /* \"#utility.yul\":6665:6671   */\n      dup3\n        /* \"#utility.yul\":6654:6663   */\n      dup7\n        /* \"#utility.yul\":6650:6672   */\n      add\n        /* \"#utility.yul\":6629:6682   */\n      tag_263\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":6619:6682   */\n      swap3\n      pop\n        /* \"#utility.yul\":6575:6692   */\n      pop\n        /* \"#utility.yul\":6731:6733   */\n      0x20\n        /* \"#utility.yul\":6757:6807   */\n      tag_364\n        /* \"#utility.yul\":6799:6806   */\n      dup6\n        /* \"#utility.yul\":6790:6796   */\n      dup3\n        /* \"#utility.yul\":6779:6788   */\n      dup7\n        /* \"#utility.yul\":6775:6797   */\n      add\n        /* \"#utility.yul\":6757:6807   */\n      tag_266\n      jump\t// in\n    tag_364:\n        /* \"#utility.yul\":6747:6807   */\n      swap2\n      pop\n        /* \"#utility.yul\":6702:6817   */\n      pop\n        /* \"#utility.yul\":6356:6824   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6830:6947   */\n    tag_267:\n        /* \"#utility.yul\":6939:6940   */\n      0x00\n        /* \"#utility.yul\":6936:6937   */\n      0x00\n        /* \"#utility.yul\":6929:6941   */\n      revert\n        /* \"#utility.yul\":6953:7070   */\n    tag_268:\n        /* \"#utility.yul\":7062:7063   */\n      0x00\n        /* \"#utility.yul\":7059:7060   */\n      0x00\n        /* \"#utility.yul\":7052:7064   */\n      revert\n        /* \"#utility.yul\":7076:7256   */\n    tag_269:\n        /* \"#utility.yul\":7124:7201   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7121:7122   */\n      0x00\n        /* \"#utility.yul\":7114:7202   */\n      mstore\n        /* \"#utility.yul\":7221:7225   */\n      0x41\n        /* \"#utility.yul\":7218:7219   */\n      0x04\n        /* \"#utility.yul\":7211:7226   */\n      mstore\n        /* \"#utility.yul\":7245:7249   */\n      0x24\n        /* \"#utility.yul\":7242:7243   */\n      0x00\n        /* \"#utility.yul\":7235:7250   */\n      revert\n        /* \"#utility.yul\":7262:7543   */\n    tag_270:\n        /* \"#utility.yul\":7345:7372   */\n      tag_369\n        /* \"#utility.yul\":7367:7371   */\n      dup3\n        /* \"#utility.yul\":7345:7372   */\n      tag_254\n      jump\t// in\n    tag_369:\n        /* \"#utility.yul\":7337:7343   */\n      dup2\n        /* \"#utility.yul\":7333:7373   */\n      add\n        /* \"#utility.yul\":7475:7481   */\n      dup2\n        /* \"#utility.yul\":7463:7473   */\n      dup2\n        /* \"#utility.yul\":7460:7482   */\n      lt\n        /* \"#utility.yul\":7439:7457   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7427:7437   */\n      dup3\n        /* \"#utility.yul\":7424:7458   */\n      gt\n        /* \"#utility.yul\":7421:7483   */\n      or\n        /* \"#utility.yul\":7418:7506   */\n      iszero\n      tag_370\n      jumpi\n        /* \"#utility.yul\":7486:7504   */\n      tag_371\n      tag_269\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":7418:7506   */\n    tag_370:\n        /* \"#utility.yul\":7526:7536   */\n      dup1\n        /* \"#utility.yul\":7522:7524   */\n      0x40\n        /* \"#utility.yul\":7515:7537   */\n      mstore\n        /* \"#utility.yul\":7305:7543   */\n      pop\n        /* \"#utility.yul\":7262:7543   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7549:7678   */\n    tag_271:\n        /* \"#utility.yul\":7583:7589   */\n      0x00\n        /* \"#utility.yul\":7610:7630   */\n      tag_373\n      tag_243\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":7600:7630   */\n      swap1\n      pop\n        /* \"#utility.yul\":7639:7672   */\n      tag_374\n        /* \"#utility.yul\":7667:7671   */\n      dup3\n        /* \"#utility.yul\":7659:7665   */\n      dup3\n        /* \"#utility.yul\":7639:7672   */\n      tag_270\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":7549:7678   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7684:7991   */\n    tag_272:\n        /* \"#utility.yul\":7745:7749   */\n      0x00\n        /* \"#utility.yul\":7835:7853   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7827:7833   */\n      dup3\n        /* \"#utility.yul\":7824:7854   */\n      gt\n        /* \"#utility.yul\":7821:7877   */\n      iszero\n      tag_376\n      jumpi\n        /* \"#utility.yul\":7857:7875   */\n      tag_377\n      tag_269\n      jump\t// in\n    tag_377:\n        /* \"#utility.yul\":7821:7877   */\n    tag_376:\n        /* \"#utility.yul\":7895:7924   */\n      tag_378\n        /* \"#utility.yul\":7917:7923   */\n      dup3\n        /* \"#utility.yul\":7895:7924   */\n      tag_254\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":7887:7924   */\n      swap1\n      pop\n        /* \"#utility.yul\":7979:7983   */\n      0x20\n        /* \"#utility.yul\":7973:7977   */\n      dup2\n        /* \"#utility.yul\":7969:7984   */\n      add\n        /* \"#utility.yul\":7961:7984   */\n      swap1\n      pop\n        /* \"#utility.yul\":7684:7991   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7997:8145   */\n    tag_273:\n        /* \"#utility.yul\":8095:8101   */\n      dup3\n        /* \"#utility.yul\":8090:8093   */\n      dup2\n        /* \"#utility.yul\":8085:8088   */\n      dup4\n        /* \"#utility.yul\":8072:8102   */\n      calldatacopy\n        /* \"#utility.yul\":8136:8137   */\n      0x00\n        /* \"#utility.yul\":8127:8133   */\n      dup4\n        /* \"#utility.yul\":8122:8125   */\n      dup4\n        /* \"#utility.yul\":8118:8134   */\n      add\n        /* \"#utility.yul\":8111:8138   */\n      mstore\n        /* \"#utility.yul\":7997:8145   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8151:8574   */\n    tag_274:\n        /* \"#utility.yul\":8228:8233   */\n      0x00\n        /* \"#utility.yul\":8253:8318   */\n      tag_381\n        /* \"#utility.yul\":8269:8317   */\n      tag_382\n        /* \"#utility.yul\":8310:8316   */\n      dup5\n        /* \"#utility.yul\":8269:8317   */\n      tag_272\n      jump\t// in\n    tag_382:\n        /* \"#utility.yul\":8253:8318   */\n      tag_271\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":8244:8318   */\n      swap1\n      pop\n        /* \"#utility.yul\":8341:8347   */\n      dup3\n        /* \"#utility.yul\":8334:8339   */\n      dup2\n        /* \"#utility.yul\":8327:8348   */\n      mstore\n        /* \"#utility.yul\":8379:8383   */\n      0x20\n        /* \"#utility.yul\":8372:8377   */\n      dup2\n        /* \"#utility.yul\":8368:8384   */\n      add\n        /* \"#utility.yul\":8417:8420   */\n      dup5\n        /* \"#utility.yul\":8408:8414   */\n      dup5\n        /* \"#utility.yul\":8403:8406   */\n      dup5\n        /* \"#utility.yul\":8399:8415   */\n      add\n        /* \"#utility.yul\":8396:8421   */\n      gt\n        /* \"#utility.yul\":8393:8505   */\n      iszero\n      tag_383\n      jumpi\n        /* \"#utility.yul\":8424:8503   */\n      tag_384\n      tag_268\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":8393:8505   */\n    tag_383:\n        /* \"#utility.yul\":8514:8568   */\n      tag_385\n        /* \"#utility.yul\":8561:8567   */\n      dup5\n        /* \"#utility.yul\":8556:8559   */\n      dup3\n        /* \"#utility.yul\":8551:8554   */\n      dup6\n        /* \"#utility.yul\":8514:8568   */\n      tag_273\n      jump\t// in\n    tag_385:\n        /* \"#utility.yul\":8234:8574   */\n      pop\n        /* \"#utility.yul\":8151:8574   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8593:8931   */\n    tag_275:\n        /* \"#utility.yul\":8648:8653   */\n      0x00\n        /* \"#utility.yul\":8697:8700   */\n      dup3\n        /* \"#utility.yul\":8690:8694   */\n      0x1f\n        /* \"#utility.yul\":8682:8688   */\n      dup4\n        /* \"#utility.yul\":8678:8695   */\n      add\n        /* \"#utility.yul\":8674:8701   */\n      slt\n        /* \"#utility.yul\":8664:8786   */\n      tag_387\n      jumpi\n        /* \"#utility.yul\":8705:8784   */\n      tag_388\n      tag_267\n      jump\t// in\n    tag_388:\n        /* \"#utility.yul\":8664:8786   */\n    tag_387:\n        /* \"#utility.yul\":8822:8828   */\n      dup2\n        /* \"#utility.yul\":8809:8829   */\n      calldataload\n        /* \"#utility.yul\":8847:8925   */\n      tag_389\n        /* \"#utility.yul\":8921:8924   */\n      dup5\n        /* \"#utility.yul\":8913:8919   */\n      dup3\n        /* \"#utility.yul\":8906:8910   */\n      0x20\n        /* \"#utility.yul\":8898:8904   */\n      dup7\n        /* \"#utility.yul\":8894:8911   */\n      add\n        /* \"#utility.yul\":8847:8925   */\n      tag_274\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":8838:8925   */\n      swap2\n      pop\n        /* \"#utility.yul\":8654:8931   */\n      pop\n        /* \"#utility.yul\":8593:8931   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8937:9880   */\n    tag_76:\n        /* \"#utility.yul\":9032:9038   */\n      0x00\n        /* \"#utility.yul\":9040:9046   */\n      0x00\n        /* \"#utility.yul\":9048:9054   */\n      0x00\n        /* \"#utility.yul\":9056:9062   */\n      0x00\n        /* \"#utility.yul\":9105:9108   */\n      0x80\n        /* \"#utility.yul\":9093:9102   */\n      dup6\n        /* \"#utility.yul\":9084:9091   */\n      dup8\n        /* \"#utility.yul\":9080:9103   */\n      sub\n        /* \"#utility.yul\":9076:9109   */\n      slt\n        /* \"#utility.yul\":9073:9193   */\n      iszero\n      tag_391\n      jumpi\n        /* \"#utility.yul\":9112:9191   */\n      tag_392\n      tag_244\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":9073:9193   */\n    tag_391:\n        /* \"#utility.yul\":9232:9233   */\n      0x00\n        /* \"#utility.yul\":9257:9310   */\n      tag_393\n        /* \"#utility.yul\":9302:9309   */\n      dup8\n        /* \"#utility.yul\":9293:9299   */\n      dup3\n        /* \"#utility.yul\":9282:9291   */\n      dup9\n        /* \"#utility.yul\":9278:9300   */\n      add\n        /* \"#utility.yul\":9257:9310   */\n      tag_263\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":9247:9310   */\n      swap5\n      pop\n        /* \"#utility.yul\":9203:9320   */\n      pop\n        /* \"#utility.yul\":9359:9361   */\n      0x20\n        /* \"#utility.yul\":9385:9438   */\n      tag_394\n        /* \"#utility.yul\":9430:9437   */\n      dup8\n        /* \"#utility.yul\":9421:9427   */\n      dup3\n        /* \"#utility.yul\":9410:9419   */\n      dup9\n        /* \"#utility.yul\":9406:9428   */\n      add\n        /* \"#utility.yul\":9385:9438   */\n      tag_263\n      jump\t// in\n    tag_394:\n        /* \"#utility.yul\":9375:9438   */\n      swap4\n      pop\n        /* \"#utility.yul\":9330:9448   */\n      pop\n        /* \"#utility.yul\":9487:9489   */\n      0x40\n        /* \"#utility.yul\":9513:9566   */\n      tag_395\n        /* \"#utility.yul\":9558:9565   */\n      dup8\n        /* \"#utility.yul\":9549:9555   */\n      dup3\n        /* \"#utility.yul\":9538:9547   */\n      dup9\n        /* \"#utility.yul\":9534:9556   */\n      add\n        /* \"#utility.yul\":9513:9566   */\n      tag_258\n      jump\t// in\n    tag_395:\n        /* \"#utility.yul\":9503:9566   */\n      swap3\n      pop\n        /* \"#utility.yul\":9458:9576   */\n      pop\n        /* \"#utility.yul\":9643:9645   */\n      0x60\n        /* \"#utility.yul\":9632:9641   */\n      dup6\n        /* \"#utility.yul\":9628:9646   */\n      add\n        /* \"#utility.yul\":9615:9647   */\n      calldataload\n        /* \"#utility.yul\":9674:9692   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9666:9672   */\n      dup2\n        /* \"#utility.yul\":9663:9693   */\n      gt\n        /* \"#utility.yul\":9660:9777   */\n      iszero\n      tag_396\n      jumpi\n        /* \"#utility.yul\":9696:9775   */\n      tag_397\n      tag_245\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":9660:9777   */\n    tag_396:\n        /* \"#utility.yul\":9801:9863   */\n      tag_398\n        /* \"#utility.yul\":9855:9862   */\n      dup8\n        /* \"#utility.yul\":9846:9852   */\n      dup3\n        /* \"#utility.yul\":9835:9844   */\n      dup9\n        /* \"#utility.yul\":9831:9853   */\n      add\n        /* \"#utility.yul\":9801:9863   */\n      tag_275\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":9791:9863   */\n      swap2\n      pop\n        /* \"#utility.yul\":9586:9873   */\n      pop\n        /* \"#utility.yul\":8937:9880   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9886:10360   */\n    tag_86:\n        /* \"#utility.yul\":9954:9960   */\n      0x00\n        /* \"#utility.yul\":9962:9968   */\n      0x00\n        /* \"#utility.yul\":10011:10013   */\n      0x40\n        /* \"#utility.yul\":9999:10008   */\n      dup4\n        /* \"#utility.yul\":9990:9997   */\n      dup6\n        /* \"#utility.yul\":9986:10009   */\n      sub\n        /* \"#utility.yul\":9982:10014   */\n      slt\n        /* \"#utility.yul\":9979:10098   */\n      iszero\n      tag_400\n      jumpi\n        /* \"#utility.yul\":10017:10096   */\n      tag_401\n      tag_244\n      jump\t// in\n    tag_401:\n        /* \"#utility.yul\":9979:10098   */\n    tag_400:\n        /* \"#utility.yul\":10137:10138   */\n      0x00\n        /* \"#utility.yul\":10162:10215   */\n      tag_402\n        /* \"#utility.yul\":10207:10214   */\n      dup6\n        /* \"#utility.yul\":10198:10204   */\n      dup3\n        /* \"#utility.yul\":10187:10196   */\n      dup7\n        /* \"#utility.yul\":10183:10205   */\n      add\n        /* \"#utility.yul\":10162:10215   */\n      tag_263\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":10152:10215   */\n      swap3\n      pop\n        /* \"#utility.yul\":10108:10225   */\n      pop\n        /* \"#utility.yul\":10264:10266   */\n      0x20\n        /* \"#utility.yul\":10290:10343   */\n      tag_403\n        /* \"#utility.yul\":10335:10342   */\n      dup6\n        /* \"#utility.yul\":10326:10332   */\n      dup3\n        /* \"#utility.yul\":10315:10324   */\n      dup7\n        /* \"#utility.yul\":10311:10333   */\n      add\n        /* \"#utility.yul\":10290:10343   */\n      tag_263\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":10280:10343   */\n      swap2\n      pop\n        /* \"#utility.yul\":10235:10353   */\n      pop\n        /* \"#utility.yul\":9886:10360   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10366:10546   */\n    tag_276:\n        /* \"#utility.yul\":10414:10491   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10411:10412   */\n      0x00\n        /* \"#utility.yul\":10404:10492   */\n      mstore\n        /* \"#utility.yul\":10511:10515   */\n      0x22\n        /* \"#utility.yul\":10508:10509   */\n      0x04\n        /* \"#utility.yul\":10501:10516   */\n      mstore\n        /* \"#utility.yul\":10535:10539   */\n      0x24\n        /* \"#utility.yul\":10532:10533   */\n      0x00\n        /* \"#utility.yul\":10525:10540   */\n      revert\n        /* \"#utility.yul\":10552:10872   */\n    tag_94:\n        /* \"#utility.yul\":10596:10602   */\n      0x00\n        /* \"#utility.yul\":10633:10634   */\n      0x02\n        /* \"#utility.yul\":10627:10631   */\n      dup3\n        /* \"#utility.yul\":10623:10635   */\n      div\n        /* \"#utility.yul\":10613:10635   */\n      swap1\n      pop\n        /* \"#utility.yul\":10680:10681   */\n      0x01\n        /* \"#utility.yul\":10674:10678   */\n      dup3\n        /* \"#utility.yul\":10670:10682   */\n      and\n        /* \"#utility.yul\":10701:10719   */\n      dup1\n        /* \"#utility.yul\":10691:10772   */\n      tag_406\n      jumpi\n        /* \"#utility.yul\":10757:10761   */\n      0x7f\n        /* \"#utility.yul\":10749:10755   */\n      dup3\n        /* \"#utility.yul\":10745:10762   */\n      and\n        /* \"#utility.yul\":10735:10762   */\n      swap2\n      pop\n        /* \"#utility.yul\":10691:10772   */\n    tag_406:\n        /* \"#utility.yul\":10819:10821   */\n      0x20\n        /* \"#utility.yul\":10811:10817   */\n      dup3\n        /* \"#utility.yul\":10808:10822   */\n      lt\n        /* \"#utility.yul\":10788:10806   */\n      dup2\n        /* \"#utility.yul\":10785:10823   */\n      sub\n        /* \"#utility.yul\":10782:10866   */\n      tag_407\n      jumpi\n        /* \"#utility.yul\":10838:10856   */\n      tag_408\n      tag_276\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":10782:10866   */\n    tag_407:\n        /* \"#utility.yul\":10603:10872   */\n      pop\n        /* \"#utility.yul\":10552:10872   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10878:11026   */\n    tag_277:\n        /* \"#utility.yul\":10980:10991   */\n      0x00\n        /* \"#utility.yul\":11017:11020   */\n      dup2\n        /* \"#utility.yul\":11002:11020   */\n      swap1\n      pop\n        /* \"#utility.yul\":10878:11026   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11032:11422   */\n    tag_278:\n        /* \"#utility.yul\":11138:11141   */\n      0x00\n        /* \"#utility.yul\":11166:11205   */\n      tag_411\n        /* \"#utility.yul\":11199:11204   */\n      dup3\n        /* \"#utility.yul\":11166:11205   */\n      tag_251\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":11221:11310   */\n      tag_412\n        /* \"#utility.yul\":11303:11309   */\n      dup2\n        /* \"#utility.yul\":11298:11301   */\n      dup6\n        /* \"#utility.yul\":11221:11310   */\n      tag_277\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":11214:11310   */\n      swap4\n      pop\n        /* \"#utility.yul\":11319:11384   */\n      tag_413\n        /* \"#utility.yul\":11377:11383   */\n      dup2\n        /* \"#utility.yul\":11372:11375   */\n      dup6\n        /* \"#utility.yul\":11365:11369   */\n      0x20\n        /* \"#utility.yul\":11358:11363   */\n      dup7\n        /* \"#utility.yul\":11354:11370   */\n      add\n        /* \"#utility.yul\":11319:11384   */\n      tag_253\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":11409:11415   */\n      dup1\n        /* \"#utility.yul\":11404:11407   */\n      dup5\n        /* \"#utility.yul\":11400:11416   */\n      add\n        /* \"#utility.yul\":11393:11416   */\n      swap2\n      pop\n        /* \"#utility.yul\":11142:11422   */\n      pop\n        /* \"#utility.yul\":11032:11422   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11428:11863   */\n    tag_176:\n        /* \"#utility.yul\":11608:11611   */\n      0x00\n        /* \"#utility.yul\":11630:11725   */\n      tag_415\n        /* \"#utility.yul\":11721:11724   */\n      dup3\n        /* \"#utility.yul\":11712:11718   */\n      dup6\n        /* \"#utility.yul\":11630:11725   */\n      tag_278\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":11623:11725   */\n      swap2\n      pop\n        /* \"#utility.yul\":11742:11837   */\n      tag_416\n        /* \"#utility.yul\":11833:11836   */\n      dup3\n        /* \"#utility.yul\":11824:11830   */\n      dup5\n        /* \"#utility.yul\":11742:11837   */\n      tag_278\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":11735:11837   */\n      swap2\n      pop\n        /* \"#utility.yul\":11854:11857   */\n      dup2\n        /* \"#utility.yul\":11847:11857   */\n      swap1\n      pop\n        /* \"#utility.yul\":11428:11863   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11869:12049   */\n    tag_279:\n        /* \"#utility.yul\":11917:11994   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11914:11915   */\n      0x00\n        /* \"#utility.yul\":11907:11995   */\n      mstore\n        /* \"#utility.yul\":12014:12018   */\n      0x11\n        /* \"#utility.yul\":12011:12012   */\n      0x04\n        /* \"#utility.yul\":12004:12019   */\n      mstore\n        /* \"#utility.yul\":12038:12042   */\n      0x24\n        /* \"#utility.yul\":12035:12036   */\n      0x00\n        /* \"#utility.yul\":12028:12043   */\n      revert\n        /* \"#utility.yul\":12055:12226   */\n    tag_185:\n        /* \"#utility.yul\":12094:12097   */\n      0x00\n        /* \"#utility.yul\":12117:12141   */\n      tag_419\n        /* \"#utility.yul\":12135:12140   */\n      dup3\n        /* \"#utility.yul\":12117:12141   */\n      tag_256\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":12108:12141   */\n      swap2\n      pop\n        /* \"#utility.yul\":12163:12167   */\n      0x00\n        /* \"#utility.yul\":12156:12161   */\n      dup3\n        /* \"#utility.yul\":12153:12168   */\n      sub\n        /* \"#utility.yul\":12150:12191   */\n      tag_420\n      jumpi\n        /* \"#utility.yul\":12171:12189   */\n      tag_421\n      tag_279\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":12150:12191   */\n    tag_420:\n        /* \"#utility.yul\":12218:12219   */\n      0x01\n        /* \"#utility.yul\":12211:12216   */\n      dup3\n        /* \"#utility.yul\":12207:12220   */\n      sub\n        /* \"#utility.yul\":12200:12220   */\n      swap1\n      pop\n        /* \"#utility.yul\":12055:12226   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12232:12330   */\n    tag_280:\n        /* \"#utility.yul\":12283:12289   */\n      0x00\n        /* \"#utility.yul\":12317:12322   */\n      dup2\n        /* \"#utility.yul\":12311:12323   */\n      mload\n        /* \"#utility.yul\":12301:12323   */\n      swap1\n      pop\n        /* \"#utility.yul\":12232:12330   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12336:12504   */\n    tag_281:\n        /* \"#utility.yul\":12419:12430   */\n      0x00\n        /* \"#utility.yul\":12453:12459   */\n      dup3\n        /* \"#utility.yul\":12448:12451   */\n      dup3\n        /* \"#utility.yul\":12441:12460   */\n      mstore\n        /* \"#utility.yul\":12493:12497   */\n      0x20\n        /* \"#utility.yul\":12488:12491   */\n      dup3\n        /* \"#utility.yul\":12484:12498   */\n      add\n        /* \"#utility.yul\":12469:12498   */\n      swap1\n      pop\n        /* \"#utility.yul\":12336:12504   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12510:12883   */\n    tag_282:\n        /* \"#utility.yul\":12596:12599   */\n      0x00\n        /* \"#utility.yul\":12624:12662   */\n      tag_425\n        /* \"#utility.yul\":12656:12661   */\n      dup3\n        /* \"#utility.yul\":12624:12662   */\n      tag_280\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":12678:12748   */\n      tag_426\n        /* \"#utility.yul\":12741:12747   */\n      dup2\n        /* \"#utility.yul\":12736:12739   */\n      dup6\n        /* \"#utility.yul\":12678:12748   */\n      tag_281\n      jump\t// in\n    tag_426:\n        /* \"#utility.yul\":12671:12748   */\n      swap4\n      pop\n        /* \"#utility.yul\":12757:12822   */\n      tag_427\n        /* \"#utility.yul\":12815:12821   */\n      dup2\n        /* \"#utility.yul\":12810:12813   */\n      dup6\n        /* \"#utility.yul\":12803:12807   */\n      0x20\n        /* \"#utility.yul\":12796:12801   */\n      dup7\n        /* \"#utility.yul\":12792:12808   */\n      add\n        /* \"#utility.yul\":12757:12822   */\n      tag_253\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":12847:12876   */\n      tag_428\n        /* \"#utility.yul\":12869:12875   */\n      dup2\n        /* \"#utility.yul\":12847:12876   */\n      tag_254\n      jump\t// in\n    tag_428:\n        /* \"#utility.yul\":12842:12845   */\n      dup5\n        /* \"#utility.yul\":12838:12877   */\n      add\n        /* \"#utility.yul\":12831:12877   */\n      swap2\n      pop\n        /* \"#utility.yul\":12600:12883   */\n      pop\n        /* \"#utility.yul\":12510:12883   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12889:13529   */\n    tag_223:\n        /* \"#utility.yul\":13084:13088   */\n      0x00\n        /* \"#utility.yul\":13122:13125   */\n      0x80\n        /* \"#utility.yul\":13111:13120   */\n      dup3\n        /* \"#utility.yul\":13107:13126   */\n      add\n        /* \"#utility.yul\":13099:13126   */\n      swap1\n      pop\n        /* \"#utility.yul\":13136:13207   */\n      tag_430\n        /* \"#utility.yul\":13204:13205   */\n      0x00\n        /* \"#utility.yul\":13193:13202   */\n      dup4\n        /* \"#utility.yul\":13189:13206   */\n      add\n        /* \"#utility.yul\":13180:13186   */\n      dup8\n        /* \"#utility.yul\":13136:13207   */\n      tag_261\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":13217:13289   */\n      tag_431\n        /* \"#utility.yul\":13285:13287   */\n      0x20\n        /* \"#utility.yul\":13274:13283   */\n      dup4\n        /* \"#utility.yul\":13270:13288   */\n      add\n        /* \"#utility.yul\":13261:13267   */\n      dup7\n        /* \"#utility.yul\":13217:13289   */\n      tag_261\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":13299:13371   */\n      tag_432\n        /* \"#utility.yul\":13367:13369   */\n      0x40\n        /* \"#utility.yul\":13356:13365   */\n      dup4\n        /* \"#utility.yul\":13352:13370   */\n      add\n        /* \"#utility.yul\":13343:13349   */\n      dup6\n        /* \"#utility.yul\":13299:13371   */\n      tag_264\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":13418:13427   */\n      dup2\n        /* \"#utility.yul\":13412:13416   */\n      dup2\n        /* \"#utility.yul\":13408:13428   */\n      sub\n        /* \"#utility.yul\":13403:13405   */\n      0x60\n        /* \"#utility.yul\":13392:13401   */\n      dup4\n        /* \"#utility.yul\":13388:13406   */\n      add\n        /* \"#utility.yul\":13381:13429   */\n      mstore\n        /* \"#utility.yul\":13446:13522   */\n      tag_433\n        /* \"#utility.yul\":13517:13521   */\n      dup2\n        /* \"#utility.yul\":13508:13514   */\n      dup5\n        /* \"#utility.yul\":13446:13522   */\n      tag_282\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":13438:13522   */\n      swap1\n      pop\n        /* \"#utility.yul\":12889:13529   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13535:13676   */\n    tag_283:\n        /* \"#utility.yul\":13591:13596   */\n      0x00\n        /* \"#utility.yul\":13622:13628   */\n      dup2\n        /* \"#utility.yul\":13616:13629   */\n      mload\n        /* \"#utility.yul\":13607:13629   */\n      swap1\n      pop\n        /* \"#utility.yul\":13638:13670   */\n      tag_435\n        /* \"#utility.yul\":13664:13669   */\n      dup2\n        /* \"#utility.yul\":13638:13670   */\n      tag_247\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":13535:13676   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13682:14031   */\n    tag_226:\n        /* \"#utility.yul\":13751:13757   */\n      0x00\n        /* \"#utility.yul\":13800:13802   */\n      0x20\n        /* \"#utility.yul\":13788:13797   */\n      dup3\n        /* \"#utility.yul\":13779:13786   */\n      dup5\n        /* \"#utility.yul\":13775:13798   */\n      sub\n        /* \"#utility.yul\":13771:13803   */\n      slt\n        /* \"#utility.yul\":13768:13887   */\n      iszero\n      tag_437\n      jumpi\n        /* \"#utility.yul\":13806:13885   */\n      tag_438\n      tag_244\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":13768:13887   */\n    tag_437:\n        /* \"#utility.yul\":13926:13927   */\n      0x00\n        /* \"#utility.yul\":13951:14014   */\n      tag_439\n        /* \"#utility.yul\":14006:14013   */\n      dup5\n        /* \"#utility.yul\":13997:14003   */\n      dup3\n        /* \"#utility.yul\":13986:13995   */\n      dup6\n        /* \"#utility.yul\":13982:14004   */\n      add\n        /* \"#utility.yul\":13951:14014   */\n      tag_283\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":13941:14014   */\n      swap2\n      pop\n        /* \"#utility.yul\":13897:14024   */\n      pop\n        /* \"#utility.yul\":13682:14031   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220eecbe090a9cc90a95b1cf89495feab68941a528356ff97bfbe028ba23aec622964736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_173": {
									"entryPoint": null,
									"id": 173,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_startTokenId_182": {
									"entryPoint": 107,
									"id": 182,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_available_length_t_string_memory_ptr_fromMemory": {
									"entryPoint": 337,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_string_memory_ptr_fromMemory": {
									"entryPoint": 402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 447,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_memory": {
									"entryPoint": 249,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 114,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_string_memory_ptr": {
									"entryPoint": 275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 668,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 956,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_uint256": {
									"entryPoint": 794,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 922,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1093,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 323,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 686,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 620,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1066,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 200,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x22": {
									"entryPoint": 575,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 155,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 845,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 131,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 135,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 127,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 123,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 139,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 701,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 898,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 713,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 854,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 891,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:8467:4",
										"nodeType": "YulBlock",
										"src": "0:8467:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:4",
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nativeSrc": "57:19:4",
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:4",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nativeSrc": "67:9:4",
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:4",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nativeSrc": "177:28:4",
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:4",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:4",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nativeSrc": "187:12:4",
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nativeSrc": "187:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nativeSrc": "300:28:4",
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:4",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:4",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nativeSrc": "310:12:4",
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nativeSrc": "310:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nativeSrc": "423:28:4",
													"nodeType": "YulBlock",
													"src": "423:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:4",
																		"nodeType": "YulLiteral",
																		"src": "440:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:1:4",
																		"nodeType": "YulLiteral",
																		"src": "443:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "433:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:4"
																},
																"nativeSrc": "433:12:4",
																"nodeType": "YulFunctionCall",
																"src": "433:12:4"
															},
															"nativeSrc": "433:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "433:12:4"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "334:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "334:117:4"
											},
											{
												"body": {
													"nativeSrc": "546:28:4",
													"nodeType": "YulBlock",
													"src": "546:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "563:1:4",
																		"nodeType": "YulLiteral",
																		"src": "563:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "566:1:4",
																		"nodeType": "YulLiteral",
																		"src": "566:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "556:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "556:6:4"
																},
																"nativeSrc": "556:12:4",
																"nodeType": "YulFunctionCall",
																"src": "556:12:4"
															},
															"nativeSrc": "556:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "556:12:4"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "457:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "457:117:4"
											},
											{
												"body": {
													"nativeSrc": "628:54:4",
													"nodeType": "YulBlock",
													"src": "628:54:4",
													"statements": [
														{
															"nativeSrc": "638:38:4",
															"nodeType": "YulAssignment",
															"src": "638:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "656:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "656:5:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "663:2:4",
																				"nodeType": "YulLiteral",
																				"src": "663:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "652:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "652:3:4"
																		},
																		"nativeSrc": "652:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "652:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "672:2:4",
																				"nodeType": "YulLiteral",
																				"src": "672:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "668:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "668:3:4"
																		},
																		"nativeSrc": "668:7:4",
																		"nodeType": "YulFunctionCall",
																		"src": "668:7:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "648:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "648:3:4"
																},
																"nativeSrc": "648:28:4",
																"nodeType": "YulFunctionCall",
																"src": "648:28:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "638:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "638:6:4"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "580:102:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "611:5:4",
														"nodeType": "YulTypedName",
														"src": "611:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "621:6:4",
														"nodeType": "YulTypedName",
														"src": "621:6:4",
														"type": ""
													}
												],
												"src": "580:102:4"
											},
											{
												"body": {
													"nativeSrc": "716:152:4",
													"nodeType": "YulBlock",
													"src": "716:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "733:1:4",
																		"nodeType": "YulLiteral",
																		"src": "733:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "736:77:4",
																		"nodeType": "YulLiteral",
																		"src": "736:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "726:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "726:6:4"
																},
																"nativeSrc": "726:88:4",
																"nodeType": "YulFunctionCall",
																"src": "726:88:4"
															},
															"nativeSrc": "726:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "726:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "830:1:4",
																		"nodeType": "YulLiteral",
																		"src": "830:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "833:4:4",
																		"nodeType": "YulLiteral",
																		"src": "833:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "823:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "823:6:4"
																},
																"nativeSrc": "823:15:4",
																"nodeType": "YulFunctionCall",
																"src": "823:15:4"
															},
															"nativeSrc": "823:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "823:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "854:1:4",
																		"nodeType": "YulLiteral",
																		"src": "854:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "857:4:4",
																		"nodeType": "YulLiteral",
																		"src": "857:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "847:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "847:6:4"
																},
																"nativeSrc": "847:15:4",
																"nodeType": "YulFunctionCall",
																"src": "847:15:4"
															},
															"nativeSrc": "847:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "847:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "688:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "688:180:4"
											},
											{
												"body": {
													"nativeSrc": "917:238:4",
													"nodeType": "YulBlock",
													"src": "917:238:4",
													"statements": [
														{
															"nativeSrc": "927:58:4",
															"nodeType": "YulVariableDeclaration",
															"src": "927:58:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "949:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "949:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "979:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "979:4:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "957:21:4",
																			"nodeType": "YulIdentifier",
																			"src": "957:21:4"
																		},
																		"nativeSrc": "957:27:4",
																		"nodeType": "YulFunctionCall",
																		"src": "957:27:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "945:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "945:3:4"
																},
																"nativeSrc": "945:40:4",
																"nodeType": "YulFunctionCall",
																"src": "945:40:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "931:10:4",
																	"nodeType": "YulTypedName",
																	"src": "931:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1096:22:4",
																"nodeType": "YulBlock",
																"src": "1096:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1098:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "1098:16:4"
																			},
																			"nativeSrc": "1098:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1098:18:4"
																		},
																		"nativeSrc": "1098:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1098:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1039:10:4",
																				"nodeType": "YulIdentifier",
																				"src": "1039:10:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1051:18:4",
																				"nodeType": "YulLiteral",
																				"src": "1051:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "1036:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "1036:2:4"
																		},
																		"nativeSrc": "1036:34:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1036:34:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "1075:10:4",
																				"nodeType": "YulIdentifier",
																				"src": "1075:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "1087:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1087:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1072:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "1072:2:4"
																		},
																		"nativeSrc": "1072:22:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1072:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1033:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "1033:2:4"
																},
																"nativeSrc": "1033:62:4",
																"nodeType": "YulFunctionCall",
																"src": "1033:62:4"
															},
															"nativeSrc": "1030:88:4",
															"nodeType": "YulIf",
															"src": "1030:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1134:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1134:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "1138:10:4",
																		"nodeType": "YulIdentifier",
																		"src": "1138:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1127:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1127:6:4"
																},
																"nativeSrc": "1127:22:4",
																"nodeType": "YulFunctionCall",
																"src": "1127:22:4"
															},
															"nativeSrc": "1127:22:4",
															"nodeType": "YulExpressionStatement",
															"src": "1127:22:4"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "874:281:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "903:6:4",
														"nodeType": "YulTypedName",
														"src": "903:6:4",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "911:4:4",
														"nodeType": "YulTypedName",
														"src": "911:4:4",
														"type": ""
													}
												],
												"src": "874:281:4"
											},
											{
												"body": {
													"nativeSrc": "1202:88:4",
													"nodeType": "YulBlock",
													"src": "1202:88:4",
													"statements": [
														{
															"nativeSrc": "1212:30:4",
															"nodeType": "YulAssignment",
															"src": "1212:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "1222:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "1222:18:4"
																},
																"nativeSrc": "1222:20:4",
																"nodeType": "YulFunctionCall",
																"src": "1222:20:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1212:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1212:6:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "1271:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1271:6:4"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "1279:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "1279:4:4"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "1251:19:4",
																	"nodeType": "YulIdentifier",
																	"src": "1251:19:4"
																},
																"nativeSrc": "1251:33:4",
																"nodeType": "YulFunctionCall",
																"src": "1251:33:4"
															},
															"nativeSrc": "1251:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "1251:33:4"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "1161:129:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "1186:4:4",
														"nodeType": "YulTypedName",
														"src": "1186:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1195:6:4",
														"nodeType": "YulTypedName",
														"src": "1195:6:4",
														"type": ""
													}
												],
												"src": "1161:129:4"
											},
											{
												"body": {
													"nativeSrc": "1363:241:4",
													"nodeType": "YulBlock",
													"src": "1363:241:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1468:22:4",
																"nodeType": "YulBlock",
																"src": "1468:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1470:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "1470:16:4"
																			},
																			"nativeSrc": "1470:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1470:18:4"
																		},
																		"nativeSrc": "1470:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1470:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1440:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1440:6:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1448:18:4",
																		"nodeType": "YulLiteral",
																		"src": "1448:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1437:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "1437:2:4"
																},
																"nativeSrc": "1437:30:4",
																"nodeType": "YulFunctionCall",
																"src": "1437:30:4"
															},
															"nativeSrc": "1434:56:4",
															"nodeType": "YulIf",
															"src": "1434:56:4"
														},
														{
															"nativeSrc": "1500:37:4",
															"nodeType": "YulAssignment",
															"src": "1500:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1530:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1530:6:4"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "1508:21:4",
																	"nodeType": "YulIdentifier",
																	"src": "1508:21:4"
																},
																"nativeSrc": "1508:29:4",
																"nodeType": "YulFunctionCall",
																"src": "1508:29:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1500:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1500:4:4"
																}
															]
														},
														{
															"nativeSrc": "1574:23:4",
															"nodeType": "YulAssignment",
															"src": "1574:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "1586:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "1586:4:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1592:4:4",
																		"nodeType": "YulLiteral",
																		"src": "1592:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1582:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1582:3:4"
																},
																"nativeSrc": "1582:15:4",
																"nodeType": "YulFunctionCall",
																"src": "1582:15:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "1574:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1574:4:4"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_string_memory_ptr",
												"nativeSrc": "1296:308:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "1347:6:4",
														"nodeType": "YulTypedName",
														"src": "1347:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "1358:4:4",
														"nodeType": "YulTypedName",
														"src": "1358:4:4",
														"type": ""
													}
												],
												"src": "1296:308:4"
											},
											{
												"body": {
													"nativeSrc": "1672:77:4",
													"nodeType": "YulBlock",
													"src": "1672:77:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1689:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1689:3:4"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1694:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1694:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1699:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1699:6:4"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1683:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1683:5:4"
																},
																"nativeSrc": "1683:23:4",
																"nodeType": "YulFunctionCall",
																"src": "1683:23:4"
															},
															"nativeSrc": "1683:23:4",
															"nodeType": "YulExpressionStatement",
															"src": "1683:23:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1726:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "1726:3:4"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1731:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1731:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1722:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1722:3:4"
																		},
																		"nativeSrc": "1722:16:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:16:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1740:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1740:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1715:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1715:6:4"
																},
																"nativeSrc": "1715:27:4",
																"nodeType": "YulFunctionCall",
																"src": "1715:27:4"
															},
															"nativeSrc": "1715:27:4",
															"nodeType": "YulExpressionStatement",
															"src": "1715:27:4"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1610:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1654:3:4",
														"nodeType": "YulTypedName",
														"src": "1654:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1659:3:4",
														"nodeType": "YulTypedName",
														"src": "1659:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1664:6:4",
														"nodeType": "YulTypedName",
														"src": "1664:6:4",
														"type": ""
													}
												],
												"src": "1610:139:4"
											},
											{
												"body": {
													"nativeSrc": "1850:339:4",
													"nodeType": "YulBlock",
													"src": "1850:339:4",
													"statements": [
														{
															"nativeSrc": "1860:75:4",
															"nodeType": "YulAssignment",
															"src": "1860:75:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1927:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1927:6:4"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_string_memory_ptr",
																			"nativeSrc": "1885:41:4",
																			"nodeType": "YulIdentifier",
																			"src": "1885:41:4"
																		},
																		"nativeSrc": "1885:49:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1885:49:4"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1869:15:4",
																	"nodeType": "YulIdentifier",
																	"src": "1869:15:4"
																},
																"nativeSrc": "1869:66:4",
																"nodeType": "YulFunctionCall",
																"src": "1869:66:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1860:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1860:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1951:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1951:5:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1958:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1958:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1944:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1944:6:4"
																},
																"nativeSrc": "1944:21:4",
																"nodeType": "YulFunctionCall",
																"src": "1944:21:4"
															},
															"nativeSrc": "1944:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "1944:21:4"
														},
														{
															"nativeSrc": "1974:27:4",
															"nodeType": "YulVariableDeclaration",
															"src": "1974:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1989:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1989:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1996:4:4",
																		"nodeType": "YulLiteral",
																		"src": "1996:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1985:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1985:3:4"
																},
																"nativeSrc": "1985:16:4",
																"nodeType": "YulFunctionCall",
																"src": "1985:16:4"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "1978:3:4",
																	"nodeType": "YulTypedName",
																	"src": "1978:3:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2039:83:4",
																"nodeType": "YulBlock",
																"src": "2039:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "2041:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "2041:77:4"
																			},
																			"nativeSrc": "2041:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2041:79:4"
																		},
																		"nativeSrc": "2041:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2041:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "2020:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "2020:3:4"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "2025:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2025:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2016:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2016:3:4"
																		},
																		"nativeSrc": "2016:16:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2016:16:4"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2034:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2034:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2013:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "2013:2:4"
																},
																"nativeSrc": "2013:25:4",
																"nodeType": "YulFunctionCall",
																"src": "2013:25:4"
															},
															"nativeSrc": "2010:112:4",
															"nodeType": "YulIf",
															"src": "2010:112:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2166:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2166:3:4"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "2171:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2171:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2176:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2176:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2131:34:4",
																	"nodeType": "YulIdentifier",
																	"src": "2131:34:4"
																},
																"nativeSrc": "2131:52:4",
																"nodeType": "YulFunctionCall",
																"src": "2131:52:4"
															},
															"nativeSrc": "2131:52:4",
															"nodeType": "YulExpressionStatement",
															"src": "2131:52:4"
														}
													]
												},
												"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
												"nativeSrc": "1755:434:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1823:3:4",
														"nodeType": "YulTypedName",
														"src": "1823:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1828:6:4",
														"nodeType": "YulTypedName",
														"src": "1828:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1836:3:4",
														"nodeType": "YulTypedName",
														"src": "1836:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1844:5:4",
														"nodeType": "YulTypedName",
														"src": "1844:5:4",
														"type": ""
													}
												],
												"src": "1755:434:4"
											},
											{
												"body": {
													"nativeSrc": "2282:282:4",
													"nodeType": "YulBlock",
													"src": "2282:282:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2331:83:4",
																"nodeType": "YulBlock",
																"src": "2331:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "2333:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "2333:77:4"
																			},
																			"nativeSrc": "2333:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2333:79:4"
																		},
																		"nativeSrc": "2333:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2333:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2310:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "2310:6:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2318:4:4",
																						"nodeType": "YulLiteral",
																						"src": "2318:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2306:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2306:3:4"
																				},
																				"nativeSrc": "2306:17:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2306:17:4"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2325:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "2325:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2302:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2302:3:4"
																		},
																		"nativeSrc": "2302:27:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2302:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2295:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2295:6:4"
																},
																"nativeSrc": "2295:35:4",
																"nodeType": "YulFunctionCall",
																"src": "2295:35:4"
															},
															"nativeSrc": "2292:122:4",
															"nodeType": "YulIf",
															"src": "2292:122:4"
														},
														{
															"nativeSrc": "2423:27:4",
															"nodeType": "YulVariableDeclaration",
															"src": "2423:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2443:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2443:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2437:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "2437:5:4"
																},
																"nativeSrc": "2437:13:4",
																"nodeType": "YulFunctionCall",
																"src": "2437:13:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2427:6:4",
																	"nodeType": "YulTypedName",
																	"src": "2427:6:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2459:99:4",
															"nodeType": "YulAssignment",
															"src": "2459:99:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2531:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2539:4:4",
																				"nodeType": "YulLiteral",
																				"src": "2539:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2527:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:4"
																		},
																		"nativeSrc": "2527:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2527:17:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2546:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2546:6:4"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2554:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2554:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
																	"nativeSrc": "2468:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "2468:58:4"
																},
																"nativeSrc": "2468:90:4",
																"nodeType": "YulFunctionCall",
																"src": "2468:90:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2459:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "2459:5:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_string_memory_ptr_fromMemory",
												"nativeSrc": "2209:355:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2260:6:4",
														"nodeType": "YulTypedName",
														"src": "2260:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2268:3:4",
														"nodeType": "YulTypedName",
														"src": "2268:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2276:5:4",
														"nodeType": "YulTypedName",
														"src": "2276:5:4",
														"type": ""
													}
												],
												"src": "2209:355:4"
											},
											{
												"body": {
													"nativeSrc": "2684:739:4",
													"nodeType": "YulBlock",
													"src": "2684:739:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2730:83:4",
																"nodeType": "YulBlock",
																"src": "2730:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2732:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "2732:77:4"
																			},
																			"nativeSrc": "2732:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2732:79:4"
																		},
																		"nativeSrc": "2732:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2732:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2705:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2705:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2714:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2714:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2701:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2701:3:4"
																		},
																		"nativeSrc": "2701:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2701:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2726:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2726:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2697:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2697:3:4"
																},
																"nativeSrc": "2697:32:4",
																"nodeType": "YulFunctionCall",
																"src": "2697:32:4"
															},
															"nativeSrc": "2694:119:4",
															"nodeType": "YulIf",
															"src": "2694:119:4"
														},
														{
															"nativeSrc": "2823:291:4",
															"nodeType": "YulBlock",
															"src": "2823:291:4",
															"statements": [
																{
																	"nativeSrc": "2838:38:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2838:38:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2862:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "2862:9:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2873:1:4",
																						"nodeType": "YulLiteral",
																						"src": "2873:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2858:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2858:3:4"
																				},
																				"nativeSrc": "2858:17:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2858:17:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2852:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "2852:5:4"
																		},
																		"nativeSrc": "2852:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2852:24:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2842:6:4",
																			"nodeType": "YulTypedName",
																			"src": "2842:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "2923:83:4",
																		"nodeType": "YulBlock",
																		"src": "2923:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "2925:77:4",
																						"nodeType": "YulIdentifier",
																						"src": "2925:77:4"
																					},
																					"nativeSrc": "2925:79:4",
																					"nodeType": "YulFunctionCall",
																					"src": "2925:79:4"
																				},
																				"nativeSrc": "2925:79:4",
																				"nodeType": "YulExpressionStatement",
																				"src": "2925:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2895:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2895:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2903:18:4",
																				"nodeType": "YulLiteral",
																				"src": "2903:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2892:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "2892:2:4"
																		},
																		"nativeSrc": "2892:30:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2892:30:4"
																	},
																	"nativeSrc": "2889:117:4",
																	"nodeType": "YulIf",
																	"src": "2889:117:4"
																},
																{
																	"nativeSrc": "3020:84:4",
																	"nodeType": "YulAssignment",
																	"src": "3020:84:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3076:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "3076:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3087:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "3087:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3072:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3072:3:4"
																				},
																				"nativeSrc": "3072:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3072:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3096:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3096:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3030:41:4",
																			"nodeType": "YulIdentifier",
																			"src": "3030:41:4"
																		},
																		"nativeSrc": "3030:74:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3030:74:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3020:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "3020:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "3124:292:4",
															"nodeType": "YulBlock",
															"src": "3124:292:4",
															"statements": [
																{
																	"nativeSrc": "3139:39:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3139:39:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3163:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "3163:9:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3174:2:4",
																						"nodeType": "YulLiteral",
																						"src": "3174:2:4",
																						"type": "",
																						"value": "32"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3159:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3159:3:4"
																				},
																				"nativeSrc": "3159:18:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3159:18:4"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3153:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "3153:5:4"
																		},
																		"nativeSrc": "3153:25:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3153:25:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3143:6:4",
																			"nodeType": "YulTypedName",
																			"src": "3143:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "3225:83:4",
																		"nodeType": "YulBlock",
																		"src": "3225:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "3227:77:4",
																						"nodeType": "YulIdentifier",
																						"src": "3227:77:4"
																					},
																					"nativeSrc": "3227:79:4",
																					"nodeType": "YulFunctionCall",
																					"src": "3227:79:4"
																				},
																				"nativeSrc": "3227:79:4",
																				"nodeType": "YulExpressionStatement",
																				"src": "3227:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "3197:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3197:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3205:18:4",
																				"nodeType": "YulLiteral",
																				"src": "3205:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "3194:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "3194:2:4"
																		},
																		"nativeSrc": "3194:30:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3194:30:4"
																	},
																	"nativeSrc": "3191:117:4",
																	"nodeType": "YulIf",
																	"src": "3191:117:4"
																},
																{
																	"nativeSrc": "3322:84:4",
																	"nodeType": "YulAssignment",
																	"src": "3322:84:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3378:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "3378:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3389:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "3389:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3374:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3374:3:4"
																				},
																				"nativeSrc": "3374:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3374:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3398:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3398:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_string_memory_ptr_fromMemory",
																			"nativeSrc": "3332:41:4",
																			"nodeType": "YulIdentifier",
																			"src": "3332:41:4"
																		},
																		"nativeSrc": "3332:74:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3332:74:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "3322:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "3322:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "2570:853:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2646:9:4",
														"nodeType": "YulTypedName",
														"src": "2646:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2657:7:4",
														"nodeType": "YulTypedName",
														"src": "2657:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2669:6:4",
														"nodeType": "YulTypedName",
														"src": "2669:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2677:6:4",
														"nodeType": "YulTypedName",
														"src": "2677:6:4",
														"type": ""
													}
												],
												"src": "2570:853:4"
											},
											{
												"body": {
													"nativeSrc": "3488:40:4",
													"nodeType": "YulBlock",
													"src": "3488:40:4",
													"statements": [
														{
															"nativeSrc": "3499:22:4",
															"nodeType": "YulAssignment",
															"src": "3499:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3515:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "3515:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "3509:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "3509:5:4"
																},
																"nativeSrc": "3509:12:4",
																"nodeType": "YulFunctionCall",
																"src": "3509:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3499:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3499:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "3429:99:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3471:5:4",
														"nodeType": "YulTypedName",
														"src": "3471:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3481:6:4",
														"nodeType": "YulTypedName",
														"src": "3481:6:4",
														"type": ""
													}
												],
												"src": "3429:99:4"
											},
											{
												"body": {
													"nativeSrc": "3562:152:4",
													"nodeType": "YulBlock",
													"src": "3562:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3579:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3579:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3582:77:4",
																		"nodeType": "YulLiteral",
																		"src": "3582:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3572:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3572:6:4"
																},
																"nativeSrc": "3572:88:4",
																"nodeType": "YulFunctionCall",
																"src": "3572:88:4"
															},
															"nativeSrc": "3572:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "3572:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3676:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3676:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3679:4:4",
																		"nodeType": "YulLiteral",
																		"src": "3679:4:4",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3669:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3669:6:4"
																},
																"nativeSrc": "3669:15:4",
																"nodeType": "YulFunctionCall",
																"src": "3669:15:4"
															},
															"nativeSrc": "3669:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "3669:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3700:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3700:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3703:4:4",
																		"nodeType": "YulLiteral",
																		"src": "3703:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3693:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3693:6:4"
																},
																"nativeSrc": "3693:15:4",
																"nodeType": "YulFunctionCall",
																"src": "3693:15:4"
															},
															"nativeSrc": "3693:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "3693:15:4"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "3534:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "3534:180:4"
											},
											{
												"body": {
													"nativeSrc": "3771:269:4",
													"nodeType": "YulBlock",
													"src": "3771:269:4",
													"statements": [
														{
															"nativeSrc": "3781:22:4",
															"nodeType": "YulAssignment",
															"src": "3781:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3795:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "3795:4:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3801:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3801:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3791:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3791:3:4"
																},
																"nativeSrc": "3791:12:4",
																"nodeType": "YulFunctionCall",
																"src": "3791:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "3781:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3781:6:4"
																}
															]
														},
														{
															"nativeSrc": "3812:38:4",
															"nodeType": "YulVariableDeclaration",
															"src": "3812:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3842:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "3842:4:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3848:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3848:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3838:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3838:3:4"
																},
																"nativeSrc": "3838:12:4",
																"nodeType": "YulFunctionCall",
																"src": "3838:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "3816:18:4",
																	"nodeType": "YulTypedName",
																	"src": "3816:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3889:51:4",
																"nodeType": "YulBlock",
																"src": "3889:51:4",
																"statements": [
																	{
																		"nativeSrc": "3903:27:4",
																		"nodeType": "YulAssignment",
																		"src": "3903:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "3917:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "3917:6:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3925:4:4",
																					"nodeType": "YulLiteral",
																					"src": "3925:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "3913:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "3913:3:4"
																			},
																			"nativeSrc": "3913:17:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3913:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "3903:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3903:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3869:18:4",
																		"nodeType": "YulIdentifier",
																		"src": "3869:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3862:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3862:6:4"
																},
																"nativeSrc": "3862:26:4",
																"nodeType": "YulFunctionCall",
																"src": "3862:26:4"
															},
															"nativeSrc": "3859:81:4",
															"nodeType": "YulIf",
															"src": "3859:81:4"
														},
														{
															"body": {
																"nativeSrc": "3992:42:4",
																"nodeType": "YulBlock",
																"src": "3992:42:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "4006:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "4006:16:4"
																			},
																			"nativeSrc": "4006:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4006:18:4"
																		},
																		"nativeSrc": "4006:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4006:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "3956:18:4",
																		"nodeType": "YulIdentifier",
																		"src": "3956:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "3979:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3979:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3987:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3987:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "3976:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "3976:2:4"
																		},
																		"nativeSrc": "3976:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3976:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3953:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "3953:2:4"
																},
																"nativeSrc": "3953:38:4",
																"nodeType": "YulFunctionCall",
																"src": "3953:38:4"
															},
															"nativeSrc": "3950:84:4",
															"nodeType": "YulIf",
															"src": "3950:84:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "3720:320:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3755:4:4",
														"nodeType": "YulTypedName",
														"src": "3755:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "3764:6:4",
														"nodeType": "YulTypedName",
														"src": "3764:6:4",
														"type": ""
													}
												],
												"src": "3720:320:4"
											},
											{
												"body": {
													"nativeSrc": "4100:87:4",
													"nodeType": "YulBlock",
													"src": "4100:87:4",
													"statements": [
														{
															"nativeSrc": "4110:11:4",
															"nodeType": "YulAssignment",
															"src": "4110:11:4",
															"value": {
																"name": "ptr",
																"nativeSrc": "4118:3:4",
																"nodeType": "YulIdentifier",
																"src": "4118:3:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4110:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "4110:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4138:1:4",
																		"nodeType": "YulLiteral",
																		"src": "4138:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "4141:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4141:3:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4131:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4131:6:4"
																},
																"nativeSrc": "4131:14:4",
																"nodeType": "YulFunctionCall",
																"src": "4131:14:4"
															},
															"nativeSrc": "4131:14:4",
															"nodeType": "YulExpressionStatement",
															"src": "4131:14:4"
														},
														{
															"nativeSrc": "4154:26:4",
															"nodeType": "YulAssignment",
															"src": "4154:26:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4172:1:4",
																		"nodeType": "YulLiteral",
																		"src": "4172:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4175:4:4",
																		"nodeType": "YulLiteral",
																		"src": "4175:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "4162:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "4162:9:4"
																},
																"nativeSrc": "4162:18:4",
																"nodeType": "YulFunctionCall",
																"src": "4162:18:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4154:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "4154:4:4"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "4046:141:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "4087:3:4",
														"nodeType": "YulTypedName",
														"src": "4087:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "4095:4:4",
														"nodeType": "YulTypedName",
														"src": "4095:4:4",
														"type": ""
													}
												],
												"src": "4046:141:4"
											},
											{
												"body": {
													"nativeSrc": "4237:49:4",
													"nodeType": "YulBlock",
													"src": "4237:49:4",
													"statements": [
														{
															"nativeSrc": "4247:33:4",
															"nodeType": "YulAssignment",
															"src": "4247:33:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4265:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "4265:5:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4272:2:4",
																				"nodeType": "YulLiteral",
																				"src": "4272:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4261:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4261:3:4"
																		},
																		"nativeSrc": "4261:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4261:14:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4277:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4277:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "4257:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4257:3:4"
																},
																"nativeSrc": "4257:23:4",
																"nodeType": "YulFunctionCall",
																"src": "4257:23:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4247:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4247:6:4"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "4193:93:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4220:5:4",
														"nodeType": "YulTypedName",
														"src": "4220:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4230:6:4",
														"nodeType": "YulTypedName",
														"src": "4230:6:4",
														"type": ""
													}
												],
												"src": "4193:93:4"
											},
											{
												"body": {
													"nativeSrc": "4345:54:4",
													"nodeType": "YulBlock",
													"src": "4345:54:4",
													"statements": [
														{
															"nativeSrc": "4355:37:4",
															"nodeType": "YulAssignment",
															"src": "4355:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4380:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "4380:4:4"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4386:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "4386:5:4"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "4376:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4376:3:4"
																},
																"nativeSrc": "4376:16:4",
																"nodeType": "YulFunctionCall",
																"src": "4376:16:4"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4355:8:4",
																	"nodeType": "YulIdentifier",
																	"src": "4355:8:4"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "4292:107:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4320:4:4",
														"nodeType": "YulTypedName",
														"src": "4320:4:4",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4326:5:4",
														"nodeType": "YulTypedName",
														"src": "4326:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4336:8:4",
														"nodeType": "YulTypedName",
														"src": "4336:8:4",
														"type": ""
													}
												],
												"src": "4292:107:4"
											},
											{
												"body": {
													"nativeSrc": "4481:317:4",
													"nodeType": "YulBlock",
													"src": "4481:317:4",
													"statements": [
														{
															"nativeSrc": "4491:35:4",
															"nodeType": "YulVariableDeclaration",
															"src": "4491:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "4512:10:4",
																		"nodeType": "YulIdentifier",
																		"src": "4512:10:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4524:1:4",
																		"nodeType": "YulLiteral",
																		"src": "4524:1:4",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "4508:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4508:3:4"
																},
																"nativeSrc": "4508:18:4",
																"nodeType": "YulFunctionCall",
																"src": "4508:18:4"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "4495:9:4",
																	"nodeType": "YulTypedName",
																	"src": "4495:9:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4535:109:4",
															"nodeType": "YulVariableDeclaration",
															"src": "4535:109:4",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4566:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "4566:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4577:66:4",
																		"nodeType": "YulLiteral",
																		"src": "4577:66:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4547:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "4547:18:4"
																},
																"nativeSrc": "4547:97:4",
																"nodeType": "YulFunctionCall",
																"src": "4547:97:4"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4539:4:4",
																	"nodeType": "YulTypedName",
																	"src": "4539:4:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4653:51:4",
															"nodeType": "YulAssignment",
															"src": "4653:51:4",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "4684:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "4684:9:4"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "4695:8:4",
																		"nodeType": "YulIdentifier",
																		"src": "4695:8:4"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "4665:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "4665:18:4"
																},
																"nativeSrc": "4665:39:4",
																"nodeType": "YulFunctionCall",
																"src": "4665:39:4"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "4653:8:4",
																	"nodeType": "YulIdentifier",
																	"src": "4653:8:4"
																}
															]
														},
														{
															"nativeSrc": "4713:30:4",
															"nodeType": "YulAssignment",
															"src": "4713:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4726:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "4726:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "4737:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "4737:4:4"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "4733:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4733:3:4"
																		},
																		"nativeSrc": "4733:9:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4733:9:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4722:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4722:3:4"
																},
																"nativeSrc": "4722:21:4",
																"nodeType": "YulFunctionCall",
																"src": "4722:21:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4713:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "4713:5:4"
																}
															]
														},
														{
															"nativeSrc": "4752:40:4",
															"nodeType": "YulAssignment",
															"src": "4752:40:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4765:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "4765:5:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "4776:8:4",
																				"nodeType": "YulIdentifier",
																				"src": "4776:8:4"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "4786:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "4786:4:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4772:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4772:3:4"
																		},
																		"nativeSrc": "4772:19:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4772:19:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4762:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "4762:2:4"
																},
																"nativeSrc": "4762:30:4",
																"nodeType": "YulFunctionCall",
																"src": "4762:30:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4752:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4752:6:4"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "4405:393:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4442:5:4",
														"nodeType": "YulTypedName",
														"src": "4442:5:4",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "4449:10:4",
														"nodeType": "YulTypedName",
														"src": "4449:10:4",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "4461:8:4",
														"nodeType": "YulTypedName",
														"src": "4461:8:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4474:6:4",
														"nodeType": "YulTypedName",
														"src": "4474:6:4",
														"type": ""
													}
												],
												"src": "4405:393:4"
											},
											{
												"body": {
													"nativeSrc": "4849:32:4",
													"nodeType": "YulBlock",
													"src": "4849:32:4",
													"statements": [
														{
															"nativeSrc": "4859:16:4",
															"nodeType": "YulAssignment",
															"src": "4859:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "4870:5:4",
																"nodeType": "YulIdentifier",
																"src": "4870:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4859:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "4859:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "4804:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4831:5:4",
														"nodeType": "YulTypedName",
														"src": "4831:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4841:7:4",
														"nodeType": "YulTypedName",
														"src": "4841:7:4",
														"type": ""
													}
												],
												"src": "4804:77:4"
											},
											{
												"body": {
													"nativeSrc": "4919:28:4",
													"nodeType": "YulBlock",
													"src": "4919:28:4",
													"statements": [
														{
															"nativeSrc": "4929:12:4",
															"nodeType": "YulAssignment",
															"src": "4929:12:4",
															"value": {
																"name": "value",
																"nativeSrc": "4936:5:4",
																"nodeType": "YulIdentifier",
																"src": "4936:5:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4929:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4929:3:4"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4887:60:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4905:5:4",
														"nodeType": "YulTypedName",
														"src": "4905:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4915:3:4",
														"nodeType": "YulTypedName",
														"src": "4915:3:4",
														"type": ""
													}
												],
												"src": "4887:60:4"
											},
											{
												"body": {
													"nativeSrc": "5013:82:4",
													"nodeType": "YulBlock",
													"src": "5013:82:4",
													"statements": [
														{
															"nativeSrc": "5023:66:4",
															"nodeType": "YulAssignment",
															"src": "5023:66:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5081:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "5081:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "5063:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "5063:17:4"
																				},
																				"nativeSrc": "5063:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5063:24:4"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5054:8:4",
																			"nodeType": "YulIdentifier",
																			"src": "5054:8:4"
																		},
																		"nativeSrc": "5054:34:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5054:34:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "5036:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "5036:17:4"
																},
																"nativeSrc": "5036:53:4",
																"nodeType": "YulFunctionCall",
																"src": "5036:53:4"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5023:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "5023:9:4"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "4953:142:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4993:5:4",
														"nodeType": "YulTypedName",
														"src": "4993:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5003:9:4",
														"nodeType": "YulTypedName",
														"src": "5003:9:4",
														"type": ""
													}
												],
												"src": "4953:142:4"
											},
											{
												"body": {
													"nativeSrc": "5148:28:4",
													"nodeType": "YulBlock",
													"src": "5148:28:4",
													"statements": [
														{
															"nativeSrc": "5158:12:4",
															"nodeType": "YulAssignment",
															"src": "5158:12:4",
															"value": {
																"name": "value",
																"nativeSrc": "5165:5:4",
																"nodeType": "YulIdentifier",
																"src": "5165:5:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5158:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5158:3:4"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "5101:75:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5134:5:4",
														"nodeType": "YulTypedName",
														"src": "5134:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5144:3:4",
														"nodeType": "YulTypedName",
														"src": "5144:3:4",
														"type": ""
													}
												],
												"src": "5101:75:4"
											},
											{
												"body": {
													"nativeSrc": "5258:193:4",
													"nodeType": "YulBlock",
													"src": "5258:193:4",
													"statements": [
														{
															"nativeSrc": "5268:63:4",
															"nodeType": "YulVariableDeclaration",
															"src": "5268:63:4",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "5323:7:4",
																		"nodeType": "YulIdentifier",
																		"src": "5323:7:4"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "5292:30:4",
																	"nodeType": "YulIdentifier",
																	"src": "5292:30:4"
																},
																"nativeSrc": "5292:39:4",
																"nodeType": "YulFunctionCall",
																"src": "5292:39:4"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "5272:16:4",
																	"nodeType": "YulTypedName",
																	"src": "5272:16:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5347:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "5347:4:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "5387:4:4",
																						"nodeType": "YulIdentifier",
																						"src": "5387:4:4"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "5381:5:4",
																					"nodeType": "YulIdentifier",
																					"src": "5381:5:4"
																				},
																				"nativeSrc": "5381:11:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5381:11:4"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5394:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "5394:6:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "5426:16:4",
																						"nodeType": "YulIdentifier",
																						"src": "5426:16:4"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "5402:23:4",
																					"nodeType": "YulIdentifier",
																					"src": "5402:23:4"
																				},
																				"nativeSrc": "5402:41:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5402:41:4"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "5353:27:4",
																			"nodeType": "YulIdentifier",
																			"src": "5353:27:4"
																		},
																		"nativeSrc": "5353:91:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5353:91:4"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "5340:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5340:6:4"
																},
																"nativeSrc": "5340:105:4",
																"nodeType": "YulFunctionCall",
																"src": "5340:105:4"
															},
															"nativeSrc": "5340:105:4",
															"nodeType": "YulExpressionStatement",
															"src": "5340:105:4"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "5182:269:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5235:4:4",
														"nodeType": "YulTypedName",
														"src": "5235:4:4",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5241:6:4",
														"nodeType": "YulTypedName",
														"src": "5241:6:4",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "5249:7:4",
														"nodeType": "YulTypedName",
														"src": "5249:7:4",
														"type": ""
													}
												],
												"src": "5182:269:4"
											},
											{
												"body": {
													"nativeSrc": "5506:24:4",
													"nodeType": "YulBlock",
													"src": "5506:24:4",
													"statements": [
														{
															"nativeSrc": "5516:8:4",
															"nodeType": "YulAssignment",
															"src": "5516:8:4",
															"value": {
																"kind": "number",
																"nativeSrc": "5523:1:4",
																"nodeType": "YulLiteral",
																"src": "5523:1:4",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "5516:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5516:3:4"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "5457:73:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "5502:3:4",
														"nodeType": "YulTypedName",
														"src": "5502:3:4",
														"type": ""
													}
												],
												"src": "5457:73:4"
											},
											{
												"body": {
													"nativeSrc": "5589:136:4",
													"nodeType": "YulBlock",
													"src": "5589:136:4",
													"statements": [
														{
															"nativeSrc": "5599:46:4",
															"nodeType": "YulVariableDeclaration",
															"src": "5599:46:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "5613:30:4",
																	"nodeType": "YulIdentifier",
																	"src": "5613:30:4"
																},
																"nativeSrc": "5613:32:4",
																"nodeType": "YulFunctionCall",
																"src": "5613:32:4"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "5603:6:4",
																	"nodeType": "YulTypedName",
																	"src": "5603:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5698:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "5698:4:4"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "5704:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "5704:6:4"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "5712:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "5712:6:4"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "5654:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "5654:43:4"
																},
																"nativeSrc": "5654:65:4",
																"nodeType": "YulFunctionCall",
																"src": "5654:65:4"
															},
															"nativeSrc": "5654:65:4",
															"nodeType": "YulExpressionStatement",
															"src": "5654:65:4"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "5536:189:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "5575:4:4",
														"nodeType": "YulTypedName",
														"src": "5575:4:4",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "5581:6:4",
														"nodeType": "YulTypedName",
														"src": "5581:6:4",
														"type": ""
													}
												],
												"src": "5536:189:4"
											},
											{
												"body": {
													"nativeSrc": "5781:136:4",
													"nodeType": "YulBlock",
													"src": "5781:136:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "5848:63:4",
																"nodeType": "YulBlock",
																"src": "5848:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5892:5:4",
																					"nodeType": "YulIdentifier",
																					"src": "5892:5:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5899:1:4",
																					"nodeType": "YulLiteral",
																					"src": "5899:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "5862:29:4",
																				"nodeType": "YulIdentifier",
																				"src": "5862:29:4"
																			},
																			"nativeSrc": "5862:39:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5862:39:4"
																		},
																		"nativeSrc": "5862:39:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5862:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "5801:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "5801:5:4"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "5808:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "5808:3:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "5798:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "5798:2:4"
																},
																"nativeSrc": "5798:14:4",
																"nodeType": "YulFunctionCall",
																"src": "5798:14:4"
															},
															"nativeSrc": "5791:120:4",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "5813:26:4",
																"nodeType": "YulBlock",
																"src": "5813:26:4",
																"statements": [
																	{
																		"nativeSrc": "5815:22:4",
																		"nodeType": "YulAssignment",
																		"src": "5815:22:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "5828:5:4",
																					"nodeType": "YulIdentifier",
																					"src": "5828:5:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5835:1:4",
																					"nodeType": "YulLiteral",
																					"src": "5835:1:4",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "5824:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "5824:3:4"
																			},
																			"nativeSrc": "5824:13:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5824:13:4"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "5815:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "5815:5:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "5795:2:4",
																"nodeType": "YulBlock",
																"src": "5795:2:4",
																"statements": []
															},
															"src": "5791:120:4"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "5731:186:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "5769:5:4",
														"nodeType": "YulTypedName",
														"src": "5769:5:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "5776:3:4",
														"nodeType": "YulTypedName",
														"src": "5776:3:4",
														"type": ""
													}
												],
												"src": "5731:186:4"
											},
											{
												"body": {
													"nativeSrc": "6002:464:4",
													"nodeType": "YulBlock",
													"src": "6002:464:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "6028:431:4",
																"nodeType": "YulBlock",
																"src": "6028:431:4",
																"statements": [
																	{
																		"nativeSrc": "6042:54:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6042:54:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "6090:5:4",
																					"nodeType": "YulIdentifier",
																					"src": "6090:5:4"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "6058:31:4",
																				"nodeType": "YulIdentifier",
																				"src": "6058:31:4"
																			},
																			"nativeSrc": "6058:38:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6058:38:4"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "6046:8:4",
																				"nodeType": "YulTypedName",
																				"src": "6046:8:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "6109:63:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6109:63:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "6132:8:4",
																					"nodeType": "YulIdentifier",
																					"src": "6132:8:4"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "6160:10:4",
																							"nodeType": "YulIdentifier",
																							"src": "6160:10:4"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "6142:17:4",
																						"nodeType": "YulIdentifier",
																						"src": "6142:17:4"
																					},
																					"nativeSrc": "6142:29:4",
																					"nodeType": "YulFunctionCall",
																					"src": "6142:29:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6128:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "6128:3:4"
																			},
																			"nativeSrc": "6128:44:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6128:44:4"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "6113:11:4",
																				"nodeType": "YulTypedName",
																				"src": "6113:11:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "6329:27:4",
																			"nodeType": "YulBlock",
																			"src": "6329:27:4",
																			"statements": [
																				{
																					"nativeSrc": "6331:23:4",
																					"nodeType": "YulAssignment",
																					"src": "6331:23:4",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "6346:8:4",
																						"nodeType": "YulIdentifier",
																						"src": "6346:8:4"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "6331:11:4",
																							"nodeType": "YulIdentifier",
																							"src": "6331:11:4"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "6313:10:4",
																					"nodeType": "YulIdentifier",
																					"src": "6313:10:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6325:2:4",
																					"nodeType": "YulLiteral",
																					"src": "6325:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "6310:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "6310:2:4"
																			},
																			"nativeSrc": "6310:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6310:18:4"
																		},
																		"nativeSrc": "6307:49:4",
																		"nodeType": "YulIf",
																		"src": "6307:49:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "6398:11:4",
																					"nodeType": "YulIdentifier",
																					"src": "6398:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "6415:8:4",
																							"nodeType": "YulIdentifier",
																							"src": "6415:8:4"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "6443:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "6443:3:4"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "6425:17:4",
																								"nodeType": "YulIdentifier",
																								"src": "6425:17:4"
																							},
																							"nativeSrc": "6425:22:4",
																							"nodeType": "YulFunctionCall",
																							"src": "6425:22:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6411:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "6411:3:4"
																					},
																					"nativeSrc": "6411:37:4",
																					"nodeType": "YulFunctionCall",
																					"src": "6411:37:4"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "6369:28:4",
																				"nodeType": "YulIdentifier",
																				"src": "6369:28:4"
																			},
																			"nativeSrc": "6369:80:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6369:80:4"
																		},
																		"nativeSrc": "6369:80:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "6369:80:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "6019:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6019:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6024:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6024:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6016:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "6016:2:4"
																},
																"nativeSrc": "6016:11:4",
																"nodeType": "YulFunctionCall",
																"src": "6016:11:4"
															},
															"nativeSrc": "6013:446:4",
															"nodeType": "YulIf",
															"src": "6013:446:4"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "5923:543:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "5978:5:4",
														"nodeType": "YulTypedName",
														"src": "5978:5:4",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "5985:3:4",
														"nodeType": "YulTypedName",
														"src": "5985:3:4",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "5990:10:4",
														"nodeType": "YulTypedName",
														"src": "5990:10:4",
														"type": ""
													}
												],
												"src": "5923:543:4"
											},
											{
												"body": {
													"nativeSrc": "6535:54:4",
													"nodeType": "YulBlock",
													"src": "6535:54:4",
													"statements": [
														{
															"nativeSrc": "6545:37:4",
															"nodeType": "YulAssignment",
															"src": "6545:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "6570:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "6570:4:4"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "6576:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "6576:5:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "6566:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6566:3:4"
																},
																"nativeSrc": "6566:16:4",
																"nodeType": "YulFunctionCall",
																"src": "6566:16:4"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "6545:8:4",
																	"nodeType": "YulIdentifier",
																	"src": "6545:8:4"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "6472:117:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "6510:4:4",
														"nodeType": "YulTypedName",
														"src": "6510:4:4",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "6516:5:4",
														"nodeType": "YulTypedName",
														"src": "6516:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "6526:8:4",
														"nodeType": "YulTypedName",
														"src": "6526:8:4",
														"type": ""
													}
												],
												"src": "6472:117:4"
											},
											{
												"body": {
													"nativeSrc": "6646:118:4",
													"nodeType": "YulBlock",
													"src": "6646:118:4",
													"statements": [
														{
															"nativeSrc": "6656:68:4",
															"nodeType": "YulVariableDeclaration",
															"src": "6656:68:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6705:1:4",
																						"nodeType": "YulLiteral",
																						"src": "6705:1:4",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "6708:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "6708:5:4"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "6701:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "6701:3:4"
																				},
																				"nativeSrc": "6701:13:4",
																				"nodeType": "YulFunctionCall",
																				"src": "6701:13:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "6720:1:4",
																						"nodeType": "YulLiteral",
																						"src": "6720:1:4",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "6716:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "6716:3:4"
																				},
																				"nativeSrc": "6716:6:4",
																				"nodeType": "YulFunctionCall",
																				"src": "6716:6:4"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "6672:28:4",
																			"nodeType": "YulIdentifier",
																			"src": "6672:28:4"
																		},
																		"nativeSrc": "6672:51:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6672:51:4"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "6668:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6668:3:4"
																},
																"nativeSrc": "6668:56:4",
																"nodeType": "YulFunctionCall",
																"src": "6668:56:4"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "6660:4:4",
																	"nodeType": "YulTypedName",
																	"src": "6660:4:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6733:25:4",
															"nodeType": "YulAssignment",
															"src": "6733:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "6747:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "6747:4:4"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "6753:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "6753:4:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6743:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6743:3:4"
																},
																"nativeSrc": "6743:15:4",
																"nodeType": "YulFunctionCall",
																"src": "6743:15:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "6733:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6733:6:4"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "6595:169:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6623:4:4",
														"nodeType": "YulTypedName",
														"src": "6623:4:4",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "6629:5:4",
														"nodeType": "YulTypedName",
														"src": "6629:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "6639:6:4",
														"nodeType": "YulTypedName",
														"src": "6639:6:4",
														"type": ""
													}
												],
												"src": "6595:169:4"
											},
											{
												"body": {
													"nativeSrc": "6850:214:4",
													"nodeType": "YulBlock",
													"src": "6850:214:4",
													"statements": [
														{
															"nativeSrc": "6983:37:4",
															"nodeType": "YulAssignment",
															"src": "6983:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7010:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "7010:4:4"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "7016:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "7016:3:4"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "6991:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "6991:18:4"
																},
																"nativeSrc": "6991:29:4",
																"nodeType": "YulFunctionCall",
																"src": "6991:29:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "6983:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "6983:4:4"
																}
															]
														},
														{
															"nativeSrc": "7029:29:4",
															"nodeType": "YulAssignment",
															"src": "7029:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7040:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "7040:4:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7050:1:4",
																				"nodeType": "YulLiteral",
																				"src": "7050:1:4",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "7053:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "7053:3:4"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "7046:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7046:3:4"
																		},
																		"nativeSrc": "7046:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7046:11:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7037:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "7037:2:4"
																},
																"nativeSrc": "7037:21:4",
																"nodeType": "YulFunctionCall",
																"src": "7037:21:4"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "7029:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "7029:4:4"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "6769:295:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "6831:4:4",
														"nodeType": "YulTypedName",
														"src": "6831:4:4",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "6837:3:4",
														"nodeType": "YulTypedName",
														"src": "6837:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "6845:4:4",
														"nodeType": "YulTypedName",
														"src": "6845:4:4",
														"type": ""
													}
												],
												"src": "6769:295:4"
											},
											{
												"body": {
													"nativeSrc": "7161:1303:4",
													"nodeType": "YulBlock",
													"src": "7161:1303:4",
													"statements": [
														{
															"nativeSrc": "7172:51:4",
															"nodeType": "YulVariableDeclaration",
															"src": "7172:51:4",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "7219:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "7219:3:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "7186:32:4",
																	"nodeType": "YulIdentifier",
																	"src": "7186:32:4"
																},
																"nativeSrc": "7186:37:4",
																"nodeType": "YulFunctionCall",
																"src": "7186:37:4"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "7176:6:4",
																	"nodeType": "YulTypedName",
																	"src": "7176:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7308:22:4",
																"nodeType": "YulBlock",
																"src": "7308:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7310:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "7310:16:4"
																			},
																			"nativeSrc": "7310:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "7310:18:4"
																		},
																		"nativeSrc": "7310:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "7310:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7280:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "7280:6:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7288:18:4",
																		"nodeType": "YulLiteral",
																		"src": "7288:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7277:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "7277:2:4"
																},
																"nativeSrc": "7277:30:4",
																"nodeType": "YulFunctionCall",
																"src": "7277:30:4"
															},
															"nativeSrc": "7274:56:4",
															"nodeType": "YulIf",
															"src": "7274:56:4"
														},
														{
															"nativeSrc": "7340:52:4",
															"nodeType": "YulVariableDeclaration",
															"src": "7340:52:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "7386:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "7386:4:4"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "7380:5:4",
																			"nodeType": "YulIdentifier",
																			"src": "7380:5:4"
																		},
																		"nativeSrc": "7380:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7380:11:4"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "7354:25:4",
																	"nodeType": "YulIdentifier",
																	"src": "7354:25:4"
																},
																"nativeSrc": "7354:38:4",
																"nodeType": "YulFunctionCall",
																"src": "7354:38:4"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "7344:6:4",
																	"nodeType": "YulTypedName",
																	"src": "7344:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "7485:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "7485:4:4"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "7491:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "7491:6:4"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "7499:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "7499:6:4"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "7439:45:4",
																	"nodeType": "YulIdentifier",
																	"src": "7439:45:4"
																},
																"nativeSrc": "7439:67:4",
																"nodeType": "YulFunctionCall",
																"src": "7439:67:4"
															},
															"nativeSrc": "7439:67:4",
															"nodeType": "YulExpressionStatement",
															"src": "7439:67:4"
														},
														{
															"nativeSrc": "7516:18:4",
															"nodeType": "YulVariableDeclaration",
															"src": "7516:18:4",
															"value": {
																"kind": "number",
																"nativeSrc": "7533:1:4",
																"nodeType": "YulLiteral",
																"src": "7533:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7520:9:4",
																	"nodeType": "YulTypedName",
																	"src": "7520:9:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "7544:17:4",
															"nodeType": "YulAssignment",
															"src": "7544:17:4",
															"value": {
																"kind": "number",
																"nativeSrc": "7557:4:4",
																"nodeType": "YulLiteral",
																"src": "7557:4:4",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "7544:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "7544:9:4"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "7608:611:4",
																		"nodeType": "YulBlock",
																		"src": "7608:611:4",
																		"statements": [
																			{
																				"nativeSrc": "7622:37:4",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7622:37:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "7641:6:4",
																							"nodeType": "YulIdentifier",
																							"src": "7641:6:4"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "7653:4:4",
																									"nodeType": "YulLiteral",
																									"src": "7653:4:4",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "7649:3:4",
																								"nodeType": "YulIdentifier",
																								"src": "7649:3:4"
																							},
																							"nativeSrc": "7649:9:4",
																							"nodeType": "YulFunctionCall",
																							"src": "7649:9:4"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "7637:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "7637:3:4"
																					},
																					"nativeSrc": "7637:22:4",
																					"nodeType": "YulFunctionCall",
																					"src": "7637:22:4"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "7626:7:4",
																						"nodeType": "YulTypedName",
																						"src": "7626:7:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7673:51:4",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7673:51:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "7719:4:4",
																							"nodeType": "YulIdentifier",
																							"src": "7719:4:4"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "7687:31:4",
																						"nodeType": "YulIdentifier",
																						"src": "7687:31:4"
																					},
																					"nativeSrc": "7687:37:4",
																					"nodeType": "YulFunctionCall",
																					"src": "7687:37:4"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "7677:6:4",
																						"nodeType": "YulTypedName",
																						"src": "7677:6:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "7737:10:4",
																				"nodeType": "YulVariableDeclaration",
																				"src": "7737:10:4",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "7746:1:4",
																					"nodeType": "YulLiteral",
																					"src": "7746:1:4",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "7741:1:4",
																						"nodeType": "YulTypedName",
																						"src": "7741:1:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "7805:163:4",
																					"nodeType": "YulBlock",
																					"src": "7805:163:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7830:6:4",
																										"nodeType": "YulIdentifier",
																										"src": "7830:6:4"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "7848:3:4",
																														"nodeType": "YulIdentifier",
																														"src": "7848:3:4"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "7853:9:4",
																														"nodeType": "YulIdentifier",
																														"src": "7853:9:4"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "7844:3:4",
																													"nodeType": "YulIdentifier",
																													"src": "7844:3:4"
																												},
																												"nativeSrc": "7844:19:4",
																												"nodeType": "YulFunctionCall",
																												"src": "7844:19:4"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "7838:5:4",
																											"nodeType": "YulIdentifier",
																											"src": "7838:5:4"
																										},
																										"nativeSrc": "7838:26:4",
																										"nodeType": "YulFunctionCall",
																										"src": "7838:26:4"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "7823:6:4",
																									"nodeType": "YulIdentifier",
																									"src": "7823:6:4"
																								},
																								"nativeSrc": "7823:42:4",
																								"nodeType": "YulFunctionCall",
																								"src": "7823:42:4"
																							},
																							"nativeSrc": "7823:42:4",
																							"nodeType": "YulExpressionStatement",
																							"src": "7823:42:4"
																						},
																						{
																							"nativeSrc": "7882:24:4",
																							"nodeType": "YulAssignment",
																							"src": "7882:24:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "7896:6:4",
																										"nodeType": "YulIdentifier",
																										"src": "7896:6:4"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7904:1:4",
																										"nodeType": "YulLiteral",
																										"src": "7904:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7892:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "7892:3:4"
																								},
																								"nativeSrc": "7892:14:4",
																								"nodeType": "YulFunctionCall",
																								"src": "7892:14:4"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "7882:6:4",
																									"nodeType": "YulIdentifier",
																									"src": "7882:6:4"
																								}
																							]
																						},
																						{
																							"nativeSrc": "7923:31:4",
																							"nodeType": "YulAssignment",
																							"src": "7923:31:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "7940:9:4",
																										"nodeType": "YulIdentifier",
																										"src": "7940:9:4"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7951:2:4",
																										"nodeType": "YulLiteral",
																										"src": "7951:2:4",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7936:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "7936:3:4"
																								},
																								"nativeSrc": "7936:18:4",
																								"nodeType": "YulFunctionCall",
																								"src": "7936:18:4"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "7923:9:4",
																									"nodeType": "YulIdentifier",
																									"src": "7923:9:4"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "7771:1:4",
																							"nodeType": "YulIdentifier",
																							"src": "7771:1:4"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7774:7:4",
																							"nodeType": "YulIdentifier",
																							"src": "7774:7:4"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7768:2:4",
																						"nodeType": "YulIdentifier",
																						"src": "7768:2:4"
																					},
																					"nativeSrc": "7768:14:4",
																					"nodeType": "YulFunctionCall",
																					"src": "7768:14:4"
																				},
																				"nativeSrc": "7760:208:4",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "7783:21:4",
																					"nodeType": "YulBlock",
																					"src": "7783:21:4",
																					"statements": [
																						{
																							"nativeSrc": "7785:17:4",
																							"nodeType": "YulAssignment",
																							"src": "7785:17:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "7794:1:4",
																										"nodeType": "YulIdentifier",
																										"src": "7794:1:4"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "7797:4:4",
																										"nodeType": "YulLiteral",
																										"src": "7797:4:4",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "7790:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "7790:3:4"
																								},
																								"nativeSrc": "7790:12:4",
																								"nodeType": "YulFunctionCall",
																								"src": "7790:12:4"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "7785:1:4",
																									"nodeType": "YulIdentifier",
																									"src": "7785:1:4"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "7764:3:4",
																					"nodeType": "YulBlock",
																					"src": "7764:3:4",
																					"statements": []
																				},
																				"src": "7760:208:4"
																			},
																			{
																				"body": {
																					"nativeSrc": "8004:156:4",
																					"nodeType": "YulBlock",
																					"src": "8004:156:4",
																					"statements": [
																						{
																							"nativeSrc": "8022:43:4",
																							"nodeType": "YulVariableDeclaration",
																							"src": "8022:43:4",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8049:3:4",
																												"nodeType": "YulIdentifier",
																												"src": "8049:3:4"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8054:9:4",
																												"nodeType": "YulIdentifier",
																												"src": "8054:9:4"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8045:3:4",
																											"nodeType": "YulIdentifier",
																											"src": "8045:3:4"
																										},
																										"nativeSrc": "8045:19:4",
																										"nodeType": "YulFunctionCall",
																										"src": "8045:19:4"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8039:5:4",
																									"nodeType": "YulIdentifier",
																									"src": "8039:5:4"
																								},
																								"nativeSrc": "8039:26:4",
																								"nodeType": "YulFunctionCall",
																								"src": "8039:26:4"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "8026:9:4",
																									"nodeType": "YulTypedName",
																									"src": "8026:9:4",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "8089:6:4",
																										"nodeType": "YulIdentifier",
																										"src": "8089:6:4"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "8116:9:4",
																												"nodeType": "YulIdentifier",
																												"src": "8116:9:4"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "8131:6:4",
																														"nodeType": "YulIdentifier",
																														"src": "8131:6:4"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "8139:4:4",
																														"nodeType": "YulLiteral",
																														"src": "8139:4:4",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "8127:3:4",
																													"nodeType": "YulIdentifier",
																													"src": "8127:3:4"
																												},
																												"nativeSrc": "8127:17:4",
																												"nodeType": "YulFunctionCall",
																												"src": "8127:17:4"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "8097:18:4",
																											"nodeType": "YulIdentifier",
																											"src": "8097:18:4"
																										},
																										"nativeSrc": "8097:48:4",
																										"nodeType": "YulFunctionCall",
																										"src": "8097:48:4"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "8082:6:4",
																									"nodeType": "YulIdentifier",
																									"src": "8082:6:4"
																								},
																								"nativeSrc": "8082:64:4",
																								"nodeType": "YulFunctionCall",
																								"src": "8082:64:4"
																							},
																							"nativeSrc": "8082:64:4",
																							"nodeType": "YulExpressionStatement",
																							"src": "8082:64:4"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "7987:7:4",
																							"nodeType": "YulIdentifier",
																							"src": "7987:7:4"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "7996:6:4",
																							"nodeType": "YulIdentifier",
																							"src": "7996:6:4"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "7984:2:4",
																						"nodeType": "YulIdentifier",
																						"src": "7984:2:4"
																					},
																					"nativeSrc": "7984:19:4",
																					"nodeType": "YulFunctionCall",
																					"src": "7984:19:4"
																				},
																				"nativeSrc": "7981:179:4",
																				"nodeType": "YulIf",
																				"src": "7981:179:4"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8180:4:4",
																							"nodeType": "YulIdentifier",
																							"src": "8180:4:4"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "8194:6:4",
																											"nodeType": "YulIdentifier",
																											"src": "8194:6:4"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "8202:1:4",
																											"nodeType": "YulLiteral",
																											"src": "8202:1:4",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "8190:3:4",
																										"nodeType": "YulIdentifier",
																										"src": "8190:3:4"
																									},
																									"nativeSrc": "8190:14:4",
																									"nodeType": "YulFunctionCall",
																									"src": "8190:14:4"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "8206:1:4",
																									"nodeType": "YulLiteral",
																									"src": "8206:1:4",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "8186:3:4",
																								"nodeType": "YulIdentifier",
																								"src": "8186:3:4"
																							},
																							"nativeSrc": "8186:22:4",
																							"nodeType": "YulFunctionCall",
																							"src": "8186:22:4"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8173:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "8173:6:4"
																					},
																					"nativeSrc": "8173:36:4",
																					"nodeType": "YulFunctionCall",
																					"src": "8173:36:4"
																				},
																				"nativeSrc": "8173:36:4",
																				"nodeType": "YulExpressionStatement",
																				"src": "8173:36:4"
																			}
																		]
																	},
																	"nativeSrc": "7601:618:4",
																	"nodeType": "YulCase",
																	"src": "7601:618:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7606:1:4",
																		"nodeType": "YulLiteral",
																		"src": "7606:1:4",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "8236:222:4",
																		"nodeType": "YulBlock",
																		"src": "8236:222:4",
																		"statements": [
																			{
																				"nativeSrc": "8250:14:4",
																				"nodeType": "YulVariableDeclaration",
																				"src": "8250:14:4",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "8263:1:4",
																					"nodeType": "YulLiteral",
																					"src": "8263:1:4",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "8254:5:4",
																						"nodeType": "YulTypedName",
																						"src": "8254:5:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "8287:67:4",
																					"nodeType": "YulBlock",
																					"src": "8287:67:4",
																					"statements": [
																						{
																							"nativeSrc": "8305:35:4",
																							"nodeType": "YulAssignment",
																							"src": "8305:35:4",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "8324:3:4",
																												"nodeType": "YulIdentifier",
																												"src": "8324:3:4"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "8329:9:4",
																												"nodeType": "YulIdentifier",
																												"src": "8329:9:4"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "8320:3:4",
																											"nodeType": "YulIdentifier",
																											"src": "8320:3:4"
																										},
																										"nativeSrc": "8320:19:4",
																										"nodeType": "YulFunctionCall",
																										"src": "8320:19:4"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "8314:5:4",
																									"nodeType": "YulIdentifier",
																									"src": "8314:5:4"
																								},
																								"nativeSrc": "8314:26:4",
																								"nodeType": "YulFunctionCall",
																								"src": "8314:26:4"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "8305:5:4",
																									"nodeType": "YulIdentifier",
																									"src": "8305:5:4"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "8280:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "8280:6:4"
																				},
																				"nativeSrc": "8277:77:4",
																				"nodeType": "YulIf",
																				"src": "8277:77:4"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "8374:4:4",
																							"nodeType": "YulIdentifier",
																							"src": "8374:4:4"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "8433:5:4",
																									"nodeType": "YulIdentifier",
																									"src": "8433:5:4"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "8440:6:4",
																									"nodeType": "YulIdentifier",
																									"src": "8440:6:4"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "8380:52:4",
																								"nodeType": "YulIdentifier",
																								"src": "8380:52:4"
																							},
																							"nativeSrc": "8380:67:4",
																							"nodeType": "YulFunctionCall",
																							"src": "8380:67:4"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "8367:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "8367:6:4"
																					},
																					"nativeSrc": "8367:81:4",
																					"nodeType": "YulFunctionCall",
																					"src": "8367:81:4"
																				},
																				"nativeSrc": "8367:81:4",
																				"nodeType": "YulExpressionStatement",
																				"src": "8367:81:4"
																			}
																		]
																	},
																	"nativeSrc": "8228:230:4",
																	"nodeType": "YulCase",
																	"src": "8228:230:4",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "7581:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "7581:6:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7589:2:4",
																		"nodeType": "YulLiteral",
																		"src": "7589:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7578:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "7578:2:4"
																},
																"nativeSrc": "7578:14:4",
																"nodeType": "YulFunctionCall",
																"src": "7578:14:4"
															},
															"nativeSrc": "7571:887:4",
															"nodeType": "YulSwitch",
															"src": "7571:887:4"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "7069:1395:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "7150:4:4",
														"nodeType": "YulTypedName",
														"src": "7150:4:4",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "7156:3:4",
														"nodeType": "YulTypedName",
														"src": "7156:3:4",
														"type": ""
													}
												],
												"src": "7069:1395:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50604051611cf0380380611cf0833981810160405281019061003191906101bf565b81600290816100409190610445565b5080600390816100509190610445565b5061005f61006b60201b60201c565b5f819055505050610514565b5f5f905090565b5f604051905090565b5f5ffd5b5f5ffd5b5f5ffd5b5f5ffd5b5f601f19601f8301169050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b6100d18261008b565b810181811067ffffffffffffffff821117156100f0576100ef61009b565b5b80604052505050565b5f610102610072565b905061010e82826100c8565b919050565b5f67ffffffffffffffff82111561012d5761012c61009b565b5b6101368261008b565b9050602081019050919050565b8281835e5f83830152505050565b5f61016361015e84610113565b6100f9565b90508281526020810184848401111561017f5761017e610087565b5b61018a848285610143565b509392505050565b5f82601f8301126101a6576101a5610083565b5b81516101b6848260208601610151565b91505092915050565b5f5f604083850312156101d5576101d461007b565b5b5f83015167ffffffffffffffff8111156101f2576101f161007f565b5b6101fe85828601610192565b925050602083015167ffffffffffffffff81111561021f5761021e61007f565b5b61022b85828601610192565b9150509250929050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061028357607f821691505b6020821081036102965761029561023f565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026102f87fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826102bd565b61030286836102bd565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f61034661034161033c8461031a565b610323565b61031a565b9050919050565b5f819050919050565b61035f8361032c565b61037361036b8261034d565b8484546102c9565b825550505050565b5f5f905090565b61038a61037b565b610395818484610356565b505050565b5b818110156103b8576103ad5f82610382565b60018101905061039b565b5050565b601f8211156103fd576103ce8161029c565b6103d7846102ae565b810160208510156103e6578190505b6103fa6103f2856102ae565b83018261039a565b50505b505050565b5f82821c905092915050565b5f61041d5f1984600802610402565b1980831691505092915050565b5f610435838361040e565b9150826002028217905092915050565b61044e82610235565b67ffffffffffffffff8111156104675761046661009b565b5b610471825461026c565b61047c8282856103bc565b5f60209050601f8311600181146104ad575f841561049b578287015190505b6104a5858261042a565b86555061050c565b601f1984166104bb8661029c565b5f5b828110156104e2578489015182556001820191506020850194506020810190506104bd565b868310156104ff57848901516104fb601f89168261040e565b8355505b6001600288020188555050505b505050505050565b6117cf806105215f395ff3fe6080604052600436106100dc575f3560e01c80636352211e1161007e578063a22cb46511610058578063a22cb465146102a2578063b88d4fde146102ca578063c87b56dd146102e6578063e985e9c514610322576100dc565b80636352211e1461020057806370a082311461023c57806395d89b4114610278576100dc565b8063095ea7b3116100ba578063095ea7b31461018257806318160ddd1461019e57806323b872dd146101c857806342842e0e146101e4576100dc565b806301ffc9a7146100e057806306fdde031461011c578063081812fc14610146575b5f5ffd5b3480156100eb575f5ffd5b50610106600480360381019061010191906110af565b61035e565b60405161011391906110f4565b60405180910390f35b348015610127575f5ffd5b506101306103ef565b60405161013d919061117d565b60405180910390f35b348015610151575f5ffd5b5061016c600480360381019061016791906111d0565b61047f565b604051610179919061123a565b60405180910390f35b61019c6004803603810190610197919061127d565b6104d8565b005b3480156101a9575f5ffd5b506101b26104e8565b6040516101bf91906112ca565b60405180910390f35b6101e260048036038101906101dd91906112e3565b6104fd565b005b6101fe60048036038101906101f991906112e3565b6107a8565b005b34801561020b575f5ffd5b50610226600480360381019061022191906111d0565b6107c7565b604051610233919061123a565b60405180910390f35b348015610247575f5ffd5b50610262600480360381019061025d9190611333565b6107d8565b60405161026f91906112ca565b60405180910390f35b348015610283575f5ffd5b5061028c61086c565b604051610299919061117d565b60405180910390f35b3480156102ad575f5ffd5b506102c860048036038101906102c39190611388565b6108fc565b005b6102e460048036038101906102df91906114f2565b610a02565b005b3480156102f1575f5ffd5b5061030c600480360381019061030791906111d0565b610a53565b604051610319919061117d565b60405180910390f35b34801561032d575f5ffd5b5061034860048036038101906103439190611572565b610acd565b60405161035591906110f4565b60405180910390f35b5f6301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103b857506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103e85750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6060600280546103fe906115dd565b80601f016020809104026020016040519081016040528092919081815260200182805461042a906115dd565b80156104755780601f1061044c57610100808354040283529160200191610475565b820191905f5260205f20905b81548152906001019060200180831161045857829003601f168201915b5050505050905090565b5f61048982610b5b565b61049e5761049d63cf4700e460e01b610bcd565b5b60065f8381526020019081526020015f205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6104e482826001610bd5565b5050565b5f6104f1610cff565b6001545f540303905090565b5f61050782610d06565b905073ffffffffffffffffffffffffffffffffffffffff8473ffffffffffffffffffffffffffffffffffffffff161693508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461057c5761057b63a114810060e01b610bcd565b5b5f5f61058784610de8565b9150915061059d8187610598610e0b565b610e12565b6105c8576105b2866105ad610e0b565b610acd565b6105c7576105c66359c896be60e01b610bcd565b5b5b6105d58686866001610e55565b80156105df575f82555b60055f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8154600190039190508190555060055f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8154600101919050819055506106a785610683888887610e5b565b7c020000000000000000000000000000000000000000000000000000000017610e82565b60045f8681526020019081526020015f20819055505f7c0200000000000000000000000000000000000000000000000000000000841603610723575f6001850190505f60045f8381526020019081526020015f205403610721575f548114610720578360045f8381526020019081526020015f20819055505b5b505b5f73ffffffffffffffffffffffffffffffffffffffff8673ffffffffffffffffffffffffffffffffffffffff161690508481887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f5fa45f81036107925761079163ea553b3460e01b610bcd565b5b61079f8787876001610eac565b50505050505050565b6107c283838360405180602001604052805f815250610a02565b505050565b5f6107d182610d06565b9050919050565b5f5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361081d5761081c638f4eb60460e01b610bcd565b5b67ffffffffffffffff60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054169050919050565b60606003805461087b906115dd565b80601f01602080910402602001604051908101604052809291908181526020018280546108a7906115dd565b80156108f25780601f106108c9576101008083540402835291602001916108f2565b820191905f5260205f20905b8154815290600101906020018083116108d557829003601f168201915b5050505050905090565b8060075f610908610e0b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166109b1610e0b565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516109f691906110f4565b60405180910390a35050565b610a0d8484846104fd565b5f8373ffffffffffffffffffffffffffffffffffffffff163b14610a4d57610a3784848484610eb2565b610a4c57610a4b63d1a57ed660e01b610bcd565b5b5b50505050565b6060610a5e82610b5b565b610a7357610a7263a14c4b5060e01b610bcd565b5b5f610a7c610fdc565b90505f815103610a9a5760405180602001604052805f815250610ac5565b80610aa484610ff2565b604051602001610ab5929190611647565b6040516020818303038152906040525b915050919050565b5f60075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f81610b65610cff565b11610bc8575f54821015610bc7575f5b5f60045f8581526020019081526020015f205491508103610ba15782610b9a90611697565b9250610b75565b5f7c01000000000000000000000000000000000000000000000000000000008216149150505b5b919050565b805f5260045ffd5b5f610bdf836107c7565b9050818015610c2157508073ffffffffffffffffffffffffffffffffffffffff16610c08610e0b565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610c4d57610c3781610c32610e0b565b610acd565b610c4c57610c4b63cfb3b94260e01b610bcd565b5b5b8360065f8581526020019081526020015f205f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a450505050565b5f5f905090565b5f81610d10610cff565b11610dd25760045f8381526020019081526020015f205490505f8103610daa575f548210610d4957610d4863df2d9b4260e01b610bcd565b5b5b60045f836001900393508381526020019081526020015f205490505f810315610da5575f7c010000000000000000000000000000000000000000000000000000000082160315610de357610da463df2d9b4260e01b610bcd565b5b610d4a565b5f7c010000000000000000000000000000000000000000000000000000000082160315610de3575b610de263df2d9b4260e01b610bcd565b5b919050565b5f5f5f60065f8581526020019081526020015f2090508092508254915050915091565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b5f5f60e883901c905060e8610e71868684611041565b62ffffff16901b9150509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b5f8373ffffffffffffffffffffffffffffffffffffffff1663150b7a02610ed7610e0b565b8786866040518563ffffffff1660e01b8152600401610ef99493929190611710565b6020604051808303815f875af1925050508015610f3457506040513d601f19601f82011682018060405250810190610f31919061176e565b60015b610f89573d805f8114610f62576040519150601f19603f3d011682016040523d82523d5f602084013e610f67565b606091505b505f815103610f8157610f8063d1a57ed660e01b610bcd565b5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052805f815250905090565b606060a060405101806040526020810391505f825281835b60011561102c57600184039350600a81066030018453600a810490508061100a575b50828103602084039350808452505050919050565b5f9392505050565b5f604051905090565b5f5ffd5b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61108e8161105a565b8114611098575f5ffd5b50565b5f813590506110a981611085565b92915050565b5f602082840312156110c4576110c3611052565b5b5f6110d18482850161109b565b91505092915050565b5f8115159050919050565b6110ee816110da565b82525050565b5f6020820190506111075f8301846110e5565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61114f8261110d565b6111598185611117565b9350611169818560208601611127565b61117281611135565b840191505092915050565b5f6020820190508181035f8301526111958184611145565b905092915050565b5f819050919050565b6111af8161119d565b81146111b9575f5ffd5b50565b5f813590506111ca816111a6565b92915050565b5f602082840312156111e5576111e4611052565b5b5f6111f2848285016111bc565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611224826111fb565b9050919050565b6112348161121a565b82525050565b5f60208201905061124d5f83018461122b565b92915050565b61125c8161121a565b8114611266575f5ffd5b50565b5f8135905061127781611253565b92915050565b5f5f6040838503121561129357611292611052565b5b5f6112a085828601611269565b92505060206112b1858286016111bc565b9150509250929050565b6112c48161119d565b82525050565b5f6020820190506112dd5f8301846112bb565b92915050565b5f5f5f606084860312156112fa576112f9611052565b5b5f61130786828701611269565b935050602061131886828701611269565b9250506040611329868287016111bc565b9150509250925092565b5f6020828403121561134857611347611052565b5b5f61135584828501611269565b91505092915050565b611367816110da565b8114611371575f5ffd5b50565b5f813590506113828161135e565b92915050565b5f5f6040838503121561139e5761139d611052565b5b5f6113ab85828601611269565b92505060206113bc85828601611374565b9150509250929050565b5f5ffd5b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61140482611135565b810181811067ffffffffffffffff82111715611423576114226113ce565b5b80604052505050565b5f611435611049565b905061144182826113fb565b919050565b5f67ffffffffffffffff8211156114605761145f6113ce565b5b61146982611135565b9050602081019050919050565b828183375f83830152505050565b5f61149661149184611446565b61142c565b9050828152602081018484840111156114b2576114b16113ca565b5b6114bd848285611476565b509392505050565b5f82601f8301126114d9576114d86113c6565b5b81356114e9848260208601611484565b91505092915050565b5f5f5f5f6080858703121561150a57611509611052565b5b5f61151787828801611269565b945050602061152887828801611269565b9350506040611539878288016111bc565b925050606085013567ffffffffffffffff81111561155a57611559611056565b5b611566878288016114c5565b91505092959194509250565b5f5f6040838503121561158857611587611052565b5b5f61159585828601611269565b92505060206115a685828601611269565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806115f457607f821691505b602082108103611607576116066115b0565b5b50919050565b5f81905092915050565b5f6116218261110d565b61162b818561160d565b935061163b818560208601611127565b80840191505092915050565b5f6116528285611617565b915061165e8284611617565b91508190509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6116a18261119d565b91505f82036116b3576116b261166a565b5b600182039050919050565b5f81519050919050565b5f82825260208201905092915050565b5f6116e2826116be565b6116ec81856116c8565b93506116fc818560208601611127565b61170581611135565b840191505092915050565b5f6080820190506117235f83018761122b565b611730602083018661122b565b61173d60408301856112bb565b818103606083015261174f81846116d8565b905095945050505050565b5f8151905061176881611085565b92915050565b5f6020828403121561178357611782611052565b5b5f6117908482850161175a565b9150509291505056fea2646970667358221220eecbe090a9cc90a95b1cf89495feab68941a528356ff97bfbe028ba23aec622964736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1CF0 CODESIZE SUB DUP1 PUSH2 0x1CF0 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x1BF JUMP JUMPDEST DUP2 PUSH1 0x2 SWAP1 DUP2 PUSH2 0x40 SWAP2 SWAP1 PUSH2 0x445 JUMP JUMPDEST POP DUP1 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x445 JUMP JUMPDEST POP PUSH2 0x5F PUSH2 0x6B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH0 DUP2 SWAP1 SSTORE POP POP POP PUSH2 0x514 JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0xD1 DUP3 PUSH2 0x8B JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0xF0 JUMPI PUSH2 0xEF PUSH2 0x9B JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x102 PUSH2 0x72 JUMP JUMPDEST SWAP1 POP PUSH2 0x10E DUP3 DUP3 PUSH2 0xC8 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x12D JUMPI PUSH2 0x12C PUSH2 0x9B JUMP JUMPDEST JUMPDEST PUSH2 0x136 DUP3 PUSH2 0x8B JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x163 PUSH2 0x15E DUP5 PUSH2 0x113 JUMP JUMPDEST PUSH2 0xF9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x17F JUMPI PUSH2 0x17E PUSH2 0x87 JUMP JUMPDEST JUMPDEST PUSH2 0x18A DUP5 DUP3 DUP6 PUSH2 0x143 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A6 JUMPI PUSH2 0x1A5 PUSH2 0x83 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH2 0x1B6 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x151 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1D5 JUMPI PUSH2 0x1D4 PUSH2 0x7B JUMP JUMPDEST JUMPDEST PUSH0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1F2 JUMPI PUSH2 0x1F1 PUSH2 0x7F JUMP JUMPDEST JUMPDEST PUSH2 0x1FE DUP6 DUP3 DUP7 ADD PUSH2 0x192 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x21F JUMPI PUSH2 0x21E PUSH2 0x7F JUMP JUMPDEST JUMPDEST PUSH2 0x22B DUP6 DUP3 DUP7 ADD PUSH2 0x192 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x283 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x296 JUMPI PUSH2 0x295 PUSH2 0x23F JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x2F8 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x2BD JUMP JUMPDEST PUSH2 0x302 DUP7 DUP4 PUSH2 0x2BD JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x346 PUSH2 0x341 PUSH2 0x33C DUP5 PUSH2 0x31A JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH2 0x31A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x35F DUP4 PUSH2 0x32C JUMP JUMPDEST PUSH2 0x373 PUSH2 0x36B DUP3 PUSH2 0x34D JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x2C9 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x38A PUSH2 0x37B JUMP JUMPDEST PUSH2 0x395 DUP2 DUP5 DUP5 PUSH2 0x356 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3B8 JUMPI PUSH2 0x3AD PUSH0 DUP3 PUSH2 0x382 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x39B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3FD JUMPI PUSH2 0x3CE DUP2 PUSH2 0x29C JUMP JUMPDEST PUSH2 0x3D7 DUP5 PUSH2 0x2AE JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3E6 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3FA PUSH2 0x3F2 DUP6 PUSH2 0x2AE JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x39A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x41D PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x402 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x435 DUP4 DUP4 PUSH2 0x40E JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x44E DUP3 PUSH2 0x235 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x467 JUMPI PUSH2 0x466 PUSH2 0x9B JUMP JUMPDEST JUMPDEST PUSH2 0x471 DUP3 SLOAD PUSH2 0x26C JUMP JUMPDEST PUSH2 0x47C DUP3 DUP3 DUP6 PUSH2 0x3BC JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x4AD JUMPI PUSH0 DUP5 ISZERO PUSH2 0x49B JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x4A5 DUP6 DUP3 PUSH2 0x42A JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x50C JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x4BB DUP7 PUSH2 0x29C JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x4E2 JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4BD JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x4FF JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x4FB PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x40E JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x17CF DUP1 PUSH2 0x521 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDC JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x7E JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x322 JUMPI PUSH2 0xDC JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x278 JUMPI PUSH2 0xDC JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xBA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1E4 JUMPI PUSH2 0xDC JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x146 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x10AF JUMP JUMPDEST PUSH2 0x35E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x10F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x127 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x130 PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13D SWAP2 SWAP1 PUSH2 0x117D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x11D0 JUMP JUMPDEST PUSH2 0x47F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x123A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x127D JUMP JUMPDEST PUSH2 0x4D8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1B2 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x12CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x12E3 JUMP JUMPDEST PUSH2 0x4FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x12E3 JUMP JUMPDEST PUSH2 0x7A8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x11D0 JUMP JUMPDEST PUSH2 0x7C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x123A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x247 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x262 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x1333 JUMP JUMPDEST PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x12CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x283 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x86C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x117D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x1388 JUMP JUMPDEST PUSH2 0x8FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0x14F2 JUMP JUMPDEST PUSH2 0xA02 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x30C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x11D0 JUMP JUMPDEST PUSH2 0xA53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x117D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x348 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH2 0xACD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x355 SWAP2 SWAP1 PUSH2 0x10F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3B8 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3E8 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x3FE SWAP1 PUSH2 0x15DD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x42A SWAP1 PUSH2 0x15DD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x475 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x44C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x475 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x458 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x489 DUP3 PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x49E JUMPI PUSH2 0x49D PUSH4 0xCF4700E4 PUSH1 0xE0 SHL PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E4 DUP3 DUP3 PUSH1 0x1 PUSH2 0xBD5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4F1 PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x507 DUP3 PUSH2 0xD06 JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND AND SWAP4 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x57C JUMPI PUSH2 0x57B PUSH4 0xA1148100 PUSH1 0xE0 SHL PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH0 PUSH0 PUSH2 0x587 DUP5 PUSH2 0xDE8 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x59D DUP2 DUP8 PUSH2 0x598 PUSH2 0xE0B JUMP JUMPDEST PUSH2 0xE12 JUMP JUMPDEST PUSH2 0x5C8 JUMPI PUSH2 0x5B2 DUP7 PUSH2 0x5AD PUSH2 0xE0B JUMP JUMPDEST PUSH2 0xACD JUMP JUMPDEST PUSH2 0x5C7 JUMPI PUSH2 0x5C6 PUSH4 0x59C896BE PUSH1 0xE0 SHL PUSH2 0xBCD JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x5D5 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xE55 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5DF JUMPI PUSH0 DUP3 SSTORE JUMPDEST PUSH1 0x5 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD PUSH1 0x1 ADD SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x6A7 DUP6 PUSH2 0x683 DUP9 DUP9 DUP8 PUSH2 0xE5B JUMP JUMPDEST PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x4 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND SUB PUSH2 0x723 JUMPI PUSH0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0x721 JUMPI PUSH0 SLOAD DUP2 EQ PUSH2 0x720 JUMPI DUP4 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND AND SWAP1 POP DUP5 DUP2 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH0 PUSH0 LOG4 PUSH0 DUP2 SUB PUSH2 0x792 JUMPI PUSH2 0x791 PUSH4 0xEA553B34 PUSH1 0xE0 SHL PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH2 0x79F DUP8 DUP8 DUP8 PUSH1 0x1 PUSH2 0xEAC JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7C2 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xA02 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7D1 DUP3 PUSH2 0xD06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81D JUMPI PUSH2 0x81C PUSH4 0x8F4EB604 PUSH1 0xE0 SHL PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x87B SWAP1 PUSH2 0x15DD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8A7 SWAP1 PUSH2 0x15DD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8F2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8C9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8F2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8D5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 PUSH2 0x908 PUSH2 0xE0B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9B1 PUSH2 0xE0B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x9F6 SWAP2 SWAP1 PUSH2 0x10F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xA0D DUP5 DUP5 DUP5 PUSH2 0x4FD JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0xA4D JUMPI PUSH2 0xA37 DUP5 DUP5 DUP5 DUP5 PUSH2 0xEB2 JUMP JUMPDEST PUSH2 0xA4C JUMPI PUSH2 0xA4B PUSH4 0xD1A57ED6 PUSH1 0xE0 SHL PUSH2 0xBCD JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA5E DUP3 PUSH2 0xB5B JUMP JUMPDEST PUSH2 0xA73 JUMPI PUSH2 0xA72 PUSH4 0xA14C4B50 PUSH1 0xE0 SHL PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA7C PUSH2 0xFDC JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0xA9A JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xAC5 JUMP JUMPDEST DUP1 PUSH2 0xAA4 DUP5 PUSH2 0xFF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAB5 SWAP3 SWAP2 SWAP1 PUSH2 0x1647 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH2 0xB65 PUSH2 0xCFF JUMP JUMPDEST GT PUSH2 0xBC8 JUMPI PUSH0 SLOAD DUP3 LT ISZERO PUSH2 0xBC7 JUMPI PUSH0 JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP DUP2 SUB PUSH2 0xBA1 JUMPI DUP3 PUSH2 0xB9A SWAP1 PUSH2 0x1697 JUMP JUMPDEST SWAP3 POP PUSH2 0xB75 JUMP JUMPDEST PUSH0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND EQ SWAP2 POP POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xBDF DUP4 PUSH2 0x7C7 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0xC21 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC08 PUSH2 0xE0B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xC4D JUMPI PUSH2 0xC37 DUP2 PUSH2 0xC32 PUSH2 0xE0B JUMP JUMPDEST PUSH2 0xACD JUMP JUMPDEST PUSH2 0xC4C JUMPI PUSH2 0xC4B PUSH4 0xCFB3B942 PUSH1 0xE0 SHL PUSH2 0xBCD JUMP JUMPDEST JUMPDEST JUMPDEST DUP4 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 PUSH2 0xD10 PUSH2 0xCFF JUMP JUMPDEST GT PUSH2 0xDD2 JUMPI PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 SUB PUSH2 0xDAA JUMPI PUSH0 SLOAD DUP3 LT PUSH2 0xD49 JUMPI PUSH2 0xD48 PUSH4 0xDF2D9B42 PUSH1 0xE0 SHL PUSH2 0xBCD JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x4 PUSH0 DUP4 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 SUB ISZERO PUSH2 0xDA5 JUMPI PUSH0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND SUB ISZERO PUSH2 0xDE3 JUMPI PUSH2 0xDA4 PUSH4 0xDF2D9B42 PUSH1 0xE0 SHL PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH2 0xD4A JUMP JUMPDEST PUSH0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND SUB ISZERO PUSH2 0xDE3 JUMPI JUMPDEST PUSH2 0xDE2 PUSH4 0xDF2D9B42 PUSH1 0xE0 SHL PUSH2 0xBCD JUMP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 SWAP3 POP DUP3 SLOAD SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 POP DUP4 DUP3 EQ DUP4 DUP4 EQ OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0xE8 DUP4 SWAP1 SHR SWAP1 POP PUSH1 0xE8 PUSH2 0xE71 DUP7 DUP7 DUP5 PUSH2 0x1041 JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 SHL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP DUP2 TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xED7 PUSH2 0xE0B JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1710 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF34 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF31 SWAP2 SWAP1 PUSH2 0x176E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xF89 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xF62 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF67 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0xF81 JUMPI PUSH2 0xF80 PUSH4 0xD1A57ED6 PUSH1 0xE0 SHL PUSH2 0xBCD JUMP JUMPDEST JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP PUSH0 DUP3 MSTORE DUP2 DUP4 JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x102C JUMPI PUSH1 0x1 DUP5 SUB SWAP4 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP5 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP DUP1 PUSH2 0x100A JUMPI JUMPDEST POP DUP3 DUP2 SUB PUSH1 0x20 DUP5 SUB SWAP4 POP DUP1 DUP5 MSTORE POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x108E DUP2 PUSH2 0x105A JUMP JUMPDEST DUP2 EQ PUSH2 0x1098 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10A9 DUP2 PUSH2 0x1085 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10C4 JUMPI PUSH2 0x10C3 PUSH2 0x1052 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10D1 DUP5 DUP3 DUP6 ADD PUSH2 0x109B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10EE DUP2 PUSH2 0x10DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1107 PUSH0 DUP4 ADD DUP5 PUSH2 0x10E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x114F DUP3 PUSH2 0x110D JUMP JUMPDEST PUSH2 0x1159 DUP2 DUP6 PUSH2 0x1117 JUMP JUMPDEST SWAP4 POP PUSH2 0x1169 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1127 JUMP JUMPDEST PUSH2 0x1172 DUP2 PUSH2 0x1135 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1195 DUP2 DUP5 PUSH2 0x1145 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11AF DUP2 PUSH2 0x119D JUMP JUMPDEST DUP2 EQ PUSH2 0x11B9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11CA DUP2 PUSH2 0x11A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11E5 JUMPI PUSH2 0x11E4 PUSH2 0x1052 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11F2 DUP5 DUP3 DUP6 ADD PUSH2 0x11BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1224 DUP3 PUSH2 0x11FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1234 DUP2 PUSH2 0x121A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x124D PUSH0 DUP4 ADD DUP5 PUSH2 0x122B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x125C DUP2 PUSH2 0x121A JUMP JUMPDEST DUP2 EQ PUSH2 0x1266 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1277 DUP2 PUSH2 0x1253 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1293 JUMPI PUSH2 0x1292 PUSH2 0x1052 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12A0 DUP6 DUP3 DUP7 ADD PUSH2 0x1269 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12B1 DUP6 DUP3 DUP7 ADD PUSH2 0x11BC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x12C4 DUP2 PUSH2 0x119D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12DD PUSH0 DUP4 ADD DUP5 PUSH2 0x12BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12FA JUMPI PUSH2 0x12F9 PUSH2 0x1052 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1307 DUP7 DUP3 DUP8 ADD PUSH2 0x1269 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1318 DUP7 DUP3 DUP8 ADD PUSH2 0x1269 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1329 DUP7 DUP3 DUP8 ADD PUSH2 0x11BC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1348 JUMPI PUSH2 0x1347 PUSH2 0x1052 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1355 DUP5 DUP3 DUP6 ADD PUSH2 0x1269 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1367 DUP2 PUSH2 0x10DA JUMP JUMPDEST DUP2 EQ PUSH2 0x1371 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1382 DUP2 PUSH2 0x135E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x139E JUMPI PUSH2 0x139D PUSH2 0x1052 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13AB DUP6 DUP3 DUP7 ADD PUSH2 0x1269 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13BC DUP6 DUP3 DUP7 ADD PUSH2 0x1374 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1404 DUP3 PUSH2 0x1135 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1423 JUMPI PUSH2 0x1422 PUSH2 0x13CE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1435 PUSH2 0x1049 JUMP JUMPDEST SWAP1 POP PUSH2 0x1441 DUP3 DUP3 PUSH2 0x13FB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1460 JUMPI PUSH2 0x145F PUSH2 0x13CE JUMP JUMPDEST JUMPDEST PUSH2 0x1469 DUP3 PUSH2 0x1135 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1496 PUSH2 0x1491 DUP5 PUSH2 0x1446 JUMP JUMPDEST PUSH2 0x142C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x14B2 JUMPI PUSH2 0x14B1 PUSH2 0x13CA JUMP JUMPDEST JUMPDEST PUSH2 0x14BD DUP5 DUP3 DUP6 PUSH2 0x1476 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x14D9 JUMPI PUSH2 0x14D8 PUSH2 0x13C6 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14E9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1484 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x150A JUMPI PUSH2 0x1509 PUSH2 0x1052 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1517 DUP8 DUP3 DUP9 ADD PUSH2 0x1269 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1528 DUP8 DUP3 DUP9 ADD PUSH2 0x1269 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1539 DUP8 DUP3 DUP9 ADD PUSH2 0x11BC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x155A JUMPI PUSH2 0x1559 PUSH2 0x1056 JUMP JUMPDEST JUMPDEST PUSH2 0x1566 DUP8 DUP3 DUP9 ADD PUSH2 0x14C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1588 JUMPI PUSH2 0x1587 PUSH2 0x1052 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1595 DUP6 DUP3 DUP7 ADD PUSH2 0x1269 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15A6 DUP6 DUP3 DUP7 ADD PUSH2 0x1269 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x15F4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1607 JUMPI PUSH2 0x1606 PUSH2 0x15B0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1621 DUP3 PUSH2 0x110D JUMP JUMPDEST PUSH2 0x162B DUP2 DUP6 PUSH2 0x160D JUMP JUMPDEST SWAP4 POP PUSH2 0x163B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1127 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1652 DUP3 DUP6 PUSH2 0x1617 JUMP JUMPDEST SWAP2 POP PUSH2 0x165E DUP3 DUP5 PUSH2 0x1617 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x16A1 DUP3 PUSH2 0x119D JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x16B3 JUMPI PUSH2 0x16B2 PUSH2 0x166A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16E2 DUP3 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x16EC DUP2 DUP6 PUSH2 0x16C8 JUMP JUMPDEST SWAP4 POP PUSH2 0x16FC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1127 JUMP JUMPDEST PUSH2 0x1705 DUP2 PUSH2 0x1135 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1723 PUSH0 DUP4 ADD DUP8 PUSH2 0x122B JUMP JUMPDEST PUSH2 0x1730 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x122B JUMP JUMPDEST PUSH2 0x173D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x12BB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x174F DUP2 DUP5 PUSH2 0x16D8 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1768 DUP2 PUSH2 0x1085 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1783 JUMPI PUSH2 0x1782 PUSH2 0x1052 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1790 DUP5 DUP3 DUP6 ADD PUSH2 0x175A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE 0xCB 0xE0 SWAP1 0xA9 0xCC SWAP1 0xA9 JUMPDEST SHR 0xF8 SWAP5 SWAP6 INVALID 0xAB PUSH9 0x941A528356FF97BFBE MUL DUP12 LOG2 GASPRICE 0xEC PUSH3 0x296473 PUSH16 0x6C634300081B00330000000000000000 ",
							"sourceMap": "2185:42638:2:-:0;;;6236:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6310:5;6302;:13;;;;;;:::i;:::-;;6335:7;6325;:17;;;;;;:::i;:::-;;6368:15;:13;;;:15;;:::i;:::-;6352:13;:31;;;;6236:154;;2185:42638;;6716:90;6772:7;6798:1;6791:8;;6716:90;:::o;7:75:4:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:139::-;1699:6;1694:3;1689;1683:23;1740:1;1731:6;1726:3;1722:16;1715:27;1610:139;;;:::o;1755:434::-;1844:5;1869:66;1885:49;1927:6;1885:49;:::i;:::-;1869:66;:::i;:::-;1860:75;;1958:6;1951:5;1944:21;1996:4;1989:5;1985:16;2034:3;2025:6;2020:3;2016:16;2013:25;2010:112;;;2041:79;;:::i;:::-;2010:112;2131:52;2176:6;2171:3;2166;2131:52;:::i;:::-;1850:339;1755:434;;;;;:::o;2209:355::-;2276:5;2325:3;2318:4;2310:6;2306:17;2302:27;2292:122;;2333:79;;:::i;:::-;2292:122;2443:6;2437:13;2468:90;2554:3;2546:6;2539:4;2531:6;2527:17;2468:90;:::i;:::-;2459:99;;2282:282;2209:355;;;;:::o;2570:853::-;2669:6;2677;2726:2;2714:9;2705:7;2701:23;2697:32;2694:119;;;2732:79;;:::i;:::-;2694:119;2873:1;2862:9;2858:17;2852:24;2903:18;2895:6;2892:30;2889:117;;;2925:79;;:::i;:::-;2889:117;3030:74;3096:7;3087:6;3076:9;3072:22;3030:74;:::i;:::-;3020:84;;2823:291;3174:2;3163:9;3159:18;3153:25;3205:18;3197:6;3194:30;3191:117;;;3227:79;;:::i;:::-;3191:117;3332:74;3398:7;3389:6;3378:9;3374:22;3332:74;:::i;:::-;3322:84;;3124:292;2570:853;;;;;:::o;3429:99::-;3481:6;3515:5;3509:12;3499:22;;3429:99;;;:::o;3534:180::-;3582:77;3579:1;3572:88;3679:4;3676:1;3669:15;3703:4;3700:1;3693:15;3720:320;3764:6;3801:1;3795:4;3791:12;3781:22;;3848:1;3842:4;3838:12;3869:18;3859:81;;3925:4;3917:6;3913:17;3903:27;;3859:81;3987:2;3979:6;3976:14;3956:18;3953:38;3950:84;;4006:18;;:::i;:::-;3950:84;3771:269;3720:320;;;:::o;4046:141::-;4095:4;4118:3;4110:11;;4141:3;4138:1;4131:14;4175:4;4172:1;4162:18;4154:26;;4046:141;;;:::o;4193:93::-;4230:6;4277:2;4272;4265:5;4261:14;4257:23;4247:33;;4193:93;;;:::o;4292:107::-;4336:8;4386:5;4380:4;4376:16;4355:37;;4292:107;;;;:::o;4405:393::-;4474:6;4524:1;4512:10;4508:18;4547:97;4577:66;4566:9;4547:97;:::i;:::-;4665:39;4695:8;4684:9;4665:39;:::i;:::-;4653:51;;4737:4;4733:9;4726:5;4722:21;4713:30;;4786:4;4776:8;4772:19;4765:5;4762:30;4752:40;;4481:317;;4405:393;;;;;:::o;4804:77::-;4841:7;4870:5;4859:16;;4804:77;;;:::o;4887:60::-;4915:3;4936:5;4929:12;;4887:60;;;:::o;4953:142::-;5003:9;5036:53;5054:34;5063:24;5081:5;5063:24;:::i;:::-;5054:34;:::i;:::-;5036:53;:::i;:::-;5023:66;;4953:142;;;:::o;5101:75::-;5144:3;5165:5;5158:12;;5101:75;;;:::o;5182:269::-;5292:39;5323:7;5292:39;:::i;:::-;5353:91;5402:41;5426:16;5402:41;:::i;:::-;5394:6;5387:4;5381:11;5353:91;:::i;:::-;5347:4;5340:105;5258:193;5182:269;;;:::o;5457:73::-;5502:3;5523:1;5516:8;;5457:73;:::o;5536:189::-;5613:32;;:::i;:::-;5654:65;5712:6;5704;5698:4;5654:65;:::i;:::-;5589:136;5536:189;;:::o;5731:186::-;5791:120;5808:3;5801:5;5798:14;5791:120;;;5862:39;5899:1;5892:5;5862:39;:::i;:::-;5835:1;5828:5;5824:13;5815:22;;5791:120;;;5731:186;;:::o;5923:543::-;6024:2;6019:3;6016:11;6013:446;;;6058:38;6090:5;6058:38;:::i;:::-;6142:29;6160:10;6142:29;:::i;:::-;6132:8;6128:44;6325:2;6313:10;6310:18;6307:49;;;6346:8;6331:23;;6307:49;6369:80;6425:22;6443:3;6425:22;:::i;:::-;6415:8;6411:37;6398:11;6369:80;:::i;:::-;6028:431;;6013:446;5923:543;;;:::o;6472:117::-;6526:8;6576:5;6570:4;6566:16;6545:37;;6472:117;;;;:::o;6595:169::-;6639:6;6672:51;6720:1;6716:6;6708:5;6705:1;6701:13;6672:51;:::i;:::-;6668:56;6753:4;6747;6743:15;6733:25;;6646:118;6595:169;;;;:::o;6769:295::-;6845:4;6991:29;7016:3;7010:4;6991:29;:::i;:::-;6983:37;;7053:3;7050:1;7046:11;7040:4;7037:21;7029:29;;6769:295;;;;:::o;7069:1395::-;7186:37;7219:3;7186:37;:::i;:::-;7288:18;7280:6;7277:30;7274:56;;;7310:18;;:::i;:::-;7274:56;7354:38;7386:4;7380:11;7354:38;:::i;:::-;7439:67;7499:6;7491;7485:4;7439:67;:::i;:::-;7533:1;7557:4;7544:17;;7589:2;7581:6;7578:14;7606:1;7601:618;;;;8263:1;8280:6;8277:77;;;8329:9;8324:3;8320:19;8314:26;8305:35;;8277:77;8380:67;8440:6;8433:5;8380:67;:::i;:::-;8374:4;8367:81;8236:222;7571:887;;7601:618;7653:4;7649:9;7641:6;7637:22;7687:37;7719:4;7687:37;:::i;:::-;7746:1;7760:208;7774:7;7771:1;7768:14;7760:208;;;7853:9;7848:3;7844:19;7838:26;7830:6;7823:42;7904:1;7896:6;7892:14;7882:24;;7951:2;7940:9;7936:18;7923:31;;7797:4;7794:1;7790:12;7785:17;;7760:208;;;7996:6;7987:7;7984:19;7981:179;;;8054:9;8049:3;8045:19;8039:26;8097:48;8139:4;8131:6;8127:17;8116:9;8097:48;:::i;:::-;8089:6;8082:64;8004:156;7981:179;8206:1;8202;8194:6;8190:14;8186:22;8180:4;8173:36;7608:611;;;7571:887;;7161:1303;;;7069:1395;;:::o;2185:42638:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_1104": {
									"entryPoint": 3756,
									"id": 1104,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_1545": {
									"entryPoint": 3029,
									"id": 1545,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_444": {
									"entryPoint": 4060,
									"id": 444,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_1091": {
									"entryPoint": 3669,
									"id": 1091,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_1160": {
									"entryPoint": 3762,
									"id": 1160,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_813": {
									"entryPoint": 2907,
									"id": 813,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_extraData_1770": {
									"entryPoint": 4161,
									"id": 1770,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_getApprovedSlotAndAddress_846": {
									"entryPoint": 3560,
									"id": 846,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_isSenderApprovedOrOwner_827": {
									"entryPoint": 3602,
									"id": 827,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_msgSenderERC721A_1813": {
									"entryPoint": 3595,
									"id": 1813,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_1803": {
									"entryPoint": 3675,
									"id": 1803,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_packOwnershipData_675": {
									"entryPoint": 3714,
									"id": 675,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_packedOwnershipOf_609": {
									"entryPoint": 3334,
									"id": 609,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_revert_1831": {
									"entryPoint": 3021,
									"id": 1831,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_startTokenId_182": {
									"entryPoint": 3327,
									"id": 182,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_toString_1823": {
									"entryPoint": 4082,
									"id": 1823,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@approve_701": {
									"entryPoint": 1240,
									"id": 701,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_257": {
									"entryPoint": 2008,
									"id": 257,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_726": {
									"entryPoint": 1151,
									"id": 726,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_770": {
									"entryPoint": 2765,
									"id": 770,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_380": {
									"entryPoint": 1007,
									"id": 380,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_464": {
									"entryPoint": 1991,
									"id": 464,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_1038": {
									"entryPoint": 1960,
									"id": 1038,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1078": {
									"entryPoint": 2562,
									"id": 1078,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_752": {
									"entryPoint": 2300,
									"id": 752,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_370": {
									"entryPoint": 862,
									"id": 370,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_390": {
									"entryPoint": 2156,
									"id": 390,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_435": {
									"entryPoint": 2643,
									"id": 435,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_207": {
									"entryPoint": 1256,
									"id": 207,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1019": {
									"entryPoint": 1277,
									"id": 1019,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 5252,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 4713,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 4980,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 4251,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4_fromMemory": {
									"entryPoint": 5978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 5317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4540,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4915,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 5490,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4835,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 5362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 5000,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4733,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 5998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4560,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4651,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 5848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5655,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4795,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 5703,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4666,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 5904,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4810,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 5164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 4169,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 5190,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 5822,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 4365,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack": {
									"entryPoint": 5832,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4375,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 5645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4314,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 4186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4603,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4509,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory_with_cleanup": {
									"entryPoint": 5238,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 4391,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 5783,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 5597,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"finalize_allocation": {
									"entryPoint": 5115,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 5738,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 5552,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 5070,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 5062,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 5066,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 4182,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4178,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 4405,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 4691,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 4958,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 4229,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4518,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:14034:4",
										"nodeType": "YulBlock",
										"src": "0:14034:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:4",
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nativeSrc": "57:19:4",
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:4",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nativeSrc": "67:9:4",
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:4",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nativeSrc": "177:28:4",
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:4",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:4",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nativeSrc": "187:12:4",
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nativeSrc": "187:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nativeSrc": "300:28:4",
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:4",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:4",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nativeSrc": "310:12:4",
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nativeSrc": "310:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nativeSrc": "378:105:4",
													"nodeType": "YulBlock",
													"src": "378:105:4",
													"statements": [
														{
															"nativeSrc": "388:89:4",
															"nodeType": "YulAssignment",
															"src": "388:89:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:4",
																		"nodeType": "YulLiteral",
																		"src": "410:66:4",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:4"
																},
																"nativeSrc": "399:78:4",
																"nodeType": "YulFunctionCall",
																"src": "399:78:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:4",
														"nodeType": "YulTypedName",
														"src": "360:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:4",
														"nodeType": "YulTypedName",
														"src": "370:7:4",
														"type": ""
													}
												],
												"src": "334:149:4"
											},
											{
												"body": {
													"nativeSrc": "531:78:4",
													"nodeType": "YulBlock",
													"src": "531:78:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:4",
																"nodeType": "YulBlock",
																"src": "587:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:4",
																					"nodeType": "YulLiteral",
																					"src": "596:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:4",
																					"nodeType": "YulLiteral",
																					"src": "599:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:4"
																			},
																			"nativeSrc": "589:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:4"
																		},
																		"nativeSrc": "589:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:4",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:4"
																				},
																				"nativeSrc": "561:23:4",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:4"
																		},
																		"nativeSrc": "551:34:4",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:4"
																},
																"nativeSrc": "544:42:4",
																"nodeType": "YulFunctionCall",
																"src": "544:42:4"
															},
															"nativeSrc": "541:62:4",
															"nodeType": "YulIf",
															"src": "541:62:4"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:4",
														"nodeType": "YulTypedName",
														"src": "524:5:4",
														"type": ""
													}
												],
												"src": "489:120:4"
											},
											{
												"body": {
													"nativeSrc": "666:86:4",
													"nodeType": "YulBlock",
													"src": "666:86:4",
													"statements": [
														{
															"nativeSrc": "676:29:4",
															"nodeType": "YulAssignment",
															"src": "676:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:4"
																},
																"nativeSrc": "685:20:4",
																"nodeType": "YulFunctionCall",
																"src": "685:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:4",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:4"
																},
																"nativeSrc": "714:32:4",
																"nodeType": "YulFunctionCall",
																"src": "714:32:4"
															},
															"nativeSrc": "714:32:4",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:4"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:4",
														"nodeType": "YulTypedName",
														"src": "644:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:4",
														"nodeType": "YulTypedName",
														"src": "652:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:4",
														"nodeType": "YulTypedName",
														"src": "660:5:4",
														"type": ""
													}
												],
												"src": "615:137:4"
											},
											{
												"body": {
													"nativeSrc": "823:262:4",
													"nodeType": "YulBlock",
													"src": "823:262:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:4",
																"nodeType": "YulBlock",
																"src": "869:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:4"
																			},
																			"nativeSrc": "871:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:4"
																		},
																		"nativeSrc": "871:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:4"
																		},
																		"nativeSrc": "840:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:4",
																		"nodeType": "YulLiteral",
																		"src": "865:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:4"
																},
																"nativeSrc": "836:32:4",
																"nodeType": "YulFunctionCall",
																"src": "836:32:4"
															},
															"nativeSrc": "833:119:4",
															"nodeType": "YulIf",
															"src": "833:119:4"
														},
														{
															"nativeSrc": "962:116:4",
															"nodeType": "YulBlock",
															"src": "962:116:4",
															"statements": [
																{
																	"nativeSrc": "977:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:4",
																		"nodeType": "YulLiteral",
																		"src": "991:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:4",
																			"nodeType": "YulTypedName",
																			"src": "981:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:4",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:4"
																				},
																				"nativeSrc": "1036:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:4",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:4"
																		},
																		"nativeSrc": "1016:52:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:4",
														"nodeType": "YulTypedName",
														"src": "793:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:4",
														"nodeType": "YulTypedName",
														"src": "804:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:4",
														"nodeType": "YulTypedName",
														"src": "816:6:4",
														"type": ""
													}
												],
												"src": "758:327:4"
											},
											{
												"body": {
													"nativeSrc": "1133:48:4",
													"nodeType": "YulBlock",
													"src": "1133:48:4",
													"statements": [
														{
															"nativeSrc": "1143:32:4",
															"nodeType": "YulAssignment",
															"src": "1143:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:4"
																		},
																		"nativeSrc": "1161:13:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:4"
																},
																"nativeSrc": "1154:21:4",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:4",
														"nodeType": "YulTypedName",
														"src": "1115:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:4",
														"nodeType": "YulTypedName",
														"src": "1125:7:4",
														"type": ""
													}
												],
												"src": "1091:90:4"
											},
											{
												"body": {
													"nativeSrc": "1246:50:4",
													"nodeType": "YulBlock",
													"src": "1246:50:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:4",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:4"
																		},
																		"nativeSrc": "1268:21:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:4"
																},
																"nativeSrc": "1256:34:4",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:4"
															},
															"nativeSrc": "1256:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:4"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:4",
														"nodeType": "YulTypedName",
														"src": "1234:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:4",
														"nodeType": "YulTypedName",
														"src": "1241:3:4",
														"type": ""
													}
												],
												"src": "1187:109:4"
											},
											{
												"body": {
													"nativeSrc": "1394:118:4",
													"nodeType": "YulBlock",
													"src": "1394:118:4",
													"statements": [
														{
															"nativeSrc": "1404:26:4",
															"nodeType": "YulAssignment",
															"src": "1404:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:4"
																},
																"nativeSrc": "1412:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:4"
																		},
																		"nativeSrc": "1487:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:4",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:4"
																},
																"nativeSrc": "1440:65:4",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:4"
															},
															"nativeSrc": "1440:65:4",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:4",
														"nodeType": "YulTypedName",
														"src": "1366:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:4",
														"nodeType": "YulTypedName",
														"src": "1378:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:4",
														"nodeType": "YulTypedName",
														"src": "1389:4:4",
														"type": ""
													}
												],
												"src": "1302:210:4"
											},
											{
												"body": {
													"nativeSrc": "1577:40:4",
													"nodeType": "YulBlock",
													"src": "1577:40:4",
													"statements": [
														{
															"nativeSrc": "1588:22:4",
															"nodeType": "YulAssignment",
															"src": "1588:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1604:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1604:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1598:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1598:5:4"
																},
																"nativeSrc": "1598:12:4",
																"nodeType": "YulFunctionCall",
																"src": "1598:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1588:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1588:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1518:99:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1560:5:4",
														"nodeType": "YulTypedName",
														"src": "1560:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1570:6:4",
														"nodeType": "YulTypedName",
														"src": "1570:6:4",
														"type": ""
													}
												],
												"src": "1518:99:4"
											},
											{
												"body": {
													"nativeSrc": "1719:73:4",
													"nodeType": "YulBlock",
													"src": "1719:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1736:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1736:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1741:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1741:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1729:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1729:6:4"
																},
																"nativeSrc": "1729:19:4",
																"nodeType": "YulFunctionCall",
																"src": "1729:19:4"
															},
															"nativeSrc": "1729:19:4",
															"nodeType": "YulExpressionStatement",
															"src": "1729:19:4"
														},
														{
															"nativeSrc": "1757:29:4",
															"nodeType": "YulAssignment",
															"src": "1757:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1776:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1776:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1781:4:4",
																		"nodeType": "YulLiteral",
																		"src": "1781:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1772:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1772:3:4"
																},
																"nativeSrc": "1772:14:4",
																"nodeType": "YulFunctionCall",
																"src": "1772:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "1757:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "1757:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "1623:169:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1691:3:4",
														"nodeType": "YulTypedName",
														"src": "1691:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1696:6:4",
														"nodeType": "YulTypedName",
														"src": "1696:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "1707:11:4",
														"nodeType": "YulTypedName",
														"src": "1707:11:4",
														"type": ""
													}
												],
												"src": "1623:169:4"
											},
											{
												"body": {
													"nativeSrc": "1860:77:4",
													"nodeType": "YulBlock",
													"src": "1860:77:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "1877:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1877:3:4"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1882:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1882:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1887:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1887:6:4"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "1871:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1871:5:4"
																},
																"nativeSrc": "1871:23:4",
																"nodeType": "YulFunctionCall",
																"src": "1871:23:4"
															},
															"nativeSrc": "1871:23:4",
															"nodeType": "YulExpressionStatement",
															"src": "1871:23:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "1914:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "1914:3:4"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1919:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1919:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1910:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1910:3:4"
																		},
																		"nativeSrc": "1910:16:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1910:16:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1928:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1928:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1903:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1903:6:4"
																},
																"nativeSrc": "1903:27:4",
																"nodeType": "YulFunctionCall",
																"src": "1903:27:4"
															},
															"nativeSrc": "1903:27:4",
															"nodeType": "YulExpressionStatement",
															"src": "1903:27:4"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "1798:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "1842:3:4",
														"nodeType": "YulTypedName",
														"src": "1842:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "1847:3:4",
														"nodeType": "YulTypedName",
														"src": "1847:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "1852:6:4",
														"nodeType": "YulTypedName",
														"src": "1852:6:4",
														"type": ""
													}
												],
												"src": "1798:139:4"
											},
											{
												"body": {
													"nativeSrc": "1991:54:4",
													"nodeType": "YulBlock",
													"src": "1991:54:4",
													"statements": [
														{
															"nativeSrc": "2001:38:4",
															"nodeType": "YulAssignment",
															"src": "2001:38:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2019:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2019:5:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2026:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2026:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2015:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2015:3:4"
																		},
																		"nativeSrc": "2015:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2015:14:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2035:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2035:2:4",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2031:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2031:3:4"
																		},
																		"nativeSrc": "2031:7:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2031:7:4"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2011:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2011:3:4"
																},
																"nativeSrc": "2011:28:4",
																"nodeType": "YulFunctionCall",
																"src": "2011:28:4"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2001:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2001:6:4"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "1943:102:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1974:5:4",
														"nodeType": "YulTypedName",
														"src": "1974:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1984:6:4",
														"nodeType": "YulTypedName",
														"src": "1984:6:4",
														"type": ""
													}
												],
												"src": "1943:102:4"
											},
											{
												"body": {
													"nativeSrc": "2143:285:4",
													"nodeType": "YulBlock",
													"src": "2143:285:4",
													"statements": [
														{
															"nativeSrc": "2153:53:4",
															"nodeType": "YulVariableDeclaration",
															"src": "2153:53:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2200:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "2200:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "2167:32:4",
																	"nodeType": "YulIdentifier",
																	"src": "2167:32:4"
																},
																"nativeSrc": "2167:39:4",
																"nodeType": "YulFunctionCall",
																"src": "2167:39:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "2157:6:4",
																	"nodeType": "YulTypedName",
																	"src": "2157:6:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2215:78:4",
															"nodeType": "YulAssignment",
															"src": "2215:78:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2281:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2281:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2286:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2286:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2222:58:4",
																	"nodeType": "YulIdentifier",
																	"src": "2222:58:4"
																},
																"nativeSrc": "2222:71:4",
																"nodeType": "YulFunctionCall",
																"src": "2222:71:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "2215:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2215:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2341:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2341:5:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2348:4:4",
																				"nodeType": "YulLiteral",
																				"src": "2348:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2337:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2337:3:4"
																		},
																		"nativeSrc": "2337:16:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2337:16:4"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "2355:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2355:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "2360:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2360:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "2302:34:4",
																	"nodeType": "YulIdentifier",
																	"src": "2302:34:4"
																},
																"nativeSrc": "2302:65:4",
																"nodeType": "YulFunctionCall",
																"src": "2302:65:4"
															},
															"nativeSrc": "2302:65:4",
															"nodeType": "YulExpressionStatement",
															"src": "2302:65:4"
														},
														{
															"nativeSrc": "2376:46:4",
															"nodeType": "YulAssignment",
															"src": "2376:46:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2387:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2387:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "2414:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2414:6:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "2392:21:4",
																			"nodeType": "YulIdentifier",
																			"src": "2392:21:4"
																		},
																		"nativeSrc": "2392:29:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2392:29:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2383:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2383:3:4"
																},
																"nativeSrc": "2383:39:4",
																"nodeType": "YulFunctionCall",
																"src": "2383:39:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "2376:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2376:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "2051:377:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2124:5:4",
														"nodeType": "YulTypedName",
														"src": "2124:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2131:3:4",
														"nodeType": "YulTypedName",
														"src": "2131:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "2139:3:4",
														"nodeType": "YulTypedName",
														"src": "2139:3:4",
														"type": ""
													}
												],
												"src": "2051:377:4"
											},
											{
												"body": {
													"nativeSrc": "2552:195:4",
													"nodeType": "YulBlock",
													"src": "2552:195:4",
													"statements": [
														{
															"nativeSrc": "2562:26:4",
															"nodeType": "YulAssignment",
															"src": "2562:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2585:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2585:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2570:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2570:3:4"
																},
																"nativeSrc": "2570:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2570:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2562:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2562:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2609:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2609:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2620:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2620:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2605:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2605:3:4"
																		},
																		"nativeSrc": "2605:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2605:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "2628:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "2628:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2634:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2634:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2624:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2624:3:4"
																		},
																		"nativeSrc": "2624:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2624:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2598:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2598:6:4"
																},
																"nativeSrc": "2598:47:4",
																"nodeType": "YulFunctionCall",
																"src": "2598:47:4"
															},
															"nativeSrc": "2598:47:4",
															"nodeType": "YulExpressionStatement",
															"src": "2598:47:4"
														},
														{
															"nativeSrc": "2654:86:4",
															"nodeType": "YulAssignment",
															"src": "2654:86:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2726:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2726:6:4"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "2735:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "2735:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "2662:63:4",
																	"nodeType": "YulIdentifier",
																	"src": "2662:63:4"
																},
																"nativeSrc": "2662:78:4",
																"nodeType": "YulFunctionCall",
																"src": "2662:78:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2654:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2654:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "2434:313:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2524:9:4",
														"nodeType": "YulTypedName",
														"src": "2524:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2536:6:4",
														"nodeType": "YulTypedName",
														"src": "2536:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2547:4:4",
														"nodeType": "YulTypedName",
														"src": "2547:4:4",
														"type": ""
													}
												],
												"src": "2434:313:4"
											},
											{
												"body": {
													"nativeSrc": "2798:32:4",
													"nodeType": "YulBlock",
													"src": "2798:32:4",
													"statements": [
														{
															"nativeSrc": "2808:16:4",
															"nodeType": "YulAssignment",
															"src": "2808:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "2819:5:4",
																"nodeType": "YulIdentifier",
																"src": "2819:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2808:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "2808:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2753:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2780:5:4",
														"nodeType": "YulTypedName",
														"src": "2780:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2790:7:4",
														"nodeType": "YulTypedName",
														"src": "2790:7:4",
														"type": ""
													}
												],
												"src": "2753:77:4"
											},
											{
												"body": {
													"nativeSrc": "2879:79:4",
													"nodeType": "YulBlock",
													"src": "2879:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2936:16:4",
																"nodeType": "YulBlock",
																"src": "2936:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2945:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2945:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2948:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2948:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2938:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2938:6:4"
																			},
																			"nativeSrc": "2938:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2938:12:4"
																		},
																		"nativeSrc": "2938:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2938:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2902:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2902:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2927:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "2927:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2909:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "2909:17:4"
																				},
																				"nativeSrc": "2909:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2909:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2899:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "2899:2:4"
																		},
																		"nativeSrc": "2899:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2899:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2892:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2892:6:4"
																},
																"nativeSrc": "2892:43:4",
																"nodeType": "YulFunctionCall",
																"src": "2892:43:4"
															},
															"nativeSrc": "2889:63:4",
															"nodeType": "YulIf",
															"src": "2889:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2836:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2872:5:4",
														"nodeType": "YulTypedName",
														"src": "2872:5:4",
														"type": ""
													}
												],
												"src": "2836:122:4"
											},
											{
												"body": {
													"nativeSrc": "3016:87:4",
													"nodeType": "YulBlock",
													"src": "3016:87:4",
													"statements": [
														{
															"nativeSrc": "3026:29:4",
															"nodeType": "YulAssignment",
															"src": "3026:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3048:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3048:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3035:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "3035:12:4"
																},
																"nativeSrc": "3035:20:4",
																"nodeType": "YulFunctionCall",
																"src": "3035:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3026:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "3026:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3091:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "3091:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "3064:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "3064:26:4"
																},
																"nativeSrc": "3064:33:4",
																"nodeType": "YulFunctionCall",
																"src": "3064:33:4"
															},
															"nativeSrc": "3064:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "3064:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2964:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2994:6:4",
														"nodeType": "YulTypedName",
														"src": "2994:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3002:3:4",
														"nodeType": "YulTypedName",
														"src": "3002:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3010:5:4",
														"nodeType": "YulTypedName",
														"src": "3010:5:4",
														"type": ""
													}
												],
												"src": "2964:139:4"
											},
											{
												"body": {
													"nativeSrc": "3175:263:4",
													"nodeType": "YulBlock",
													"src": "3175:263:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "3221:83:4",
																"nodeType": "YulBlock",
																"src": "3221:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3223:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "3223:77:4"
																			},
																			"nativeSrc": "3223:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3223:79:4"
																		},
																		"nativeSrc": "3223:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3223:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3196:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3196:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3205:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3205:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3192:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3192:3:4"
																		},
																		"nativeSrc": "3192:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3192:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3217:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3217:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3188:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3188:3:4"
																},
																"nativeSrc": "3188:32:4",
																"nodeType": "YulFunctionCall",
																"src": "3188:32:4"
															},
															"nativeSrc": "3185:119:4",
															"nodeType": "YulIf",
															"src": "3185:119:4"
														},
														{
															"nativeSrc": "3314:117:4",
															"nodeType": "YulBlock",
															"src": "3314:117:4",
															"statements": [
																{
																	"nativeSrc": "3329:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3329:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3343:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3343:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3333:6:4",
																			"nodeType": "YulTypedName",
																			"src": "3333:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3358:63:4",
																	"nodeType": "YulAssignment",
																	"src": "3358:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3393:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "3393:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3404:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "3404:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3389:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3389:3:4"
																				},
																				"nativeSrc": "3389:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3389:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3413:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3413:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3368:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "3368:20:4"
																		},
																		"nativeSrc": "3368:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3368:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3358:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "3358:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3109:329:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3145:9:4",
														"nodeType": "YulTypedName",
														"src": "3145:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3156:7:4",
														"nodeType": "YulTypedName",
														"src": "3156:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3168:6:4",
														"nodeType": "YulTypedName",
														"src": "3168:6:4",
														"type": ""
													}
												],
												"src": "3109:329:4"
											},
											{
												"body": {
													"nativeSrc": "3489:81:4",
													"nodeType": "YulBlock",
													"src": "3489:81:4",
													"statements": [
														{
															"nativeSrc": "3499:65:4",
															"nodeType": "YulAssignment",
															"src": "3499:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3514:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "3514:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3521:42:4",
																		"nodeType": "YulLiteral",
																		"src": "3521:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3510:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3510:3:4"
																},
																"nativeSrc": "3510:54:4",
																"nodeType": "YulFunctionCall",
																"src": "3510:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3499:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "3499:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3444:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3471:5:4",
														"nodeType": "YulTypedName",
														"src": "3471:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3481:7:4",
														"nodeType": "YulTypedName",
														"src": "3481:7:4",
														"type": ""
													}
												],
												"src": "3444:126:4"
											},
											{
												"body": {
													"nativeSrc": "3621:51:4",
													"nodeType": "YulBlock",
													"src": "3621:51:4",
													"statements": [
														{
															"nativeSrc": "3631:35:4",
															"nodeType": "YulAssignment",
															"src": "3631:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3660:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "3660:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3642:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "3642:17:4"
																},
																"nativeSrc": "3642:24:4",
																"nodeType": "YulFunctionCall",
																"src": "3642:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3631:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "3631:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3576:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3603:5:4",
														"nodeType": "YulTypedName",
														"src": "3603:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3613:7:4",
														"nodeType": "YulTypedName",
														"src": "3613:7:4",
														"type": ""
													}
												],
												"src": "3576:96:4"
											},
											{
												"body": {
													"nativeSrc": "3743:53:4",
													"nodeType": "YulBlock",
													"src": "3743:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3760:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "3760:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3783:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "3783:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "3765:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "3765:17:4"
																		},
																		"nativeSrc": "3765:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3765:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3753:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3753:6:4"
																},
																"nativeSrc": "3753:37:4",
																"nodeType": "YulFunctionCall",
																"src": "3753:37:4"
															},
															"nativeSrc": "3753:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "3753:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "3678:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3731:5:4",
														"nodeType": "YulTypedName",
														"src": "3731:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3738:3:4",
														"nodeType": "YulTypedName",
														"src": "3738:3:4",
														"type": ""
													}
												],
												"src": "3678:118:4"
											},
											{
												"body": {
													"nativeSrc": "3900:124:4",
													"nodeType": "YulBlock",
													"src": "3900:124:4",
													"statements": [
														{
															"nativeSrc": "3910:26:4",
															"nodeType": "YulAssignment",
															"src": "3910:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3922:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3922:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3933:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3933:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3918:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3918:3:4"
																},
																"nativeSrc": "3918:18:4",
																"nodeType": "YulFunctionCall",
																"src": "3918:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3910:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "3910:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3990:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3990:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4003:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4003:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4014:1:4",
																				"nodeType": "YulLiteral",
																				"src": "4014:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3999:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3999:3:4"
																		},
																		"nativeSrc": "3999:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3999:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "3946:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "3946:43:4"
																},
																"nativeSrc": "3946:71:4",
																"nodeType": "YulFunctionCall",
																"src": "3946:71:4"
															},
															"nativeSrc": "3946:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "3946:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "3802:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3872:9:4",
														"nodeType": "YulTypedName",
														"src": "3872:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3884:6:4",
														"nodeType": "YulTypedName",
														"src": "3884:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3895:4:4",
														"nodeType": "YulTypedName",
														"src": "3895:4:4",
														"type": ""
													}
												],
												"src": "3802:222:4"
											},
											{
												"body": {
													"nativeSrc": "4073:79:4",
													"nodeType": "YulBlock",
													"src": "4073:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "4130:16:4",
																"nodeType": "YulBlock",
																"src": "4130:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4139:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4139:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4142:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4142:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4132:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4132:6:4"
																			},
																			"nativeSrc": "4132:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4132:12:4"
																		},
																		"nativeSrc": "4132:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4132:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4096:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "4096:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4121:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "4121:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "4103:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "4103:17:4"
																				},
																				"nativeSrc": "4103:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4103:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4093:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "4093:2:4"
																		},
																		"nativeSrc": "4093:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4093:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4086:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4086:6:4"
																},
																"nativeSrc": "4086:43:4",
																"nodeType": "YulFunctionCall",
																"src": "4086:43:4"
															},
															"nativeSrc": "4083:63:4",
															"nodeType": "YulIf",
															"src": "4083:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "4030:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4066:5:4",
														"nodeType": "YulTypedName",
														"src": "4066:5:4",
														"type": ""
													}
												],
												"src": "4030:122:4"
											},
											{
												"body": {
													"nativeSrc": "4210:87:4",
													"nodeType": "YulBlock",
													"src": "4210:87:4",
													"statements": [
														{
															"nativeSrc": "4220:29:4",
															"nodeType": "YulAssignment",
															"src": "4220:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4242:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4242:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4229:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "4229:12:4"
																},
																"nativeSrc": "4229:20:4",
																"nodeType": "YulFunctionCall",
																"src": "4229:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4220:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "4220:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4285:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "4285:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "4258:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "4258:26:4"
																},
																"nativeSrc": "4258:33:4",
																"nodeType": "YulFunctionCall",
																"src": "4258:33:4"
															},
															"nativeSrc": "4258:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "4258:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "4158:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "4188:6:4",
														"nodeType": "YulTypedName",
														"src": "4188:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "4196:3:4",
														"nodeType": "YulTypedName",
														"src": "4196:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "4204:5:4",
														"nodeType": "YulTypedName",
														"src": "4204:5:4",
														"type": ""
													}
												],
												"src": "4158:139:4"
											},
											{
												"body": {
													"nativeSrc": "4386:391:4",
													"nodeType": "YulBlock",
													"src": "4386:391:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "4432:83:4",
																"nodeType": "YulBlock",
																"src": "4432:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4434:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "4434:77:4"
																			},
																			"nativeSrc": "4434:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4434:79:4"
																		},
																		"nativeSrc": "4434:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4434:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4407:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "4407:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4416:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4416:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4403:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4403:3:4"
																		},
																		"nativeSrc": "4403:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4403:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4428:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4428:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4399:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4399:3:4"
																},
																"nativeSrc": "4399:32:4",
																"nodeType": "YulFunctionCall",
																"src": "4399:32:4"
															},
															"nativeSrc": "4396:119:4",
															"nodeType": "YulIf",
															"src": "4396:119:4"
														},
														{
															"nativeSrc": "4525:117:4",
															"nodeType": "YulBlock",
															"src": "4525:117:4",
															"statements": [
																{
																	"nativeSrc": "4540:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4540:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4554:1:4",
																		"nodeType": "YulLiteral",
																		"src": "4554:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4544:6:4",
																			"nodeType": "YulTypedName",
																			"src": "4544:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4569:63:4",
																	"nodeType": "YulAssignment",
																	"src": "4569:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4604:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "4604:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4615:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "4615:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4600:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "4600:3:4"
																				},
																				"nativeSrc": "4600:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4600:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4624:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "4624:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4579:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "4579:20:4"
																		},
																		"nativeSrc": "4579:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4579:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4569:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "4569:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4652:118:4",
															"nodeType": "YulBlock",
															"src": "4652:118:4",
															"statements": [
																{
																	"nativeSrc": "4667:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4667:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4681:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4681:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4671:6:4",
																			"nodeType": "YulTypedName",
																			"src": "4671:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4697:63:4",
																	"nodeType": "YulAssignment",
																	"src": "4697:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4732:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "4732:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4743:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "4743:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4728:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "4728:3:4"
																				},
																				"nativeSrc": "4728:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4728:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4752:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "4752:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4707:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "4707:20:4"
																		},
																		"nativeSrc": "4707:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4707:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4697:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "4697:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "4303:474:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4348:9:4",
														"nodeType": "YulTypedName",
														"src": "4348:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4359:7:4",
														"nodeType": "YulTypedName",
														"src": "4359:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4371:6:4",
														"nodeType": "YulTypedName",
														"src": "4371:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4379:6:4",
														"nodeType": "YulTypedName",
														"src": "4379:6:4",
														"type": ""
													}
												],
												"src": "4303:474:4"
											},
											{
												"body": {
													"nativeSrc": "4848:53:4",
													"nodeType": "YulBlock",
													"src": "4848:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4865:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "4865:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4888:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "4888:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4870:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "4870:17:4"
																		},
																		"nativeSrc": "4870:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4870:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4858:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4858:6:4"
																},
																"nativeSrc": "4858:37:4",
																"nodeType": "YulFunctionCall",
																"src": "4858:37:4"
															},
															"nativeSrc": "4858:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "4858:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4783:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4836:5:4",
														"nodeType": "YulTypedName",
														"src": "4836:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4843:3:4",
														"nodeType": "YulTypedName",
														"src": "4843:3:4",
														"type": ""
													}
												],
												"src": "4783:118:4"
											},
											{
												"body": {
													"nativeSrc": "5005:124:4",
													"nodeType": "YulBlock",
													"src": "5005:124:4",
													"statements": [
														{
															"nativeSrc": "5015:26:4",
															"nodeType": "YulAssignment",
															"src": "5015:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5027:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "5027:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5038:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5038:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5023:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5023:3:4"
																},
																"nativeSrc": "5023:18:4",
																"nodeType": "YulFunctionCall",
																"src": "5023:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5015:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "5015:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5095:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "5095:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5108:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5108:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5119:1:4",
																				"nodeType": "YulLiteral",
																				"src": "5119:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5104:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5104:3:4"
																		},
																		"nativeSrc": "5104:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5104:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5051:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "5051:43:4"
																},
																"nativeSrc": "5051:71:4",
																"nodeType": "YulFunctionCall",
																"src": "5051:71:4"
															},
															"nativeSrc": "5051:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "5051:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4907:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4977:9:4",
														"nodeType": "YulTypedName",
														"src": "4977:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4989:6:4",
														"nodeType": "YulTypedName",
														"src": "4989:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5000:4:4",
														"nodeType": "YulTypedName",
														"src": "5000:4:4",
														"type": ""
													}
												],
												"src": "4907:222:4"
											},
											{
												"body": {
													"nativeSrc": "5235:519:4",
													"nodeType": "YulBlock",
													"src": "5235:519:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "5281:83:4",
																"nodeType": "YulBlock",
																"src": "5281:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5283:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "5283:77:4"
																			},
																			"nativeSrc": "5283:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5283:79:4"
																		},
																		"nativeSrc": "5283:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5283:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5256:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "5256:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5265:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5265:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5252:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5252:3:4"
																		},
																		"nativeSrc": "5252:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5252:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5277:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5277:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5248:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5248:3:4"
																},
																"nativeSrc": "5248:32:4",
																"nodeType": "YulFunctionCall",
																"src": "5248:32:4"
															},
															"nativeSrc": "5245:119:4",
															"nodeType": "YulIf",
															"src": "5245:119:4"
														},
														{
															"nativeSrc": "5374:117:4",
															"nodeType": "YulBlock",
															"src": "5374:117:4",
															"statements": [
																{
																	"nativeSrc": "5389:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5389:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5403:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5403:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5393:6:4",
																			"nodeType": "YulTypedName",
																			"src": "5393:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5418:63:4",
																	"nodeType": "YulAssignment",
																	"src": "5418:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5453:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "5453:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5464:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "5464:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5449:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "5449:3:4"
																				},
																				"nativeSrc": "5449:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5449:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5473:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "5473:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5428:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "5428:20:4"
																		},
																		"nativeSrc": "5428:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5428:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5418:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "5418:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5501:118:4",
															"nodeType": "YulBlock",
															"src": "5501:118:4",
															"statements": [
																{
																	"nativeSrc": "5516:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5516:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5530:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5530:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5520:6:4",
																			"nodeType": "YulTypedName",
																			"src": "5520:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5546:63:4",
																	"nodeType": "YulAssignment",
																	"src": "5546:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5581:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "5581:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5592:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "5592:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5577:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "5577:3:4"
																				},
																				"nativeSrc": "5577:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5577:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5601:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "5601:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5556:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "5556:20:4"
																		},
																		"nativeSrc": "5556:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5556:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5546:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "5546:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5629:118:4",
															"nodeType": "YulBlock",
															"src": "5629:118:4",
															"statements": [
																{
																	"nativeSrc": "5644:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5644:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5658:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5658:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5648:6:4",
																			"nodeType": "YulTypedName",
																			"src": "5648:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5674:63:4",
																	"nodeType": "YulAssignment",
																	"src": "5674:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5709:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "5709:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5720:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "5720:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5705:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "5705:3:4"
																				},
																				"nativeSrc": "5705:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "5705:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5729:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "5729:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5684:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "5684:20:4"
																		},
																		"nativeSrc": "5684:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5684:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5674:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "5674:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "5135:619:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5189:9:4",
														"nodeType": "YulTypedName",
														"src": "5189:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5200:7:4",
														"nodeType": "YulTypedName",
														"src": "5200:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5212:6:4",
														"nodeType": "YulTypedName",
														"src": "5212:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5220:6:4",
														"nodeType": "YulTypedName",
														"src": "5220:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5228:6:4",
														"nodeType": "YulTypedName",
														"src": "5228:6:4",
														"type": ""
													}
												],
												"src": "5135:619:4"
											},
											{
												"body": {
													"nativeSrc": "5826:263:4",
													"nodeType": "YulBlock",
													"src": "5826:263:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "5872:83:4",
																"nodeType": "YulBlock",
																"src": "5872:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5874:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "5874:77:4"
																			},
																			"nativeSrc": "5874:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5874:79:4"
																		},
																		"nativeSrc": "5874:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5874:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5847:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "5847:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5856:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5856:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5843:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5843:3:4"
																		},
																		"nativeSrc": "5843:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5843:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5868:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5868:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5839:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5839:3:4"
																},
																"nativeSrc": "5839:32:4",
																"nodeType": "YulFunctionCall",
																"src": "5839:32:4"
															},
															"nativeSrc": "5836:119:4",
															"nodeType": "YulIf",
															"src": "5836:119:4"
														},
														{
															"nativeSrc": "5965:117:4",
															"nodeType": "YulBlock",
															"src": "5965:117:4",
															"statements": [
																{
																	"nativeSrc": "5980:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5980:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5994:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5994:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5984:6:4",
																			"nodeType": "YulTypedName",
																			"src": "5984:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6009:63:4",
																	"nodeType": "YulAssignment",
																	"src": "6009:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6044:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "6044:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6055:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "6055:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6040:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "6040:3:4"
																				},
																				"nativeSrc": "6040:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "6040:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6064:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "6064:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6019:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "6019:20:4"
																		},
																		"nativeSrc": "6019:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6019:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6009:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "6009:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5760:329:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5796:9:4",
														"nodeType": "YulTypedName",
														"src": "5796:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5807:7:4",
														"nodeType": "YulTypedName",
														"src": "5807:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5819:6:4",
														"nodeType": "YulTypedName",
														"src": "5819:6:4",
														"type": ""
													}
												],
												"src": "5760:329:4"
											},
											{
												"body": {
													"nativeSrc": "6135:76:4",
													"nodeType": "YulBlock",
													"src": "6135:76:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "6189:16:4",
																"nodeType": "YulBlock",
																"src": "6189:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6198:1:4",
																					"nodeType": "YulLiteral",
																					"src": "6198:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6201:1:4",
																					"nodeType": "YulLiteral",
																					"src": "6201:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6191:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6191:6:4"
																			},
																			"nativeSrc": "6191:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6191:12:4"
																		},
																		"nativeSrc": "6191:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "6191:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6158:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "6158:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "6180:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "6180:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "6165:14:4",
																					"nodeType": "YulIdentifier",
																					"src": "6165:14:4"
																				},
																				"nativeSrc": "6165:21:4",
																				"nodeType": "YulFunctionCall",
																				"src": "6165:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "6155:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "6155:2:4"
																		},
																		"nativeSrc": "6155:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6155:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6148:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6148:6:4"
																},
																"nativeSrc": "6148:40:4",
																"nodeType": "YulFunctionCall",
																"src": "6148:40:4"
															},
															"nativeSrc": "6145:60:4",
															"nodeType": "YulIf",
															"src": "6145:60:4"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "6095:116:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6128:5:4",
														"nodeType": "YulTypedName",
														"src": "6128:5:4",
														"type": ""
													}
												],
												"src": "6095:116:4"
											},
											{
												"body": {
													"nativeSrc": "6266:84:4",
													"nodeType": "YulBlock",
													"src": "6266:84:4",
													"statements": [
														{
															"nativeSrc": "6276:29:4",
															"nodeType": "YulAssignment",
															"src": "6276:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6298:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "6298:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6285:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "6285:12:4"
																},
																"nativeSrc": "6285:20:4",
																"nodeType": "YulFunctionCall",
																"src": "6285:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "6276:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "6276:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6338:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "6338:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "6314:23:4",
																	"nodeType": "YulIdentifier",
																	"src": "6314:23:4"
																},
																"nativeSrc": "6314:30:4",
																"nodeType": "YulFunctionCall",
																"src": "6314:30:4"
															},
															"nativeSrc": "6314:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "6314:30:4"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "6217:133:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "6244:6:4",
														"nodeType": "YulTypedName",
														"src": "6244:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "6252:3:4",
														"nodeType": "YulTypedName",
														"src": "6252:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "6260:5:4",
														"nodeType": "YulTypedName",
														"src": "6260:5:4",
														"type": ""
													}
												],
												"src": "6217:133:4"
											},
											{
												"body": {
													"nativeSrc": "6436:388:4",
													"nodeType": "YulBlock",
													"src": "6436:388:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "6482:83:4",
																"nodeType": "YulBlock",
																"src": "6482:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6484:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "6484:77:4"
																			},
																			"nativeSrc": "6484:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6484:79:4"
																		},
																		"nativeSrc": "6484:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "6484:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6457:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "6457:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6466:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6466:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6453:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6453:3:4"
																		},
																		"nativeSrc": "6453:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6453:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6478:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6478:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6449:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6449:3:4"
																},
																"nativeSrc": "6449:32:4",
																"nodeType": "YulFunctionCall",
																"src": "6449:32:4"
															},
															"nativeSrc": "6446:119:4",
															"nodeType": "YulIf",
															"src": "6446:119:4"
														},
														{
															"nativeSrc": "6575:117:4",
															"nodeType": "YulBlock",
															"src": "6575:117:4",
															"statements": [
																{
																	"nativeSrc": "6590:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6590:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6604:1:4",
																		"nodeType": "YulLiteral",
																		"src": "6604:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6594:6:4",
																			"nodeType": "YulTypedName",
																			"src": "6594:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6619:63:4",
																	"nodeType": "YulAssignment",
																	"src": "6619:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6654:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "6654:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6665:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "6665:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6650:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "6650:3:4"
																				},
																				"nativeSrc": "6650:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "6650:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6674:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "6674:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6629:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "6629:20:4"
																		},
																		"nativeSrc": "6629:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6629:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6619:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "6619:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6702:115:4",
															"nodeType": "YulBlock",
															"src": "6702:115:4",
															"statements": [
																{
																	"nativeSrc": "6717:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6717:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6731:2:4",
																		"nodeType": "YulLiteral",
																		"src": "6731:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6721:6:4",
																			"nodeType": "YulTypedName",
																			"src": "6721:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6747:60:4",
																	"nodeType": "YulAssignment",
																	"src": "6747:60:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6779:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "6779:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6790:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "6790:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6775:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "6775:3:4"
																				},
																				"nativeSrc": "6775:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "6775:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6799:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "6799:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "6757:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "6757:17:4"
																		},
																		"nativeSrc": "6757:50:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6757:50:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "6747:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "6747:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "6356:468:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6398:9:4",
														"nodeType": "YulTypedName",
														"src": "6398:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6409:7:4",
														"nodeType": "YulTypedName",
														"src": "6409:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6421:6:4",
														"nodeType": "YulTypedName",
														"src": "6421:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6429:6:4",
														"nodeType": "YulTypedName",
														"src": "6429:6:4",
														"type": ""
													}
												],
												"src": "6356:468:4"
											},
											{
												"body": {
													"nativeSrc": "6919:28:4",
													"nodeType": "YulBlock",
													"src": "6919:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6936:1:4",
																		"nodeType": "YulLiteral",
																		"src": "6936:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6939:1:4",
																		"nodeType": "YulLiteral",
																		"src": "6939:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6929:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6929:6:4"
																},
																"nativeSrc": "6929:12:4",
																"nodeType": "YulFunctionCall",
																"src": "6929:12:4"
															},
															"nativeSrc": "6929:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "6929:12:4"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nativeSrc": "6830:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "6830:117:4"
											},
											{
												"body": {
													"nativeSrc": "7042:28:4",
													"nodeType": "YulBlock",
													"src": "7042:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7059:1:4",
																		"nodeType": "YulLiteral",
																		"src": "7059:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7062:1:4",
																		"nodeType": "YulLiteral",
																		"src": "7062:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7052:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7052:6:4"
																},
																"nativeSrc": "7052:12:4",
																"nodeType": "YulFunctionCall",
																"src": "7052:12:4"
															},
															"nativeSrc": "7052:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "7052:12:4"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nativeSrc": "6953:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "6953:117:4"
											},
											{
												"body": {
													"nativeSrc": "7104:152:4",
													"nodeType": "YulBlock",
													"src": "7104:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7121:1:4",
																		"nodeType": "YulLiteral",
																		"src": "7121:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7124:77:4",
																		"nodeType": "YulLiteral",
																		"src": "7124:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7114:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7114:6:4"
																},
																"nativeSrc": "7114:88:4",
																"nodeType": "YulFunctionCall",
																"src": "7114:88:4"
															},
															"nativeSrc": "7114:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "7114:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7218:1:4",
																		"nodeType": "YulLiteral",
																		"src": "7218:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7221:4:4",
																		"nodeType": "YulLiteral",
																		"src": "7221:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7211:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7211:6:4"
																},
																"nativeSrc": "7211:15:4",
																"nodeType": "YulFunctionCall",
																"src": "7211:15:4"
															},
															"nativeSrc": "7211:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "7211:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7242:1:4",
																		"nodeType": "YulLiteral",
																		"src": "7242:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7245:4:4",
																		"nodeType": "YulLiteral",
																		"src": "7245:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7235:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7235:6:4"
																},
																"nativeSrc": "7235:15:4",
																"nodeType": "YulFunctionCall",
																"src": "7235:15:4"
															},
															"nativeSrc": "7235:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "7235:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "7076:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "7076:180:4"
											},
											{
												"body": {
													"nativeSrc": "7305:238:4",
													"nodeType": "YulBlock",
													"src": "7305:238:4",
													"statements": [
														{
															"nativeSrc": "7315:58:4",
															"nodeType": "YulVariableDeclaration",
															"src": "7315:58:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7337:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "7337:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nativeSrc": "7367:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "7367:4:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "7345:21:4",
																			"nodeType": "YulIdentifier",
																			"src": "7345:21:4"
																		},
																		"nativeSrc": "7345:27:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7345:27:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7333:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7333:3:4"
																},
																"nativeSrc": "7333:40:4",
																"nodeType": "YulFunctionCall",
																"src": "7333:40:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "7319:10:4",
																	"nodeType": "YulTypedName",
																	"src": "7319:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7484:22:4",
																"nodeType": "YulBlock",
																"src": "7484:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7486:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "7486:16:4"
																			},
																			"nativeSrc": "7486:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "7486:18:4"
																		},
																		"nativeSrc": "7486:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "7486:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7427:10:4",
																				"nodeType": "YulIdentifier",
																				"src": "7427:10:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7439:18:4",
																				"nodeType": "YulLiteral",
																				"src": "7439:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "7424:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "7424:2:4"
																		},
																		"nativeSrc": "7424:34:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7424:34:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "7463:10:4",
																				"nodeType": "YulIdentifier",
																				"src": "7463:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "7475:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "7475:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7460:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "7460:2:4"
																		},
																		"nativeSrc": "7460:22:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7460:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "7421:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "7421:2:4"
																},
																"nativeSrc": "7421:62:4",
																"nodeType": "YulFunctionCall",
																"src": "7421:62:4"
															},
															"nativeSrc": "7418:88:4",
															"nodeType": "YulIf",
															"src": "7418:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7522:2:4",
																		"nodeType": "YulLiteral",
																		"src": "7522:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "7526:10:4",
																		"nodeType": "YulIdentifier",
																		"src": "7526:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7515:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7515:6:4"
																},
																"nativeSrc": "7515:22:4",
																"nodeType": "YulFunctionCall",
																"src": "7515:22:4"
															},
															"nativeSrc": "7515:22:4",
															"nodeType": "YulExpressionStatement",
															"src": "7515:22:4"
														}
													]
												},
												"name": "finalize_allocation",
												"nativeSrc": "7262:281:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7291:6:4",
														"nodeType": "YulTypedName",
														"src": "7291:6:4",
														"type": ""
													},
													{
														"name": "size",
														"nativeSrc": "7299:4:4",
														"nodeType": "YulTypedName",
														"src": "7299:4:4",
														"type": ""
													}
												],
												"src": "7262:281:4"
											},
											{
												"body": {
													"nativeSrc": "7590:88:4",
													"nodeType": "YulBlock",
													"src": "7590:88:4",
													"statements": [
														{
															"nativeSrc": "7600:30:4",
															"nodeType": "YulAssignment",
															"src": "7600:30:4",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nativeSrc": "7610:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "7610:18:4"
																},
																"nativeSrc": "7610:20:4",
																"nodeType": "YulFunctionCall",
																"src": "7610:20:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "7600:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7600:6:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "7659:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "7659:6:4"
																	},
																	{
																		"name": "size",
																		"nativeSrc": "7667:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "7667:4:4"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nativeSrc": "7639:19:4",
																	"nodeType": "YulIdentifier",
																	"src": "7639:19:4"
																},
																"nativeSrc": "7639:33:4",
																"nodeType": "YulFunctionCall",
																"src": "7639:33:4"
															},
															"nativeSrc": "7639:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "7639:33:4"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "7549:129:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "7574:4:4",
														"nodeType": "YulTypedName",
														"src": "7574:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "7583:6:4",
														"nodeType": "YulTypedName",
														"src": "7583:6:4",
														"type": ""
													}
												],
												"src": "7549:129:4"
											},
											{
												"body": {
													"nativeSrc": "7750:241:4",
													"nodeType": "YulBlock",
													"src": "7750:241:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "7855:22:4",
																"nodeType": "YulBlock",
																"src": "7855:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "7857:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "7857:16:4"
																			},
																			"nativeSrc": "7857:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "7857:18:4"
																		},
																		"nativeSrc": "7857:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "7857:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7827:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "7827:6:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7835:18:4",
																		"nodeType": "YulLiteral",
																		"src": "7835:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7824:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "7824:2:4"
																},
																"nativeSrc": "7824:30:4",
																"nodeType": "YulFunctionCall",
																"src": "7824:30:4"
															},
															"nativeSrc": "7821:56:4",
															"nodeType": "YulIf",
															"src": "7821:56:4"
														},
														{
															"nativeSrc": "7887:37:4",
															"nodeType": "YulAssignment",
															"src": "7887:37:4",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "7917:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "7917:6:4"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nativeSrc": "7895:21:4",
																	"nodeType": "YulIdentifier",
																	"src": "7895:21:4"
																},
																"nativeSrc": "7895:29:4",
																"nodeType": "YulFunctionCall",
																"src": "7895:29:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7887:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "7887:4:4"
																}
															]
														},
														{
															"nativeSrc": "7961:23:4",
															"nodeType": "YulAssignment",
															"src": "7961:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nativeSrc": "7973:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "7973:4:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7979:4:4",
																		"nodeType": "YulLiteral",
																		"src": "7979:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7969:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7969:3:4"
																},
																"nativeSrc": "7969:15:4",
																"nodeType": "YulFunctionCall",
																"src": "7969:15:4"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "7961:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "7961:4:4"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nativeSrc": "7684:307:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nativeSrc": "7734:6:4",
														"nodeType": "YulTypedName",
														"src": "7734:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nativeSrc": "7745:4:4",
														"nodeType": "YulTypedName",
														"src": "7745:4:4",
														"type": ""
													}
												],
												"src": "7684:307:4"
											},
											{
												"body": {
													"nativeSrc": "8061:84:4",
													"nodeType": "YulBlock",
													"src": "8061:84:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "8085:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "8085:3:4"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "8090:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "8090:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8095:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "8095:6:4"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "8072:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "8072:12:4"
																},
																"nativeSrc": "8072:30:4",
																"nodeType": "YulFunctionCall",
																"src": "8072:30:4"
															},
															"nativeSrc": "8072:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "8072:30:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "8122:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "8122:3:4"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8127:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "8127:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8118:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8118:3:4"
																		},
																		"nativeSrc": "8118:16:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8118:16:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8136:1:4",
																		"nodeType": "YulLiteral",
																		"src": "8136:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8111:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8111:6:4"
																},
																"nativeSrc": "8111:27:4",
																"nodeType": "YulFunctionCall",
																"src": "8111:27:4"
															},
															"nativeSrc": "8111:27:4",
															"nodeType": "YulExpressionStatement",
															"src": "8111:27:4"
														}
													]
												},
												"name": "copy_calldata_to_memory_with_cleanup",
												"nativeSrc": "7997:148:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8043:3:4",
														"nodeType": "YulTypedName",
														"src": "8043:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "8048:3:4",
														"nodeType": "YulTypedName",
														"src": "8048:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8053:6:4",
														"nodeType": "YulTypedName",
														"src": "8053:6:4",
														"type": ""
													}
												],
												"src": "7997:148:4"
											},
											{
												"body": {
													"nativeSrc": "8234:340:4",
													"nodeType": "YulBlock",
													"src": "8234:340:4",
													"statements": [
														{
															"nativeSrc": "8244:74:4",
															"nodeType": "YulAssignment",
															"src": "8244:74:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8310:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "8310:6:4"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nativeSrc": "8269:40:4",
																			"nodeType": "YulIdentifier",
																			"src": "8269:40:4"
																		},
																		"nativeSrc": "8269:48:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8269:48:4"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "8253:15:4",
																	"nodeType": "YulIdentifier",
																	"src": "8253:15:4"
																},
																"nativeSrc": "8253:65:4",
																"nodeType": "YulFunctionCall",
																"src": "8253:65:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8244:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "8244:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8334:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "8334:5:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8341:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "8341:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8327:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8327:6:4"
																},
																"nativeSrc": "8327:21:4",
																"nodeType": "YulFunctionCall",
																"src": "8327:21:4"
															},
															"nativeSrc": "8327:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "8327:21:4"
														},
														{
															"nativeSrc": "8357:27:4",
															"nodeType": "YulVariableDeclaration",
															"src": "8357:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "8372:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "8372:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8379:4:4",
																		"nodeType": "YulLiteral",
																		"src": "8379:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8368:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "8368:3:4"
																},
																"nativeSrc": "8368:16:4",
																"nodeType": "YulFunctionCall",
																"src": "8368:16:4"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "8361:3:4",
																	"nodeType": "YulTypedName",
																	"src": "8361:3:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8422:83:4",
																"nodeType": "YulBlock",
																"src": "8422:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nativeSrc": "8424:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "8424:77:4"
																			},
																			"nativeSrc": "8424:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8424:79:4"
																		},
																		"nativeSrc": "8424:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "8424:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "8403:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "8403:3:4"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "8408:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "8408:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8399:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8399:3:4"
																		},
																		"nativeSrc": "8399:16:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8399:16:4"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8417:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "8417:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8396:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "8396:2:4"
																},
																"nativeSrc": "8396:25:4",
																"nodeType": "YulFunctionCall",
																"src": "8396:25:4"
															},
															"nativeSrc": "8393:112:4",
															"nodeType": "YulIf",
															"src": "8393:112:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "8551:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "8551:3:4"
																	},
																	{
																		"name": "dst",
																		"nativeSrc": "8556:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "8556:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8561:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "8561:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory_with_cleanup",
																	"nativeSrc": "8514:36:4",
																	"nodeType": "YulIdentifier",
																	"src": "8514:36:4"
																},
																"nativeSrc": "8514:54:4",
																"nodeType": "YulFunctionCall",
																"src": "8514:54:4"
															},
															"nativeSrc": "8514:54:4",
															"nodeType": "YulExpressionStatement",
															"src": "8514:54:4"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nativeSrc": "8151:423:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "8207:3:4",
														"nodeType": "YulTypedName",
														"src": "8207:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8212:6:4",
														"nodeType": "YulTypedName",
														"src": "8212:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8220:3:4",
														"nodeType": "YulTypedName",
														"src": "8220:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8228:5:4",
														"nodeType": "YulTypedName",
														"src": "8228:5:4",
														"type": ""
													}
												],
												"src": "8151:423:4"
											},
											{
												"body": {
													"nativeSrc": "8654:277:4",
													"nodeType": "YulBlock",
													"src": "8654:277:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "8703:83:4",
																"nodeType": "YulBlock",
																"src": "8703:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nativeSrc": "8705:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "8705:77:4"
																			},
																			"nativeSrc": "8705:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "8705:79:4"
																		},
																		"nativeSrc": "8705:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "8705:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "8682:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "8682:6:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "8690:4:4",
																						"nodeType": "YulLiteral",
																						"src": "8690:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8678:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "8678:3:4"
																				},
																				"nativeSrc": "8678:17:4",
																				"nodeType": "YulFunctionCall",
																				"src": "8678:17:4"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "8697:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "8697:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "8674:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8674:3:4"
																		},
																		"nativeSrc": "8674:27:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8674:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8667:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "8667:6:4"
																},
																"nativeSrc": "8667:35:4",
																"nodeType": "YulFunctionCall",
																"src": "8667:35:4"
															},
															"nativeSrc": "8664:122:4",
															"nodeType": "YulIf",
															"src": "8664:122:4"
														},
														{
															"nativeSrc": "8795:34:4",
															"nodeType": "YulVariableDeclaration",
															"src": "8795:34:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "8822:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "8822:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8809:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "8809:12:4"
																},
																"nativeSrc": "8809:20:4",
																"nodeType": "YulFunctionCall",
																"src": "8809:20:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "8799:6:4",
																	"nodeType": "YulTypedName",
																	"src": "8799:6:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "8838:87:4",
															"nodeType": "YulAssignment",
															"src": "8838:87:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "8898:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "8898:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8906:4:4",
																				"nodeType": "YulLiteral",
																				"src": "8906:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8894:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "8894:3:4"
																		},
																		"nativeSrc": "8894:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "8894:17:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8913:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "8913:6:4"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "8921:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "8921:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nativeSrc": "8847:46:4",
																	"nodeType": "YulIdentifier",
																	"src": "8847:46:4"
																},
																"nativeSrc": "8847:78:4",
																"nodeType": "YulFunctionCall",
																"src": "8847:78:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "8838:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "8838:5:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nativeSrc": "8593:338:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "8632:6:4",
														"nodeType": "YulTypedName",
														"src": "8632:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "8640:3:4",
														"nodeType": "YulTypedName",
														"src": "8640:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "8648:5:4",
														"nodeType": "YulTypedName",
														"src": "8648:5:4",
														"type": ""
													}
												],
												"src": "8593:338:4"
											},
											{
												"body": {
													"nativeSrc": "9063:817:4",
													"nodeType": "YulBlock",
													"src": "9063:817:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "9110:83:4",
																"nodeType": "YulBlock",
																"src": "9110:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9112:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "9112:77:4"
																			},
																			"nativeSrc": "9112:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "9112:79:4"
																		},
																		"nativeSrc": "9112:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "9112:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9084:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "9084:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9093:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "9093:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9080:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9080:3:4"
																		},
																		"nativeSrc": "9080:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9080:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9105:3:4",
																		"nodeType": "YulLiteral",
																		"src": "9105:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9076:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "9076:3:4"
																},
																"nativeSrc": "9076:33:4",
																"nodeType": "YulFunctionCall",
																"src": "9076:33:4"
															},
															"nativeSrc": "9073:120:4",
															"nodeType": "YulIf",
															"src": "9073:120:4"
														},
														{
															"nativeSrc": "9203:117:4",
															"nodeType": "YulBlock",
															"src": "9203:117:4",
															"statements": [
																{
																	"nativeSrc": "9218:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9218:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9232:1:4",
																		"nodeType": "YulLiteral",
																		"src": "9232:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9222:6:4",
																			"nodeType": "YulTypedName",
																			"src": "9222:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9247:63:4",
																	"nodeType": "YulAssignment",
																	"src": "9247:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9282:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "9282:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9293:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "9293:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9278:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "9278:3:4"
																				},
																				"nativeSrc": "9278:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "9278:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9302:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "9302:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9257:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "9257:20:4"
																		},
																		"nativeSrc": "9257:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9257:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9247:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "9247:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9330:118:4",
															"nodeType": "YulBlock",
															"src": "9330:118:4",
															"statements": [
																{
																	"nativeSrc": "9345:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9345:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9359:2:4",
																		"nodeType": "YulLiteral",
																		"src": "9359:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9349:6:4",
																			"nodeType": "YulTypedName",
																			"src": "9349:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9375:63:4",
																	"nodeType": "YulAssignment",
																	"src": "9375:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9410:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "9410:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9421:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "9421:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9406:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "9406:3:4"
																				},
																				"nativeSrc": "9406:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "9406:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9430:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "9430:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9385:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "9385:20:4"
																		},
																		"nativeSrc": "9385:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9385:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9375:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "9375:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9458:118:4",
															"nodeType": "YulBlock",
															"src": "9458:118:4",
															"statements": [
																{
																	"nativeSrc": "9473:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9473:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9487:2:4",
																		"nodeType": "YulLiteral",
																		"src": "9487:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9477:6:4",
																			"nodeType": "YulTypedName",
																			"src": "9477:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9503:63:4",
																	"nodeType": "YulAssignment",
																	"src": "9503:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9538:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "9538:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9549:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "9549:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9534:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "9534:3:4"
																				},
																				"nativeSrc": "9534:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "9534:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9558:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "9558:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "9513:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "9513:20:4"
																		},
																		"nativeSrc": "9513:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9513:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9503:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "9503:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9586:287:4",
															"nodeType": "YulBlock",
															"src": "9586:287:4",
															"statements": [
																{
																	"nativeSrc": "9601:46:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9601:46:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9632:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "9632:9:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9643:2:4",
																						"nodeType": "YulLiteral",
																						"src": "9643:2:4",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9628:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "9628:3:4"
																				},
																				"nativeSrc": "9628:18:4",
																				"nodeType": "YulFunctionCall",
																				"src": "9628:18:4"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "9615:12:4",
																			"nodeType": "YulIdentifier",
																			"src": "9615:12:4"
																		},
																		"nativeSrc": "9615:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9615:32:4"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9605:6:4",
																			"nodeType": "YulTypedName",
																			"src": "9605:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nativeSrc": "9694:83:4",
																		"nodeType": "YulBlock",
																		"src": "9694:83:4",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nativeSrc": "9696:77:4",
																						"nodeType": "YulIdentifier",
																						"src": "9696:77:4"
																					},
																					"nativeSrc": "9696:79:4",
																					"nodeType": "YulFunctionCall",
																					"src": "9696:79:4"
																				},
																				"nativeSrc": "9696:79:4",
																				"nodeType": "YulExpressionStatement",
																				"src": "9696:79:4"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "9666:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "9666:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9674:18:4",
																				"nodeType": "YulLiteral",
																				"src": "9674:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "9663:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "9663:2:4"
																		},
																		"nativeSrc": "9663:30:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9663:30:4"
																	},
																	"nativeSrc": "9660:117:4",
																	"nodeType": "YulIf",
																	"src": "9660:117:4"
																},
																{
																	"nativeSrc": "9791:72:4",
																	"nodeType": "YulAssignment",
																	"src": "9791:72:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9835:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "9835:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9846:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "9846:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9831:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "9831:3:4"
																				},
																				"nativeSrc": "9831:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "9831:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9855:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "9855:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nativeSrc": "9801:29:4",
																			"nodeType": "YulIdentifier",
																			"src": "9801:29:4"
																		},
																		"nativeSrc": "9801:62:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9801:62:4"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "9791:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "9791:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "8937:943:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9009:9:4",
														"nodeType": "YulTypedName",
														"src": "9009:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9020:7:4",
														"nodeType": "YulTypedName",
														"src": "9020:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9032:6:4",
														"nodeType": "YulTypedName",
														"src": "9032:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9040:6:4",
														"nodeType": "YulTypedName",
														"src": "9040:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9048:6:4",
														"nodeType": "YulTypedName",
														"src": "9048:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9056:6:4",
														"nodeType": "YulTypedName",
														"src": "9056:6:4",
														"type": ""
													}
												],
												"src": "8937:943:4"
											},
											{
												"body": {
													"nativeSrc": "9969:391:4",
													"nodeType": "YulBlock",
													"src": "9969:391:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "10015:83:4",
																"nodeType": "YulBlock",
																"src": "10015:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10017:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "10017:77:4"
																			},
																			"nativeSrc": "10017:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "10017:79:4"
																		},
																		"nativeSrc": "10017:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "10017:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9990:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "9990:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9999:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "9999:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9986:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "9986:3:4"
																		},
																		"nativeSrc": "9986:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "9986:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10011:2:4",
																		"nodeType": "YulLiteral",
																		"src": "10011:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9982:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "9982:3:4"
																},
																"nativeSrc": "9982:32:4",
																"nodeType": "YulFunctionCall",
																"src": "9982:32:4"
															},
															"nativeSrc": "9979:119:4",
															"nodeType": "YulIf",
															"src": "9979:119:4"
														},
														{
															"nativeSrc": "10108:117:4",
															"nodeType": "YulBlock",
															"src": "10108:117:4",
															"statements": [
																{
																	"nativeSrc": "10123:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10123:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10137:1:4",
																		"nodeType": "YulLiteral",
																		"src": "10137:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10127:6:4",
																			"nodeType": "YulTypedName",
																			"src": "10127:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10152:63:4",
																	"nodeType": "YulAssignment",
																	"src": "10152:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10187:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "10187:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10198:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "10198:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10183:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "10183:3:4"
																				},
																				"nativeSrc": "10183:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "10183:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10207:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "10207:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10162:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "10162:20:4"
																		},
																		"nativeSrc": "10162:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "10162:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10152:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "10152:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10235:118:4",
															"nodeType": "YulBlock",
															"src": "10235:118:4",
															"statements": [
																{
																	"nativeSrc": "10250:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10250:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10264:2:4",
																		"nodeType": "YulLiteral",
																		"src": "10264:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10254:6:4",
																			"nodeType": "YulTypedName",
																			"src": "10254:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10280:63:4",
																	"nodeType": "YulAssignment",
																	"src": "10280:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10315:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "10315:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10326:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "10326:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10311:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "10311:3:4"
																				},
																				"nativeSrc": "10311:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "10311:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10335:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "10335:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10290:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "10290:20:4"
																		},
																		"nativeSrc": "10290:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "10290:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10280:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "10280:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "9886:474:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9931:9:4",
														"nodeType": "YulTypedName",
														"src": "9931:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9942:7:4",
														"nodeType": "YulTypedName",
														"src": "9942:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9954:6:4",
														"nodeType": "YulTypedName",
														"src": "9954:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9962:6:4",
														"nodeType": "YulTypedName",
														"src": "9962:6:4",
														"type": ""
													}
												],
												"src": "9886:474:4"
											},
											{
												"body": {
													"nativeSrc": "10394:152:4",
													"nodeType": "YulBlock",
													"src": "10394:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10411:1:4",
																		"nodeType": "YulLiteral",
																		"src": "10411:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10414:77:4",
																		"nodeType": "YulLiteral",
																		"src": "10414:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10404:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "10404:6:4"
																},
																"nativeSrc": "10404:88:4",
																"nodeType": "YulFunctionCall",
																"src": "10404:88:4"
															},
															"nativeSrc": "10404:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "10404:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10508:1:4",
																		"nodeType": "YulLiteral",
																		"src": "10508:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10511:4:4",
																		"nodeType": "YulLiteral",
																		"src": "10511:4:4",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10501:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "10501:6:4"
																},
																"nativeSrc": "10501:15:4",
																"nodeType": "YulFunctionCall",
																"src": "10501:15:4"
															},
															"nativeSrc": "10501:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "10501:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10532:1:4",
																		"nodeType": "YulLiteral",
																		"src": "10532:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10535:4:4",
																		"nodeType": "YulLiteral",
																		"src": "10535:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "10525:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "10525:6:4"
																},
																"nativeSrc": "10525:15:4",
																"nodeType": "YulFunctionCall",
																"src": "10525:15:4"
															},
															"nativeSrc": "10525:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "10525:15:4"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "10366:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "10366:180:4"
											},
											{
												"body": {
													"nativeSrc": "10603:269:4",
													"nodeType": "YulBlock",
													"src": "10603:269:4",
													"statements": [
														{
															"nativeSrc": "10613:22:4",
															"nodeType": "YulAssignment",
															"src": "10613:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10627:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "10627:4:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10633:1:4",
																		"nodeType": "YulLiteral",
																		"src": "10633:1:4",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "10623:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "10623:3:4"
																},
																"nativeSrc": "10623:12:4",
																"nodeType": "YulFunctionCall",
																"src": "10623:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10613:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "10613:6:4"
																}
															]
														},
														{
															"nativeSrc": "10644:38:4",
															"nodeType": "YulVariableDeclaration",
															"src": "10644:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10674:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "10674:4:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10680:1:4",
																		"nodeType": "YulLiteral",
																		"src": "10680:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10670:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "10670:3:4"
																},
																"nativeSrc": "10670:12:4",
																"nodeType": "YulFunctionCall",
																"src": "10670:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "10648:18:4",
																	"nodeType": "YulTypedName",
																	"src": "10648:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10721:51:4",
																"nodeType": "YulBlock",
																"src": "10721:51:4",
																"statements": [
																	{
																		"nativeSrc": "10735:27:4",
																		"nodeType": "YulAssignment",
																		"src": "10735:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "10749:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "10749:6:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10757:4:4",
																					"nodeType": "YulLiteral",
																					"src": "10757:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10745:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "10745:3:4"
																			},
																			"nativeSrc": "10745:17:4",
																			"nodeType": "YulFunctionCall",
																			"src": "10745:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "10735:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "10735:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10701:18:4",
																		"nodeType": "YulIdentifier",
																		"src": "10701:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10694:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "10694:6:4"
																},
																"nativeSrc": "10694:26:4",
																"nodeType": "YulFunctionCall",
																"src": "10694:26:4"
															},
															"nativeSrc": "10691:81:4",
															"nodeType": "YulIf",
															"src": "10691:81:4"
														},
														{
															"body": {
																"nativeSrc": "10824:42:4",
																"nodeType": "YulBlock",
																"src": "10824:42:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "10838:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "10838:16:4"
																			},
																			"nativeSrc": "10838:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "10838:18:4"
																		},
																		"nativeSrc": "10838:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "10838:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10788:18:4",
																		"nodeType": "YulIdentifier",
																		"src": "10788:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10811:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "10811:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10819:2:4",
																				"nodeType": "YulLiteral",
																				"src": "10819:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10808:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "10808:2:4"
																		},
																		"nativeSrc": "10808:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "10808:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10785:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "10785:2:4"
																},
																"nativeSrc": "10785:38:4",
																"nodeType": "YulFunctionCall",
																"src": "10785:38:4"
															},
															"nativeSrc": "10782:84:4",
															"nodeType": "YulIf",
															"src": "10782:84:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "10552:320:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "10587:4:4",
														"nodeType": "YulTypedName",
														"src": "10587:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10596:6:4",
														"nodeType": "YulTypedName",
														"src": "10596:6:4",
														"type": ""
													}
												],
												"src": "10552:320:4"
											},
											{
												"body": {
													"nativeSrc": "10992:34:4",
													"nodeType": "YulBlock",
													"src": "10992:34:4",
													"statements": [
														{
															"nativeSrc": "11002:18:4",
															"nodeType": "YulAssignment",
															"src": "11002:18:4",
															"value": {
																"name": "pos",
																"nativeSrc": "11017:3:4",
																"nodeType": "YulIdentifier",
																"src": "11017:3:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "11002:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "11002:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "10878:148:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10964:3:4",
														"nodeType": "YulTypedName",
														"src": "10964:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "10969:6:4",
														"nodeType": "YulTypedName",
														"src": "10969:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "10980:11:4",
														"nodeType": "YulTypedName",
														"src": "10980:11:4",
														"type": ""
													}
												],
												"src": "10878:148:4"
											},
											{
												"body": {
													"nativeSrc": "11142:280:4",
													"nodeType": "YulBlock",
													"src": "11142:280:4",
													"statements": [
														{
															"nativeSrc": "11152:53:4",
															"nodeType": "YulVariableDeclaration",
															"src": "11152:53:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "11199:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "11199:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "11166:32:4",
																	"nodeType": "YulIdentifier",
																	"src": "11166:32:4"
																},
																"nativeSrc": "11166:39:4",
																"nodeType": "YulFunctionCall",
																"src": "11166:39:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "11156:6:4",
																	"nodeType": "YulTypedName",
																	"src": "11156:6:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11214:96:4",
															"nodeType": "YulAssignment",
															"src": "11214:96:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11298:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "11298:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11303:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "11303:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "11221:76:4",
																	"nodeType": "YulIdentifier",
																	"src": "11221:76:4"
																},
																"nativeSrc": "11221:89:4",
																"nodeType": "YulFunctionCall",
																"src": "11221:89:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11214:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "11214:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11358:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "11358:5:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11365:4:4",
																				"nodeType": "YulLiteral",
																				"src": "11365:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11354:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "11354:3:4"
																		},
																		"nativeSrc": "11354:16:4",
																		"nodeType": "YulFunctionCall",
																		"src": "11354:16:4"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "11372:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "11372:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11377:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "11377:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "11319:34:4",
																	"nodeType": "YulIdentifier",
																	"src": "11319:34:4"
																},
																"nativeSrc": "11319:65:4",
																"nodeType": "YulFunctionCall",
																"src": "11319:65:4"
															},
															"nativeSrc": "11319:65:4",
															"nodeType": "YulExpressionStatement",
															"src": "11319:65:4"
														},
														{
															"nativeSrc": "11393:23:4",
															"nodeType": "YulAssignment",
															"src": "11393:23:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11404:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "11404:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "11409:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "11409:6:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11400:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "11400:3:4"
																},
																"nativeSrc": "11400:16:4",
																"nodeType": "YulFunctionCall",
																"src": "11400:16:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11393:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "11393:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "11032:390:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11123:5:4",
														"nodeType": "YulTypedName",
														"src": "11123:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11130:3:4",
														"nodeType": "YulTypedName",
														"src": "11130:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11138:3:4",
														"nodeType": "YulTypedName",
														"src": "11138:3:4",
														"type": ""
													}
												],
												"src": "11032:390:4"
											},
											{
												"body": {
													"nativeSrc": "11612:251:4",
													"nodeType": "YulBlock",
													"src": "11612:251:4",
													"statements": [
														{
															"nativeSrc": "11623:102:4",
															"nodeType": "YulAssignment",
															"src": "11623:102:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "11712:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "11712:6:4"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "11721:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "11721:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "11630:81:4",
																	"nodeType": "YulIdentifier",
																	"src": "11630:81:4"
																},
																"nativeSrc": "11630:95:4",
																"nodeType": "YulFunctionCall",
																"src": "11630:95:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11623:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "11623:3:4"
																}
															]
														},
														{
															"nativeSrc": "11735:102:4",
															"nodeType": "YulAssignment",
															"src": "11735:102:4",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "11824:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "11824:6:4"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "11833:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "11833:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "11742:81:4",
																	"nodeType": "YulIdentifier",
																	"src": "11742:81:4"
																},
																"nativeSrc": "11742:95:4",
																"nodeType": "YulFunctionCall",
																"src": "11742:95:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11735:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "11735:3:4"
																}
															]
														},
														{
															"nativeSrc": "11847:10:4",
															"nodeType": "YulAssignment",
															"src": "11847:10:4",
															"value": {
																"name": "pos",
																"nativeSrc": "11854:3:4",
																"nodeType": "YulIdentifier",
																"src": "11854:3:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11847:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "11847:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "11428:435:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11583:3:4",
														"nodeType": "YulTypedName",
														"src": "11583:3:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11589:6:4",
														"nodeType": "YulTypedName",
														"src": "11589:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11597:6:4",
														"nodeType": "YulTypedName",
														"src": "11597:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11608:3:4",
														"nodeType": "YulTypedName",
														"src": "11608:3:4",
														"type": ""
													}
												],
												"src": "11428:435:4"
											},
											{
												"body": {
													"nativeSrc": "11897:152:4",
													"nodeType": "YulBlock",
													"src": "11897:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11914:1:4",
																		"nodeType": "YulLiteral",
																		"src": "11914:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11917:77:4",
																		"nodeType": "YulLiteral",
																		"src": "11917:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11907:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "11907:6:4"
																},
																"nativeSrc": "11907:88:4",
																"nodeType": "YulFunctionCall",
																"src": "11907:88:4"
															},
															"nativeSrc": "11907:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "11907:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12011:1:4",
																		"nodeType": "YulLiteral",
																		"src": "12011:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12014:4:4",
																		"nodeType": "YulLiteral",
																		"src": "12014:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12004:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "12004:6:4"
																},
																"nativeSrc": "12004:15:4",
																"nodeType": "YulFunctionCall",
																"src": "12004:15:4"
															},
															"nativeSrc": "12004:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "12004:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12035:1:4",
																		"nodeType": "YulLiteral",
																		"src": "12035:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12038:4:4",
																		"nodeType": "YulLiteral",
																		"src": "12038:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "12028:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "12028:6:4"
																},
																"nativeSrc": "12028:15:4",
																"nodeType": "YulFunctionCall",
																"src": "12028:15:4"
															},
															"nativeSrc": "12028:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "12028:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "11869:180:4",
												"nodeType": "YulFunctionDefinition",
												"src": "11869:180:4"
											},
											{
												"body": {
													"nativeSrc": "12098:128:4",
													"nodeType": "YulBlock",
													"src": "12098:128:4",
													"statements": [
														{
															"nativeSrc": "12108:33:4",
															"nodeType": "YulAssignment",
															"src": "12108:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12135:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "12135:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "12117:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "12117:17:4"
																},
																"nativeSrc": "12117:24:4",
																"nodeType": "YulFunctionCall",
																"src": "12117:24:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "12108:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "12108:5:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12169:22:4",
																"nodeType": "YulBlock",
																"src": "12169:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "12171:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "12171:16:4"
																			},
																			"nativeSrc": "12171:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "12171:18:4"
																		},
																		"nativeSrc": "12171:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "12171:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12156:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "12156:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12163:4:4",
																		"nodeType": "YulLiteral",
																		"src": "12163:4:4",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "12153:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "12153:2:4"
																},
																"nativeSrc": "12153:15:4",
																"nodeType": "YulFunctionCall",
																"src": "12153:15:4"
															},
															"nativeSrc": "12150:41:4",
															"nodeType": "YulIf",
															"src": "12150:41:4"
														},
														{
															"nativeSrc": "12200:20:4",
															"nodeType": "YulAssignment",
															"src": "12200:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12211:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "12211:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12218:1:4",
																		"nodeType": "YulLiteral",
																		"src": "12218:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "12207:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "12207:3:4"
																},
																"nativeSrc": "12207:13:4",
																"nodeType": "YulFunctionCall",
																"src": "12207:13:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "12200:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "12200:3:4"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "12055:171:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12084:5:4",
														"nodeType": "YulTypedName",
														"src": "12084:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "12094:3:4",
														"nodeType": "YulTypedName",
														"src": "12094:3:4",
														"type": ""
													}
												],
												"src": "12055:171:4"
											},
											{
												"body": {
													"nativeSrc": "12290:40:4",
													"nodeType": "YulBlock",
													"src": "12290:40:4",
													"statements": [
														{
															"nativeSrc": "12301:22:4",
															"nodeType": "YulAssignment",
															"src": "12301:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12317:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "12317:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12311:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "12311:5:4"
																},
																"nativeSrc": "12311:12:4",
																"nodeType": "YulFunctionCall",
																"src": "12311:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "12301:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "12301:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "12232:98:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12273:5:4",
														"nodeType": "YulTypedName",
														"src": "12273:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "12283:6:4",
														"nodeType": "YulTypedName",
														"src": "12283:6:4",
														"type": ""
													}
												],
												"src": "12232:98:4"
											},
											{
												"body": {
													"nativeSrc": "12431:73:4",
													"nodeType": "YulBlock",
													"src": "12431:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12448:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "12448:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12453:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "12453:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12441:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "12441:6:4"
																},
																"nativeSrc": "12441:19:4",
																"nodeType": "YulFunctionCall",
																"src": "12441:19:4"
															},
															"nativeSrc": "12441:19:4",
															"nodeType": "YulExpressionStatement",
															"src": "12441:19:4"
														},
														{
															"nativeSrc": "12469:29:4",
															"nodeType": "YulAssignment",
															"src": "12469:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12488:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "12488:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12493:4:4",
																		"nodeType": "YulLiteral",
																		"src": "12493:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12484:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "12484:3:4"
																},
																"nativeSrc": "12484:14:4",
																"nodeType": "YulFunctionCall",
																"src": "12484:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12469:11:4",
																	"nodeType": "YulIdentifier",
																	"src": "12469:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "12336:168:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12403:3:4",
														"nodeType": "YulTypedName",
														"src": "12403:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12408:6:4",
														"nodeType": "YulTypedName",
														"src": "12408:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12419:11:4",
														"nodeType": "YulTypedName",
														"src": "12419:11:4",
														"type": ""
													}
												],
												"src": "12336:168:4"
											},
											{
												"body": {
													"nativeSrc": "12600:283:4",
													"nodeType": "YulBlock",
													"src": "12600:283:4",
													"statements": [
														{
															"nativeSrc": "12610:52:4",
															"nodeType": "YulVariableDeclaration",
															"src": "12610:52:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "12656:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "12656:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "12624:31:4",
																	"nodeType": "YulIdentifier",
																	"src": "12624:31:4"
																},
																"nativeSrc": "12624:38:4",
																"nodeType": "YulFunctionCall",
																"src": "12624:38:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "12614:6:4",
																	"nodeType": "YulTypedName",
																	"src": "12614:6:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12671:77:4",
															"nodeType": "YulAssignment",
															"src": "12671:77:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12736:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "12736:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12741:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "12741:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "12678:57:4",
																	"nodeType": "YulIdentifier",
																	"src": "12678:57:4"
																},
																"nativeSrc": "12678:70:4",
																"nodeType": "YulFunctionCall",
																"src": "12678:70:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12671:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "12671:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12796:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "12796:5:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12803:4:4",
																				"nodeType": "YulLiteral",
																				"src": "12803:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12792:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "12792:3:4"
																		},
																		"nativeSrc": "12792:16:4",
																		"nodeType": "YulFunctionCall",
																		"src": "12792:16:4"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "12810:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "12810:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "12815:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "12815:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "12757:34:4",
																	"nodeType": "YulIdentifier",
																	"src": "12757:34:4"
																},
																"nativeSrc": "12757:65:4",
																"nodeType": "YulFunctionCall",
																"src": "12757:65:4"
															},
															"nativeSrc": "12757:65:4",
															"nodeType": "YulExpressionStatement",
															"src": "12757:65:4"
														},
														{
															"nativeSrc": "12831:46:4",
															"nodeType": "YulAssignment",
															"src": "12831:46:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12842:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "12842:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "12869:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "12869:6:4"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "12847:21:4",
																			"nodeType": "YulIdentifier",
																			"src": "12847:21:4"
																		},
																		"nativeSrc": "12847:29:4",
																		"nodeType": "YulFunctionCall",
																		"src": "12847:29:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12838:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "12838:3:4"
																},
																"nativeSrc": "12838:39:4",
																"nodeType": "YulFunctionCall",
																"src": "12838:39:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12831:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "12831:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
												"nativeSrc": "12510:373:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12581:5:4",
														"nodeType": "YulTypedName",
														"src": "12581:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12588:3:4",
														"nodeType": "YulTypedName",
														"src": "12588:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12596:3:4",
														"nodeType": "YulTypedName",
														"src": "12596:3:4",
														"type": ""
													}
												],
												"src": "12510:373:4"
											},
											{
												"body": {
													"nativeSrc": "13089:440:4",
													"nodeType": "YulBlock",
													"src": "13089:440:4",
													"statements": [
														{
															"nativeSrc": "13099:27:4",
															"nodeType": "YulAssignment",
															"src": "13099:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13111:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "13111:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13122:3:4",
																		"nodeType": "YulLiteral",
																		"src": "13122:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13107:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "13107:3:4"
																},
																"nativeSrc": "13107:19:4",
																"nodeType": "YulFunctionCall",
																"src": "13107:19:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13099:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "13099:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13180:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "13180:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13193:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "13193:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13204:1:4",
																				"nodeType": "YulLiteral",
																				"src": "13204:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13189:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "13189:3:4"
																		},
																		"nativeSrc": "13189:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "13189:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13136:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "13136:43:4"
																},
																"nativeSrc": "13136:71:4",
																"nodeType": "YulFunctionCall",
																"src": "13136:71:4"
															},
															"nativeSrc": "13136:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "13136:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "13261:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "13261:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13274:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "13274:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13285:2:4",
																				"nodeType": "YulLiteral",
																				"src": "13285:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13270:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "13270:3:4"
																		},
																		"nativeSrc": "13270:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "13270:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "13217:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "13217:43:4"
																},
																"nativeSrc": "13217:72:4",
																"nodeType": "YulFunctionCall",
																"src": "13217:72:4"
															},
															"nativeSrc": "13217:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "13217:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "13343:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "13343:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13356:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "13356:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13367:2:4",
																				"nodeType": "YulLiteral",
																				"src": "13367:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13352:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "13352:3:4"
																		},
																		"nativeSrc": "13352:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "13352:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "13299:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "13299:43:4"
																},
																"nativeSrc": "13299:72:4",
																"nodeType": "YulFunctionCall",
																"src": "13299:72:4"
															},
															"nativeSrc": "13299:72:4",
															"nodeType": "YulExpressionStatement",
															"src": "13299:72:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13392:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "13392:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13403:2:4",
																				"nodeType": "YulLiteral",
																				"src": "13403:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13388:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "13388:3:4"
																		},
																		"nativeSrc": "13388:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "13388:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13412:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "13412:4:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13418:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "13418:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13408:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "13408:3:4"
																		},
																		"nativeSrc": "13408:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "13408:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13381:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "13381:6:4"
																},
																"nativeSrc": "13381:48:4",
																"nodeType": "YulFunctionCall",
																"src": "13381:48:4"
															},
															"nativeSrc": "13381:48:4",
															"nodeType": "YulExpressionStatement",
															"src": "13381:48:4"
														},
														{
															"nativeSrc": "13438:84:4",
															"nodeType": "YulAssignment",
															"src": "13438:84:4",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "13508:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "13508:6:4"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "13517:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "13517:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack",
																	"nativeSrc": "13446:61:4",
																	"nodeType": "YulIdentifier",
																	"src": "13446:61:4"
																},
																"nativeSrc": "13446:76:4",
																"nodeType": "YulFunctionCall",
																"src": "13446:76:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13438:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "13438:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "12889:640:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13037:9:4",
														"nodeType": "YulTypedName",
														"src": "13037:9:4",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "13049:6:4",
														"nodeType": "YulTypedName",
														"src": "13049:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "13057:6:4",
														"nodeType": "YulTypedName",
														"src": "13057:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "13065:6:4",
														"nodeType": "YulTypedName",
														"src": "13065:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13073:6:4",
														"nodeType": "YulTypedName",
														"src": "13073:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13084:4:4",
														"nodeType": "YulTypedName",
														"src": "13084:4:4",
														"type": ""
													}
												],
												"src": "12889:640:4"
											},
											{
												"body": {
													"nativeSrc": "13597:79:4",
													"nodeType": "YulBlock",
													"src": "13597:79:4",
													"statements": [
														{
															"nativeSrc": "13607:22:4",
															"nodeType": "YulAssignment",
															"src": "13607:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "13622:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "13622:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13616:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "13616:5:4"
																},
																"nativeSrc": "13616:13:4",
																"nodeType": "YulFunctionCall",
																"src": "13616:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "13607:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "13607:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13664:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "13664:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "13638:25:4",
																	"nodeType": "YulIdentifier",
																	"src": "13638:25:4"
																},
																"nativeSrc": "13638:32:4",
																"nodeType": "YulFunctionCall",
																"src": "13638:32:4"
															},
															"nativeSrc": "13638:32:4",
															"nodeType": "YulExpressionStatement",
															"src": "13638:32:4"
														}
													]
												},
												"name": "abi_decode_t_bytes4_fromMemory",
												"nativeSrc": "13535:141:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "13575:6:4",
														"nodeType": "YulTypedName",
														"src": "13575:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "13583:3:4",
														"nodeType": "YulTypedName",
														"src": "13583:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "13591:5:4",
														"nodeType": "YulTypedName",
														"src": "13591:5:4",
														"type": ""
													}
												],
												"src": "13535:141:4"
											},
											{
												"body": {
													"nativeSrc": "13758:273:4",
													"nodeType": "YulBlock",
													"src": "13758:273:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "13804:83:4",
																"nodeType": "YulBlock",
																"src": "13804:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "13806:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "13806:77:4"
																			},
																			"nativeSrc": "13806:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "13806:79:4"
																		},
																		"nativeSrc": "13806:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "13806:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "13779:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "13779:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13788:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "13788:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13775:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "13775:3:4"
																		},
																		"nativeSrc": "13775:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "13775:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13800:2:4",
																		"nodeType": "YulLiteral",
																		"src": "13800:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "13771:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "13771:3:4"
																},
																"nativeSrc": "13771:32:4",
																"nodeType": "YulFunctionCall",
																"src": "13771:32:4"
															},
															"nativeSrc": "13768:119:4",
															"nodeType": "YulIf",
															"src": "13768:119:4"
														},
														{
															"nativeSrc": "13897:127:4",
															"nodeType": "YulBlock",
															"src": "13897:127:4",
															"statements": [
																{
																	"nativeSrc": "13912:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "13912:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13926:1:4",
																		"nodeType": "YulLiteral",
																		"src": "13926:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "13916:6:4",
																			"nodeType": "YulTypedName",
																			"src": "13916:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "13941:73:4",
																	"nodeType": "YulAssignment",
																	"src": "13941:73:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "13986:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "13986:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "13997:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "13997:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "13982:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "13982:3:4"
																				},
																				"nativeSrc": "13982:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "13982:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14006:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "14006:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4_fromMemory",
																			"nativeSrc": "13951:30:4",
																			"nodeType": "YulIdentifier",
																			"src": "13951:30:4"
																		},
																		"nativeSrc": "13951:63:4",
																		"nodeType": "YulFunctionCall",
																		"src": "13951:63:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "13941:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "13941:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "13682:349:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13728:9:4",
														"nodeType": "YulTypedName",
														"src": "13728:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "13739:7:4",
														"nodeType": "YulTypedName",
														"src": "13739:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "13751:6:4",
														"nodeType": "YulTypedName",
														"src": "13751:6:4",
														"type": ""
													}
												],
												"src": "13682:349:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        mstore(add(headStart, 96), sub(tail, headStart))\n        tail := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_fromStack(value3,  tail)\n\n    }\n\n    function abi_decode_t_bytes4_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600436106100dc575f3560e01c80636352211e1161007e578063a22cb46511610058578063a22cb465146102a2578063b88d4fde146102ca578063c87b56dd146102e6578063e985e9c514610322576100dc565b80636352211e1461020057806370a082311461023c57806395d89b4114610278576100dc565b8063095ea7b3116100ba578063095ea7b31461018257806318160ddd1461019e57806323b872dd146101c857806342842e0e146101e4576100dc565b806301ffc9a7146100e057806306fdde031461011c578063081812fc14610146575b5f5ffd5b3480156100eb575f5ffd5b50610106600480360381019061010191906110af565b61035e565b60405161011391906110f4565b60405180910390f35b348015610127575f5ffd5b506101306103ef565b60405161013d919061117d565b60405180910390f35b348015610151575f5ffd5b5061016c600480360381019061016791906111d0565b61047f565b604051610179919061123a565b60405180910390f35b61019c6004803603810190610197919061127d565b6104d8565b005b3480156101a9575f5ffd5b506101b26104e8565b6040516101bf91906112ca565b60405180910390f35b6101e260048036038101906101dd91906112e3565b6104fd565b005b6101fe60048036038101906101f991906112e3565b6107a8565b005b34801561020b575f5ffd5b50610226600480360381019061022191906111d0565b6107c7565b604051610233919061123a565b60405180910390f35b348015610247575f5ffd5b50610262600480360381019061025d9190611333565b6107d8565b60405161026f91906112ca565b60405180910390f35b348015610283575f5ffd5b5061028c61086c565b604051610299919061117d565b60405180910390f35b3480156102ad575f5ffd5b506102c860048036038101906102c39190611388565b6108fc565b005b6102e460048036038101906102df91906114f2565b610a02565b005b3480156102f1575f5ffd5b5061030c600480360381019061030791906111d0565b610a53565b604051610319919061117d565b60405180910390f35b34801561032d575f5ffd5b5061034860048036038101906103439190611572565b610acd565b60405161035591906110f4565b60405180910390f35b5f6301ffc9a760e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806103b857506380ac58cd60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806103e85750635b5e139f60e01b827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b9050919050565b6060600280546103fe906115dd565b80601f016020809104026020016040519081016040528092919081815260200182805461042a906115dd565b80156104755780601f1061044c57610100808354040283529160200191610475565b820191905f5260205f20905b81548152906001019060200180831161045857829003601f168201915b5050505050905090565b5f61048982610b5b565b61049e5761049d63cf4700e460e01b610bcd565b5b60065f8381526020019081526020015f205f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6104e482826001610bd5565b5050565b5f6104f1610cff565b6001545f540303905090565b5f61050782610d06565b905073ffffffffffffffffffffffffffffffffffffffff8473ffffffffffffffffffffffffffffffffffffffff161693508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461057c5761057b63a114810060e01b610bcd565b5b5f5f61058784610de8565b9150915061059d8187610598610e0b565b610e12565b6105c8576105b2866105ad610e0b565b610acd565b6105c7576105c66359c896be60e01b610bcd565b5b5b6105d58686866001610e55565b80156105df575f82555b60055f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8154600190039190508190555060055f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8154600101919050819055506106a785610683888887610e5b565b7c020000000000000000000000000000000000000000000000000000000017610e82565b60045f8681526020019081526020015f20819055505f7c0200000000000000000000000000000000000000000000000000000000841603610723575f6001850190505f60045f8381526020019081526020015f205403610721575f548114610720578360045f8381526020019081526020015f20819055505b5b505b5f73ffffffffffffffffffffffffffffffffffffffff8673ffffffffffffffffffffffffffffffffffffffff161690508481887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef5f5fa45f81036107925761079163ea553b3460e01b610bcd565b5b61079f8787876001610eac565b50505050505050565b6107c283838360405180602001604052805f815250610a02565b505050565b5f6107d182610d06565b9050919050565b5f5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361081d5761081c638f4eb60460e01b610bcd565b5b67ffffffffffffffff60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054169050919050565b60606003805461087b906115dd565b80601f01602080910402602001604051908101604052809291908181526020018280546108a7906115dd565b80156108f25780601f106108c9576101008083540402835291602001916108f2565b820191905f5260205f20905b8154815290600101906020018083116108d557829003601f168201915b5050505050905090565b8060075f610908610e0b565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff166109b1610e0b565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516109f691906110f4565b60405180910390a35050565b610a0d8484846104fd565b5f8373ffffffffffffffffffffffffffffffffffffffff163b14610a4d57610a3784848484610eb2565b610a4c57610a4b63d1a57ed660e01b610bcd565b5b5b50505050565b6060610a5e82610b5b565b610a7357610a7263a14c4b5060e01b610bcd565b5b5f610a7c610fdc565b90505f815103610a9a5760405180602001604052805f815250610ac5565b80610aa484610ff2565b604051602001610ab5929190611647565b6040516020818303038152906040525b915050919050565b5f60075f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f81610b65610cff565b11610bc8575f54821015610bc7575f5b5f60045f8581526020019081526020015f205491508103610ba15782610b9a90611697565b9250610b75565b5f7c01000000000000000000000000000000000000000000000000000000008216149150505b5b919050565b805f5260045ffd5b5f610bdf836107c7565b9050818015610c2157508073ffffffffffffffffffffffffffffffffffffffff16610c08610e0b565b73ffffffffffffffffffffffffffffffffffffffff1614155b15610c4d57610c3781610c32610e0b565b610acd565b610c4c57610c4b63cfb3b94260e01b610bcd565b5b5b8360065f8581526020019081526020015f205f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828473ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a450505050565b5f5f905090565b5f81610d10610cff565b11610dd25760045f8381526020019081526020015f205490505f8103610daa575f548210610d4957610d4863df2d9b4260e01b610bcd565b5b5b60045f836001900393508381526020019081526020015f205490505f810315610da5575f7c010000000000000000000000000000000000000000000000000000000082160315610de357610da463df2d9b4260e01b610bcd565b5b610d4a565b5f7c010000000000000000000000000000000000000000000000000000000082160315610de3575b610de263df2d9b4260e01b610bcd565b5b919050565b5f5f5f60065f8581526020019081526020015f2090508092508254915050915091565b5f33905090565b5f73ffffffffffffffffffffffffffffffffffffffff8316925073ffffffffffffffffffffffffffffffffffffffff821691508382148383141790509392505050565b50505050565b5f5f60e883901c905060e8610e71868684611041565b62ffffff16901b9150509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff83169250814260a01b178317905092915050565b50505050565b5f8373ffffffffffffffffffffffffffffffffffffffff1663150b7a02610ed7610e0b565b8786866040518563ffffffff1660e01b8152600401610ef99493929190611710565b6020604051808303815f875af1925050508015610f3457506040513d601f19601f82011682018060405250810190610f31919061176e565b60015b610f89573d805f8114610f62576040519150601f19603f3d011682016040523d82523d5f602084013e610f67565b606091505b505f815103610f8157610f8063d1a57ed660e01b610bcd565b5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614915050949350505050565b606060405180602001604052805f815250905090565b606060a060405101806040526020810391505f825281835b60011561102c57600184039350600a81066030018453600a810490508061100a575b50828103602084039350808452505050919050565b5f9392505050565b5f604051905090565b5f5ffd5b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61108e8161105a565b8114611098575f5ffd5b50565b5f813590506110a981611085565b92915050565b5f602082840312156110c4576110c3611052565b5b5f6110d18482850161109b565b91505092915050565b5f8115159050919050565b6110ee816110da565b82525050565b5f6020820190506111075f8301846110e5565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f61114f8261110d565b6111598185611117565b9350611169818560208601611127565b61117281611135565b840191505092915050565b5f6020820190508181035f8301526111958184611145565b905092915050565b5f819050919050565b6111af8161119d565b81146111b9575f5ffd5b50565b5f813590506111ca816111a6565b92915050565b5f602082840312156111e5576111e4611052565b5b5f6111f2848285016111bc565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611224826111fb565b9050919050565b6112348161121a565b82525050565b5f60208201905061124d5f83018461122b565b92915050565b61125c8161121a565b8114611266575f5ffd5b50565b5f8135905061127781611253565b92915050565b5f5f6040838503121561129357611292611052565b5b5f6112a085828601611269565b92505060206112b1858286016111bc565b9150509250929050565b6112c48161119d565b82525050565b5f6020820190506112dd5f8301846112bb565b92915050565b5f5f5f606084860312156112fa576112f9611052565b5b5f61130786828701611269565b935050602061131886828701611269565b9250506040611329868287016111bc565b9150509250925092565b5f6020828403121561134857611347611052565b5b5f61135584828501611269565b91505092915050565b611367816110da565b8114611371575f5ffd5b50565b5f813590506113828161135e565b92915050565b5f5f6040838503121561139e5761139d611052565b5b5f6113ab85828601611269565b92505060206113bc85828601611374565b9150509250929050565b5f5ffd5b5f5ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b61140482611135565b810181811067ffffffffffffffff82111715611423576114226113ce565b5b80604052505050565b5f611435611049565b905061144182826113fb565b919050565b5f67ffffffffffffffff8211156114605761145f6113ce565b5b61146982611135565b9050602081019050919050565b828183375f83830152505050565b5f61149661149184611446565b61142c565b9050828152602081018484840111156114b2576114b16113ca565b5b6114bd848285611476565b509392505050565b5f82601f8301126114d9576114d86113c6565b5b81356114e9848260208601611484565b91505092915050565b5f5f5f5f6080858703121561150a57611509611052565b5b5f61151787828801611269565b945050602061152887828801611269565b9350506040611539878288016111bc565b925050606085013567ffffffffffffffff81111561155a57611559611056565b5b611566878288016114c5565b91505092959194509250565b5f5f6040838503121561158857611587611052565b5b5f61159585828601611269565b92505060206115a685828601611269565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806115f457607f821691505b602082108103611607576116066115b0565b5b50919050565b5f81905092915050565b5f6116218261110d565b61162b818561160d565b935061163b818560208601611127565b80840191505092915050565b5f6116528285611617565b915061165e8284611617565b91508190509392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6116a18261119d565b91505f82036116b3576116b261166a565b5b600182039050919050565b5f81519050919050565b5f82825260208201905092915050565b5f6116e2826116be565b6116ec81856116c8565b93506116fc818560208601611127565b61170581611135565b840191505092915050565b5f6080820190506117235f83018761122b565b611730602083018661122b565b61173d60408301856112bb565b818103606083015261174f81846116d8565b905095945050505050565b5f8151905061176881611085565b92915050565b5f6020828403121561178357611782611052565b5b5f6117908482850161175a565b9150509291505056fea2646970667358221220eecbe090a9cc90a95b1cf89495feab68941a528356ff97bfbe028ba23aec622964736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDC JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x7E JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x58 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x2CA JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x2E6 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x322 JUMPI PUSH2 0xDC JUMP JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x278 JUMPI PUSH2 0xDC JUMP JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xBA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x19E JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1E4 JUMPI PUSH2 0xDC JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x146 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEB JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0x10AF JUMP JUMPDEST PUSH2 0x35E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x10F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x127 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x130 PUSH2 0x3EF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13D SWAP2 SWAP1 PUSH2 0x117D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x151 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x16C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x167 SWAP2 SWAP1 PUSH2 0x11D0 JUMP JUMPDEST PUSH2 0x47F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x179 SWAP2 SWAP1 PUSH2 0x123A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x197 SWAP2 SWAP1 PUSH2 0x127D JUMP JUMPDEST PUSH2 0x4D8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1A9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x1B2 PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0x12CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0x12E3 JUMP JUMPDEST PUSH2 0x4FD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x12E3 JUMP JUMPDEST PUSH2 0x7A8 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x20B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x11D0 JUMP JUMPDEST PUSH2 0x7C7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x123A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x247 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x262 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x1333 JUMP JUMPDEST PUSH2 0x7D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26F SWAP2 SWAP1 PUSH2 0x12CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x283 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x28C PUSH2 0x86C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x117D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AD JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x2C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C3 SWAP2 SWAP1 PUSH2 0x1388 JUMP JUMPDEST PUSH2 0x8FC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2DF SWAP2 SWAP1 PUSH2 0x14F2 JUMP JUMPDEST PUSH2 0xA02 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x30C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x11D0 JUMP JUMPDEST PUSH2 0xA53 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x117D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH2 0x348 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x1572 JUMP JUMPDEST PUSH2 0xACD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x355 SWAP2 SWAP1 PUSH2 0x10F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x3B8 JUMPI POP PUSH4 0x80AC58CD PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST DUP1 PUSH2 0x3E8 JUMPI POP PUSH4 0x5B5E139F PUSH1 0xE0 SHL DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x3FE SWAP1 PUSH2 0x15DD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x42A SWAP1 PUSH2 0x15DD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x475 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x44C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x475 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x458 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x489 DUP3 PUSH2 0xB5B JUMP JUMPDEST PUSH2 0x49E JUMPI PUSH2 0x49D PUSH4 0xCF4700E4 PUSH1 0xE0 SHL PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH1 0x6 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4E4 DUP3 DUP3 PUSH1 0x1 PUSH2 0xBD5 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x4F1 PUSH2 0xCFF JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH0 SLOAD SUB SUB SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x507 DUP3 PUSH2 0xD06 JUMP JUMPDEST SWAP1 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND AND SWAP4 POP DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x57C JUMPI PUSH2 0x57B PUSH4 0xA1148100 PUSH1 0xE0 SHL PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH0 PUSH0 PUSH2 0x587 DUP5 PUSH2 0xDE8 JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH2 0x59D DUP2 DUP8 PUSH2 0x598 PUSH2 0xE0B JUMP JUMPDEST PUSH2 0xE12 JUMP JUMPDEST PUSH2 0x5C8 JUMPI PUSH2 0x5B2 DUP7 PUSH2 0x5AD PUSH2 0xE0B JUMP JUMPDEST PUSH2 0xACD JUMP JUMPDEST PUSH2 0x5C7 JUMPI PUSH2 0x5C6 PUSH4 0x59C896BE PUSH1 0xE0 SHL PUSH2 0xBCD JUMP JUMPDEST JUMPDEST JUMPDEST PUSH2 0x5D5 DUP7 DUP7 DUP7 PUSH1 0x1 PUSH2 0xE55 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x5DF JUMPI PUSH0 DUP3 SSTORE JUMPDEST PUSH1 0x5 PUSH0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD PUSH1 0x1 SWAP1 SUB SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP2 SLOAD PUSH1 0x1 ADD SWAP2 SWAP1 POP DUP2 SWAP1 SSTORE POP PUSH2 0x6A7 DUP6 PUSH2 0x683 DUP9 DUP9 DUP8 PUSH2 0xE5B JUMP JUMPDEST PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH2 0xE82 JUMP JUMPDEST PUSH1 0x4 PUSH0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH0 PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND SUB PUSH2 0x723 JUMPI PUSH0 PUSH1 0x1 DUP6 ADD SWAP1 POP PUSH0 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SUB PUSH2 0x721 JUMPI PUSH0 SLOAD DUP2 EQ PUSH2 0x720 JUMPI DUP4 PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST JUMPDEST POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND AND SWAP1 POP DUP5 DUP2 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH0 PUSH0 LOG4 PUSH0 DUP2 SUB PUSH2 0x792 JUMPI PUSH2 0x791 PUSH4 0xEA553B34 PUSH1 0xE0 SHL PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH2 0x79F DUP8 DUP8 DUP8 PUSH1 0x1 PUSH2 0xEAC JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7C2 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xA02 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7D1 DUP3 PUSH2 0xD06 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x81D JUMPI PUSH2 0x81C PUSH4 0x8F4EB604 PUSH1 0xE0 SHL PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x5 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x87B SWAP1 PUSH2 0x15DD JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x8A7 SWAP1 PUSH2 0x15DD JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8F2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8C9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8F2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x8D5 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 PUSH2 0x908 PUSH2 0xE0B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9B1 PUSH2 0xE0B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 DUP4 PUSH1 0x40 MLOAD PUSH2 0x9F6 SWAP2 SWAP1 PUSH2 0x10F4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xA0D DUP5 DUP5 DUP5 PUSH2 0x4FD JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ PUSH2 0xA4D JUMPI PUSH2 0xA37 DUP5 DUP5 DUP5 DUP5 PUSH2 0xEB2 JUMP JUMPDEST PUSH2 0xA4C JUMPI PUSH2 0xA4B PUSH4 0xD1A57ED6 PUSH1 0xE0 SHL PUSH2 0xBCD JUMP JUMPDEST JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xA5E DUP3 PUSH2 0xB5B JUMP JUMPDEST PUSH2 0xA73 JUMPI PUSH2 0xA72 PUSH4 0xA14C4B50 PUSH1 0xE0 SHL PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xA7C PUSH2 0xFDC JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD SUB PUSH2 0xA9A JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP PUSH2 0xAC5 JUMP JUMPDEST DUP1 PUSH2 0xAA4 DUP5 PUSH2 0xFF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xAB5 SWAP3 SWAP2 SWAP1 PUSH2 0x1647 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x7 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH2 0xB65 PUSH2 0xCFF JUMP JUMPDEST GT PUSH2 0xBC8 JUMPI PUSH0 SLOAD DUP3 LT ISZERO PUSH2 0xBC7 JUMPI PUSH0 JUMPDEST PUSH0 PUSH1 0x4 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP2 POP DUP2 SUB PUSH2 0xBA1 JUMPI DUP3 PUSH2 0xB9A SWAP1 PUSH2 0x1697 JUMP JUMPDEST SWAP3 POP PUSH2 0xB75 JUMP JUMPDEST PUSH0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND EQ SWAP2 POP POP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH0 MSTORE PUSH1 0x4 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0xBDF DUP4 PUSH2 0x7C7 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0xC21 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC08 PUSH2 0xE0B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xC4D JUMPI PUSH2 0xC37 DUP2 PUSH2 0xC32 PUSH2 0xE0B JUMP JUMPDEST PUSH2 0xACD JUMP JUMPDEST PUSH2 0xC4C JUMPI PUSH2 0xC4B PUSH4 0xCFB3B942 PUSH1 0xE0 SHL PUSH2 0xBCD JUMP JUMPDEST JUMPDEST JUMPDEST DUP4 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP2 PUSH2 0xD10 PUSH2 0xCFF JUMP JUMPDEST GT PUSH2 0xDD2 JUMPI PUSH1 0x4 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 SUB PUSH2 0xDAA JUMPI PUSH0 SLOAD DUP3 LT PUSH2 0xD49 JUMPI PUSH2 0xD48 PUSH4 0xDF2D9B42 PUSH1 0xE0 SHL PUSH2 0xBCD JUMP JUMPDEST JUMPDEST JUMPDEST PUSH1 0x4 PUSH0 DUP4 PUSH1 0x1 SWAP1 SUB SWAP4 POP DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 SUB ISZERO PUSH2 0xDA5 JUMPI PUSH0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND SUB ISZERO PUSH2 0xDE3 JUMPI PUSH2 0xDA4 PUSH4 0xDF2D9B42 PUSH1 0xE0 SHL PUSH2 0xBCD JUMP JUMPDEST JUMPDEST PUSH2 0xD4A JUMP JUMPDEST PUSH0 PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP3 AND SUB ISZERO PUSH2 0xDE3 JUMPI JUMPDEST PUSH2 0xDE2 PUSH4 0xDF2D9B42 PUSH1 0xE0 SHL PUSH2 0xBCD JUMP JUMPDEST JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x6 PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP1 SWAP3 POP DUP3 SLOAD SWAP2 POP POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP2 POP DUP4 DUP3 EQ DUP4 DUP4 EQ OR SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0xE8 DUP4 SWAP1 SHR SWAP1 POP PUSH1 0xE8 PUSH2 0xE71 DUP7 DUP7 DUP5 PUSH2 0x1041 JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 SHL SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND SWAP3 POP DUP2 TIMESTAMP PUSH1 0xA0 SHL OR DUP4 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x150B7A02 PUSH2 0xED7 PUSH2 0xE0B JUMP JUMPDEST DUP8 DUP7 DUP7 PUSH1 0x40 MLOAD DUP6 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEF9 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1710 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xF34 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xF31 SWAP2 SWAP1 PUSH2 0x176E JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xF89 JUMPI RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xF62 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xF67 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP PUSH0 DUP2 MLOAD SUB PUSH2 0xF81 JUMPI PUSH2 0xF80 PUSH4 0xD1A57ED6 PUSH1 0xE0 SHL PUSH2 0xBCD JUMP JUMPDEST JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP2 POP POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP PUSH0 DUP3 MSTORE DUP2 DUP4 JUMPDEST PUSH1 0x1 ISZERO PUSH2 0x102C JUMPI PUSH1 0x1 DUP5 SUB SWAP4 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP5 MSTORE8 PUSH1 0xA DUP2 DIV SWAP1 POP DUP1 PUSH2 0x100A JUMPI JUMPDEST POP DUP3 DUP2 SUB PUSH1 0x20 DUP5 SUB SWAP4 POP DUP1 DUP5 MSTORE POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x108E DUP2 PUSH2 0x105A JUMP JUMPDEST DUP2 EQ PUSH2 0x1098 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x10A9 DUP2 PUSH2 0x1085 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10C4 JUMPI PUSH2 0x10C3 PUSH2 0x1052 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x10D1 DUP5 DUP3 DUP6 ADD PUSH2 0x109B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10EE DUP2 PUSH2 0x10DA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1107 PUSH0 DUP4 ADD DUP5 PUSH2 0x10E5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x114F DUP3 PUSH2 0x110D JUMP JUMPDEST PUSH2 0x1159 DUP2 DUP6 PUSH2 0x1117 JUMP JUMPDEST SWAP4 POP PUSH2 0x1169 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1127 JUMP JUMPDEST PUSH2 0x1172 DUP2 PUSH2 0x1135 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1195 DUP2 DUP5 PUSH2 0x1145 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x11AF DUP2 PUSH2 0x119D JUMP JUMPDEST DUP2 EQ PUSH2 0x11B9 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x11CA DUP2 PUSH2 0x11A6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11E5 JUMPI PUSH2 0x11E4 PUSH2 0x1052 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x11F2 DUP5 DUP3 DUP6 ADD PUSH2 0x11BC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1224 DUP3 PUSH2 0x11FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1234 DUP2 PUSH2 0x121A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x124D PUSH0 DUP4 ADD DUP5 PUSH2 0x122B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x125C DUP2 PUSH2 0x121A JUMP JUMPDEST DUP2 EQ PUSH2 0x1266 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1277 DUP2 PUSH2 0x1253 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1293 JUMPI PUSH2 0x1292 PUSH2 0x1052 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x12A0 DUP6 DUP3 DUP7 ADD PUSH2 0x1269 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x12B1 DUP6 DUP3 DUP7 ADD PUSH2 0x11BC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x12C4 DUP2 PUSH2 0x119D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12DD PUSH0 DUP4 ADD DUP5 PUSH2 0x12BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x12FA JUMPI PUSH2 0x12F9 PUSH2 0x1052 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1307 DUP7 DUP3 DUP8 ADD PUSH2 0x1269 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1318 DUP7 DUP3 DUP8 ADD PUSH2 0x1269 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x1329 DUP7 DUP3 DUP8 ADD PUSH2 0x11BC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1348 JUMPI PUSH2 0x1347 PUSH2 0x1052 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1355 DUP5 DUP3 DUP6 ADD PUSH2 0x1269 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1367 DUP2 PUSH2 0x10DA JUMP JUMPDEST DUP2 EQ PUSH2 0x1371 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1382 DUP2 PUSH2 0x135E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x139E JUMPI PUSH2 0x139D PUSH2 0x1052 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13AB DUP6 DUP3 DUP7 ADD PUSH2 0x1269 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x13BC DUP6 DUP3 DUP7 ADD PUSH2 0x1374 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x1404 DUP3 PUSH2 0x1135 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1423 JUMPI PUSH2 0x1422 PUSH2 0x13CE JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1435 PUSH2 0x1049 JUMP JUMPDEST SWAP1 POP PUSH2 0x1441 DUP3 DUP3 PUSH2 0x13FB JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x1460 JUMPI PUSH2 0x145F PUSH2 0x13CE JUMP JUMPDEST JUMPDEST PUSH2 0x1469 DUP3 PUSH2 0x1135 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1496 PUSH2 0x1491 DUP5 PUSH2 0x1446 JUMP JUMPDEST PUSH2 0x142C JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x14B2 JUMPI PUSH2 0x14B1 PUSH2 0x13CA JUMP JUMPDEST JUMPDEST PUSH2 0x14BD DUP5 DUP3 DUP6 PUSH2 0x1476 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x14D9 JUMPI PUSH2 0x14D8 PUSH2 0x13C6 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x14E9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x1484 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x150A JUMPI PUSH2 0x1509 PUSH2 0x1052 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1517 DUP8 DUP3 DUP9 ADD PUSH2 0x1269 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x1528 DUP8 DUP3 DUP9 ADD PUSH2 0x1269 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x1539 DUP8 DUP3 DUP9 ADD PUSH2 0x11BC JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x155A JUMPI PUSH2 0x1559 PUSH2 0x1056 JUMP JUMPDEST JUMPDEST PUSH2 0x1566 DUP8 DUP3 DUP9 ADD PUSH2 0x14C5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1588 JUMPI PUSH2 0x1587 PUSH2 0x1052 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1595 DUP6 DUP3 DUP7 ADD PUSH2 0x1269 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x15A6 DUP6 DUP3 DUP7 ADD PUSH2 0x1269 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x15F4 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1607 JUMPI PUSH2 0x1606 PUSH2 0x15B0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1621 DUP3 PUSH2 0x110D JUMP JUMPDEST PUSH2 0x162B DUP2 DUP6 PUSH2 0x160D JUMP JUMPDEST SWAP4 POP PUSH2 0x163B DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1127 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1652 DUP3 DUP6 PUSH2 0x1617 JUMP JUMPDEST SWAP2 POP PUSH2 0x165E DUP3 DUP5 PUSH2 0x1617 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x16A1 DUP3 PUSH2 0x119D JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x16B3 JUMPI PUSH2 0x16B2 PUSH2 0x166A JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x16E2 DUP3 PUSH2 0x16BE JUMP JUMPDEST PUSH2 0x16EC DUP2 DUP6 PUSH2 0x16C8 JUMP JUMPDEST SWAP4 POP PUSH2 0x16FC DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1127 JUMP JUMPDEST PUSH2 0x1705 DUP2 PUSH2 0x1135 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x1723 PUSH0 DUP4 ADD DUP8 PUSH2 0x122B JUMP JUMPDEST PUSH2 0x1730 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x122B JUMP JUMPDEST PUSH2 0x173D PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x12BB JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x174F DUP2 DUP5 PUSH2 0x16D8 JUMP JUMPDEST SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x1768 DUP2 PUSH2 0x1085 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1783 JUMPI PUSH2 0x1782 PUSH2 0x1052 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1790 DUP5 DUP3 DUP6 ADD PUSH2 0x175A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xEE 0xCB 0xE0 SWAP1 0xA9 0xCC SWAP1 0xA9 JUMPDEST SHR 0xF8 SWAP5 SWAP6 INVALID 0xAB PUSH9 0x941A528356FF97BFBE MUL DUP12 LOG2 GASPRICE 0xEC PUSH3 0x296473 PUSH16 0x6C634300081B00330000000000000000 ",
							"sourceMap": "2185:42638:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10454:630;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11338:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;18201:223;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;17929:122;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7184:317;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;21836:3447;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;25374:187;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12699:150;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8335:239;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11507:102;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;18751:231;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;26142:405;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11710:322;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;19132:162;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10454:630;10539:4;10872:10;10857:25;;:11;:25;;;;:101;;;;10948:10;10933:25;;:11;:25;;;;10857:101;:177;;;;11024:10;11009:25;;:11;:25;;;;10857:177;10838:196;;10454:630;;;:::o;11338:98::-;11392:13;11424:5;11417:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11338:98;:::o;18201:223::-;18277:7;18301:16;18309:7;18301;:16::i;:::-;18296:73;;18319:50;18327:41;;;18319:7;:50::i;:::-;18296:73;18387:15;:24;18403:7;18387:24;;;;;;;;;;;:30;;;;;;;;;;;;18380:37;;18201:223;;;:::o;17929:122::-;18017:27;18026:2;18030:7;18039:4;18017:8;:27::i;:::-;17929:122;;:::o;7184:317::-;7245:7;7469:15;:13;:15::i;:::-;7454:12;;7438:13;;:28;:46;7431:53;;7184:317;:::o;21836:3447::-;21973:27;22003;22022:7;22003:18;:27::i;:::-;21973:57;;4075:14;22171:4;22155:22;;:41;22132:66;;22254:4;22213:45;;22229:19;22213:45;;;22209:95;;22260:44;22268:35;;;22260:7;:44::i;:::-;22209:95;22316:27;22345:23;22372:35;22399:7;22372:26;:35::i;:::-;22315:92;;;;22504:68;22529:15;22546:4;22552:19;:17;:19::i;:::-;22504:24;:68::i;:::-;22499:188;;22591:43;22608:4;22614:19;:17;:19::i;:::-;22591:16;:43::i;:::-;22586:101;;22636:51;22644:42;;;22636:7;:51::i;:::-;22586:101;22499:188;22698:43;22720:4;22726:2;22730:7;22739:1;22698:21;:43::i;:::-;22830:15;22827:157;;;22968:1;22947:19;22940:30;22827:157;23356:18;:24;23375:4;23356:24;;;;;;;;;;;;;;;;23354:26;;;;;;;;;;;;23424:18;:22;23443:2;23424:22;;;;;;;;;;;;;;;;23422:24;;;;;;;;;;;23739:143;23775:2;23823:45;23838:4;23844:2;23848:19;23823:14;:45::i;:::-;3682:8;23795:73;23739:18;:143::i;:::-;23710:17;:26;23728:7;23710:26;;;;;;;;;;;:172;;;;24050:1;3682:8;23999:19;:47;:52;23995:617;;24071:19;24103:1;24093:7;:11;24071:33;;24258:1;24224:17;:30;24242:11;24224:30;;;;;;;;;;;;:35;24220:378;;24360:13;;24345:11;:28;24341:239;;24538:19;24505:17;:30;24523:11;24505:30;;;;;;;;;;;:52;;;;24341:239;24220:378;24053:559;23995:617;24721:16;4075:14;24756:2;24740:20;;:39;24721:58;;25111:7;25076:8;25043:4;24986:25;24932:1;24876;24854:292;25181:1;25169:8;:13;25165:58;;25184:39;25192:30;;;25184:7;:39::i;:::-;25165:58;25234:42;25255:4;25261:2;25265:7;25274:1;25234:20;:42::i;:::-;21963:3320;;;;21836:3447;;;:::o;25374:187::-;25515:39;25532:4;25538:2;25542:7;25515:39;;;;;;;;;;;;:16;:39::i;:::-;25374:187;;;:::o;12699:150::-;12771:7;12813:27;12832:7;12813:18;:27::i;:::-;12790:52;;12699:150;;;:::o;8335:239::-;8407:7;8447:1;8430:19;;:5;:19;;;8426:69;;8451:44;8459:35;;;8451:7;:44::i;:::-;8426:69;2650:13;8512:18;:25;8531:5;8512:25;;;;;;;;;;;;;;;;:55;8505:62;;8335:239;;;:::o;11507:102::-;11563:13;11595:7;11588:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11507:102;:::o;18751:231::-;18897:8;18845:18;:39;18864:19;:17;:19::i;:::-;18845:39;;;;;;;;;;;;;;;:49;18885:8;18845:49;;;;;;;;;;;;;;;;:60;;;;;;;;;;;;;;;;;;18956:8;18920:55;;18935:19;:17;:19::i;:::-;18920:55;;;18966:8;18920:55;;;;;;:::i;:::-;;;;;;;;18751:231;;:::o;26142:405::-;26311:31;26324:4;26330:2;26334:7;26311:12;:31::i;:::-;26374:1;26356:2;:14;;;:19;26352:189;;26394:56;26425:4;26431:2;26435:7;26444:5;26394:30;:56::i;:::-;26389:152;;26470:56;26478:47;;;26470:7;:56::i;:::-;26389:152;26352:189;26142:405;;;;:::o;11710:322::-;11783:13;11813:16;11821:7;11813;:16::i;:::-;11808:68;;11831:45;11839:36;;;11831:7;:45::i;:::-;11808:68;11887:21;11911:10;:8;:10::i;:::-;11887:34;;11963:1;11944:7;11938:21;:26;:87;;;;;;;;;;;;;;;;;11991:7;12000:18;12010:7;12000:9;:18::i;:::-;11974:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11938:87;11931:94;;;11710:322;;;:::o;19132:162::-;19229:4;19252:18;:25;19271:5;19252:25;;;;;;;;;;;;;;;:35;19278:8;19252:35;;;;;;;;;;;;;;;;;;;;;;;;;19245:42;;19132:162;;;;:::o;19543:360::-;19608:11;19654:7;19635:15;:13;:15::i;:::-;:26;19631:266;;19691:13;;19681:7;:23;19677:210;;;19724:14;19756:60;19804:1;19773:17;:26;19791:7;19773:26;;;;;;;;;;;;19764:35;;;19763:42;19756:60;;19807:9;;;;:::i;:::-;;;19756:60;;;19871:1;3408:8;19843:6;:24;:29;19834:38;;19706:181;19677:210;19631:266;19543:360;;;:::o;44661:160::-;44760:13;44754:4;44747:27;44800:4;44794;44787:18;36309:460;36433:13;36449:16;36457:7;36449;:16::i;:::-;36433:32;;36480:13;:45;;;;;36520:5;36497:28;;:19;:17;:19::i;:::-;:28;;;;36480:45;36476:198;;;36544:44;36561:5;36568:19;:17;:19::i;:::-;36544:16;:44::i;:::-;36539:135;;36608:51;36616:42;;;36608:7;:51::i;:::-;36539:135;36476:198;36717:2;36684:15;:24;36700:7;36684:24;;;;;;;;;;;:30;;;:35;;;;;;;;;;;;;;;;;;36754:7;36750:2;36734:28;;36743:5;36734:28;;;;;;;;;;;;36423:346;36309:460;;;:::o;6716:90::-;6772:7;6798:1;6791:8;;6716:90;:::o;14140:1978::-;14207:14;14256:7;14237:15;:13;:15::i;:::-;:26;14233:1822;;14288:17;:26;14306:7;14288:26;;;;;;;;;;;;14279:35;;14422:1;14412:6;:11;14408:1270;;14458:13;;14447:7;:24;14443:77;;14473:47;14481:38;;;14473:7;:47::i;:::-;14443:77;15067:597;15143:17;:28;15161:9;;;;;;;15143:28;;;;;;;;;;;;15134:37;;15229:1;15219:6;:11;15215:25;15232:8;15215:25;15294:1;3408:8;15266:6;:24;:29;15262:48;15297:13;15262:48;15598:47;15606:38;;;15598:7;:47::i;:::-;15067:597;;;14408:1270;16028:1;3408:8;16000:6;:24;:29;15996:48;16031:13;15996:48;14233:1822;16064:47;16072:38;;;16064:7;:47::i;:::-;14140:1978;;;;:::o;20761:474::-;20860:27;20889:23;20928:38;20969:15;:24;20985:7;20969:24;;;;;;;;;;;20928:65;;21143:18;21120:41;;21199:19;21193:26;21174:45;;21106:123;20761:474;;;:::o;42691:103::-;42751:7;42777:10;42770:17;;42691:103;:::o;20007:646::-;20152:11;20314:16;20307:5;20303:28;20294:37;;20472:16;20461:9;20457:32;20444:45;;20620:15;20609:9;20606:30;20598:5;20587:9;20584:20;20581:56;20571:66;;20007:646;;;;;:::o;27191:154::-;;;;;:::o;42018:304::-;42149:7;42168:16;3803:3;42194:19;:41;;42168:68;;3803:3;42261:31;42272:4;42278:2;42282:9;42261:10;:31::i;:::-;42253:40;;:62;;42246:69;;;42018:304;;;;;:::o;16651:443::-;16731:14;16896:16;16889:5;16885:28;16876:37;;17071:5;17057:11;17032:23;17028:41;17025:52;17018:5;17015:63;17005:73;;16651:443;;;;:::o;27992:153::-;;;;;:::o;28573:673::-;28731:4;28776:2;28751:45;;;28797:19;:17;:19::i;:::-;28818:4;28824:7;28833:5;28751:88;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;28747:493;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29046:1;29029:6;:13;:18;29025:113;;29067:56;29075:47;;;29067:7;:56::i;:::-;29025:113;29208:6;29202:13;29193:6;29189:2;29185:15;29178:38;28747:493;28917:54;;;28907:64;;;:6;:64;;;;28900:71;;;28573:673;;;;;;:::o;12277:92::-;12328:13;12353:9;;;;;;;;;;;;;;12277:92;:::o;42891:1708::-;42956:17;43384:4;43377;43371:11;43367:22;43474:1;43468:4;43461:15;43547:4;43544:1;43540:12;43533:19;;43627:1;43622:3;43615:14;43728:3;43962:5;43944:419;43970:1;43944:419;;;44009:1;44004:3;44000:11;43993:18;;44177:2;44171:4;44167:13;44163:2;44159:22;44154:3;44146:36;44269:2;44263:4;44259:13;44251:21;;44334:4;43944:419;44324:25;43944:419;43948:21;44400:3;44395;44391:13;44513:4;44508:3;44504:14;44497:21;;44576:6;44571:3;44564:19;42994:1599;;;42891:1708;;;:::o;41729:143::-;41862:6;41729:143;;;;;:::o;7:75:4:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:77::-;2790:7;2819:5;2808:16;;2753:77;;;:::o;2836:122::-;2909:24;2927:5;2909:24;:::i;:::-;2902:5;2899:35;2889:63;;2948:1;2945;2938:12;2889:63;2836:122;:::o;2964:139::-;3010:5;3048:6;3035:20;3026:29;;3064:33;3091:5;3064:33;:::i;:::-;2964:139;;;;:::o;3109:329::-;3168:6;3217:2;3205:9;3196:7;3192:23;3188:32;3185:119;;;3223:79;;:::i;:::-;3185:119;3343:1;3368:53;3413:7;3404:6;3393:9;3389:22;3368:53;:::i;:::-;3358:63;;3314:117;3109:329;;;;:::o;3444:126::-;3481:7;3521:42;3514:5;3510:54;3499:65;;3444:126;;;:::o;3576:96::-;3613:7;3642:24;3660:5;3642:24;:::i;:::-;3631:35;;3576:96;;;:::o;3678:118::-;3765:24;3783:5;3765:24;:::i;:::-;3760:3;3753:37;3678:118;;:::o;3802:222::-;3895:4;3933:2;3922:9;3918:18;3910:26;;3946:71;4014:1;4003:9;3999:17;3990:6;3946:71;:::i;:::-;3802:222;;;;:::o;4030:122::-;4103:24;4121:5;4103:24;:::i;:::-;4096:5;4093:35;4083:63;;4142:1;4139;4132:12;4083:63;4030:122;:::o;4158:139::-;4204:5;4242:6;4229:20;4220:29;;4258:33;4285:5;4258:33;:::i;:::-;4158:139;;;;:::o;4303:474::-;4371:6;4379;4428:2;4416:9;4407:7;4403:23;4399:32;4396:119;;;4434:79;;:::i;:::-;4396:119;4554:1;4579:53;4624:7;4615:6;4604:9;4600:22;4579:53;:::i;:::-;4569:63;;4525:117;4681:2;4707:53;4752:7;4743:6;4732:9;4728:22;4707:53;:::i;:::-;4697:63;;4652:118;4303:474;;;;;:::o;4783:118::-;4870:24;4888:5;4870:24;:::i;:::-;4865:3;4858:37;4783:118;;:::o;4907:222::-;5000:4;5038:2;5027:9;5023:18;5015:26;;5051:71;5119:1;5108:9;5104:17;5095:6;5051:71;:::i;:::-;4907:222;;;;:::o;5135:619::-;5212:6;5220;5228;5277:2;5265:9;5256:7;5252:23;5248:32;5245:119;;;5283:79;;:::i;:::-;5245:119;5403:1;5428:53;5473:7;5464:6;5453:9;5449:22;5428:53;:::i;:::-;5418:63;;5374:117;5530:2;5556:53;5601:7;5592:6;5581:9;5577:22;5556:53;:::i;:::-;5546:63;;5501:118;5658:2;5684:53;5729:7;5720:6;5709:9;5705:22;5684:53;:::i;:::-;5674:63;;5629:118;5135:619;;;;;:::o;5760:329::-;5819:6;5868:2;5856:9;5847:7;5843:23;5839:32;5836:119;;;5874:79;;:::i;:::-;5836:119;5994:1;6019:53;6064:7;6055:6;6044:9;6040:22;6019:53;:::i;:::-;6009:63;;5965:117;5760:329;;;;:::o;6095:116::-;6165:21;6180:5;6165:21;:::i;:::-;6158:5;6155:32;6145:60;;6201:1;6198;6191:12;6145:60;6095:116;:::o;6217:133::-;6260:5;6298:6;6285:20;6276:29;;6314:30;6338:5;6314:30;:::i;:::-;6217:133;;;;:::o;6356:468::-;6421:6;6429;6478:2;6466:9;6457:7;6453:23;6449:32;6446:119;;;6484:79;;:::i;:::-;6446:119;6604:1;6629:53;6674:7;6665:6;6654:9;6650:22;6629:53;:::i;:::-;6619:63;;6575:117;6731:2;6757:50;6799:7;6790:6;6779:9;6775:22;6757:50;:::i;:::-;6747:60;;6702:115;6356:468;;;;;:::o;6830:117::-;6939:1;6936;6929:12;6953:117;7062:1;7059;7052:12;7076:180;7124:77;7121:1;7114:88;7221:4;7218:1;7211:15;7245:4;7242:1;7235:15;7262:281;7345:27;7367:4;7345:27;:::i;:::-;7337:6;7333:40;7475:6;7463:10;7460:22;7439:18;7427:10;7424:34;7421:62;7418:88;;;7486:18;;:::i;:::-;7418:88;7526:10;7522:2;7515:22;7305:238;7262:281;;:::o;7549:129::-;7583:6;7610:20;;:::i;:::-;7600:30;;7639:33;7667:4;7659:6;7639:33;:::i;:::-;7549:129;;;:::o;7684:307::-;7745:4;7835:18;7827:6;7824:30;7821:56;;;7857:18;;:::i;:::-;7821:56;7895:29;7917:6;7895:29;:::i;:::-;7887:37;;7979:4;7973;7969:15;7961:23;;7684:307;;;:::o;7997:148::-;8095:6;8090:3;8085;8072:30;8136:1;8127:6;8122:3;8118:16;8111:27;7997:148;;;:::o;8151:423::-;8228:5;8253:65;8269:48;8310:6;8269:48;:::i;:::-;8253:65;:::i;:::-;8244:74;;8341:6;8334:5;8327:21;8379:4;8372:5;8368:16;8417:3;8408:6;8403:3;8399:16;8396:25;8393:112;;;8424:79;;:::i;:::-;8393:112;8514:54;8561:6;8556:3;8551;8514:54;:::i;:::-;8234:340;8151:423;;;;;:::o;8593:338::-;8648:5;8697:3;8690:4;8682:6;8678:17;8674:27;8664:122;;8705:79;;:::i;:::-;8664:122;8822:6;8809:20;8847:78;8921:3;8913:6;8906:4;8898:6;8894:17;8847:78;:::i;:::-;8838:87;;8654:277;8593:338;;;;:::o;8937:943::-;9032:6;9040;9048;9056;9105:3;9093:9;9084:7;9080:23;9076:33;9073:120;;;9112:79;;:::i;:::-;9073:120;9232:1;9257:53;9302:7;9293:6;9282:9;9278:22;9257:53;:::i;:::-;9247:63;;9203:117;9359:2;9385:53;9430:7;9421:6;9410:9;9406:22;9385:53;:::i;:::-;9375:63;;9330:118;9487:2;9513:53;9558:7;9549:6;9538:9;9534:22;9513:53;:::i;:::-;9503:63;;9458:118;9643:2;9632:9;9628:18;9615:32;9674:18;9666:6;9663:30;9660:117;;;9696:79;;:::i;:::-;9660:117;9801:62;9855:7;9846:6;9835:9;9831:22;9801:62;:::i;:::-;9791:72;;9586:287;8937:943;;;;;;;:::o;9886:474::-;9954:6;9962;10011:2;9999:9;9990:7;9986:23;9982:32;9979:119;;;10017:79;;:::i;:::-;9979:119;10137:1;10162:53;10207:7;10198:6;10187:9;10183:22;10162:53;:::i;:::-;10152:63;;10108:117;10264:2;10290:53;10335:7;10326:6;10315:9;10311:22;10290:53;:::i;:::-;10280:63;;10235:118;9886:474;;;;;:::o;10366:180::-;10414:77;10411:1;10404:88;10511:4;10508:1;10501:15;10535:4;10532:1;10525:15;10552:320;10596:6;10633:1;10627:4;10623:12;10613:22;;10680:1;10674:4;10670:12;10701:18;10691:81;;10757:4;10749:6;10745:17;10735:27;;10691:81;10819:2;10811:6;10808:14;10788:18;10785:38;10782:84;;10838:18;;:::i;:::-;10782:84;10603:269;10552:320;;;:::o;10878:148::-;10980:11;11017:3;11002:18;;10878:148;;;;:::o;11032:390::-;11138:3;11166:39;11199:5;11166:39;:::i;:::-;11221:89;11303:6;11298:3;11221:89;:::i;:::-;11214:96;;11319:65;11377:6;11372:3;11365:4;11358:5;11354:16;11319:65;:::i;:::-;11409:6;11404:3;11400:16;11393:23;;11142:280;11032:390;;;;:::o;11428:435::-;11608:3;11630:95;11721:3;11712:6;11630:95;:::i;:::-;11623:102;;11742:95;11833:3;11824:6;11742:95;:::i;:::-;11735:102;;11854:3;11847:10;;11428:435;;;;;:::o;11869:180::-;11917:77;11914:1;11907:88;12014:4;12011:1;12004:15;12038:4;12035:1;12028:15;12055:171;12094:3;12117:24;12135:5;12117:24;:::i;:::-;12108:33;;12163:4;12156:5;12153:15;12150:41;;12171:18;;:::i;:::-;12150:41;12218:1;12211:5;12207:13;12200:20;;12055:171;;;:::o;12232:98::-;12283:6;12317:5;12311:12;12301:22;;12232:98;;;:::o;12336:168::-;12419:11;12453:6;12448:3;12441:19;12493:4;12488:3;12484:14;12469:29;;12336:168;;;;:::o;12510:373::-;12596:3;12624:38;12656:5;12624:38;:::i;:::-;12678:70;12741:6;12736:3;12678:70;:::i;:::-;12671:77;;12757:65;12815:6;12810:3;12803:4;12796:5;12792:16;12757:65;:::i;:::-;12847:29;12869:6;12847:29;:::i;:::-;12842:3;12838:39;12831:46;;12600:283;12510:373;;;;:::o;12889:640::-;13084:4;13122:3;13111:9;13107:19;13099:27;;13136:71;13204:1;13193:9;13189:17;13180:6;13136:71;:::i;:::-;13217:72;13285:2;13274:9;13270:18;13261:6;13217:72;:::i;:::-;13299;13367:2;13356:9;13352:18;13343:6;13299:72;:::i;:::-;13418:9;13412:4;13408:20;13403:2;13392:9;13388:18;13381:48;13446:76;13517:4;13508:6;13446:76;:::i;:::-;13438:84;;12889:640;;;;;;;:::o;13535:141::-;13591:5;13622:6;13616:13;13607:22;;13638:32;13664:5;13638:32;:::i;:::-;13535:141;;;;:::o;13682:349::-;13751:6;13800:2;13788:9;13779:7;13775:23;13771:32;13768:119;;;13806:79;;:::i;:::-;13768:119;13926:1;13951:63;14006:7;13997:6;13986:9;13982:22;13951:63;:::i;:::-;13941:73;;13897:127;13682:349;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1219000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2914",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "infinite",
								"supportsInterface(bytes4)": "736",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "4621",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfers(address,address,uint256,uint256)": "17",
								"_approve(address,uint256)": "infinite",
								"_approve(address,uint256,bool)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "17",
								"_burn(uint256)": "infinite",
								"_burn(uint256,bool)": "infinite",
								"_checkContractOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "infinite",
								"_extraData(address,address,uint24)": "23",
								"_getApprovedSlotAndAddress(uint256)": "2231",
								"_getAux(address)": "infinite",
								"_initializeOwnershipAt(uint256)": "infinite",
								"_isSenderApprovedOrOwner(address,address,address)": "77",
								"_mint(address,uint256)": "infinite",
								"_mintERC2309(address,uint256)": "infinite",
								"_msgSenderERC721A()": "21",
								"_nextExtraData(address,address,uint256)": "111",
								"_nextInitializedFlag(uint256)": "infinite",
								"_nextTokenId()": "infinite",
								"_numberBurned(address)": "infinite",
								"_numberMinted(address)": "infinite",
								"_ownershipAt(uint256)": "infinite",
								"_ownershipIsInitialized(uint256)": "infinite",
								"_ownershipOf(uint256)": "infinite",
								"_packOwnershipData(address,uint256)": "60",
								"_packedOwnershipOf(uint256)": "infinite",
								"_revert(bytes4)": "17",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_setAux(address,uint64)": "infinite",
								"_setExtraDataAt(uint256,uint24)": "infinite",
								"_startTokenId()": "21",
								"_toString(uint256)": "infinite",
								"_totalBurned()": "infinite",
								"_totalMinted()": "infinite",
								"_unpackedOwnership(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2185,
									"end": 44823,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 2185,
									"end": 44823,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2185,
									"end": 44823,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 6236,
									"end": 6390,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6310,
									"end": 6315,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6302,
									"end": 6307,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6302,
									"end": 6315,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6302,
									"end": 6315,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6302,
									"end": 6315,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 6302,
									"end": 6315,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6302,
									"end": 6315,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6302,
									"end": 6315,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 6302,
									"end": 6315,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6302,
									"end": 6315,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 6302,
									"end": 6315,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6302,
									"end": 6315,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6335,
									"end": 6342,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6325,
									"end": 6332,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 6325,
									"end": 6342,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6325,
									"end": 6342,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6325,
									"end": 6342,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 6325,
									"end": 6342,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6325,
									"end": 6342,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6325,
									"end": 6342,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 6325,
									"end": 6342,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6325,
									"end": 6342,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 6325,
									"end": 6342,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6325,
									"end": 6342,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6368,
									"end": 6383,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 6368,
									"end": 6381,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 6368,
									"end": 6381,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6368,
									"end": 6381,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 6368,
									"end": 6383,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 6368,
									"end": 6383,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 6368,
									"end": 6383,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6368,
									"end": 6383,
									"name": "tag",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 6368,
									"end": 6383,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6352,
									"end": 6365,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6352,
									"end": 6383,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6352,
									"end": 6383,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6352,
									"end": 6383,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 6352,
									"end": 6383,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2185,
									"end": 44823,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 2185,
									"end": 44823,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6716,
									"end": 6806,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 6716,
									"end": 6806,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6772,
									"end": 6779,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6798,
									"end": 6799,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6791,
									"end": 6799,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6791,
									"end": 6799,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6716,
									"end": 6806,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6716,
									"end": 6806,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 82,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 7,
									"end": 82,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 40,
									"end": 46,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 73,
									"end": 75,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 67,
									"end": 76,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 57,
									"end": 76,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 57,
									"end": 76,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 82,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7,
									"end": 82,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 211,
									"end": 328,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 211,
									"end": 328,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 320,
									"end": 321,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 318,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 322,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 334,
									"end": 451,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 334,
									"end": 451,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 443,
									"end": 444,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 433,
									"end": 445,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 457,
									"end": 574,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 457,
									"end": 574,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 566,
									"end": 567,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 563,
									"end": 564,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 556,
									"end": 568,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 580,
									"end": 682,
									"name": "tag",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 580,
									"end": 682,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 621,
									"end": 627,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 672,
									"end": 674,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 668,
									"end": 675,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 663,
									"end": 665,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 656,
									"end": 661,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 652,
									"end": 666,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 648,
									"end": 676,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 638,
									"end": 676,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 638,
									"end": 676,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 580,
									"end": 682,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 580,
									"end": 682,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 580,
									"end": 682,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 688,
									"end": 868,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 688,
									"end": 868,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 736,
									"end": 813,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 733,
									"end": 734,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 726,
									"end": 814,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 833,
									"end": 837,
									"name": "PUSH",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 830,
									"end": 831,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 823,
									"end": 838,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 857,
									"end": 861,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 854,
									"end": 855,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 847,
									"end": 862,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "tag",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 979,
									"end": 983,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 957,
									"end": 984,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 957,
									"end": 984,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 957,
									"end": 984,
									"name": "tag",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 957,
									"end": 984,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 949,
									"end": 955,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 945,
									"end": 985,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1087,
									"end": 1093,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1075,
									"end": 1085,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1072,
									"end": 1094,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1051,
									"end": 1069,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1039,
									"end": 1049,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1036,
									"end": 1070,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1033,
									"end": 1095,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "55"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 1098,
									"end": 1116,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "tag",
									"source": 4,
									"value": "56"
								},
								{
									"begin": 1098,
									"end": 1116,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "tag",
									"source": 4,
									"value": "55"
								},
								{
									"begin": 1030,
									"end": 1118,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1138,
									"end": 1148,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1134,
									"end": 1136,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1127,
									"end": 1149,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 917,
									"end": 1155,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 874,
									"end": 1155,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 874,
									"end": 1155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1195,
									"end": 1201,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 1222,
									"end": 1242,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "tag",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 1222,
									"end": 1242,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1212,
									"end": 1242,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 1279,
									"end": 1283,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1271,
									"end": 1277,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1251,
									"end": 1284,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "tag",
									"source": 4,
									"value": "59"
								},
								{
									"begin": 1251,
									"end": 1284,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1161,
									"end": 1290,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1161,
									"end": 1290,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1358,
									"end": 1362,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1448,
									"end": 1466,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1440,
									"end": 1446,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1437,
									"end": 1467,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "62"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 1470,
									"end": 1488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "tag",
									"source": 4,
									"value": "62"
								},
								{
									"begin": 1470,
									"end": 1488,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "tag",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 1434,
									"end": 1490,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 1530,
									"end": 1536,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "18"
								},
								{
									"begin": 1508,
									"end": 1537,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "tag",
									"source": 4,
									"value": "63"
								},
								{
									"begin": 1508,
									"end": 1537,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1500,
									"end": 1537,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1592,
									"end": 1596,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1586,
									"end": 1590,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1582,
									"end": 1597,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1574,
									"end": 1597,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1296,
									"end": 1604,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1296,
									"end": 1604,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1699,
									"end": 1705,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1694,
									"end": 1697,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1689,
									"end": 1692,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1683,
									"end": 1706,
									"name": "MCOPY",
									"source": 4
								},
								{
									"begin": 1740,
									"end": 1741,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1731,
									"end": 1737,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1726,
									"end": 1729,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1722,
									"end": 1738,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1715,
									"end": 1742,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1610,
									"end": 1749,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1610,
									"end": 1749,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1844,
									"end": 1849,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "67"
								},
								{
									"begin": 1927,
									"end": 1933,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1885,
									"end": 1934,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "tag",
									"source": 4,
									"value": "67"
								},
								{
									"begin": 1885,
									"end": 1934,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 1869,
									"end": 1935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "tag",
									"source": 4,
									"value": "66"
								},
								{
									"begin": 1869,
									"end": 1935,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1860,
									"end": 1935,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1958,
									"end": 1964,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1951,
									"end": 1956,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1944,
									"end": 1965,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1996,
									"end": 2000,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1989,
									"end": 1994,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1985,
									"end": 2001,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2034,
									"end": 2037,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2025,
									"end": 2031,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2020,
									"end": 2023,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2016,
									"end": 2032,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2013,
									"end": 2038,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "68"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "69"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 2041,
									"end": 2120,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "tag",
									"source": 4,
									"value": "69"
								},
								{
									"begin": 2041,
									"end": 2120,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "tag",
									"source": 4,
									"value": "68"
								},
								{
									"begin": 2010,
									"end": 2122,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "70"
								},
								{
									"begin": 2176,
									"end": 2182,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2171,
									"end": 2174,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2166,
									"end": 2169,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 2131,
									"end": 2183,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "tag",
									"source": 4,
									"value": "70"
								},
								{
									"begin": 2131,
									"end": 2183,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1850,
									"end": 2189,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1755,
									"end": 2189,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1755,
									"end": 2189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "tag",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2276,
									"end": 2281,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2325,
									"end": 2328,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2318,
									"end": 2322,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 2310,
									"end": 2316,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2306,
									"end": 2323,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2302,
									"end": 2329,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "72"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 2333,
									"end": 2412,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "tag",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 2333,
									"end": 2412,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "tag",
									"source": 4,
									"value": "72"
								},
								{
									"begin": 2292,
									"end": 2414,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2443,
									"end": 2449,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2437,
									"end": 2450,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "74"
								},
								{
									"begin": 2554,
									"end": 2557,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2546,
									"end": 2552,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2539,
									"end": 2543,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2531,
									"end": 2537,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 2527,
									"end": 2544,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 2468,
									"end": 2558,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "tag",
									"source": 4,
									"value": "74"
								},
								{
									"begin": 2468,
									"end": 2558,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2459,
									"end": 2558,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2282,
									"end": 2564,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2209,
									"end": 2564,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2209,
									"end": 2564,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2669,
									"end": 2675,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2677,
									"end": 2683,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2726,
									"end": 2728,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 2714,
									"end": 2723,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2705,
									"end": 2712,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2701,
									"end": 2724,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 2697,
									"end": 2729,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "76"
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "77"
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 2732,
									"end": 2811,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "tag",
									"source": 4,
									"value": "77"
								},
								{
									"begin": 2732,
									"end": 2811,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "tag",
									"source": 4,
									"value": "76"
								},
								{
									"begin": 2694,
									"end": 2813,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2873,
									"end": 2874,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2862,
									"end": 2871,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 2858,
									"end": 2875,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2852,
									"end": 2876,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 2903,
									"end": 2921,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2895,
									"end": 2901,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2892,
									"end": 2922,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "78"
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "79"
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 2925,
									"end": 3004,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "tag",
									"source": 4,
									"value": "79"
								},
								{
									"begin": 2925,
									"end": 3004,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "tag",
									"source": 4,
									"value": "78"
								},
								{
									"begin": 2889,
									"end": 3006,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 3096,
									"end": 3103,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3087,
									"end": 3093,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3076,
									"end": 3085,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 3072,
									"end": 3094,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 3030,
									"end": 3104,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "tag",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 3030,
									"end": 3104,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3020,
									"end": 3104,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 3020,
									"end": 3104,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2823,
									"end": 3114,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3174,
									"end": 3176,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3163,
									"end": 3172,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3159,
									"end": 3177,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3153,
									"end": 3178,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3205,
									"end": 3223,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3197,
									"end": 3203,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3194,
									"end": 3224,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "81"
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "82"
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 3227,
									"end": 3306,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "tag",
									"source": 4,
									"value": "82"
								},
								{
									"begin": 3227,
									"end": 3306,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "tag",
									"source": 4,
									"value": "81"
								},
								{
									"begin": 3191,
									"end": 3308,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "83"
								},
								{
									"begin": 3398,
									"end": 3405,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3389,
									"end": 3395,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3378,
									"end": 3387,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 3374,
									"end": 3396,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 3332,
									"end": 3406,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "tag",
									"source": 4,
									"value": "83"
								},
								{
									"begin": 3332,
									"end": 3406,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3322,
									"end": 3406,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3322,
									"end": 3406,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3124,
									"end": 3416,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2570,
									"end": 3423,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2570,
									"end": 3423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3481,
									"end": 3487,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3515,
									"end": 3520,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3509,
									"end": 3521,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3499,
									"end": 3521,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3499,
									"end": 3521,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3429,
									"end": 3528,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3429,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3534,
									"end": 3714,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 3534,
									"end": 3714,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3582,
									"end": 3659,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 3579,
									"end": 3580,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3572,
									"end": 3660,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3679,
									"end": 3683,
									"name": "PUSH",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 3676,
									"end": 3677,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 3669,
									"end": 3684,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 3703,
									"end": 3707,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 3700,
									"end": 3701,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3693,
									"end": 3708,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3764,
									"end": 3770,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3801,
									"end": 3802,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 3795,
									"end": 3799,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3791,
									"end": 3803,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 3781,
									"end": 3803,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3781,
									"end": 3803,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3848,
									"end": 3849,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3842,
									"end": 3846,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3838,
									"end": 3850,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3869,
									"end": 3887,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "87"
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3925,
									"end": 3929,
									"name": "PUSH",
									"source": 4,
									"value": "7F"
								},
								{
									"begin": 3917,
									"end": 3923,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3913,
									"end": 3930,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3903,
									"end": 3930,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3903,
									"end": 3930,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "tag",
									"source": 4,
									"value": "87"
								},
								{
									"begin": 3859,
									"end": 3940,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3987,
									"end": 3989,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3979,
									"end": 3985,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3976,
									"end": 3990,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 3956,
									"end": 3974,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3953,
									"end": 3991,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "88"
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "89"
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 4006,
									"end": 4024,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "tag",
									"source": 4,
									"value": "89"
								},
								{
									"begin": 4006,
									"end": 4024,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "tag",
									"source": 4,
									"value": "88"
								},
								{
									"begin": 3950,
									"end": 4034,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3771,
									"end": 4040,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3720,
									"end": 4040,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3720,
									"end": 4040,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4095,
									"end": 4099,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4118,
									"end": 4121,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4110,
									"end": 4121,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4110,
									"end": 4121,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4141,
									"end": 4144,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4138,
									"end": 4139,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4131,
									"end": 4145,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 4175,
									"end": 4179,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 4172,
									"end": 4173,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4162,
									"end": 4180,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 4154,
									"end": 4180,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4154,
									"end": 4180,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4046,
									"end": 4187,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4046,
									"end": 4187,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4230,
									"end": 4236,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4277,
									"end": 4279,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 4272,
									"end": 4274,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 4265,
									"end": 4270,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4261,
									"end": 4275,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 4257,
									"end": 4280,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 4247,
									"end": 4280,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4247,
									"end": 4280,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4193,
									"end": 4286,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4193,
									"end": 4286,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4336,
									"end": 4344,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4386,
									"end": 4391,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4380,
									"end": 4384,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4376,
									"end": 4392,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 4355,
									"end": 4392,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4355,
									"end": 4392,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4292,
									"end": 4399,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4292,
									"end": 4399,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4474,
									"end": 4480,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4525,
									"name": "PUSH",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 4512,
									"end": 4522,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4508,
									"end": 4526,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "94"
								},
								{
									"begin": 4577,
									"end": 4643,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4566,
									"end": 4575,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 4547,
									"end": 4644,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "tag",
									"source": 4,
									"value": "94"
								},
								{
									"begin": 4547,
									"end": 4644,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "95"
								},
								{
									"begin": 4695,
									"end": 4703,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 4684,
									"end": 4693,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 4665,
									"end": 4704,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "tag",
									"source": 4,
									"value": "95"
								},
								{
									"begin": 4665,
									"end": 4704,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4653,
									"end": 4704,
									"name": "SWAP6",
									"source": 4
								},
								{
									"begin": 4653,
									"end": 4704,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4737,
									"end": 4741,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4733,
									"end": 4742,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 4726,
									"end": 4731,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 4722,
									"end": 4743,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 4713,
									"end": 4743,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 4713,
									"end": 4743,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4786,
									"end": 4790,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 4776,
									"end": 4784,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 4772,
									"end": 4791,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 4765,
									"end": 4770,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 4762,
									"end": 4792,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 4752,
									"end": 4792,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 4752,
									"end": 4792,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4481,
									"end": 4798,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4481,
									"end": 4798,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4405,
									"end": 4798,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4405,
									"end": 4798,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4841,
									"end": 4848,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4870,
									"end": 4875,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4859,
									"end": 4875,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4859,
									"end": 4875,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4804,
									"end": 4881,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4804,
									"end": 4881,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 4915,
									"end": 4918,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 4936,
									"end": 4941,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 4929,
									"end": 4941,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4929,
									"end": 4941,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4887,
									"end": 4947,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4887,
									"end": 4947,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5003,
									"end": 5012,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "99"
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "101"
								},
								{
									"begin": 5081,
									"end": 5086,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 5063,
									"end": 5087,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "tag",
									"source": 4,
									"value": "101"
								},
								{
									"begin": 5063,
									"end": 5087,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 5054,
									"end": 5088,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "tag",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 5054,
									"end": 5088,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 5036,
									"end": 5089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "tag",
									"source": 4,
									"value": "99"
								},
								{
									"begin": 5036,
									"end": 5089,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5023,
									"end": 5089,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5023,
									"end": 5089,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 4953,
									"end": 5095,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 4953,
									"end": 5095,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5144,
									"end": 5147,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5165,
									"end": 5170,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5158,
									"end": 5170,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5158,
									"end": 5170,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5101,
									"end": 5176,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5101,
									"end": 5176,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "tag",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "104"
								},
								{
									"begin": 5323,
									"end": 5330,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 5292,
									"end": 5331,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "tag",
									"source": 4,
									"value": "104"
								},
								{
									"begin": 5292,
									"end": 5331,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "105"
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "106"
								},
								{
									"begin": 5426,
									"end": 5442,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 5402,
									"end": 5443,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "tag",
									"source": 4,
									"value": "106"
								},
								{
									"begin": 5402,
									"end": 5443,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5394,
									"end": 5400,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 5387,
									"end": 5391,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 5381,
									"end": 5392,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 5353,
									"end": 5444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "tag",
									"source": 4,
									"value": "105"
								},
								{
									"begin": 5353,
									"end": 5444,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5347,
									"end": 5351,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 5340,
									"end": 5445,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 5258,
									"end": 5451,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5182,
									"end": 5451,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5182,
									"end": 5451,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5457,
									"end": 5530,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 5457,
									"end": 5530,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5502,
									"end": 5505,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5523,
									"end": 5524,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5516,
									"end": 5524,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5516,
									"end": 5524,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5457,
									"end": 5530,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5457,
									"end": 5530,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "109"
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 5613,
									"end": 5645,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "tag",
									"source": 4,
									"value": "109"
								},
								{
									"begin": 5613,
									"end": 5645,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "110"
								},
								{
									"begin": 5712,
									"end": 5718,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5704,
									"end": 5710,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 5698,
									"end": 5702,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "37"
								},
								{
									"begin": 5654,
									"end": 5719,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "tag",
									"source": 4,
									"value": "110"
								},
								{
									"begin": 5654,
									"end": 5719,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5589,
									"end": 5725,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5536,
									"end": 5725,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5536,
									"end": 5725,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "tag",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "tag",
									"source": 4,
									"value": "112"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5808,
									"end": 5811,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5801,
									"end": 5806,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5798,
									"end": 5812,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "114"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "115"
								},
								{
									"begin": 5899,
									"end": 5900,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 5892,
									"end": 5897,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 5862,
									"end": 5901,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "tag",
									"source": 4,
									"value": "115"
								},
								{
									"begin": 5862,
									"end": 5901,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5835,
									"end": 5836,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 5828,
									"end": 5833,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 5824,
									"end": 5837,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 5815,
									"end": 5837,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 5815,
									"end": 5837,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "112"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "tag",
									"source": 4,
									"value": "114"
								},
								{
									"begin": 5791,
									"end": 5911,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5731,
									"end": 5917,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5731,
									"end": 5917,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6024,
									"end": 6026,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 6019,
									"end": 6022,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6016,
									"end": 6027,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "117"
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "118"
								},
								{
									"begin": 6090,
									"end": 6095,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 6058,
									"end": 6096,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "tag",
									"source": 4,
									"value": "118"
								},
								{
									"begin": 6058,
									"end": 6096,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "119"
								},
								{
									"begin": 6160,
									"end": 6170,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 6142,
									"end": 6171,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "tag",
									"source": 4,
									"value": "119"
								},
								{
									"begin": 6142,
									"end": 6171,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6132,
									"end": 6140,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6128,
									"end": 6172,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6325,
									"end": 6327,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6313,
									"end": 6323,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 6310,
									"end": 6328,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "120"
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6346,
									"end": 6354,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6331,
									"end": 6354,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6331,
									"end": 6354,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "tag",
									"source": 4,
									"value": "120"
								},
								{
									"begin": 6307,
									"end": 6356,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "121"
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "122"
								},
								{
									"begin": 6443,
									"end": 6446,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 6425,
									"end": 6447,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "tag",
									"source": 4,
									"value": "122"
								},
								{
									"begin": 6425,
									"end": 6447,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6415,
									"end": 6423,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6411,
									"end": 6448,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6398,
									"end": 6409,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6369,
									"end": 6449,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "tag",
									"source": 4,
									"value": "121"
								},
								{
									"begin": 6369,
									"end": 6449,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6028,
									"end": 6459,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6028,
									"end": 6459,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "tag",
									"source": 4,
									"value": "117"
								},
								{
									"begin": 6013,
									"end": 6459,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5923,
									"end": 6466,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 5923,
									"end": 6466,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6526,
									"end": 6534,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6576,
									"end": 6581,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6570,
									"end": 6574,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6566,
									"end": 6582,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 6545,
									"end": 6582,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6545,
									"end": 6582,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6472,
									"end": 6589,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6472,
									"end": 6589,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "tag",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6639,
									"end": 6645,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "125"
								},
								{
									"begin": 6720,
									"end": 6721,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6716,
									"end": 6722,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 6708,
									"end": 6713,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 6705,
									"end": 6706,
									"name": "PUSH",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 6701,
									"end": 6714,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 6672,
									"end": 6723,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "tag",
									"source": 4,
									"value": "125"
								},
								{
									"begin": 6672,
									"end": 6723,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6668,
									"end": 6724,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 6753,
									"end": 6757,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6747,
									"end": 6751,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6743,
									"end": 6758,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6733,
									"end": 6758,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6733,
									"end": 6758,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6646,
									"end": 6764,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6595,
									"end": 6764,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6595,
									"end": 6764,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6845,
									"end": 6849,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "127"
								},
								{
									"begin": 7016,
									"end": 7019,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7010,
									"end": 7014,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 6991,
									"end": 7020,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "tag",
									"source": 4,
									"value": "127"
								},
								{
									"begin": 6991,
									"end": 7020,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6983,
									"end": 7020,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6983,
									"end": 7020,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7053,
									"end": 7056,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7050,
									"end": 7051,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 7046,
									"end": 7057,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 7040,
									"end": 7044,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7037,
									"end": 7058,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 7029,
									"end": 7058,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7029,
									"end": 7058,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6769,
									"end": 7064,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6769,
									"end": 7064,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "129"
								},
								{
									"begin": 7219,
									"end": 7222,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 7186,
									"end": 7223,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "tag",
									"source": 4,
									"value": "129"
								},
								{
									"begin": 7186,
									"end": 7223,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7288,
									"end": 7306,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7280,
									"end": 7286,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7277,
									"end": 7307,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "130"
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "131"
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 7310,
									"end": 7328,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "tag",
									"source": 4,
									"value": "131"
								},
								{
									"begin": 7310,
									"end": 7328,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "tag",
									"source": 4,
									"value": "130"
								},
								{
									"begin": 7274,
									"end": 7330,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "132"
								},
								{
									"begin": 7386,
									"end": 7390,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7380,
									"end": 7391,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 7354,
									"end": 7392,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "tag",
									"source": 4,
									"value": "132"
								},
								{
									"begin": 7354,
									"end": 7392,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "133"
								},
								{
									"begin": 7499,
									"end": 7505,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7491,
									"end": 7497,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7485,
									"end": 7489,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 7439,
									"end": 7506,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "tag",
									"source": 4,
									"value": "133"
								},
								{
									"begin": 7439,
									"end": 7506,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7533,
									"end": 7534,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7557,
									"end": 7561,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7544,
									"end": 7561,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7544,
									"end": 7561,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7589,
									"end": 7591,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 7581,
									"end": 7587,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7578,
									"end": 7592,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 7606,
									"end": 7607,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "135"
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 8263,
									"end": 8264,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 8280,
									"end": 8286,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "136"
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 8329,
									"end": 8338,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 8324,
									"end": 8327,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 8320,
									"end": 8339,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 8314,
									"end": 8340,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 8305,
									"end": 8340,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 8305,
									"end": 8340,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "tag",
									"source": 4,
									"value": "136"
								},
								{
									"begin": 8277,
									"end": 8354,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "137"
								},
								{
									"begin": 8440,
									"end": 8446,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 8433,
									"end": 8438,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 8380,
									"end": 8447,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "tag",
									"source": 4,
									"value": "137"
								},
								{
									"begin": 8380,
									"end": 8447,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 8374,
									"end": 8378,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 8367,
									"end": 8448,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 8236,
									"end": 8458,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "134"
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "tag",
									"source": 4,
									"value": "135"
								},
								{
									"begin": 7601,
									"end": 8219,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7653,
									"end": 7657,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 7649,
									"end": 7658,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 7641,
									"end": 7647,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7637,
									"end": 7659,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "138"
								},
								{
									"begin": 7719,
									"end": 7723,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 7687,
									"end": 7724,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "tag",
									"source": 4,
									"value": "138"
								},
								{
									"begin": 7687,
									"end": 7724,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7746,
									"end": 7747,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "tag",
									"source": 4,
									"value": "139"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7774,
									"end": 7781,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7771,
									"end": 7772,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7768,
									"end": 7782,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "141"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7853,
									"end": 7862,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7848,
									"end": 7851,
									"name": "DUP10",
									"source": 4
								},
								{
									"begin": 7844,
									"end": 7863,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7838,
									"end": 7864,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7830,
									"end": 7836,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7823,
									"end": 7865,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 7904,
									"end": 7905,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 7896,
									"end": 7902,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7892,
									"end": 7906,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7882,
									"end": 7906,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7882,
									"end": 7906,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7951,
									"end": 7953,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7940,
									"end": 7949,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 7936,
									"end": 7954,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7923,
									"end": 7954,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 7923,
									"end": 7954,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7797,
									"end": 7801,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7794,
									"end": 7795,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7790,
									"end": 7802,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7785,
									"end": 7802,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7785,
									"end": 7802,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "139"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "tag",
									"source": 4,
									"value": "141"
								},
								{
									"begin": 7760,
									"end": 7968,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7996,
									"end": 8002,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 7987,
									"end": 7994,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7984,
									"end": 8003,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "142"
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 8054,
									"end": 8063,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 8049,
									"end": 8052,
									"name": "DUP10",
									"source": 4
								},
								{
									"begin": 8045,
									"end": 8064,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 8039,
									"end": 8065,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "143"
								},
								{
									"begin": 8139,
									"end": 8143,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 8131,
									"end": 8137,
									"name": "DUP10",
									"source": 4
								},
								{
									"begin": 8127,
									"end": 8144,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 8116,
									"end": 8125,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 8097,
									"end": 8145,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "tag",
									"source": 4,
									"value": "143"
								},
								{
									"begin": 8097,
									"end": 8145,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 8089,
									"end": 8095,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 8082,
									"end": 8146,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 8004,
									"end": 8160,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "tag",
									"source": 4,
									"value": "142"
								},
								{
									"begin": 7981,
									"end": 8160,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 8206,
									"end": 8207,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 8202,
									"end": 8203,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 8194,
									"end": 8200,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 8190,
									"end": 8204,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 8186,
									"end": 8208,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 8180,
									"end": 8184,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": 8173,
									"end": 8209,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 7608,
									"end": 8219,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7608,
									"end": 8219,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7608,
									"end": 8219,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "tag",
									"source": 4,
									"value": "134"
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7571,
									"end": 8458,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7161,
									"end": 8464,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7161,
									"end": 8464,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7161,
									"end": 8464,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7069,
									"end": 8464,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7069,
									"end": 8464,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2185,
									"end": 44823,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 2185,
									"end": 44823,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2185,
									"end": 44823,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2185,
									"end": 44823,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2185,
									"end": 44823,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2185,
									"end": 44823,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2185,
									"end": 44823,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 2185,
									"end": 44823,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2185,
									"end": 44823,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220eecbe090a9cc90a95b1cf89495feab68941a528356ff97bfbe028ba23aec622964736f6c634300081b0033",
									".code": [
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "6352211E"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "A22CB465"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "A22CB465"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "B88D4FDE"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "C87B56DD"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "E985E9C5"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "6352211E"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "42842E0E"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "81812FC"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 10454,
											"end": 11084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 10454,
											"end": 11084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 10454,
											"end": 11084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 11338,
											"end": 11436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 11338,
											"end": 11436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 18201,
											"end": 18424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 18201,
											"end": 18424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 18201,
											"end": 18424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17929,
											"end": 18051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 17929,
											"end": 18051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 7184,
											"end": 7501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 7184,
											"end": 7501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 21836,
											"end": 25283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 21836,
											"end": 25283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 25374,
											"end": 25561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 25374,
											"end": 25561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "tag",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 12699,
											"end": 12849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 12699,
											"end": 12849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 12699,
											"end": 12849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 8335,
											"end": 8574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 8335,
											"end": 8574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 8335,
											"end": 8574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "tag",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 11507,
											"end": 11609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 11507,
											"end": 11609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 18751,
											"end": 18982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 18751,
											"end": 18982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 26142,
											"end": 26547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 26142,
											"end": 26547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 11710,
											"end": 12032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 11710,
											"end": 12032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 11710,
											"end": 12032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 19132,
											"end": 19294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 19132,
											"end": 19294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 19132,
											"end": 19294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10539,
											"end": 10543,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10872,
											"end": 10882,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 10857,
											"end": 10882,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 10857,
											"end": 10882,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 10857,
											"end": 10868,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10857,
											"end": 10882,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10857,
											"end": 10882,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 10857,
											"end": 10882,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10857,
											"end": 10882,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10857,
											"end": 10958,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10857,
											"end": 10958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 10857,
											"end": 10958,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10857,
											"end": 10958,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10948,
											"end": 10958,
											"name": "PUSH",
											"source": 2,
											"value": "80AC58CD"
										},
										{
											"begin": 10933,
											"end": 10958,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 10933,
											"end": 10958,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 10933,
											"end": 10944,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10933,
											"end": 10958,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10933,
											"end": 10958,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 10933,
											"end": 10958,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10933,
											"end": 10958,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10857,
											"end": 10958,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 10857,
											"end": 10958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10857,
											"end": 11034,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10857,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 10857,
											"end": 11034,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10857,
											"end": 11034,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11024,
											"end": 11034,
											"name": "PUSH",
											"source": 2,
											"value": "5B5E139F"
										},
										{
											"begin": 11009,
											"end": 11034,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 11009,
											"end": 11034,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 11009,
											"end": 11020,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11009,
											"end": 11034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11009,
											"end": 11034,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 11009,
											"end": 11034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11009,
											"end": 11034,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10857,
											"end": 11034,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 10857,
											"end": 11034,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10838,
											"end": 11034,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10838,
											"end": 11034,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11392,
											"end": 11405,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 11424,
											"end": 11429,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 11417,
											"end": 11429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 11417,
											"end": 11429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18277,
											"end": 18284,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18301,
											"end": 18317,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 18309,
											"end": 18316,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18301,
											"end": 18308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 18301,
											"end": 18317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18301,
											"end": 18317,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 18301,
											"end": 18317,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18296,
											"end": 18369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 18296,
											"end": 18369,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 18319,
											"end": 18369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 18327,
											"end": 18368,
											"name": "PUSH",
											"source": 2,
											"value": "CF4700E4"
										},
										{
											"begin": 18327,
											"end": 18368,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 18327,
											"end": 18368,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 18319,
											"end": 18326,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 18319,
											"end": 18369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18319,
											"end": 18369,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 18319,
											"end": 18369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18296,
											"end": 18369,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 18296,
											"end": 18369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18387,
											"end": 18402,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 18387,
											"end": 18411,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18403,
											"end": 18410,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 18387,
											"end": 18411,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18387,
											"end": 18411,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18387,
											"end": 18411,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18387,
											"end": 18411,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18387,
											"end": 18411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18387,
											"end": 18411,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18387,
											"end": 18411,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18387,
											"end": 18411,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18387,
											"end": 18411,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18387,
											"end": 18411,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18387,
											"end": 18411,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 18387,
											"end": 18417,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18387,
											"end": 18417,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18387,
											"end": 18417,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18387,
											"end": 18417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18387,
											"end": 18417,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 18387,
											"end": 18417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18387,
											"end": 18417,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 18387,
											"end": 18417,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 18387,
											"end": 18417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18387,
											"end": 18417,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 18387,
											"end": 18417,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18387,
											"end": 18417,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18380,
											"end": 18417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18380,
											"end": 18417,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18017,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 18026,
											"end": 18028,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18030,
											"end": 18037,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18039,
											"end": 18043,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 18017,
											"end": 18025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 18017,
											"end": 18044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18017,
											"end": 18044,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 18017,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17929,
											"end": 18051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7245,
											"end": 7252,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7469,
											"end": 7484,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 7469,
											"end": 7482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 7469,
											"end": 7484,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7469,
											"end": 7484,
											"name": "tag",
											"source": 2,
											"value": "109"
										},
										{
											"begin": 7469,
											"end": 7484,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7454,
											"end": 7466,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7454,
											"end": 7466,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7438,
											"end": 7451,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7438,
											"end": 7451,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7438,
											"end": 7466,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7438,
											"end": 7484,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7431,
											"end": 7484,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7431,
											"end": 7484,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 7184,
											"end": 7501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21973,
											"end": 22000,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 22003,
											"end": 22030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 22022,
											"end": 22029,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 22003,
											"end": 22021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 22003,
											"end": 22030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 22003,
											"end": 22030,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 22003,
											"end": 22030,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21973,
											"end": 22030,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21973,
											"end": 22030,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4075,
											"end": 4089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22171,
											"end": 22175,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 22155,
											"end": 22177,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22155,
											"end": 22177,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 22155,
											"end": 22196,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 22132,
											"end": 22198,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 22132,
											"end": 22198,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22254,
											"end": 22258,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 22213,
											"end": 22258,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22213,
											"end": 22258,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 22229,
											"end": 22248,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 22213,
											"end": 22258,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22213,
											"end": 22258,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 22213,
											"end": 22258,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 22209,
											"end": 22304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 22209,
											"end": 22304,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 22260,
											"end": 22304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 22268,
											"end": 22303,
											"name": "PUSH",
											"source": 2,
											"value": "A1148100"
										},
										{
											"begin": 22268,
											"end": 22303,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 22268,
											"end": 22303,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 22260,
											"end": 22267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 22260,
											"end": 22304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 22260,
											"end": 22304,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 22260,
											"end": 22304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22209,
											"end": 22304,
											"name": "tag",
											"source": 2,
											"value": "114"
										},
										{
											"begin": 22209,
											"end": 22304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22316,
											"end": 22343,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 22345,
											"end": 22368,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 22372,
											"end": 22407,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 22399,
											"end": 22406,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 22372,
											"end": 22398,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 22372,
											"end": 22407,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 22372,
											"end": 22407,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 22372,
											"end": 22407,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22315,
											"end": 22407,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 22315,
											"end": 22407,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22315,
											"end": 22407,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 22315,
											"end": 22407,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 22504,
											"end": 22572,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 22529,
											"end": 22544,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 22546,
											"end": 22550,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 22552,
											"end": 22571,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 22552,
											"end": 22569,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 22552,
											"end": 22571,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 22552,
											"end": 22571,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 22552,
											"end": 22571,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22504,
											"end": 22528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 22504,
											"end": 22572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 22504,
											"end": 22572,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 22504,
											"end": 22572,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22499,
											"end": 22687,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 22499,
											"end": 22687,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 22591,
											"end": 22634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 22608,
											"end": 22612,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 22614,
											"end": 22633,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 22614,
											"end": 22631,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 22614,
											"end": 22633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 22614,
											"end": 22633,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 22614,
											"end": 22633,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22591,
											"end": 22607,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 22591,
											"end": 22634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 22591,
											"end": 22634,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 22591,
											"end": 22634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22586,
											"end": 22687,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 22586,
											"end": 22687,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 22636,
											"end": 22687,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 22644,
											"end": 22686,
											"name": "PUSH",
											"source": 2,
											"value": "59C896BE"
										},
										{
											"begin": 22644,
											"end": 22686,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 22644,
											"end": 22686,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 22636,
											"end": 22643,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 22636,
											"end": 22687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 22636,
											"end": 22687,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 22636,
											"end": 22687,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22586,
											"end": 22687,
											"name": "tag",
											"source": 2,
											"value": "125"
										},
										{
											"begin": 22586,
											"end": 22687,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22499,
											"end": 22687,
											"name": "tag",
											"source": 2,
											"value": "122"
										},
										{
											"begin": 22499,
											"end": 22687,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22698,
											"end": 22741,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 22720,
											"end": 22724,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 22726,
											"end": 22728,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 22730,
											"end": 22737,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 22739,
											"end": 22740,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 22698,
											"end": 22719,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 22698,
											"end": 22741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 22698,
											"end": 22741,
											"name": "tag",
											"source": 2,
											"value": "127"
										},
										{
											"begin": 22698,
											"end": 22741,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22830,
											"end": 22845,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 22827,
											"end": 22984,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 22827,
											"end": 22984,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 22827,
											"end": 22984,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 22968,
											"end": 22969,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 22947,
											"end": 22966,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 22940,
											"end": 22970,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 22827,
											"end": 22984,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 22827,
											"end": 22984,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 23356,
											"end": 23374,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 23356,
											"end": 23380,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 23375,
											"end": 23379,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 23356,
											"end": 23380,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23356,
											"end": 23380,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 23356,
											"end": 23380,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23356,
											"end": 23380,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 23356,
											"end": 23380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 23356,
											"end": 23380,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 23356,
											"end": 23380,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 23356,
											"end": 23380,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 23356,
											"end": 23380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 23356,
											"end": 23380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 23356,
											"end": 23380,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 23356,
											"end": 23380,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 23356,
											"end": 23380,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 23356,
											"end": 23380,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 23356,
											"end": 23380,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 23356,
											"end": 23380,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 23354,
											"end": 23380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 23354,
											"end": 23380,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 23354,
											"end": 23380,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 23354,
											"end": 23380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 23354,
											"end": 23380,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 23354,
											"end": 23380,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 23354,
											"end": 23380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 23354,
											"end": 23380,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23354,
											"end": 23380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 23354,
											"end": 23380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 23354,
											"end": 23380,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 23354,
											"end": 23380,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23424,
											"end": 23442,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 23424,
											"end": 23446,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 23443,
											"end": 23445,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 23424,
											"end": 23446,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23424,
											"end": 23446,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 23424,
											"end": 23446,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23424,
											"end": 23446,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 23424,
											"end": 23446,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 23424,
											"end": 23446,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 23424,
											"end": 23446,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 23424,
											"end": 23446,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 23424,
											"end": 23446,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 23424,
											"end": 23446,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 23424,
											"end": 23446,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 23424,
											"end": 23446,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 23424,
											"end": 23446,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 23424,
											"end": 23446,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 23424,
											"end": 23446,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 23424,
											"end": 23446,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 23422,
											"end": 23446,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 23422,
											"end": 23446,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 23422,
											"end": 23446,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 23422,
											"end": 23446,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 23422,
											"end": 23446,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 23422,
											"end": 23446,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 23422,
											"end": 23446,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23422,
											"end": 23446,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 23422,
											"end": 23446,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 23422,
											"end": 23446,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 23422,
											"end": 23446,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23739,
											"end": 23882,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 23775,
											"end": 23777,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 23823,
											"end": 23868,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 23838,
											"end": 23842,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 23844,
											"end": 23846,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 23848,
											"end": 23867,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 23823,
											"end": 23837,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 23823,
											"end": 23868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 23823,
											"end": 23868,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 23823,
											"end": 23868,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3682,
											"end": 3690,
											"name": "PUSH",
											"source": 2,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23795,
											"end": 23868,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 23739,
											"end": 23757,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 23739,
											"end": 23882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 23739,
											"end": 23882,
											"name": "tag",
											"source": 2,
											"value": "130"
										},
										{
											"begin": 23739,
											"end": 23882,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 23710,
											"end": 23727,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 23710,
											"end": 23736,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 23728,
											"end": 23735,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 23710,
											"end": 23736,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 23710,
											"end": 23736,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 23710,
											"end": 23736,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 23710,
											"end": 23736,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 23710,
											"end": 23736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 23710,
											"end": 23736,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 23710,
											"end": 23736,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 23710,
											"end": 23736,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 23710,
											"end": 23736,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 23710,
											"end": 23736,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 23710,
											"end": 23736,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 23710,
											"end": 23882,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 23710,
											"end": 23882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 23710,
											"end": 23882,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 23710,
											"end": 23882,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 24050,
											"end": 24051,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3682,
											"end": 3690,
											"name": "PUSH",
											"source": 2,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23999,
											"end": 24018,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 23999,
											"end": 24046,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 23999,
											"end": 24051,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 23995,
											"end": 24612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 23995,
											"end": 24612,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 24071,
											"end": 24090,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 24103,
											"end": 24104,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 24093,
											"end": 24100,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 24093,
											"end": 24104,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 24071,
											"end": 24104,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 24071,
											"end": 24104,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 24258,
											"end": 24259,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 24224,
											"end": 24241,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 24224,
											"end": 24254,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 24242,
											"end": 24253,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 24224,
											"end": 24254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 24224,
											"end": 24254,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 24224,
											"end": 24254,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 24224,
											"end": 24254,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 24224,
											"end": 24254,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 24224,
											"end": 24254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 24224,
											"end": 24254,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 24224,
											"end": 24254,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 24224,
											"end": 24254,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 24224,
											"end": 24254,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 24224,
											"end": 24254,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 24224,
											"end": 24254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 24224,
											"end": 24259,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 24220,
											"end": 24598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 24220,
											"end": 24598,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 24360,
											"end": 24373,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 24360,
											"end": 24373,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 24345,
											"end": 24356,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 24345,
											"end": 24373,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 24341,
											"end": 24580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 24341,
											"end": 24580,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 24538,
											"end": 24557,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 24505,
											"end": 24522,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 24505,
											"end": 24535,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 24523,
											"end": 24534,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 24505,
											"end": 24535,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 24505,
											"end": 24535,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 24505,
											"end": 24535,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 24505,
											"end": 24535,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 24505,
											"end": 24535,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 24505,
											"end": 24535,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 24505,
											"end": 24535,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 24505,
											"end": 24535,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 24505,
											"end": 24535,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 24505,
											"end": 24535,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 24505,
											"end": 24535,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 24505,
											"end": 24557,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 24505,
											"end": 24557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 24505,
											"end": 24557,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 24505,
											"end": 24557,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 24341,
											"end": 24580,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 24341,
											"end": 24580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 24220,
											"end": 24598,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 24220,
											"end": 24598,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 24053,
											"end": 24612,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23995,
											"end": 24612,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 23995,
											"end": 24612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 24721,
											"end": 24737,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 4075,
											"end": 4089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24756,
											"end": 24758,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 24740,
											"end": 24760,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24740,
											"end": 24760,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 24740,
											"end": 24779,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 24721,
											"end": 24779,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 24721,
											"end": 24779,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 25111,
											"end": 25118,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 25076,
											"end": 25084,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 25043,
											"end": 25047,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 24986,
											"end": 25011,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 24932,
											"end": 24933,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 24876,
											"end": 24877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 24854,
											"end": 25146,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 25181,
											"end": 25182,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 25169,
											"end": 25177,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 25169,
											"end": 25182,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 25165,
											"end": 25223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 25165,
											"end": 25223,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 25184,
											"end": 25223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 25192,
											"end": 25222,
											"name": "PUSH",
											"source": 2,
											"value": "EA553B34"
										},
										{
											"begin": 25192,
											"end": 25222,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 25192,
											"end": 25222,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 25184,
											"end": 25191,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 25184,
											"end": 25223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 25184,
											"end": 25223,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 25184,
											"end": 25223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 25165,
											"end": 25223,
											"name": "tag",
											"source": 2,
											"value": "137"
										},
										{
											"begin": 25165,
											"end": 25223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 25234,
											"end": 25276,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 25255,
											"end": 25259,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 25261,
											"end": 25263,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 25265,
											"end": 25272,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 25274,
											"end": 25275,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 25234,
											"end": 25254,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 25234,
											"end": 25276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 25234,
											"end": 25276,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 25234,
											"end": 25276,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21963,
											"end": 25283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21963,
											"end": 25283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21963,
											"end": 25283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21963,
											"end": 25283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21836,
											"end": 25283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 25515,
											"end": 25554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 25532,
											"end": 25536,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 25538,
											"end": 25540,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 25542,
											"end": 25549,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 25515,
											"end": 25554,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 25515,
											"end": 25554,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 25515,
											"end": 25554,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 25515,
											"end": 25554,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 25515,
											"end": 25554,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 25515,
											"end": 25554,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 25515,
											"end": 25554,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 25515,
											"end": 25554,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 25515,
											"end": 25554,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 25515,
											"end": 25554,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 25515,
											"end": 25554,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 25515,
											"end": 25554,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 25515,
											"end": 25531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 25515,
											"end": 25554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 25515,
											"end": 25554,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 25515,
											"end": 25554,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 25374,
											"end": 25561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12771,
											"end": 12778,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12813,
											"end": 12840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 12832,
											"end": 12839,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12813,
											"end": 12831,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 12813,
											"end": 12840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12813,
											"end": 12840,
											"name": "tag",
											"source": 2,
											"value": "144"
										},
										{
											"begin": 12813,
											"end": 12840,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12790,
											"end": 12842,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12790,
											"end": 12842,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8407,
											"end": 8414,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8447,
											"end": 8448,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8430,
											"end": 8449,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8430,
											"end": 8449,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8430,
											"end": 8435,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8430,
											"end": 8449,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8430,
											"end": 8449,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8430,
											"end": 8449,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 8426,
											"end": 8495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 8426,
											"end": 8495,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8451,
											"end": 8495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 8459,
											"end": 8494,
											"name": "PUSH",
											"source": 2,
											"value": "8F4EB604"
										},
										{
											"begin": 8459,
											"end": 8494,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 8459,
											"end": 8494,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 8451,
											"end": 8458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 8451,
											"end": 8495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8451,
											"end": 8495,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 8451,
											"end": 8495,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8426,
											"end": 8495,
											"name": "tag",
											"source": 2,
											"value": "146"
										},
										{
											"begin": 8426,
											"end": 8495,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2650,
											"end": 2663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8512,
											"end": 8530,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8531,
											"end": 8536,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 8512,
											"end": 8567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8505,
											"end": 8567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8505,
											"end": 8567,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11563,
											"end": 11576,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 11595,
											"end": 11602,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 11588,
											"end": 11602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "tag",
											"source": 2,
											"value": "149"
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 11588,
											"end": 11602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "tag",
											"source": 2,
											"value": "150"
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "tag",
											"source": 2,
											"value": "152"
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "tag",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "153"
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "tag",
											"source": 2,
											"value": "151"
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11507,
											"end": 11609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18897,
											"end": 18905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18863,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 18845,
											"end": 18884,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18864,
											"end": 18883,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 18864,
											"end": 18881,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 18864,
											"end": 18883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18864,
											"end": 18883,
											"name": "tag",
											"source": 2,
											"value": "155"
										},
										{
											"begin": 18864,
											"end": 18883,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18884,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18845,
											"end": 18884,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18884,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18845,
											"end": 18884,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18884,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18845,
											"end": 18884,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18884,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18845,
											"end": 18884,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18884,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18845,
											"end": 18884,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18894,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18885,
											"end": 18893,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18894,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18845,
											"end": 18894,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18894,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18845,
											"end": 18894,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18894,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18894,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18894,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18845,
											"end": 18894,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18894,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18894,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18894,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18894,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18845,
											"end": 18894,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18894,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18845,
											"end": 18894,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18894,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18845,
											"end": 18905,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 18845,
											"end": 18905,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18905,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18905,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 18845,
											"end": 18905,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18905,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18905,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18905,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18905,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18905,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18905,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18905,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18905,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18905,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18956,
											"end": 18964,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18920,
											"end": 18975,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18920,
											"end": 18975,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18935,
											"end": 18954,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 18935,
											"end": 18952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 18935,
											"end": 18954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18935,
											"end": 18954,
											"name": "tag",
											"source": 2,
											"value": "156"
										},
										{
											"begin": 18935,
											"end": 18954,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18920,
											"end": 18975,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18920,
											"end": 18975,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18920,
											"end": 18975,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 18966,
											"end": 18974,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 18920,
											"end": 18975,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18920,
											"end": 18975,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18920,
											"end": 18975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 18920,
											"end": 18975,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18920,
											"end": 18975,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18920,
											"end": 18975,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 18920,
											"end": 18975,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18920,
											"end": 18975,
											"name": "tag",
											"source": 2,
											"value": "157"
										},
										{
											"begin": 18920,
											"end": 18975,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18920,
											"end": 18975,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18920,
											"end": 18975,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18920,
											"end": 18975,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18920,
											"end": 18975,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18920,
											"end": 18975,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 18920,
											"end": 18975,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18920,
											"end": 18975,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26311,
											"end": 26342,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 26324,
											"end": 26328,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 26330,
											"end": 26332,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 26334,
											"end": 26341,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 26311,
											"end": 26323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 26311,
											"end": 26342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 26311,
											"end": 26342,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 26311,
											"end": 26342,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26374,
											"end": 26375,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 26356,
											"end": 26358,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 26356,
											"end": 26370,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26356,
											"end": 26370,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 26356,
											"end": 26370,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 26356,
											"end": 26375,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 26352,
											"end": 26541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 26352,
											"end": 26541,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 26394,
											"end": 26450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 26425,
											"end": 26429,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 26431,
											"end": 26433,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 26435,
											"end": 26442,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 26444,
											"end": 26449,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 26394,
											"end": 26424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 26394,
											"end": 26450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 26394,
											"end": 26450,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 26394,
											"end": 26450,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26389,
											"end": 26541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 26389,
											"end": 26541,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 26470,
											"end": 26526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 26478,
											"end": 26525,
											"name": "PUSH",
											"source": 2,
											"value": "D1A57ED6"
										},
										{
											"begin": 26478,
											"end": 26525,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 26478,
											"end": 26525,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 26470,
											"end": 26477,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 26470,
											"end": 26526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 26470,
											"end": 26526,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 26470,
											"end": 26526,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26389,
											"end": 26541,
											"name": "tag",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 26389,
											"end": 26541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26352,
											"end": 26541,
											"name": "tag",
											"source": 2,
											"value": "160"
										},
										{
											"begin": 26352,
											"end": 26541,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26142,
											"end": 26547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11783,
											"end": 11796,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 11813,
											"end": 11829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 11821,
											"end": 11828,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11813,
											"end": 11820,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 11813,
											"end": 11829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11813,
											"end": 11829,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 11813,
											"end": 11829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11808,
											"end": 11876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 11808,
											"end": 11876,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11831,
											"end": 11876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 11839,
											"end": 11875,
											"name": "PUSH",
											"source": 2,
											"value": "A14C4B50"
										},
										{
											"begin": 11839,
											"end": 11875,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 11839,
											"end": 11875,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 11831,
											"end": 11838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 11831,
											"end": 11876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11831,
											"end": 11876,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 11831,
											"end": 11876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11808,
											"end": 11876,
											"name": "tag",
											"source": 2,
											"value": "167"
										},
										{
											"begin": 11808,
											"end": 11876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11887,
											"end": 11908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11911,
											"end": 11921,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 11911,
											"end": 11919,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 11911,
											"end": 11921,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11911,
											"end": 11921,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 11911,
											"end": 11921,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11887,
											"end": 11921,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11887,
											"end": 11921,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11963,
											"end": 11964,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11944,
											"end": 11951,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11938,
											"end": 11959,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11938,
											"end": 11964,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11991,
											"end": 11998,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12000,
											"end": 12018,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 12010,
											"end": 12017,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12000,
											"end": 12009,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 12000,
											"end": 12018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12000,
											"end": 12018,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 12000,
											"end": 12018,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 11974,
											"end": 12019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11931,
											"end": 12025,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11931,
											"end": 12025,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11931,
											"end": 12025,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19229,
											"end": 19233,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19252,
											"end": 19270,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 19252,
											"end": 19277,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19271,
											"end": 19276,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19277,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19252,
											"end": 19277,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19277,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19252,
											"end": 19277,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19277,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19277,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19277,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19252,
											"end": 19277,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19277,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19277,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19277,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19277,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19252,
											"end": 19277,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19277,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19252,
											"end": 19277,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19278,
											"end": 19286,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19245,
											"end": 19287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19245,
											"end": 19287,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19543,
											"end": 19903,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 19543,
											"end": 19903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19608,
											"end": 19619,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19654,
											"end": 19661,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19635,
											"end": 19650,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 19635,
											"end": 19648,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 19635,
											"end": 19650,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19635,
											"end": 19650,
											"name": "tag",
											"source": 2,
											"value": "179"
										},
										{
											"begin": 19635,
											"end": 19650,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19635,
											"end": 19661,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 19631,
											"end": 19897,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 19631,
											"end": 19897,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 19691,
											"end": 19704,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19691,
											"end": 19704,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 19681,
											"end": 19688,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 19681,
											"end": 19704,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 19677,
											"end": 19887,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 19677,
											"end": 19887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 19677,
											"end": 19887,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 19724,
											"end": 19738,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19756,
											"end": 19816,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 19756,
											"end": 19816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19804,
											"end": 19805,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19773,
											"end": 19790,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 19773,
											"end": 19799,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19791,
											"end": 19798,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 19773,
											"end": 19799,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19773,
											"end": 19799,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19773,
											"end": 19799,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19773,
											"end": 19799,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19773,
											"end": 19799,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19773,
											"end": 19799,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19773,
											"end": 19799,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19773,
											"end": 19799,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19773,
											"end": 19799,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 19773,
											"end": 19799,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19773,
											"end": 19799,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 19773,
											"end": 19799,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 19764,
											"end": 19799,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19764,
											"end": 19799,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19764,
											"end": 19799,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19763,
											"end": 19805,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 19756,
											"end": 19816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 19756,
											"end": 19816,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 19807,
											"end": 19816,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 19807,
											"end": 19816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 19807,
											"end": 19816,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19807,
											"end": 19816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 19807,
											"end": 19816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19807,
											"end": 19816,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 19807,
											"end": 19816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19807,
											"end": 19816,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 19807,
											"end": 19816,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19756,
											"end": 19816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 19756,
											"end": 19816,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19756,
											"end": 19816,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 19756,
											"end": 19816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19871,
											"end": 19872,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3416,
											"name": "PUSH",
											"source": 2,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19843,
											"end": 19849,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 19843,
											"end": 19867,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19843,
											"end": 19872,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 19834,
											"end": 19872,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19834,
											"end": 19872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19706,
											"end": 19887,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19677,
											"end": 19887,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 19677,
											"end": 19887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19631,
											"end": 19897,
											"name": "tag",
											"source": 2,
											"value": "180"
										},
										{
											"begin": 19631,
											"end": 19897,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19543,
											"end": 19903,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19543,
											"end": 19903,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19543,
											"end": 19903,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19543,
											"end": 19903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 44661,
											"end": 44821,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 44661,
											"end": 44821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 44760,
											"end": 44773,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 44754,
											"end": 44758,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 44747,
											"end": 44774,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 44800,
											"end": 44804,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 44794,
											"end": 44798,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 44787,
											"end": 44805,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 36309,
											"end": 36769,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 36309,
											"end": 36769,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 36433,
											"end": 36446,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 36449,
											"end": 36465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 36457,
											"end": 36464,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 36449,
											"end": 36456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 36449,
											"end": 36465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 36449,
											"end": 36465,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 36449,
											"end": 36465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 36433,
											"end": 36465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 36433,
											"end": 36465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 36480,
											"end": 36493,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 36480,
											"end": 36525,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 36480,
											"end": 36525,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 36480,
											"end": 36525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 36480,
											"end": 36525,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 36480,
											"end": 36525,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 36520,
											"end": 36525,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 36497,
											"end": 36525,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36497,
											"end": 36525,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 36497,
											"end": 36516,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 36497,
											"end": 36514,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 36497,
											"end": 36516,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 36497,
											"end": 36516,
											"name": "tag",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 36497,
											"end": 36516,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 36497,
											"end": 36525,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36497,
											"end": 36525,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 36497,
											"end": 36525,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 36497,
											"end": 36525,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 36480,
											"end": 36525,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 36480,
											"end": 36525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 36476,
											"end": 36674,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 36476,
											"end": 36674,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 36476,
											"end": 36674,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 36544,
											"end": 36588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 36561,
											"end": 36566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 36568,
											"end": 36587,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 36568,
											"end": 36585,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 36568,
											"end": 36587,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 36568,
											"end": 36587,
											"name": "tag",
											"source": 2,
											"value": "193"
										},
										{
											"begin": 36568,
											"end": 36587,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 36544,
											"end": 36560,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 36544,
											"end": 36588,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 36544,
											"end": 36588,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 36544,
											"end": 36588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 36539,
											"end": 36674,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 36539,
											"end": 36674,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 36608,
											"end": 36659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 36616,
											"end": 36658,
											"name": "PUSH",
											"source": 2,
											"value": "CFB3B942"
										},
										{
											"begin": 36616,
											"end": 36658,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 36616,
											"end": 36658,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 36608,
											"end": 36615,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 36608,
											"end": 36659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 36608,
											"end": 36659,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 36608,
											"end": 36659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 36539,
											"end": 36674,
											"name": "tag",
											"source": 2,
											"value": "194"
										},
										{
											"begin": 36539,
											"end": 36674,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 36476,
											"end": 36674,
											"name": "tag",
											"source": 2,
											"value": "191"
										},
										{
											"begin": 36476,
											"end": 36674,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 36717,
											"end": 36719,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36699,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 36684,
											"end": 36708,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 36700,
											"end": 36707,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36708,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36708,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36708,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 36684,
											"end": 36708,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36708,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36708,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36708,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36708,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 36684,
											"end": 36708,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36708,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 36684,
											"end": 36708,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36714,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 36684,
											"end": 36714,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36714,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 36684,
											"end": 36719,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 36684,
											"end": 36719,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36719,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36719,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36719,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36719,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36684,
											"end": 36719,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36719,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36719,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36719,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36719,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36719,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36684,
											"end": 36719,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36719,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36719,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36719,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36719,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36719,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 36754,
											"end": 36761,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 36750,
											"end": 36752,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 36734,
											"end": 36762,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36734,
											"end": 36762,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 36743,
											"end": 36748,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 36734,
											"end": 36762,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36734,
											"end": 36762,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 36734,
											"end": 36762,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 36734,
											"end": 36762,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 36734,
											"end": 36762,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 36734,
											"end": 36762,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 36734,
											"end": 36762,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 36734,
											"end": 36762,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 36734,
											"end": 36762,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 36734,
											"end": 36762,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 36734,
											"end": 36762,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 36734,
											"end": 36762,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 36423,
											"end": 36769,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 36309,
											"end": 36769,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 36309,
											"end": 36769,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 36309,
											"end": 36769,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 36309,
											"end": 36769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6716,
											"end": 6806,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 6716,
											"end": 6806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6772,
											"end": 6779,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6798,
											"end": 6799,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 6791,
											"end": 6799,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6791,
											"end": 6799,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6716,
											"end": 6806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6716,
											"end": 6806,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14140,
											"end": 16118,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 14140,
											"end": 16118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14207,
											"end": 14221,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14256,
											"end": 14263,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14237,
											"end": 14252,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 14237,
											"end": 14250,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 14237,
											"end": 14252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14237,
											"end": 14252,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 14237,
											"end": 14252,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14237,
											"end": 14263,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 14233,
											"end": 16055,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 14233,
											"end": 16055,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14288,
											"end": 14305,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14288,
											"end": 14314,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14306,
											"end": 14313,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14288,
											"end": 14314,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14288,
											"end": 14314,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14288,
											"end": 14314,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14288,
											"end": 14314,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14288,
											"end": 14314,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14288,
											"end": 14314,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14288,
											"end": 14314,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14288,
											"end": 14314,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14288,
											"end": 14314,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14288,
											"end": 14314,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14288,
											"end": 14314,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 14288,
											"end": 14314,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14279,
											"end": 14314,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14279,
											"end": 14314,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14422,
											"end": 14423,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14412,
											"end": 14418,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14412,
											"end": 14423,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14408,
											"end": 15678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 14408,
											"end": 15678,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14458,
											"end": 14471,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14458,
											"end": 14471,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14447,
											"end": 14454,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14447,
											"end": 14471,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 14443,
											"end": 14520,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 14443,
											"end": 14520,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14473,
											"end": 14520,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 14481,
											"end": 14519,
											"name": "PUSH",
											"source": 2,
											"value": "DF2D9B42"
										},
										{
											"begin": 14481,
											"end": 14519,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 14481,
											"end": 14519,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 14473,
											"end": 14480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 14473,
											"end": 14520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14473,
											"end": 14520,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 14473,
											"end": 14520,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14443,
											"end": 14520,
											"name": "tag",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 14443,
											"end": 14520,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15067,
											"end": 15664,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 15067,
											"end": 15664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15143,
											"end": 15160,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15143,
											"end": 15171,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15161,
											"end": 15170,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15161,
											"end": 15170,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 15161,
											"end": 15170,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15161,
											"end": 15170,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15161,
											"end": 15170,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 15161,
											"end": 15170,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15161,
											"end": 15170,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 15143,
											"end": 15171,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15143,
											"end": 15171,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15143,
											"end": 15171,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15143,
											"end": 15171,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15143,
											"end": 15171,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15143,
											"end": 15171,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15143,
											"end": 15171,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15143,
											"end": 15171,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15143,
											"end": 15171,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15143,
											"end": 15171,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15143,
											"end": 15171,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15143,
											"end": 15171,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15134,
											"end": 15171,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15134,
											"end": 15171,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 15229,
											"end": 15230,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15219,
											"end": 15225,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15219,
											"end": 15230,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15215,
											"end": 15240,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15232,
											"end": 15240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 15215,
											"end": 15240,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15294,
											"end": 15295,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3416,
											"name": "PUSH",
											"source": 2,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15266,
											"end": 15272,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 15266,
											"end": 15290,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15266,
											"end": 15295,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15262,
											"end": 15310,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15297,
											"end": 15310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 15262,
											"end": 15310,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 15598,
											"end": 15645,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 15606,
											"end": 15644,
											"name": "PUSH",
											"source": 2,
											"value": "DF2D9B42"
										},
										{
											"begin": 15606,
											"end": 15644,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 15606,
											"end": 15644,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 15598,
											"end": 15605,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 15598,
											"end": 15645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15598,
											"end": 15645,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 15598,
											"end": 15645,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15067,
											"end": 15664,
											"name": "tag",
											"source": 2,
											"value": "205"
										},
										{
											"begin": 15067,
											"end": 15664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15067,
											"end": 15664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 15067,
											"end": 15664,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14408,
											"end": 15678,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 14408,
											"end": 15678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16028,
											"end": 16029,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3416,
											"name": "PUSH",
											"source": 2,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16000,
											"end": 16006,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 16000,
											"end": 16024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16000,
											"end": 16029,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15996,
											"end": 16044,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 16031,
											"end": 16044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 15996,
											"end": 16044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14233,
											"end": 16055,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 14233,
											"end": 16055,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16064,
											"end": 16111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 16072,
											"end": 16110,
											"name": "PUSH",
											"source": 2,
											"value": "DF2D9B42"
										},
										{
											"begin": 16072,
											"end": 16110,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 16072,
											"end": 16110,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 16064,
											"end": 16071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 16064,
											"end": 16111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16064,
											"end": 16111,
											"name": "tag",
											"source": 2,
											"value": "210"
										},
										{
											"begin": 16064,
											"end": 16111,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14140,
											"end": 16118,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 14140,
											"end": 16118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14140,
											"end": 16118,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14140,
											"end": 16118,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14140,
											"end": 16118,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14140,
											"end": 16118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 20761,
											"end": 21235,
											"name": "tag",
											"source": 2,
											"value": "117"
										},
										{
											"begin": 20761,
											"end": 21235,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20860,
											"end": 20887,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20889,
											"end": 20912,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20928,
											"end": 20966,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20969,
											"end": 20984,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 20969,
											"end": 20993,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20985,
											"end": 20992,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 20969,
											"end": 20993,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20969,
											"end": 20993,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20969,
											"end": 20993,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20969,
											"end": 20993,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20969,
											"end": 20993,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20969,
											"end": 20993,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20969,
											"end": 20993,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20969,
											"end": 20993,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20969,
											"end": 20993,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 20969,
											"end": 20993,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20969,
											"end": 20993,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 20928,
											"end": 20993,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20928,
											"end": 20993,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21143,
											"end": 21161,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 21120,
											"end": 21161,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 21120,
											"end": 21161,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21199,
											"end": 21218,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 21193,
											"end": 21219,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 21174,
											"end": 21219,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 21174,
											"end": 21219,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21106,
											"end": 21229,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20761,
											"end": 21235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20761,
											"end": 21235,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20761,
											"end": 21235,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20761,
											"end": 21235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 42691,
											"end": 42794,
											"name": "tag",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 42691,
											"end": 42794,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 42751,
											"end": 42758,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 42777,
											"end": 42787,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 42770,
											"end": 42787,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 42770,
											"end": 42787,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 42691,
											"end": 42794,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 42691,
											"end": 42794,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 20007,
											"end": 20653,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 20007,
											"end": 20653,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 20152,
											"end": 20163,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20314,
											"end": 20330,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20307,
											"end": 20312,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 20303,
											"end": 20331,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20294,
											"end": 20331,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 20294,
											"end": 20331,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20472,
											"end": 20488,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20461,
											"end": 20470,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20457,
											"end": 20489,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20444,
											"end": 20489,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20444,
											"end": 20489,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20620,
											"end": 20635,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 20609,
											"end": 20618,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20606,
											"end": 20636,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 20598,
											"end": 20603,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 20587,
											"end": 20596,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 20584,
											"end": 20604,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 20581,
											"end": 20637,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 20571,
											"end": 20637,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20571,
											"end": 20637,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20007,
											"end": 20653,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 20007,
											"end": 20653,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 20007,
											"end": 20653,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20007,
											"end": 20653,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20007,
											"end": 20653,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 20007,
											"end": 20653,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 27191,
											"end": 27345,
											"name": "tag",
											"source": 2,
											"value": "128"
										},
										{
											"begin": 27191,
											"end": 27345,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 27191,
											"end": 27345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 27191,
											"end": 27345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 27191,
											"end": 27345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 27191,
											"end": 27345,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 27191,
											"end": 27345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 42018,
											"end": 42322,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 42018,
											"end": 42322,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 42149,
											"end": 42156,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 42168,
											"end": 42184,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3803,
											"end": 3806,
											"name": "PUSH",
											"source": 2,
											"value": "E8"
										},
										{
											"begin": 42194,
											"end": 42213,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 42194,
											"end": 42235,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 42194,
											"end": 42235,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 42168,
											"end": 42236,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 42168,
											"end": 42236,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3803,
											"end": 3806,
											"name": "PUSH",
											"source": 2,
											"value": "E8"
										},
										{
											"begin": 42261,
											"end": 42292,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 42272,
											"end": 42276,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 42278,
											"end": 42280,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 42282,
											"end": 42291,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 42261,
											"end": 42271,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 42261,
											"end": 42292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 42261,
											"end": 42292,
											"name": "tag",
											"source": 2,
											"value": "216"
										},
										{
											"begin": 42261,
											"end": 42292,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 42253,
											"end": 42293,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFF"
										},
										{
											"begin": 42253,
											"end": 42293,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 42253,
											"end": 42315,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 42253,
											"end": 42315,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 42246,
											"end": 42315,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 42246,
											"end": 42315,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 42246,
											"end": 42315,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 42018,
											"end": 42322,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 42018,
											"end": 42322,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 42018,
											"end": 42322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 42018,
											"end": 42322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 42018,
											"end": 42322,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 42018,
											"end": 42322,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16651,
											"end": 17094,
											"name": "tag",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 16651,
											"end": 17094,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16731,
											"end": 16745,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16896,
											"end": 16912,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16889,
											"end": 16894,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 16885,
											"end": 16913,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16876,
											"end": 16913,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16876,
											"end": 16913,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17071,
											"end": 17076,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 17057,
											"end": 17068,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 17032,
											"end": 17055,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 17028,
											"end": 17069,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 17025,
											"end": 17077,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 17018,
											"end": 17023,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 17015,
											"end": 17078,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 17005,
											"end": 17078,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 17005,
											"end": 17078,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16651,
											"end": 17094,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 16651,
											"end": 17094,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 16651,
											"end": 17094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16651,
											"end": 17094,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 16651,
											"end": 17094,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 27992,
											"end": 28145,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 27992,
											"end": 28145,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 27992,
											"end": 28145,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 27992,
											"end": 28145,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 27992,
											"end": 28145,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 27992,
											"end": 28145,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 27992,
											"end": 28145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 28573,
											"end": 29246,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 28573,
											"end": 29246,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 28731,
											"end": 28735,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 28776,
											"end": 28778,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28796,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28751,
											"end": 28796,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28796,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A02"
										},
										{
											"begin": 28797,
											"end": 28816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 28797,
											"end": 28814,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 28797,
											"end": 28816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 28797,
											"end": 28816,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 28797,
											"end": 28816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 28818,
											"end": 28822,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 28824,
											"end": 28831,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 28833,
											"end": 28838,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 28751,
											"end": 28839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 28751,
											"end": 28839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 29046,
											"end": 29047,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 29029,
											"end": 29035,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 29029,
											"end": 29042,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 29029,
											"end": 29047,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 29025,
											"end": 29138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 29025,
											"end": 29138,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 29067,
											"end": 29123,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 29075,
											"end": 29122,
											"name": "PUSH",
											"source": 2,
											"value": "D1A57ED6"
										},
										{
											"begin": 29075,
											"end": 29122,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 29075,
											"end": 29122,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 29067,
											"end": 29074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 29067,
											"end": 29123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 29067,
											"end": 29123,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 29067,
											"end": 29123,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 29025,
											"end": 29138,
											"name": "tag",
											"source": 2,
											"value": "233"
										},
										{
											"begin": 29025,
											"end": 29138,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 29208,
											"end": 29214,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 29202,
											"end": 29215,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 29193,
											"end": 29199,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 29189,
											"end": 29191,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 29185,
											"end": 29200,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 29178,
											"end": 29216,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 28917,
											"end": 28971,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A02"
										},
										{
											"begin": 28917,
											"end": 28971,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 28917,
											"end": 28971,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 28907,
											"end": 28971,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28907,
											"end": 28971,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 28907,
											"end": 28971,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 28907,
											"end": 28913,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 28907,
											"end": 28971,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28907,
											"end": 28971,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 28907,
											"end": 28971,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 28907,
											"end": 28971,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 28900,
											"end": 28971,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 28900,
											"end": 28971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 28900,
											"end": 28971,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 28573,
											"end": 29246,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 28573,
											"end": 29246,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 28573,
											"end": 29246,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 28573,
											"end": 29246,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 28573,
											"end": 29246,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 28573,
											"end": 29246,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 28573,
											"end": 29246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12277,
											"end": 12369,
											"name": "tag",
											"source": 2,
											"value": "170"
										},
										{
											"begin": 12277,
											"end": 12369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12328,
											"end": 12341,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 12353,
											"end": 12362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12353,
											"end": 12362,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12353,
											"end": 12362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12353,
											"end": 12362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12353,
											"end": 12362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12353,
											"end": 12362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12353,
											"end": 12362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12353,
											"end": 12362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12353,
											"end": 12362,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12353,
											"end": 12362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12353,
											"end": 12362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12353,
											"end": 12362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12353,
											"end": 12362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12353,
											"end": 12362,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 12277,
											"end": 12369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12277,
											"end": 12369,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 42891,
											"end": 44599,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 42891,
											"end": 44599,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 42956,
											"end": 42973,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 43384,
											"end": 43388,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 43377,
											"end": 43381,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 43371,
											"end": 43382,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 43367,
											"end": 43389,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 43474,
											"end": 43475,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 43468,
											"end": 43472,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 43461,
											"end": 43476,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 43547,
											"end": 43551,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 43544,
											"end": 43545,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 43540,
											"end": 43552,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 43533,
											"end": 43552,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 43533,
											"end": 43552,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 43627,
											"end": 43628,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 43622,
											"end": 43625,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 43615,
											"end": 43629,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 43728,
											"end": 43731,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 43962,
											"end": 43967,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 43944,
											"end": 44363,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 43944,
											"end": 44363,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 43970,
											"end": 43971,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 43944,
											"end": 44363,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 43944,
											"end": 44363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 43944,
											"end": 44363,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 44009,
											"end": 44010,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 44004,
											"end": 44007,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 44000,
											"end": 44011,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 43993,
											"end": 44011,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 43993,
											"end": 44011,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 44177,
											"end": 44179,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 44171,
											"end": 44175,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 44167,
											"end": 44180,
											"name": "MOD",
											"source": 2
										},
										{
											"begin": 44163,
											"end": 44165,
											"name": "PUSH",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 44159,
											"end": 44181,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 44154,
											"end": 44157,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 44146,
											"end": 44182,
											"name": "MSTORE8",
											"source": 2
										},
										{
											"begin": 44269,
											"end": 44271,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 44263,
											"end": 44267,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 44259,
											"end": 44272,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 44251,
											"end": 44272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 44251,
											"end": 44272,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 44334,
											"end": 44338,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 43944,
											"end": 44363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 44324,
											"end": 44349,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 43944,
											"end": 44363,
											"name": "tag",
											"source": 2,
											"value": "240"
										},
										{
											"begin": 43944,
											"end": 44363,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 43948,
											"end": 43969,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 44400,
											"end": 44403,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 44395,
											"end": 44398,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 44391,
											"end": 44404,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 44513,
											"end": 44517,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 44508,
											"end": 44511,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 44504,
											"end": 44518,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 44497,
											"end": 44518,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 44497,
											"end": 44518,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 44576,
											"end": 44582,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 44571,
											"end": 44574,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 44564,
											"end": 44583,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 42994,
											"end": 44593,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 42994,
											"end": 44593,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 42994,
											"end": 44593,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 42891,
											"end": 44599,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 42891,
											"end": 44599,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 42891,
											"end": 44599,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 42891,
											"end": 44599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 41729,
											"end": 41872,
											"name": "tag",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 41729,
											"end": 41872,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 41862,
											"end": 41868,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 41729,
											"end": 41872,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 41729,
											"end": 41872,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 41729,
											"end": 41872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 41729,
											"end": 41872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 41729,
											"end": 41872,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 41729,
											"end": 41872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7,
											"end": 82,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 7,
											"end": 82,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 40,
											"end": 46,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 75,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 67,
											"end": 76,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 57,
											"end": 76,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 57,
											"end": 76,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 82,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7,
											"end": 82,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 211,
											"end": 328,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 211,
											"end": 328,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 4,
											"value": "290"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 4,
											"value": "295"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "tag",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1570,
											"end": 1576,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1604,
											"end": 1609,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1610,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1588,
											"end": 1610,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1518,
											"end": 1617,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1518,
											"end": 1617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1707,
											"end": 1718,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1741,
											"end": 1747,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1736,
											"end": 1739,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 1748,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1781,
											"end": 1785,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1776,
											"end": 1779,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1772,
											"end": 1786,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1757,
											"end": 1786,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1792,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1623,
											"end": 1792,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "tag",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1887,
											"end": 1893,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1882,
											"end": 1885,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1877,
											"end": 1880,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1871,
											"end": 1894,
											"name": "MCOPY",
											"source": 4
										},
										{
											"begin": 1928,
											"end": 1929,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1919,
											"end": 1925,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1914,
											"end": 1917,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1910,
											"end": 1926,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1903,
											"end": 1930,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1798,
											"end": 1937,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1798,
											"end": 1937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "tag",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1984,
											"end": 1990,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2035,
											"end": 2037,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2031,
											"end": 2038,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2026,
											"end": 2028,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2019,
											"end": 2024,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2015,
											"end": 2029,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2011,
											"end": 2039,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2001,
											"end": 2039,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1943,
											"end": 2045,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1943,
											"end": 2045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "tag",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2139,
											"end": 2142,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 2200,
											"end": 2205,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 2167,
											"end": 2206,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "tag",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 2167,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 2286,
											"end": 2292,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2281,
											"end": 2284,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 2222,
											"end": 2293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "tag",
											"source": 4,
											"value": "309"
										},
										{
											"begin": 2222,
											"end": 2293,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2293,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 2360,
											"end": 2366,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2355,
											"end": 2358,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2352,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2341,
											"end": 2346,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2337,
											"end": 2353,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 2302,
											"end": 2367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "tag",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 2302,
											"end": 2367,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 2414,
											"end": 2420,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 2392,
											"end": 2421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "tag",
											"source": 4,
											"value": "311"
										},
										{
											"begin": 2392,
											"end": 2421,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2387,
											"end": 2390,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2383,
											"end": 2422,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2376,
											"end": 2422,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2143,
											"end": 2428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2051,
											"end": 2428,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2547,
											"end": 2551,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2587,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2574,
											"end": 2583,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2570,
											"end": 2588,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2562,
											"end": 2588,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2634,
											"end": 2643,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2628,
											"end": 2632,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2624,
											"end": 2644,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2620,
											"end": 2621,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2598,
											"end": 2645,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 2735,
											"end": 2739,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2726,
											"end": 2732,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "255"
										},
										{
											"begin": 2662,
											"end": 2740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "tag",
											"source": 4,
											"value": "313"
										},
										{
											"begin": 2662,
											"end": 2740,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2654,
											"end": 2740,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2434,
											"end": 2747,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2434,
											"end": 2747,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2790,
											"end": 2797,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2824,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2808,
											"end": 2824,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2753,
											"end": 2830,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2753,
											"end": 2830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "tag",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 2927,
											"end": 2932,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 2909,
											"end": 2933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "tag",
											"source": 4,
											"value": "316"
										},
										{
											"begin": 2909,
											"end": 2933,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2902,
											"end": 2907,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2899,
											"end": 2934,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2948,
											"end": 2949,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2945,
											"end": 2946,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2938,
											"end": 2950,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "tag",
											"source": 4,
											"value": "317"
										},
										{
											"begin": 2889,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2836,
											"end": 2958,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2836,
											"end": 2958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "tag",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3010,
											"end": 3015,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3048,
											"end": 3054,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3035,
											"end": 3055,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3026,
											"end": 3055,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 3091,
											"end": 3096,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "257"
										},
										{
											"begin": 3064,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "tag",
											"source": 4,
											"value": "319"
										},
										{
											"begin": 3064,
											"end": 3097,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2964,
											"end": 3103,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2964,
											"end": 3103,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3168,
											"end": 3174,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3217,
											"end": 3219,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3205,
											"end": 3214,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3196,
											"end": 3203,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3192,
											"end": 3215,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3188,
											"end": 3220,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 3223,
											"end": 3302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "tag",
											"source": 4,
											"value": "322"
										},
										{
											"begin": 3223,
											"end": 3302,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "tag",
											"source": 4,
											"value": "321"
										},
										{
											"begin": 3185,
											"end": 3304,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3343,
											"end": 3344,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 3413,
											"end": 3420,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3404,
											"end": 3410,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3393,
											"end": 3402,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3411,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 3368,
											"end": 3421,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "tag",
											"source": 4,
											"value": "323"
										},
										{
											"begin": 3368,
											"end": 3421,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3358,
											"end": 3421,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3314,
											"end": 3431,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3109,
											"end": 3438,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3109,
											"end": 3438,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "tag",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3481,
											"end": 3488,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3521,
											"end": 3563,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3514,
											"end": 3519,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3510,
											"end": 3564,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3564,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3444,
											"end": 3570,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3444,
											"end": 3570,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "tag",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3613,
											"end": 3620,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "259"
										},
										{
											"begin": 3642,
											"end": 3666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "tag",
											"source": 4,
											"value": "326"
										},
										{
											"begin": 3642,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 3666,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3576,
											"end": 3672,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3576,
											"end": 3672,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "tag",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 3783,
											"end": 3788,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 3765,
											"end": 3789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "tag",
											"source": 4,
											"value": "328"
										},
										{
											"begin": 3765,
											"end": 3789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3760,
											"end": 3763,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3753,
											"end": 3790,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3678,
											"end": 3796,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3678,
											"end": 3796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3895,
											"end": 3899,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3933,
											"end": 3935,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3922,
											"end": 3931,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3918,
											"end": 3936,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3910,
											"end": 3936,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 4014,
											"end": 4015,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4003,
											"end": 4012,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3999,
											"end": 4016,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3990,
											"end": 3996,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 3946,
											"end": 4017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "tag",
											"source": 4,
											"value": "330"
										},
										{
											"begin": 3946,
											"end": 4017,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3802,
											"end": 4024,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3802,
											"end": 4024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "tag",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 4121,
											"end": 4126,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 4103,
											"end": 4127,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "tag",
											"source": 4,
											"value": "332"
										},
										{
											"begin": 4103,
											"end": 4127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4096,
											"end": 4101,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4093,
											"end": 4128,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4142,
											"end": 4143,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4140,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4132,
											"end": 4144,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "tag",
											"source": 4,
											"value": "333"
										},
										{
											"begin": 4083,
											"end": 4146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4030,
											"end": 4152,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4030,
											"end": 4152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "tag",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4204,
											"end": 4209,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4242,
											"end": 4248,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4229,
											"end": 4249,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4220,
											"end": 4249,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 4285,
											"end": 4290,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "262"
										},
										{
											"begin": 4258,
											"end": 4291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "tag",
											"source": 4,
											"value": "335"
										},
										{
											"begin": 4258,
											"end": 4291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4158,
											"end": 4297,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4158,
											"end": 4297,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4371,
											"end": 4377,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4379,
											"end": 4385,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4428,
											"end": 4430,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4416,
											"end": 4425,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4407,
											"end": 4414,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4403,
											"end": 4426,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4399,
											"end": 4431,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 4434,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "tag",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 4434,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "tag",
											"source": 4,
											"value": "337"
										},
										{
											"begin": 4396,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4554,
											"end": 4555,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 4624,
											"end": 4631,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4615,
											"end": 4621,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4604,
											"end": 4613,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4600,
											"end": 4622,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 4579,
											"end": 4632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "tag",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 4579,
											"end": 4632,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4569,
											"end": 4632,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4525,
											"end": 4642,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4681,
											"end": 4683,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 4752,
											"end": 4759,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4743,
											"end": 4749,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4732,
											"end": 4741,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 4728,
											"end": 4750,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 4707,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "tag",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 4707,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4697,
											"end": 4760,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4652,
											"end": 4770,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4303,
											"end": 4777,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4303,
											"end": 4777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4783,
											"end": 4901,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 4783,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4870,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 4888,
											"end": 4893,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4870,
											"end": 4894,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 4870,
											"end": 4894,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4870,
											"end": 4894,
											"name": "tag",
											"source": 4,
											"value": "342"
										},
										{
											"begin": 4870,
											"end": 4894,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4865,
											"end": 4868,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4858,
											"end": 4895,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4783,
											"end": 4901,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4783,
											"end": 4901,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4783,
											"end": 4901,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4907,
											"end": 5129,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 4907,
											"end": 5129,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5000,
											"end": 5004,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5038,
											"end": 5040,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5027,
											"end": 5036,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5023,
											"end": 5041,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5015,
											"end": 5041,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5015,
											"end": 5041,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5051,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 5119,
											"end": 5120,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5108,
											"end": 5117,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5104,
											"end": 5121,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5095,
											"end": 5101,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5051,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 5051,
											"end": 5122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5051,
											"end": 5122,
											"name": "tag",
											"source": 4,
											"value": "344"
										},
										{
											"begin": 5051,
											"end": 5122,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4907,
											"end": 5129,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4907,
											"end": 5129,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4907,
											"end": 5129,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4907,
											"end": 5129,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4907,
											"end": 5129,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5135,
											"end": 5754,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 5135,
											"end": 5754,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5212,
											"end": 5218,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5220,
											"end": 5226,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5228,
											"end": 5234,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5277,
											"end": 5279,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 5265,
											"end": 5274,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5256,
											"end": 5263,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5252,
											"end": 5275,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5248,
											"end": 5280,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 5245,
											"end": 5364,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5245,
											"end": 5364,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "346"
										},
										{
											"begin": 5245,
											"end": 5364,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5283,
											"end": 5362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "347"
										},
										{
											"begin": 5283,
											"end": 5362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 5283,
											"end": 5362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5283,
											"end": 5362,
											"name": "tag",
											"source": 4,
											"value": "347"
										},
										{
											"begin": 5283,
											"end": 5362,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5245,
											"end": 5364,
											"name": "tag",
											"source": 4,
											"value": "346"
										},
										{
											"begin": 5245,
											"end": 5364,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5403,
											"end": 5404,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5428,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 5473,
											"end": 5480,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5464,
											"end": 5470,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5453,
											"end": 5462,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5449,
											"end": 5471,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5428,
											"end": 5481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 5428,
											"end": 5481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5428,
											"end": 5481,
											"name": "tag",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 5428,
											"end": 5481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5418,
											"end": 5481,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5418,
											"end": 5481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5374,
											"end": 5491,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5530,
											"end": 5532,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5556,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "349"
										},
										{
											"begin": 5601,
											"end": 5608,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5592,
											"end": 5598,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5581,
											"end": 5590,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5577,
											"end": 5599,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5556,
											"end": 5609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 5556,
											"end": 5609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5556,
											"end": 5609,
											"name": "tag",
											"source": 4,
											"value": "349"
										},
										{
											"begin": 5556,
											"end": 5609,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5609,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5546,
											"end": 5609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5501,
											"end": 5619,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5658,
											"end": 5660,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5684,
											"end": 5737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "350"
										},
										{
											"begin": 5729,
											"end": 5736,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 5720,
											"end": 5726,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5709,
											"end": 5718,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 5705,
											"end": 5727,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5684,
											"end": 5737,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 5684,
											"end": 5737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5684,
											"end": 5737,
											"name": "tag",
											"source": 4,
											"value": "350"
										},
										{
											"begin": 5684,
											"end": 5737,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5674,
											"end": 5737,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5674,
											"end": 5737,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5629,
											"end": 5747,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5135,
											"end": 5754,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5135,
											"end": 5754,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5135,
											"end": 5754,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5135,
											"end": 5754,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5135,
											"end": 5754,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5135,
											"end": 5754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5760,
											"end": 6089,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 5760,
											"end": 6089,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5819,
											"end": 5825,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5868,
											"end": 5870,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5856,
											"end": 5865,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5847,
											"end": 5854,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5843,
											"end": 5866,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5839,
											"end": 5871,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 5836,
											"end": 5955,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5836,
											"end": 5955,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "352"
										},
										{
											"begin": 5836,
											"end": 5955,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5874,
											"end": 5953,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "353"
										},
										{
											"begin": 5874,
											"end": 5953,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 5874,
											"end": 5953,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5874,
											"end": 5953,
											"name": "tag",
											"source": 4,
											"value": "353"
										},
										{
											"begin": 5874,
											"end": 5953,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5836,
											"end": 5955,
											"name": "tag",
											"source": 4,
											"value": "352"
										},
										{
											"begin": 5836,
											"end": 5955,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5994,
											"end": 5995,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6019,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "354"
										},
										{
											"begin": 6064,
											"end": 6071,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6055,
											"end": 6061,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6044,
											"end": 6053,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6040,
											"end": 6062,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6019,
											"end": 6072,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 6019,
											"end": 6072,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6019,
											"end": 6072,
											"name": "tag",
											"source": 4,
											"value": "354"
										},
										{
											"begin": 6019,
											"end": 6072,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6009,
											"end": 6072,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6009,
											"end": 6072,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5965,
											"end": 6082,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5760,
											"end": 6089,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5760,
											"end": 6089,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5760,
											"end": 6089,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5760,
											"end": 6089,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5760,
											"end": 6089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6095,
											"end": 6211,
											"name": "tag",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 6095,
											"end": 6211,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 6180,
											"end": 6185,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 6165,
											"end": 6186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "tag",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 6165,
											"end": 6186,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6158,
											"end": 6163,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6155,
											"end": 6187,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "357"
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6201,
											"end": 6202,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6198,
											"end": 6199,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6191,
											"end": 6203,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "tag",
											"source": 4,
											"value": "357"
										},
										{
											"begin": 6145,
											"end": 6205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6095,
											"end": 6211,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6095,
											"end": 6211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "tag",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6260,
											"end": 6265,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6304,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6285,
											"end": 6305,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6305,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6276,
											"end": 6305,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "359"
										},
										{
											"begin": 6338,
											"end": 6343,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "265"
										},
										{
											"begin": 6314,
											"end": 6344,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "tag",
											"source": 4,
											"value": "359"
										},
										{
											"begin": 6314,
											"end": 6344,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6217,
											"end": 6350,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6217,
											"end": 6350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6421,
											"end": 6427,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6429,
											"end": 6435,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6478,
											"end": 6480,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6466,
											"end": 6475,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6457,
											"end": 6464,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6453,
											"end": 6476,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6449,
											"end": 6481,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "361"
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "362"
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 6484,
											"end": 6563,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "tag",
											"source": 4,
											"value": "362"
										},
										{
											"begin": 6484,
											"end": 6563,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "tag",
											"source": 4,
											"value": "361"
										},
										{
											"begin": 6446,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6604,
											"end": 6605,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "363"
										},
										{
											"begin": 6674,
											"end": 6681,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6665,
											"end": 6671,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6654,
											"end": 6663,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6650,
											"end": 6672,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 6629,
											"end": 6682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "tag",
											"source": 4,
											"value": "363"
										},
										{
											"begin": 6629,
											"end": 6682,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6619,
											"end": 6682,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6619,
											"end": 6682,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6575,
											"end": 6692,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6731,
											"end": 6733,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "364"
										},
										{
											"begin": 6799,
											"end": 6806,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6790,
											"end": 6796,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6779,
											"end": 6788,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6775,
											"end": 6797,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "266"
										},
										{
											"begin": 6757,
											"end": 6807,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "tag",
											"source": 4,
											"value": "364"
										},
										{
											"begin": 6757,
											"end": 6807,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6747,
											"end": 6807,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6747,
											"end": 6807,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6702,
											"end": 6817,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6824,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6356,
											"end": 6824,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6830,
											"end": 6947,
											"name": "tag",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 6830,
											"end": 6947,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6939,
											"end": 6940,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6936,
											"end": 6937,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6929,
											"end": 6941,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6953,
											"end": 7070,
											"name": "tag",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 6953,
											"end": 7070,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7062,
											"end": 7063,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7059,
											"end": 7060,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7052,
											"end": 7064,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7076,
											"end": 7256,
											"name": "tag",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 7076,
											"end": 7256,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7124,
											"end": 7201,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7121,
											"end": 7122,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7114,
											"end": 7202,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7221,
											"end": 7225,
											"name": "PUSH",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 7218,
											"end": 7219,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7211,
											"end": 7226,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7245,
											"end": 7249,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 7242,
											"end": 7243,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7235,
											"end": 7250,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "369"
										},
										{
											"begin": 7367,
											"end": 7371,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 7345,
											"end": 7372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "tag",
											"source": 4,
											"value": "369"
										},
										{
											"begin": 7345,
											"end": 7372,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7337,
											"end": 7343,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7333,
											"end": 7373,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7475,
											"end": 7481,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7463,
											"end": 7473,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7460,
											"end": 7482,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 7439,
											"end": 7457,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7427,
											"end": 7437,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7424,
											"end": 7458,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 7421,
											"end": 7483,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "370"
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "371"
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 7486,
											"end": 7504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "tag",
											"source": 4,
											"value": "371"
										},
										{
											"begin": 7486,
											"end": 7504,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "tag",
											"source": 4,
											"value": "370"
										},
										{
											"begin": 7418,
											"end": 7506,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7526,
											"end": 7536,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7522,
											"end": 7524,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7515,
											"end": 7537,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7305,
											"end": 7543,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7262,
											"end": 7543,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7262,
											"end": 7543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "tag",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7583,
											"end": 7589,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "373"
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 7610,
											"end": 7630,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "tag",
											"source": 4,
											"value": "373"
										},
										{
											"begin": 7610,
											"end": 7630,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7600,
											"end": 7630,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7600,
											"end": 7630,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "374"
										},
										{
											"begin": 7667,
											"end": 7671,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7659,
											"end": 7665,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 7639,
											"end": 7672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "tag",
											"source": 4,
											"value": "374"
										},
										{
											"begin": 7639,
											"end": 7672,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7549,
											"end": 7678,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7549,
											"end": 7678,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "tag",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7745,
											"end": 7749,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7835,
											"end": 7853,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7827,
											"end": 7833,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7824,
											"end": 7854,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "376"
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "377"
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 7857,
											"end": 7875,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "tag",
											"source": 4,
											"value": "377"
										},
										{
											"begin": 7857,
											"end": 7875,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "tag",
											"source": 4,
											"value": "376"
										},
										{
											"begin": 7821,
											"end": 7877,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "378"
										},
										{
											"begin": 7917,
											"end": 7923,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 7895,
											"end": 7924,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "tag",
											"source": 4,
											"value": "378"
										},
										{
											"begin": 7895,
											"end": 7924,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7887,
											"end": 7924,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7887,
											"end": 7924,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7979,
											"end": 7983,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7973,
											"end": 7977,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7969,
											"end": 7984,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 7984,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7961,
											"end": 7984,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7684,
											"end": 7991,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7684,
											"end": 7991,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8095,
											"end": 8101,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8090,
											"end": 8093,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8085,
											"end": 8088,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8072,
											"end": 8102,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 8136,
											"end": 8137,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8127,
											"end": 8133,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8122,
											"end": 8125,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8118,
											"end": 8134,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8111,
											"end": 8138,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7997,
											"end": 8145,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7997,
											"end": 8145,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "tag",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8228,
											"end": 8233,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "381"
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "382"
										},
										{
											"begin": 8310,
											"end": 8316,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "272"
										},
										{
											"begin": 8269,
											"end": 8317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "tag",
											"source": 4,
											"value": "382"
										},
										{
											"begin": 8269,
											"end": 8317,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "271"
										},
										{
											"begin": 8253,
											"end": 8318,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "tag",
											"source": 4,
											"value": "381"
										},
										{
											"begin": 8253,
											"end": 8318,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8244,
											"end": 8318,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8244,
											"end": 8318,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8341,
											"end": 8347,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8334,
											"end": 8339,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8327,
											"end": 8348,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8379,
											"end": 8383,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8372,
											"end": 8377,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8368,
											"end": 8384,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8417,
											"end": 8420,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8408,
											"end": 8414,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8403,
											"end": 8406,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8399,
											"end": 8415,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8396,
											"end": 8421,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "383"
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "384"
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "268"
										},
										{
											"begin": 8424,
											"end": 8503,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "tag",
											"source": 4,
											"value": "384"
										},
										{
											"begin": 8424,
											"end": 8503,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "tag",
											"source": 4,
											"value": "383"
										},
										{
											"begin": 8393,
											"end": 8505,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "385"
										},
										{
											"begin": 8561,
											"end": 8567,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8556,
											"end": 8559,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8551,
											"end": 8554,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 8514,
											"end": 8568,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "tag",
											"source": 4,
											"value": "385"
										},
										{
											"begin": 8514,
											"end": 8568,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8234,
											"end": 8574,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8151,
											"end": 8574,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8151,
											"end": 8574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "tag",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8648,
											"end": 8653,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8697,
											"end": 8700,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8690,
											"end": 8694,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 8682,
											"end": 8688,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8678,
											"end": 8695,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8674,
											"end": 8701,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "388"
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "267"
										},
										{
											"begin": 8705,
											"end": 8784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "tag",
											"source": 4,
											"value": "388"
										},
										{
											"begin": 8705,
											"end": 8784,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "tag",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 8664,
											"end": 8786,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8822,
											"end": 8828,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8809,
											"end": 8829,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "389"
										},
										{
											"begin": 8921,
											"end": 8924,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 8913,
											"end": 8919,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8906,
											"end": 8910,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8898,
											"end": 8904,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 8894,
											"end": 8911,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 8847,
											"end": 8925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "tag",
											"source": 4,
											"value": "389"
										},
										{
											"begin": 8847,
											"end": 8925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 8925,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8838,
											"end": 8925,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8654,
											"end": 8931,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8593,
											"end": 8931,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8593,
											"end": 8931,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9032,
											"end": 9038,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9040,
											"end": 9046,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9048,
											"end": 9054,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9056,
											"end": 9062,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9105,
											"end": 9108,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 9093,
											"end": 9102,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9084,
											"end": 9091,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9080,
											"end": 9103,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9076,
											"end": 9109,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "392"
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 9112,
											"end": 9191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "tag",
											"source": 4,
											"value": "392"
										},
										{
											"begin": 9112,
											"end": 9191,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "tag",
											"source": 4,
											"value": "391"
										},
										{
											"begin": 9073,
											"end": 9193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9232,
											"end": 9233,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "393"
										},
										{
											"begin": 9302,
											"end": 9309,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9293,
											"end": 9299,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9282,
											"end": 9291,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 9278,
											"end": 9300,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 9257,
											"end": 9310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "tag",
											"source": 4,
											"value": "393"
										},
										{
											"begin": 9257,
											"end": 9310,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9247,
											"end": 9310,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 9247,
											"end": 9310,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9203,
											"end": 9320,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9359,
											"end": 9361,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "394"
										},
										{
											"begin": 9430,
											"end": 9437,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9421,
											"end": 9427,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9410,
											"end": 9419,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 9406,
											"end": 9428,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 9385,
											"end": 9438,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "tag",
											"source": 4,
											"value": "394"
										},
										{
											"begin": 9385,
											"end": 9438,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9375,
											"end": 9438,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 9375,
											"end": 9438,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9330,
											"end": 9448,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9487,
											"end": 9489,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "395"
										},
										{
											"begin": 9558,
											"end": 9565,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9549,
											"end": 9555,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9538,
											"end": 9547,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 9534,
											"end": 9556,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 9513,
											"end": 9566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "tag",
											"source": 4,
											"value": "395"
										},
										{
											"begin": 9513,
											"end": 9566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9503,
											"end": 9566,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9503,
											"end": 9566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9458,
											"end": 9576,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9643,
											"end": 9645,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 9632,
											"end": 9641,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9628,
											"end": 9646,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9615,
											"end": 9647,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 9674,
											"end": 9692,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9666,
											"end": 9672,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9663,
											"end": 9693,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "396"
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "397"
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 9696,
											"end": 9775,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "tag",
											"source": 4,
											"value": "397"
										},
										{
											"begin": 9696,
											"end": 9775,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "tag",
											"source": 4,
											"value": "396"
										},
										{
											"begin": 9660,
											"end": 9777,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "398"
										},
										{
											"begin": 9855,
											"end": 9862,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 9846,
											"end": 9852,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9835,
											"end": 9844,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 9831,
											"end": 9853,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 9801,
											"end": 9863,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "tag",
											"source": 4,
											"value": "398"
										},
										{
											"begin": 9801,
											"end": 9863,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9791,
											"end": 9863,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9791,
											"end": 9863,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9586,
											"end": 9873,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 8937,
											"end": 9880,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8937,
											"end": 9880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9954,
											"end": 9960,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9962,
											"end": 9968,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10011,
											"end": 10013,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9999,
											"end": 10008,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9990,
											"end": 9997,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 9986,
											"end": 10009,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9982,
											"end": 10014,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "400"
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "401"
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 10017,
											"end": 10096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "tag",
											"source": 4,
											"value": "401"
										},
										{
											"begin": 10017,
											"end": 10096,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "tag",
											"source": 4,
											"value": "400"
										},
										{
											"begin": 9979,
											"end": 10098,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10137,
											"end": 10138,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "402"
										},
										{
											"begin": 10207,
											"end": 10214,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10198,
											"end": 10204,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10187,
											"end": 10196,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10183,
											"end": 10205,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 10162,
											"end": 10215,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "tag",
											"source": 4,
											"value": "402"
										},
										{
											"begin": 10162,
											"end": 10215,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10152,
											"end": 10215,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10152,
											"end": 10215,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10108,
											"end": 10225,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10264,
											"end": 10266,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "403"
										},
										{
											"begin": 10335,
											"end": 10342,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10326,
											"end": 10332,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10315,
											"end": 10324,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10311,
											"end": 10333,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "263"
										},
										{
											"begin": 10290,
											"end": 10343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "tag",
											"source": 4,
											"value": "403"
										},
										{
											"begin": 10290,
											"end": 10343,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10280,
											"end": 10343,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10280,
											"end": 10343,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10235,
											"end": 10353,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9886,
											"end": 10360,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9886,
											"end": 10360,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10366,
											"end": 10546,
											"name": "tag",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 10366,
											"end": 10546,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10414,
											"end": 10491,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10411,
											"end": 10412,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10404,
											"end": 10492,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10511,
											"end": 10515,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 10508,
											"end": 10509,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10501,
											"end": 10516,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10535,
											"end": 10539,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 10532,
											"end": 10533,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10525,
											"end": 10540,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10596,
											"end": 10602,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10633,
											"end": 10634,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 10627,
											"end": 10631,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10623,
											"end": 10635,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 10613,
											"end": 10635,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10613,
											"end": 10635,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10680,
											"end": 10681,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10674,
											"end": 10678,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10670,
											"end": 10682,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10701,
											"end": 10719,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10691,
											"end": 10772,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "406"
										},
										{
											"begin": 10691,
											"end": 10772,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10757,
											"end": 10761,
											"name": "PUSH",
											"source": 4,
											"value": "7F"
										},
										{
											"begin": 10749,
											"end": 10755,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10745,
											"end": 10762,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10735,
											"end": 10762,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10735,
											"end": 10762,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10691,
											"end": 10772,
											"name": "tag",
											"source": 4,
											"value": "406"
										},
										{
											"begin": 10691,
											"end": 10772,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10819,
											"end": 10821,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10811,
											"end": 10817,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10808,
											"end": 10822,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10788,
											"end": 10806,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10785,
											"end": 10823,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10782,
											"end": 10866,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "407"
										},
										{
											"begin": 10782,
											"end": 10866,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "408"
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "276"
										},
										{
											"begin": 10838,
											"end": 10856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "tag",
											"source": 4,
											"value": "408"
										},
										{
											"begin": 10838,
											"end": 10856,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10782,
											"end": 10866,
											"name": "tag",
											"source": 4,
											"value": "407"
										},
										{
											"begin": 10782,
											"end": 10866,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10603,
											"end": 10872,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10552,
											"end": 10872,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10552,
											"end": 10872,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10878,
											"end": 11026,
											"name": "tag",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 10878,
											"end": 11026,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10980,
											"end": 10991,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11017,
											"end": 11020,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11002,
											"end": 11020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11002,
											"end": 11020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10878,
											"end": 11026,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10878,
											"end": 11026,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10878,
											"end": 11026,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10878,
											"end": 11026,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10878,
											"end": 11026,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11032,
											"end": 11422,
											"name": "tag",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 11032,
											"end": 11422,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11138,
											"end": 11141,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11166,
											"end": 11205,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "411"
										},
										{
											"begin": 11199,
											"end": 11204,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11166,
											"end": 11205,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "251"
										},
										{
											"begin": 11166,
											"end": 11205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11166,
											"end": 11205,
											"name": "tag",
											"source": 4,
											"value": "411"
										},
										{
											"begin": 11166,
											"end": 11205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11221,
											"end": 11310,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "412"
										},
										{
											"begin": 11303,
											"end": 11309,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11298,
											"end": 11301,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11221,
											"end": 11310,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 11221,
											"end": 11310,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11221,
											"end": 11310,
											"name": "tag",
											"source": 4,
											"value": "412"
										},
										{
											"begin": 11221,
											"end": 11310,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11214,
											"end": 11310,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 11214,
											"end": 11310,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11319,
											"end": 11384,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "413"
										},
										{
											"begin": 11377,
											"end": 11383,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11372,
											"end": 11375,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11365,
											"end": 11369,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 11358,
											"end": 11363,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 11354,
											"end": 11370,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11319,
											"end": 11384,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 11319,
											"end": 11384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11319,
											"end": 11384,
											"name": "tag",
											"source": 4,
											"value": "413"
										},
										{
											"begin": 11319,
											"end": 11384,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11409,
											"end": 11415,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 11404,
											"end": 11407,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11400,
											"end": 11416,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 11393,
											"end": 11416,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11393,
											"end": 11416,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11142,
											"end": 11422,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11032,
											"end": 11422,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11032,
											"end": 11422,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11032,
											"end": 11422,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11032,
											"end": 11422,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11032,
											"end": 11422,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11428,
											"end": 11863,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 11428,
											"end": 11863,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11608,
											"end": 11611,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11630,
											"end": 11725,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "415"
										},
										{
											"begin": 11721,
											"end": 11724,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11712,
											"end": 11718,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 11630,
											"end": 11725,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 11630,
											"end": 11725,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11630,
											"end": 11725,
											"name": "tag",
											"source": 4,
											"value": "415"
										},
										{
											"begin": 11630,
											"end": 11725,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11623,
											"end": 11725,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11623,
											"end": 11725,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11742,
											"end": 11837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "416"
										},
										{
											"begin": 11833,
											"end": 11836,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 11824,
											"end": 11830,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 11742,
											"end": 11837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 11742,
											"end": 11837,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11742,
											"end": 11837,
											"name": "tag",
											"source": 4,
											"value": "416"
										},
										{
											"begin": 11742,
											"end": 11837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11735,
											"end": 11837,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 11735,
											"end": 11837,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11854,
											"end": 11857,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 11847,
											"end": 11857,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 11847,
											"end": 11857,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11428,
											"end": 11863,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 11428,
											"end": 11863,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 11428,
											"end": 11863,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11428,
											"end": 11863,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11428,
											"end": 11863,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 11428,
											"end": 11863,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 11869,
											"end": 12049,
											"name": "tag",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 11869,
											"end": 12049,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 11917,
											"end": 11994,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11914,
											"end": 11915,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 11907,
											"end": 11995,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12014,
											"end": 12018,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 12011,
											"end": 12012,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 12004,
											"end": 12019,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12038,
											"end": 12042,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 12035,
											"end": 12036,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12028,
											"end": 12043,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 12055,
											"end": 12226,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 12055,
											"end": 12226,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12094,
											"end": 12097,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12117,
											"end": 12141,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "419"
										},
										{
											"begin": 12135,
											"end": 12140,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12117,
											"end": 12141,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 12117,
											"end": 12141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12117,
											"end": 12141,
											"name": "tag",
											"source": 4,
											"value": "419"
										},
										{
											"begin": 12117,
											"end": 12141,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12108,
											"end": 12141,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12108,
											"end": 12141,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12163,
											"end": 12167,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12156,
											"end": 12161,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12153,
											"end": 12168,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12150,
											"end": 12191,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "420"
										},
										{
											"begin": 12150,
											"end": 12191,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 12171,
											"end": 12189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "421"
										},
										{
											"begin": 12171,
											"end": 12189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 12171,
											"end": 12189,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12171,
											"end": 12189,
											"name": "tag",
											"source": 4,
											"value": "421"
										},
										{
											"begin": 12171,
											"end": 12189,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12150,
											"end": 12191,
											"name": "tag",
											"source": 4,
											"value": "420"
										},
										{
											"begin": 12150,
											"end": 12191,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12218,
											"end": 12219,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 12211,
											"end": 12216,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12207,
											"end": 12220,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 12200,
											"end": 12220,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12200,
											"end": 12220,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12055,
											"end": 12226,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12055,
											"end": 12226,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12055,
											"end": 12226,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12055,
											"end": 12226,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12232,
											"end": 12330,
											"name": "tag",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 12232,
											"end": 12330,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12283,
											"end": 12289,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12317,
											"end": 12322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12311,
											"end": 12323,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 12301,
											"end": 12323,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12301,
											"end": 12323,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12232,
											"end": 12330,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12232,
											"end": 12330,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12232,
											"end": 12330,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12232,
											"end": 12330,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12336,
											"end": 12504,
											"name": "tag",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 12336,
											"end": 12504,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12419,
											"end": 12430,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12453,
											"end": 12459,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12448,
											"end": 12451,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12441,
											"end": 12460,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 12493,
											"end": 12497,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12488,
											"end": 12491,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12484,
											"end": 12498,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12469,
											"end": 12498,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 12469,
											"end": 12498,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12336,
											"end": 12504,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12336,
											"end": 12504,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12336,
											"end": 12504,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12336,
											"end": 12504,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12336,
											"end": 12504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12510,
											"end": 12883,
											"name": "tag",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 12510,
											"end": 12883,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12596,
											"end": 12599,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 12624,
											"end": 12662,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "425"
										},
										{
											"begin": 12656,
											"end": 12661,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 12624,
											"end": 12662,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 12624,
											"end": 12662,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12624,
											"end": 12662,
											"name": "tag",
											"source": 4,
											"value": "425"
										},
										{
											"begin": 12624,
											"end": 12662,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12678,
											"end": 12748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "426"
										},
										{
											"begin": 12741,
											"end": 12747,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12736,
											"end": 12739,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 12678,
											"end": 12748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 12678,
											"end": 12748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12678,
											"end": 12748,
											"name": "tag",
											"source": 4,
											"value": "426"
										},
										{
											"begin": 12678,
											"end": 12748,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12671,
											"end": 12748,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 12671,
											"end": 12748,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12757,
											"end": 12822,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "427"
										},
										{
											"begin": 12815,
											"end": 12821,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12810,
											"end": 12813,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 12803,
											"end": 12807,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 12796,
											"end": 12801,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 12792,
											"end": 12808,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12757,
											"end": 12822,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "253"
										},
										{
											"begin": 12757,
											"end": 12822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12757,
											"end": 12822,
											"name": "tag",
											"source": 4,
											"value": "427"
										},
										{
											"begin": 12757,
											"end": 12822,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12847,
											"end": 12876,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "428"
										},
										{
											"begin": 12869,
											"end": 12875,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 12847,
											"end": 12876,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "254"
										},
										{
											"begin": 12847,
											"end": 12876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12847,
											"end": 12876,
											"name": "tag",
											"source": 4,
											"value": "428"
										},
										{
											"begin": 12847,
											"end": 12876,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 12842,
											"end": 12845,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 12838,
											"end": 12877,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 12831,
											"end": 12877,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12831,
											"end": 12877,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12600,
											"end": 12883,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12510,
											"end": 12883,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 12510,
											"end": 12883,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 12510,
											"end": 12883,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12510,
											"end": 12883,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12510,
											"end": 12883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 12889,
											"end": 13529,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 12889,
											"end": 13529,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13084,
											"end": 13088,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13122,
											"end": 13125,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 13111,
											"end": 13120,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13107,
											"end": 13126,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13099,
											"end": 13126,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13099,
											"end": 13126,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13136,
											"end": 13207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 13204,
											"end": 13205,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13193,
											"end": 13202,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13189,
											"end": 13206,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13180,
											"end": 13186,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 13136,
											"end": 13207,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 13136,
											"end": 13207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13136,
											"end": 13207,
											"name": "tag",
											"source": 4,
											"value": "430"
										},
										{
											"begin": 13136,
											"end": 13207,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13217,
											"end": 13289,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "431"
										},
										{
											"begin": 13285,
											"end": 13287,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13274,
											"end": 13283,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13270,
											"end": 13288,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13261,
											"end": 13267,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 13217,
											"end": 13289,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "261"
										},
										{
											"begin": 13217,
											"end": 13289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13217,
											"end": 13289,
											"name": "tag",
											"source": 4,
											"value": "431"
										},
										{
											"begin": 13217,
											"end": 13289,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13299,
											"end": 13371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 13367,
											"end": 13369,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 13356,
											"end": 13365,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13352,
											"end": 13370,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13343,
											"end": 13349,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 13299,
											"end": 13371,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 13299,
											"end": 13371,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13299,
											"end": 13371,
											"name": "tag",
											"source": 4,
											"value": "432"
										},
										{
											"begin": 13299,
											"end": 13371,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13418,
											"end": 13427,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13412,
											"end": 13416,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13408,
											"end": 13428,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 13403,
											"end": 13405,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 13392,
											"end": 13401,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 13388,
											"end": 13406,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13381,
											"end": 13429,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 13446,
											"end": 13522,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "433"
										},
										{
											"begin": 13517,
											"end": 13521,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13508,
											"end": 13514,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 13446,
											"end": 13522,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 13446,
											"end": 13522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13446,
											"end": 13522,
											"name": "tag",
											"source": 4,
											"value": "433"
										},
										{
											"begin": 13446,
											"end": 13522,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13438,
											"end": 13522,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13438,
											"end": 13522,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12889,
											"end": 13529,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 12889,
											"end": 13529,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 12889,
											"end": 13529,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12889,
											"end": 13529,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12889,
											"end": 13529,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12889,
											"end": 13529,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12889,
											"end": 13529,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 12889,
											"end": 13529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13535,
											"end": 13676,
											"name": "tag",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 13535,
											"end": 13676,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13591,
											"end": 13596,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13622,
											"end": 13628,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13616,
											"end": 13629,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 13607,
											"end": 13629,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 13607,
											"end": 13629,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13638,
											"end": 13670,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "435"
										},
										{
											"begin": 13664,
											"end": 13669,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 13638,
											"end": 13670,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 13638,
											"end": 13670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13638,
											"end": 13670,
											"name": "tag",
											"source": 4,
											"value": "435"
										},
										{
											"begin": 13638,
											"end": 13670,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13535,
											"end": 13676,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 13535,
											"end": 13676,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13535,
											"end": 13676,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13535,
											"end": 13676,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13535,
											"end": 13676,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13682,
											"end": 14031,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 13682,
											"end": 14031,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13751,
											"end": 13757,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13800,
											"end": 13802,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 13788,
											"end": 13797,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13779,
											"end": 13786,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 13775,
											"end": 13798,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 13771,
											"end": 13803,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "437"
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 13806,
											"end": 13885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "438"
										},
										{
											"begin": 13806,
											"end": 13885,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 13806,
											"end": 13885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13806,
											"end": 13885,
											"name": "tag",
											"source": 4,
											"value": "438"
										},
										{
											"begin": 13806,
											"end": 13885,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "tag",
											"source": 4,
											"value": "437"
										},
										{
											"begin": 13768,
											"end": 13887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13926,
											"end": 13927,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 13951,
											"end": 14014,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 14006,
											"end": 14013,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 13997,
											"end": 14003,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 13986,
											"end": 13995,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 13982,
											"end": 14004,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 13951,
											"end": 14014,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 13951,
											"end": 14014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 13951,
											"end": 14014,
											"name": "tag",
											"source": 4,
											"value": "439"
										},
										{
											"begin": 13951,
											"end": 14014,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 13941,
											"end": 14014,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13941,
											"end": 14014,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13897,
											"end": 14024,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13682,
											"end": 14031,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 13682,
											"end": 14031,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 13682,
											"end": 14031,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13682,
											"end": 14031,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 13682,
											"end": 14031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/ERC721ABurnable.sol",
								"Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/IERC721ABurnable.sol",
								"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol",
								"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/IERC721A.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721A\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":{\"keccak256\":\"0xbf164ed12ed2fb1eca6dba3afc7be8958a03cc8979f7302fda9c45d70cf3735d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://845f4ab43711e9a2e49f81519d6daef7bdbc98ba9ffcfe059f0fb2372c217288\",\"dweb:/ipfs/QmVxJtRznhL6M7daatv3HqL2S4joGMqiFzPS21SqK7r6h4\"]},\"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/IERC721A.sol\":{\"keccak256\":\"0xa50758be4b6557e7ffb8da3a58ab42d8c913849dfaeaf099ef2112d18fc0540c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e459408d4969a470969bebe5de840f0a1e1d014c9d9a273f6413f17a8ba69c2e\",\"dweb:/ipfs/QmYDd4TqiFStL25VebeP9KikYBnL6uSpoaxx7E2h6sLDG6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 127,
								"contract": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol:ERC721A",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 129,
								"contract": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol:ERC721A",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 131,
								"contract": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol:ERC721A",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 133,
								"contract": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol:ERC721A",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 137,
								"contract": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol:ERC721A",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 141,
								"contract": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol:ERC721A",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 146,
								"contract": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol:ERC721A",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)59_storage)"
							},
							{
								"astId": 152,
								"contract": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol:ERC721A",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(TokenApprovalRef)59_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenApprovalRef)59_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenApprovalRef)59_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenApprovalRef",
								"members": [
									{
										"astId": 58,
										"contract": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol:ERC721A",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721A__IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721 token receiver.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721 token receiver.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":\"ERC721A__IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":{\"keccak256\":\"0xbf164ed12ed2fb1eca6dba3afc7be8958a03cc8979f7302fda9c45d70cf3735d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://845f4ab43711e9a2e49f81519d6daef7bdbc98ba9ffcfe059f0fb2372c217288\",\"dweb:/ipfs/QmVxJtRznhL6M7daatv3HqL2S4joGMqiFzPS21SqK7r6h4\"]},\"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/IERC721A.sol\":{\"keccak256\":\"0xa50758be4b6557e7ffb8da3a58ab42d8c913849dfaeaf099ef2112d18fc0540c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e459408d4969a470969bebe5de840f0a1e1d014c9d9a273f6413f17a8ba69c2e\",\"dweb:/ipfs/QmYDd4TqiFStL25VebeP9KikYBnL6uSpoaxx7E2h6sLDG6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/IERC721A.sol": {
				"IERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721A.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721A.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/IERC721A.sol\":{\"keccak256\":\"0xa50758be4b6557e7ffb8da3a58ab42d8c913849dfaeaf099ef2112d18fc0540c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e459408d4969a470969bebe5de840f0a1e1d014c9d9a273f6413f17a8ba69c2e\",\"dweb:/ipfs/QmYDd4TqiFStL25VebeP9KikYBnL6uSpoaxx7E2h6sLDG6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/ERC721ABurnable.sol": {
				"ast": {
					"absolutePath": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/ERC721ABurnable.sol",
					"exportedSymbols": {
						"ERC721A": [
							1832
						],
						"ERC721ABurnable": [
							22
						],
						"ERC721A__IERC721Receiver": [
							53
						],
						"IERC721A": [
							2038
						],
						"IERC721ABurnable": [
							35
						]
					},
					"id": 23,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "1374:23:0"
						},
						{
							"absolutePath": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/IERC721ABurnable.sol",
							"file": "./IERC721ABurnable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 23,
							"sourceUnit": 36,
							"src": "1399:32:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol",
							"file": "../ERC721A.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 23,
							"sourceUnit": 1833,
							"src": "1432:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "ERC721A",
										"nameLocations": [
											"1600:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1832,
										"src": "1600:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "1600:7:0"
								},
								{
									"baseName": {
										"id": 7,
										"name": "IERC721ABurnable",
										"nameLocations": [
											"1609:16:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 35,
										"src": "1609:16:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "1609:16:0"
								}
							],
							"canonicalName": "ERC721ABurnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "1458:104:0",
								"text": " @title ERC721ABurnable.\n @dev ERC721A token that can be irreversibly burned (destroyed)."
							},
							"fullyImplemented": true,
							"id": 22,
							"linearizedBaseContracts": [
								22,
								35,
								1832,
								2038
							],
							"name": "ERC721ABurnable",
							"nameLocation": "1581:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "1855:37:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 16,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "1871:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 17,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1880:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 15,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1557,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "1865:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1865:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "1865:20:0"
											}
										]
									},
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "1632:163:0",
										"text": " @dev Burns `tokenId`. See {ERC721A-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."
									},
									"functionSelector": "42966c68",
									"id": 21,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "1809:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 13,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1846:8:0"
									},
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1822:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1814:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1814:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1813:17:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1855:0:0"
									},
									"scope": 22,
									"src": "1800:92:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 23,
							"src": "1563:331:0",
							"usedErrors": [
								1838,
								1841,
								1844,
								1847,
								1850,
								1853,
								1856,
								1859,
								1862,
								1865,
								1868,
								1871,
								1874
							],
							"usedEvents": [
								1906,
								1915,
								1924,
								2037
							]
						}
					],
					"src": "1374:521:0"
				},
				"id": 0
			},
			"Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/IERC721ABurnable.sol": {
				"ast": {
					"absolutePath": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/IERC721ABurnable.sol",
					"exportedSymbols": {
						"IERC721A": [
							2038
						],
						"IERC721ABurnable": [
							35
						]
					},
					"id": 36,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 24,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "1374:23:1"
						},
						{
							"absolutePath": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)/IERC721A.sol",
							"file": "../IERC721A.sol",
							"id": 25,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 36,
							"sourceUnit": 2039,
							"src": "1399:25:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 27,
										"name": "IERC721A",
										"nameLocations": [
											"1502:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2038,
										"src": "1502:8:1"
									},
									"id": 28,
									"nodeType": "InheritanceSpecifier",
									"src": "1502:8:1"
								}
							],
							"canonicalName": "IERC721ABurnable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 26,
								"nodeType": "StructuredDocumentation",
								"src": "1426:45:1",
								"text": " @dev Interface of ERC721ABurnable."
							},
							"fullyImplemented": false,
							"id": 35,
							"linearizedBaseContracts": [
								35,
								2038
							],
							"name": "IERC721ABurnable",
							"nameLocation": "1482:16:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "1517:163:1",
										"text": " @dev Burns `tokenId`. See {ERC721A-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."
									},
									"functionSelector": "42966c68",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "1694:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1707:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1699:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:17:1"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1724:0:1"
									},
									"scope": 35,
									"src": "1685:40:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 36,
							"src": "1472:255:1",
							"usedErrors": [
								1838,
								1841,
								1844,
								1847,
								1850,
								1853,
								1856,
								1859,
								1862,
								1865,
								1868,
								1871,
								1874
							],
							"usedEvents": [
								1906,
								1915,
								1924,
								2037
							]
						}
					],
					"src": "1374:354:1"
				},
				"id": 1
			},
			"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol": {
				"ast": {
					"absolutePath": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol",
					"exportedSymbols": {
						"ERC721A": [
							1832
						],
						"ERC721A__IERC721Receiver": [
							53
						],
						"IERC721A": [
							2038
						]
					},
					"id": 1833,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 37,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "1374:23:2"
						},
						{
							"absolutePath": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)/IERC721A.sol",
							"file": "./IERC721A.sol",
							"id": 38,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1833,
							"sourceUnit": 2039,
							"src": "1399:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC721A__IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 39,
								"nodeType": "StructuredDocumentation",
								"src": "1425:51:2",
								"text": " @dev Interface of ERC721 token receiver."
							},
							"fullyImplemented": false,
							"id": 53,
							"linearizedBaseContracts": [
								53
							],
							"name": "ERC721A__IERC721Receiver",
							"nameLocation": "1487:24:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "150b7a02",
									"id": 52,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "1527:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1561:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "1553:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 40,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1553:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1587:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "1579:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1579:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1609:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "1601:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1601:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1641:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "1626:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 46,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1626:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:108:2"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "1670:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 49,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1670:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1669:8:2"
									},
									"scope": 53,
									"src": "1518:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1833,
							"src": "1477:203:2",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 55,
										"name": "IERC721A",
										"nameLocations": [
											"2205:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2038,
										"src": "2205:8:2"
									},
									"id": 56,
									"nodeType": "InheritanceSpecifier",
									"src": "2205:8:2"
								}
							],
							"canonicalName": "ERC721A",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 54,
								"nodeType": "StructuredDocumentation",
								"src": "1682:502:2",
								"text": " @title ERC721A\n @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n Non-Fungible Token Standard, including the Metadata extension.\n Optimized for lower gas during batch mints.\n Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n starting from `_startTokenId()`.\n Assumptions:\n - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256)."
							},
							"fullyImplemented": true,
							"id": 1832,
							"linearizedBaseContracts": [
								1832,
								2038
							],
							"name": "ERC721A",
							"nameLocation": "2194:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC721A.TokenApprovalRef",
									"id": 59,
									"members": [
										{
											"constant": false,
											"id": 58,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "2347:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 59,
											"src": "2339:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 57,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2339:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenApprovalRef",
									"nameLocation": "2312:16:2",
									"nodeType": "StructDefinition",
									"scope": 1832,
									"src": "2305:54:2",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 67,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS_DATA_ENTRY",
									"nameLocation": "2620:27:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "2595:68:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 60,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2595:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										},
										"id": 66,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2651:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 62,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2656:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "2651:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													}
												}
											],
											"id": 64,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2650:9:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18446744073709551616_by_1",
												"typeString": "int_const 18446744073709551616"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 65,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2662:1:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2650:13:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 70,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_MINTED",
									"nameLocation": "2761:21:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "2736:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 68,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2736:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3634",
										"id": 69,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2785:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64_by_1",
											"typeString": "int_const 64"
										},
										"value": "64"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 73,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_BURNED",
									"nameLocation": "2885:21:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "2860:52:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 71,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2860:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313238",
										"id": 72,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2909:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "128"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 76,
									"mutability": "constant",
									"name": "_BITPOS_AUX",
									"nameLocation": "3001:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "2976:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 74,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2976:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313932",
										"id": 75,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3015:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "192"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 84,
									"mutability": "constant",
									"name": "_BITMASK_AUX_COMPLEMENT",
									"nameLocation": "3131:23:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "3106:65:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 77,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3106:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										},
										"id": 83,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 78,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3158:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313932",
														"id": 79,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3163:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_192_by_1",
															"typeString": "int_const 192"
														},
														"value": "192"
													},
													"src": "3158:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													}
												}
											],
											"id": 81,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "3157:10:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
												"typeString": "int_const 6277...(50 digits omitted)...2896"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 82,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3170:1:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "3157:14:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 87,
									"mutability": "constant",
									"name": "_BITPOS_START_TIMESTAMP",
									"nameLocation": "3268:23:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "3243:54:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 85,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3243:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313630",
										"id": 86,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3294:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_160_by_1",
											"typeString": "int_const 160"
										},
										"value": "160"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 92,
									"mutability": "constant",
									"name": "_BITMASK_BURNED",
									"nameLocation": "3390:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "3365:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 88,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3365:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										},
										"id": 91,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 89,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3408:1:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323234",
											"id": 90,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3413:3:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_224_by_1",
												"typeString": "int_const 224"
											},
											"value": "224"
										},
										"src": "3408:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 95,
									"mutability": "constant",
									"name": "_BITPOS_NEXT_INITIALIZED",
									"nameLocation": "3522:24:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "3497:55:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 93,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3497:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323235",
										"id": 94,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3549:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_225_by_1",
											"typeString": "int_const 225"
										},
										"value": "225"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 100,
									"mutability": "constant",
									"name": "_BITMASK_NEXT_INITIALIZED",
									"nameLocation": "3654:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "3629:61:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 96,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3629:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										},
										"id": 99,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 97,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3682:1:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323235",
											"id": 98,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3687:3:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_225_by_1",
												"typeString": "int_const 225"
											},
											"value": "225"
										},
										"src": "3682:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 103,
									"mutability": "constant",
									"name": "_BITPOS_EXTRA_DATA",
									"nameLocation": "3782:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "3757:49:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 101,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3757:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323332",
										"id": 102,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3803:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_232_by_1",
											"typeString": "int_const 232"
										},
										"value": "232"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 111,
									"mutability": "constant",
									"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
									"nameLocation": "3924:30:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "3899:72:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 104,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3899:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										},
										"id": 110,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3958:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "323332",
														"id": 106,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3963:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_232_by_1",
															"typeString": "int_const 232"
														},
														"value": "232"
													},
													"src": "3958:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													}
												}
											],
											"id": 108,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "3957:10:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
												"typeString": "int_const 6901...(62 digits omitted)...9296"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 109,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3970:1:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "3957:14:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 119,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS",
									"nameLocation": "4056:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "4031:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 112,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4031:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										},
										"id": 118,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4076:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313630",
														"id": 114,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4081:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_160_by_1",
															"typeString": "int_const 160"
														},
														"value": "160"
													},
													"src": "4076:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													}
												}
											],
											"id": 116,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "4075:10:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
												"typeString": "int_const 1461...(41 digits omitted)...2976"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 117,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4088:1:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "4075:14:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 122,
									"mutability": "constant",
									"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
									"nameLocation": "4397:32:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "4372:64:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 120,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4372:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35303030",
										"id": 121,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4432:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000_by_1",
											"typeString": "int_const 5000"
										},
										"value": "5000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 125,
									"mutability": "constant",
									"name": "_TRANSFER_EVENT_SIGNATURE",
									"nameLocation": "4583:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "4558:127:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 123,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4558:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307864646632353261643162653263383962363963326230363866633337386461613935326261376631363363346131313632386635356134646635323362336566",
										"id": 124,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4619:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100389287136786176327247604509743168900146139575972864366142685224231313322991_by_1",
											"typeString": "int_const 1003...(70 digits omitted)...2991"
										},
										"value": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 127,
									"mutability": "mutable",
									"name": "_currentIndex",
									"nameLocation": "4928:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "4912:29:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 126,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4912:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 129,
									"mutability": "mutable",
									"name": "_burnCounter",
									"nameLocation": "5000:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "4984:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 128,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4984:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 131,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "5052:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "5037:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 130,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5037:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 133,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "5099:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "5084:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 132,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5084:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 137,
									"mutability": "mutable",
									"name": "_packedOwnerships",
									"nameLocation": "5526:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "5490:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 136,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 134,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5498:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "5490:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 135,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5509:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 141,
									"mutability": "mutable",
									"name": "_packedAddressData",
									"nameLocation": "5785:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "5749:54:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 140,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 138,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5757:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5749:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 139,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5768:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 146,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "5905:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "5860:60:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$59_storage_$",
										"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
									},
									"typeName": {
										"id": 145,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 142,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5868:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "5860:36:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$59_storage_$",
											"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 144,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 143,
												"name": "TokenApprovalRef",
												"nameLocations": [
													"5879:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 59,
												"src": "5879:16:2"
											},
											"referencedDeclaration": 59,
											"src": "5879:16:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenApprovalRef_$59_storage_ptr",
												"typeString": "struct ERC721A.TokenApprovalRef"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 152,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "6028:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "5975:71:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 151,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 147,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5983:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5975:44:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 150,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 148,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6002:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "5994:24:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 149,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "6013:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 172,
										"nodeType": "Block",
										"src": "6292:98:2",
										"statements": [
											{
												"expression": {
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 159,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "6302:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 160,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "6310:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6302:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "6302:13:2"
											},
											{
												"expression": {
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 163,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "6325:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 164,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "6335:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6325:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 166,
												"nodeType": "ExpressionStatement",
												"src": "6325:17:2"
											},
											{
												"expression": {
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 167,
														"name": "_currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "6352:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 168,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "6368:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 169,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:15:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6352:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "6352:31:2"
											}
										]
									},
									"id": 173,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "6262:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "6248:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 153,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6248:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "6283:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "6269:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 155,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6269:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6247:44:2"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6292:0:2"
									},
									"scope": 1832,
									"src": "6236:154:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "6781:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6798:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 178,
												"id": 180,
												"nodeType": "Return",
												"src": "6791:8:2"
											}
										]
									},
									"documentation": {
										"id": 174,
										"nodeType": "StructuredDocumentation",
										"src": "6586:125:2",
										"text": " @dev Returns the starting token ID.\n To change the starting token ID, please override this function."
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startTokenId",
									"nameLocation": "6725:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6738:2:2"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "6772:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6772:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6771:9:2"
									},
									"scope": 1832,
									"src": "6716:90:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 190,
										"nodeType": "Block",
										"src": "6944:37:2",
										"statements": [
											{
												"expression": {
													"id": 188,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 127,
													"src": "6961:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 187,
												"id": 189,
												"nodeType": "Return",
												"src": "6954:20:2"
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "6812:63:2",
										"text": " @dev Returns the next token ID to be minted."
									},
									"id": 191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextTokenId",
									"nameLocation": "6889:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6901:2:2"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "6935:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6935:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6934:9:2"
									},
									"scope": 1832,
									"src": "6880:101:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1889
									],
									"body": {
										"id": 206,
										"nodeType": "Block",
										"src": "7254:247:2",
										"statements": [
											{
												"id": 205,
												"nodeType": "UncheckedBlock",
												"src": "7407:88:2",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 198,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 127,
																	"src": "7438:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 199,
																	"name": "_burnCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "7454:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7438:28:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 201,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 182,
																	"src": "7469:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7469:15:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7438:46:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 197,
														"id": 204,
														"nodeType": "Return",
														"src": "7431:53:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "6987:192:2",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "7193:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 194,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7227:8:2"
									},
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7204:2:2"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "7245:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7245:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7244:9:2"
									},
									"scope": 1832,
									"src": "7184:317:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "7658:226:2",
										"statements": [
											{
												"id": 218,
												"nodeType": "UncheckedBlock",
												"src": "7805:73:2",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 213,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 127,
																"src": "7836:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 214,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 182,
																	"src": "7852:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7852:15:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7836:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 212,
														"id": 217,
														"nodeType": "Return",
														"src": "7829:38:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "7507:82:2",
										"text": " @dev Returns the total amount of tokens minted in the contract."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalMinted",
									"nameLocation": "7603:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7615:2:2"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "7649:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7649:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7648:9:2"
									},
									"scope": 1832,
									"src": "7594:290:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "8025:36:2",
										"statements": [
											{
												"expression": {
													"id": 226,
													"name": "_burnCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 129,
													"src": "8042:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 225,
												"id": 227,
												"nodeType": "Return",
												"src": "8035:19:2"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "7890:66:2",
										"text": " @dev Returns the total number of tokens burned."
									},
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalBurned",
									"nameLocation": "7970:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7982:2:2"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "8016:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8015:9:2"
									},
									"scope": 1832,
									"src": "7961:100:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1932
									],
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "8416:158:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 238,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "8430:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8447:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8439:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 239,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8439:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 242,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8439:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8430:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 249,
												"nodeType": "IfStatement",
												"src": "8426:69:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 245,
																	"name": "BalanceQueryForZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1844,
																	"src": "8459:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8486:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "8459:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 244,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "8451:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8451:44:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 248,
													"nodeType": "ExpressionStatement",
													"src": "8451:44:2"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 250,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "8512:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 252,
														"indexExpression": {
															"id": 251,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "8531:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8512:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 253,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "8540:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8512:55:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 237,
												"id": 255,
												"nodeType": "Return",
												"src": "8505:62:2"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "8256:74:2",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "8344:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 234,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8389:8:2"
									},
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8362:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "8354:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8354:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8353:15:2"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "8407:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8407:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8406:9:2"
									},
									"scope": 1832,
									"src": "8335:239:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "8721:106:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 269,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 265,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 141,
																		"src": "8739:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 267,
																	"indexExpression": {
																		"id": 266,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "8758:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8739:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 268,
																	"name": "_BITPOS_NUMBER_MINTED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 70,
																	"src": "8768:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8739:50:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 270,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8738:52:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 271,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "8793:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8738:82:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 264,
												"id": 273,
												"nodeType": "Return",
												"src": "8731:89:2"
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "8580:66:2",
										"text": " Returns the number of tokens minted by `owner`."
									},
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "8660:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8682:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "8674:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8674:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8673:15:2"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "8712:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8712:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8711:9:2"
									},
									"scope": 1832,
									"src": "8651:176:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "8990:106:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 283,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 141,
																		"src": "9008:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 285,
																	"indexExpression": {
																		"id": 284,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 278,
																		"src": "9027:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9008:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 286,
																	"name": "_BITPOS_NUMBER_BURNED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 73,
																	"src": "9037:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9008:50:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 288,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9007:52:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 289,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "9062:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9007:82:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 282,
												"id": 291,
												"nodeType": "Return",
												"src": "9000:89:2"
											}
										]
									},
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "8833:82:2",
										"text": " Returns the number of tokens burned by or on behalf of `owner`."
									},
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberBurned",
									"nameLocation": "8929:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8951:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "8943:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8943:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8942:15:2"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "8981:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8981:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8980:9:2"
									},
									"scope": 1832,
									"src": "8920:176:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "9272:72:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 303,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "9296:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 305,
																"indexExpression": {
																	"id": 304,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "9315:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9296:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 306,
																"name": "_BITPOS_AUX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 76,
																"src": "9325:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9296:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 302,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9289:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 301,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "9289:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9289:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 300,
												"id": 309,
												"nodeType": "Return",
												"src": "9282:55:2"
											}
										]
									},
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "9102:102:2",
										"text": " Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used)."
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAux",
									"nameLocation": "9218:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9234:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "9226:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9226:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9225:15:2"
									},
									"returnParameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "9264:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 298,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "9264:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9263:8:2"
									},
									"scope": 1832,
									"src": "9209:135:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "9587:334:2",
										"statements": [
											{
												"assignments": [
													320
												],
												"declarations": [
													{
														"constant": false,
														"id": 320,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "9605:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "9597:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 319,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9597:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 324,
												"initialValue": {
													"baseExpression": {
														"id": 321,
														"name": "_packedAddressData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "9614:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 323,
													"indexExpression": {
														"id": 322,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "9633:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9614:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9597:42:2"
											},
											{
												"assignments": [
													326
												],
												"declarations": [
													{
														"constant": false,
														"id": 326,
														"mutability": "mutable",
														"name": "auxCasted",
														"nameLocation": "9657:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "9649:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 325,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9649:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 327,
												"nodeType": "VariableDeclarationStatement",
												"src": "9649:17:2"
											},
											{
												"AST": {
													"nativeSrc": "9749:40:2",
													"nodeType": "YulBlock",
													"src": "9749:40:2",
													"statements": [
														{
															"nativeSrc": "9763:16:2",
															"nodeType": "YulAssignment",
															"src": "9763:16:2",
															"value": {
																"name": "aux",
																"nativeSrc": "9776:3:2",
																"nodeType": "YulIdentifier",
																"src": "9776:3:2"
															},
															"variableNames": [
																{
																	"name": "auxCasted",
																	"nativeSrc": "9763:9:2",
																	"nodeType": "YulIdentifier",
																	"src": "9763:9:2"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 316,
														"isOffset": false,
														"isSlot": false,
														"src": "9776:3:2",
														"valueSize": 1
													},
													{
														"declaration": 326,
														"isOffset": false,
														"isSlot": false,
														"src": "9763:9:2",
														"valueSize": 1
													}
												],
												"id": 328,
												"nodeType": "InlineAssembly",
												"src": "9740:49:2"
											},
											{
												"expression": {
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 329,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 320,
														"src": "9798:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 330,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 320,
																		"src": "9808:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 331,
																		"name": "_BITMASK_AUX_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 84,
																		"src": "9817:23:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9808:32:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 333,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9807:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 334,
																		"name": "auxCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 326,
																		"src": "9845:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 335,
																		"name": "_BITPOS_AUX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 76,
																		"src": "9858:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9845:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 337,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9844:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9807:63:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9798:72:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "9798:72:2"
											},
											{
												"expression": {
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 341,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "9880:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 343,
														"indexExpression": {
															"id": 342,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "9899:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9880:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 344,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 320,
														"src": "9908:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9880:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "9880:34:2"
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "9350:171:2",
										"text": " Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n If there are multiple variables, please pack them into a uint64."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAux",
									"nameLocation": "9535:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9551:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "9543:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9543:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "aux",
												"nameLocation": "9565:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "9558:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 315,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "9558:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9542:27:2"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9587:0:2"
									},
									"scope": 1832,
									"src": "9526:395:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1897
									],
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "10545:539:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 357,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "10857:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783031666663396137",
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10872:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_33540519_by_1",
																	"typeString": "int_const 33540519"
																},
																"value": "0x01ffc9a7"
															},
															"src": "10857:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 360,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "10933:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783830616335386364",
																"id": 361,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10948:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2158778573_by_1",
																	"typeString": "int_const 2158778573"
																},
																"value": "0x80ac58cd"
															},
															"src": "10933:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "10857:101:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 366,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 364,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "11009:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30783562356531333966",
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11024:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1532892063_by_1",
																"typeString": "int_const 1532892063"
															},
															"value": "0x5b5e139f"
														},
														"src": "11009:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "10857:177:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 356,
												"id": 368,
												"nodeType": "Return",
												"src": "10838:196:2"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "10108:341:2",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "10463:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 353,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10521:8:2"
									},
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "10488:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "10481:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 350,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "10481:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10480:20:2"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "10539:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 354,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10539:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10538:6:2"
									},
									"scope": 1832,
									"src": "10454:630:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2012
									],
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "11407:29:2",
										"statements": [
											{
												"expression": {
													"id": 377,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 131,
													"src": "11424:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 376,
												"id": 378,
												"nodeType": "Return",
												"src": "11417:12:2"
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "11275:58:2",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "11347:4:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 373,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11374:8:2"
									},
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11351:2:2"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "11392:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 374,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11392:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11391:15:2"
									},
									"scope": 1832,
									"src": "11338:98:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2018
									],
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "11578:31:2",
										"statements": [
											{
												"expression": {
													"id": 387,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 133,
													"src": "11595:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 386,
												"id": 388,
												"nodeType": "Return",
												"src": "11588:14:2"
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "11442:60:2",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "11516:6:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 383,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11545:8:2"
									},
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11522:2:2"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "11563:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 384,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11563:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11562:15:2"
									},
									"scope": 1832,
									"src": "11507:102:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2026
									],
									"body": {
										"id": 434,
										"nodeType": "Block",
										"src": "11798:234:2",
										"statements": [
											{
												"condition": {
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "11812:17:2",
													"subExpression": {
														"arguments": [
															{
																"id": 400,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "11821:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 399,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "11813:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11813:16:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 408,
												"nodeType": "IfStatement",
												"src": "11808:68:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 404,
																	"name": "URIQueryForNonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1868,
																	"src": "11839:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11867:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "11839:36:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 403,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "11831:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11831:45:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 407,
													"nodeType": "ExpressionStatement",
													"src": "11831:45:2"
												}
											},
											{
												"assignments": [
													410
												],
												"declarations": [
													{
														"constant": false,
														"id": 410,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "11901:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 434,
														"src": "11887:21:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 409,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "11887:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 413,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 411,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "11911:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11911:10:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11887:34:2"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 416,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 410,
																		"src": "11944:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11938:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 414,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "11938:5:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11938:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11953:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "11938:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11963:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "11938:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12023:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "11938:87:2",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 425,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 410,
																		"src": "11991:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 427,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 393,
																				"src": "12010:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 426,
																			"name": "_toString",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1823,
																			"src": "12000:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12000:18:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 423,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "11974:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "11978:12:2",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "11974:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11974:45:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11967:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 421,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "11967:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11967:53:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 398,
												"id": 433,
												"nodeType": "Return",
												"src": "11931:94:2"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "11615:90:2",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "11719:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 395,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11765:8:2"
									},
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11736:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "11728:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11728:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11727:17:2"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "11783:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 396,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11783:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11782:15:2"
									},
									"scope": 1832,
									"src": "11710:322:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "12343:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12360:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 440,
												"id": 442,
												"nodeType": "Return",
												"src": "12353:9:2"
											}
										]
									},
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "12038:234:2",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, it can be overridden in child contracts."
									},
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "12286:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12294:2:2"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "12328:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 438,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12328:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12327:15:2"
									},
									"scope": 1832,
									"src": "12277:92:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1940
									],
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "12780:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 458,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 447,
																			"src": "12832:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 457,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 609,
																		"src": "12813:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12813:27:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12805:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 455,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "12805:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12805:36:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12797:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 453,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12797:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12797:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 452,
												"id": 462,
												"nodeType": "Return",
												"src": "12790:52:2"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "12563:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "12708:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 449,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12753:8:2"
									},
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12724:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "12716:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12716:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12715:17:2"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "12771:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12771:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12770:9:2"
									},
									"scope": 1832,
									"src": "12699:150:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "13125:71:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 475,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 467,
																	"src": "13180:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 474,
																"name": "_packedOwnershipOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "13161:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13161:27:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "13142:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$1883_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13142:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1883_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 472,
												"id": 478,
												"nodeType": "Return",
												"src": "13135:54:2"
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "12855:172:2",
										"text": " @dev Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around over time."
									},
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipOf",
									"nameLocation": "13041:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13062:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "13054:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13054:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13053:17:2"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "13102:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1883_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 470,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 469,
														"name": "TokenOwnership",
														"nameLocations": [
															"13102:14:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1883,
														"src": "13102:14:2"
													},
													"referencedDeclaration": 1883,
													"src": "13102:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1883_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13101:23:2"
									},
									"scope": 1832,
									"src": "13032:164:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "13378:68:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 490,
																"name": "_packedOwnerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "13414:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 492,
															"indexExpression": {
																"id": 491,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 483,
																"src": "13432:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13414:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 489,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "13395:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$1883_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13395:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1883_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 488,
												"id": 494,
												"nodeType": "Return",
												"src": "13388:51:2"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "13202:80:2",
										"text": " @dev Returns the unpacked `TokenOwnership` struct at `index`."
									},
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipAt",
									"nameLocation": "13296:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "13317:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "13309:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13309:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13308:15:2"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "13355:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1883_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 486,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 485,
														"name": "TokenOwnership",
														"nameLocations": [
															"13355:14:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1883,
														"src": "13355:14:2"
													},
													"referencedDeclaration": 1883,
													"src": "13355:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1883_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13354:23:2"
									},
									"scope": 1832,
									"src": "13287:159:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "13710:53:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 504,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "13727:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 506,
														"indexExpression": {
															"id": 505,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "13745:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13727:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13755:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13727:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 503,
												"id": 509,
												"nodeType": "Return",
												"src": "13720:36:2"
											}
										]
									},
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "13452:168:2",
										"text": " @dev Returns whether the ownership slot at `index` is initialized.\n An uninitialized slot does not necessarily mean that the slot has no owner."
									},
									"id": 511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipIsInitialized",
									"nameLocation": "13634:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "13666:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "13658:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13658:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13657:15:2"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "13704:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 501,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13704:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13703:6:2"
									},
									"scope": 1832,
									"src": "13625:138:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 532,
										"nodeType": "Block",
										"src": "13935:128:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 517,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "13949:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 519,
														"indexExpression": {
															"id": 518,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "13967:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13949:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13977:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13949:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 531,
												"nodeType": "IfStatement",
												"src": "13945:112:2",
												"trueBody": {
													"id": 530,
													"nodeType": "Block",
													"src": "13980:77:2",
													"statements": [
														{
															"expression": {
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 522,
																		"name": "_packedOwnerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "13994:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 524,
																	"indexExpression": {
																		"id": 523,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 514,
																		"src": "14012:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "13994:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 526,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 514,
																			"src": "14040:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 525,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 609,
																		"src": "14021:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14021:25:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13994:52:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 529,
															"nodeType": "ExpressionStatement",
															"src": "13994:52:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "13769:97:2",
										"text": " @dev Initializes the ownership slot minted at `index` for efficiency purposes."
									},
									"id": 533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializeOwnershipAt",
									"nameLocation": "13880:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "13911:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "13903:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13903:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13902:15:2"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13935:0:2"
									},
									"scope": 1832,
									"src": "13871:192:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "14223:1895:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 541,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "14237:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14237:15:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 543,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 536,
														"src": "14256:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14237:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 602,
												"nodeType": "IfStatement",
												"src": "14233:1822:2",
												"trueBody": {
													"id": 601,
													"nodeType": "Block",
													"src": "14265:1790:2",
													"statements": [
														{
															"expression": {
																"id": 549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 539,
																	"src": "14279:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 546,
																		"name": "_packedOwnerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "14288:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 548,
																	"indexExpression": {
																		"id": 547,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 536,
																		"src": "14306:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14288:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14279:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 550,
															"nodeType": "ExpressionStatement",
															"src": "14279:35:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 551,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 539,
																	"src": "14412:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14422:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "14412:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 592,
															"nodeType": "IfStatement",
															"src": "14408:1270:2",
															"trueBody": {
																"id": 591,
																"nodeType": "Block",
																"src": "14425:1253:2",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 554,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "14447:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"id": 555,
																				"name": "_currentIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 127,
																				"src": "14458:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "14447:24:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 562,
																		"nodeType": "IfStatement",
																		"src": "14443:77:2",
																		"trueBody": {
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 558,
																							"name": "OwnerQueryForNonexistentToken",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1853,
																							"src": "14481:29:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																								"typeString": "function () pure returns (error)"
																							}
																						},
																						"id": 559,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14511:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14481:38:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					],
																					"id": 557,
																					"name": "_revert",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1831,
																					"src": "14473:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																						"typeString": "function (bytes4) pure"
																					}
																				},
																				"id": 560,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14473:47:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 561,
																			"nodeType": "ExpressionStatement",
																			"src": "14473:47:2"
																		}
																	},
																	{
																		"body": {
																			"id": 589,
																			"nodeType": "Block",
																			"src": "15076:588:2",
																			"statements": [
																				{
																					"id": 570,
																					"nodeType": "UncheckedBlock",
																					"src": "15098:96:2",
																					"statements": [
																						{
																							"expression": {
																								"id": 568,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"id": 563,
																									"name": "packed",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 539,
																									"src": "15134:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"baseExpression": {
																										"id": 564,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 137,
																										"src": "15143:17:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 567,
																									"indexExpression": {
																										"id": 566,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "UnaryOperation",
																										"operator": "--",
																										"prefix": true,
																										"src": "15161:9:2",
																										"subExpression": {
																											"id": 565,
																											"name": "tokenId",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 536,
																											"src": "15163:7:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "15143:28:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "15134:37:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 569,
																							"nodeType": "ExpressionStatement",
																							"src": "15134:37:2"
																						}
																					]
																				},
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 573,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 571,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 539,
																							"src": "15219:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 572,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "15229:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "15219:11:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 575,
																					"nodeType": "IfStatement",
																					"src": "15215:25:2",
																					"trueBody": {
																						"id": 574,
																						"nodeType": "Continue",
																						"src": "15232:8:2"
																					}
																				},
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 580,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 578,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 576,
																								"name": "packed",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 539,
																								"src": "15266:6:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "&",
																							"rightExpression": {
																								"id": 577,
																								"name": "_BITMASK_BURNED",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 92,
																								"src": "15275:15:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "15266:24:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 579,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "15294:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "15266:29:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 583,
																					"nodeType": "IfStatement",
																					"src": "15262:48:2",
																					"trueBody": {
																						"expression": {
																							"id": 581,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 539,
																							"src": "15304:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"functionReturnParameters": 540,
																						"id": 582,
																						"nodeType": "Return",
																						"src": "15297:13:2"
																					}
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"expression": {
																									"id": 585,
																									"name": "OwnerQueryForNonexistentToken",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1853,
																									"src": "15606:29:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																										"typeString": "function () pure returns (error)"
																									}
																								},
																								"id": 586,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "15636:8:2",
																								"memberName": "selector",
																								"nodeType": "MemberAccess",
																								"src": "15606:38:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes4",
																									"typeString": "bytes4"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes4",
																									"typeString": "bytes4"
																								}
																							],
																							"id": 584,
																							"name": "_revert",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1831,
																							"src": "15598:7:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																								"typeString": "function (bytes4) pure"
																							}
																						},
																						"id": 587,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "15598:47:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 588,
																					"nodeType": "ExpressionStatement",
																					"src": "15598:47:2"
																				}
																			]
																		},
																		"id": 590,
																		"isSimpleCounterLoop": false,
																		"nodeType": "ForStatement",
																		"src": "15067:597:2"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 593,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 539,
																		"src": "16000:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 594,
																		"name": "_BITMASK_BURNED",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 92,
																		"src": "16009:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16000:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16028:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "16000:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 600,
															"nodeType": "IfStatement",
															"src": "15996:48:2",
															"trueBody": {
																"expression": {
																	"id": 598,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 539,
																	"src": "16038:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 540,
																"id": 599,
																"nodeType": "Return",
																"src": "16031:13:2"
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 604,
																"name": "OwnerQueryForNonexistentToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1853,
																"src": "16072:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																	"typeString": "function () pure returns (error)"
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16102:8:2",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "16072:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 603,
														"name": "_revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1831,
														"src": "16064:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
															"typeString": "function (bytes4) pure"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16064:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 607,
												"nodeType": "ExpressionStatement",
												"src": "16064:47:2"
											}
										]
									},
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "14069:66:2",
										"text": " Returns the packed ownership data of `tokenId`."
									},
									"id": 609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packedOwnershipOf",
									"nameLocation": "14149:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14176:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "14168:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14168:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14167:17:2"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "14215:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "14207:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14207:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14206:16:2"
									},
									"scope": 1832,
									"src": "14140:1978:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 662,
										"nodeType": "Block",
										"src": "16311:262:2",
										"statements": [
											{
												"expression": {
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 618,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "16321:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1883_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 620,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16331:4:2",
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1876,
														"src": "16321:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 625,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "16354:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16346:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 623,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "16346:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16346:15:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16338:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 621,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16338:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 627,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16338:24:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16321:41:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 629,
												"nodeType": "ExpressionStatement",
												"src": "16321:41:2"
											},
											{
												"expression": {
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 630,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "16372:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1883_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 632,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16382:14:2",
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1878,
														"src": "16372:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 635,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "16406:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 636,
																	"name": "_BITPOS_START_TIMESTAMP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 87,
																	"src": "16416:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16406:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16399:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 633,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "16399:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 638,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16399:41:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "16372:68:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "16372:68:2"
											},
											{
												"expression": {
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 641,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "16450:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1883_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 643,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16460:6:2",
														"memberName": "burned",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1880,
														"src": "16450:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 648,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 644,
																"name": "packed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 612,
																"src": "16469:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 645,
																"name": "_BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 92,
																"src": "16478:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16469:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16497:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "16469:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16450:48:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 650,
												"nodeType": "ExpressionStatement",
												"src": "16450:48:2"
											},
											{
												"expression": {
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 651,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "16508:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1883_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 653,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16518:9:2",
														"memberName": "extraData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1882,
														"src": "16508:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 656,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "16537:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 657,
																	"name": "_BITPOS_EXTRA_DATA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "16547:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16537:28:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16530:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint24_$",
																"typeString": "type(uint24)"
															},
															"typeName": {
																"id": 654,
																"name": "uint24",
																"nodeType": "ElementaryTypeName",
																"src": "16530:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16530:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "16508:58:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "16508:58:2"
											}
										]
									},
									"documentation": {
										"id": 610,
										"nodeType": "StructuredDocumentation",
										"src": "16124:83:2",
										"text": " @dev Returns the unpacked `TokenOwnership` struct from `packed`."
									},
									"id": 663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unpackedOwnership",
									"nameLocation": "16221:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "16248:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "16240:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16240:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16239:16:2"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "ownership",
												"nameLocation": "16300:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "16278:31:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1883_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 615,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 614,
														"name": "TokenOwnership",
														"nameLocations": [
															"16278:14:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1883,
														"src": "16278:14:2"
													},
													"referencedDeclaration": 1883,
													"src": "16278:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1883_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16277:33:2"
									},
									"scope": 1832,
									"src": "16212:361:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "16747:347:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "16766:322:2",
													"nodeType": "YulBlock",
													"src": "16766:322:2",
													"statements": [
														{
															"nativeSrc": "16876:37:2",
															"nodeType": "YulAssignment",
															"src": "16876:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nativeSrc": "16889:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "16889:5:2"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nativeSrc": "16896:16:2",
																		"nodeType": "YulIdentifier",
																		"src": "16896:16:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "16885:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "16885:3:2"
																},
																"nativeSrc": "16885:28:2",
																"nodeType": "YulFunctionCall",
																"src": "16885:28:2"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nativeSrc": "16876:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "16876:5:2"
																}
															]
														},
														{
															"nativeSrc": "17005:73:2",
															"nodeType": "YulAssignment",
															"src": "17005:73:2",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nativeSrc": "17018:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "17018:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_BITPOS_START_TIMESTAMP",
																						"nativeSrc": "17032:23:2",
																						"nodeType": "YulIdentifier",
																						"src": "17032:23:2"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "timestamp",
																							"nativeSrc": "17057:9:2",
																							"nodeType": "YulIdentifier",
																							"src": "17057:9:2"
																						},
																						"nativeSrc": "17057:11:2",
																						"nodeType": "YulFunctionCall",
																						"src": "17057:11:2"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "17028:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "17028:3:2"
																				},
																				"nativeSrc": "17028:41:2",
																				"nodeType": "YulFunctionCall",
																				"src": "17028:41:2"
																			},
																			{
																				"name": "flags",
																				"nativeSrc": "17071:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "17071:5:2"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "17025:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "17025:2:2"
																		},
																		"nativeSrc": "17025:52:2",
																		"nodeType": "YulFunctionCall",
																		"src": "17025:52:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "17015:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "17015:2:2"
																},
																"nativeSrc": "17015:63:2",
																"nodeType": "YulFunctionCall",
																"src": "17015:63:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "17005:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "17005:6:2"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 119,
														"isOffset": false,
														"isSlot": false,
														"src": "16896:16:2",
														"valueSize": 1
													},
													{
														"declaration": 87,
														"isOffset": false,
														"isSlot": false,
														"src": "17032:23:2",
														"valueSize": 1
													},
													{
														"declaration": 668,
														"isOffset": false,
														"isSlot": false,
														"src": "17071:5:2",
														"valueSize": 1
													},
													{
														"declaration": 666,
														"isOffset": false,
														"isSlot": false,
														"src": "16876:5:2",
														"valueSize": 1
													},
													{
														"declaration": 666,
														"isOffset": false,
														"isSlot": false,
														"src": "16889:5:2",
														"valueSize": 1
													},
													{
														"declaration": 666,
														"isOffset": false,
														"isSlot": false,
														"src": "17018:5:2",
														"valueSize": 1
													},
													{
														"declaration": 671,
														"isOffset": false,
														"isSlot": false,
														"src": "17005:6:2",
														"valueSize": 1
													}
												],
												"id": 673,
												"nodeType": "InlineAssembly",
												"src": "16757:331:2"
											}
										]
									},
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "16579:67:2",
										"text": " @dev Packs ownership data into a single uint256."
									},
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packOwnershipData",
									"nameLocation": "16660:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "16687:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "16679:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16679:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "flags",
												"nameLocation": "16702:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "16694:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16694:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16678:30:2"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "16739:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "16731:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16731:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16730:16:2"
									},
									"scope": 1832,
									"src": "16651:443:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "17277:232:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "17361:142:2",
													"nodeType": "YulBlock",
													"src": "17361:142:2",
													"statements": [
														{
															"nativeSrc": "17437:56:2",
															"nodeType": "YulAssignment",
															"src": "17437:56:2",
															"value": {
																"arguments": [
																	{
																		"name": "_BITPOS_NEXT_INITIALIZED",
																		"nativeSrc": "17451:24:2",
																		"nodeType": "YulIdentifier",
																		"src": "17451:24:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "quantity",
																				"nativeSrc": "17480:8:2",
																				"nodeType": "YulIdentifier",
																				"src": "17480:8:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17490:1:2",
																				"nodeType": "YulLiteral",
																				"src": "17490:1:2",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "17477:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "17477:2:2"
																		},
																		"nativeSrc": "17477:15:2",
																		"nodeType": "YulFunctionCall",
																		"src": "17477:15:2"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "17447:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "17447:3:2"
																},
																"nativeSrc": "17447:46:2",
																"nodeType": "YulFunctionCall",
																"src": "17447:46:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "17437:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "17437:6:2"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 95,
														"isOffset": false,
														"isSlot": false,
														"src": "17451:24:2",
														"valueSize": 1
													},
													{
														"declaration": 678,
														"isOffset": false,
														"isSlot": false,
														"src": "17480:8:2",
														"valueSize": 1
													},
													{
														"declaration": 681,
														"isOffset": false,
														"isSlot": false,
														"src": "17437:6:2",
														"valueSize": 1
													}
												],
												"id": 683,
												"nodeType": "InlineAssembly",
												"src": "17352:151:2"
											}
										]
									},
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "17100:86:2",
										"text": " @dev Returns the `nextInitialized` flag set if `quantity` equals 1."
									},
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextInitializedFlag",
									"nameLocation": "17200:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "17229:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "17221:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17221:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17220:18:2"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "17269:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "17261:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17261:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17260:16:2"
									},
									"scope": 1832,
									"src": "17191:318:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1980
									],
									"body": {
										"id": 700,
										"nodeType": "Block",
										"src": "18007:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 695,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "18026:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 696,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "18030:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18039:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 694,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1495,
															1545
														],
														"referencedDeclaration": 1545,
														"src": "18017:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18017:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "18017:27:2"
											}
										]
									},
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "17702:222:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}.\n Requirements:\n - The caller must own the token or be an approved operator."
									},
									"functionSelector": "095ea7b3",
									"id": 701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "17938:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 692,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17998:8:2"
									},
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17954:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "17946:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17946:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17966:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "17958:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17958:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17945:29:2"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18007:0:2"
									},
									"scope": 1832,
									"src": "17929:122:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1996
									],
									"body": {
										"id": 725,
										"nodeType": "Block",
										"src": "18286:138:2",
										"statements": [
											{
												"condition": {
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "18300:17:2",
													"subExpression": {
														"arguments": [
															{
																"id": 711,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 704,
																"src": "18309:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 710,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "18301:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 712,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18301:16:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 719,
												"nodeType": "IfStatement",
												"src": "18296:73:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 715,
																	"name": "ApprovalQueryForNonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1841,
																	"src": "18327:32:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "18360:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "18327:41:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 714,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "18319:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18319:50:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 718,
													"nodeType": "ExpressionStatement",
													"src": "18319:50:2"
												}
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 720,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "18387:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$59_storage_$",
																"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
															}
														},
														"id": 722,
														"indexExpression": {
															"id": 721,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "18403:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "18387:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$59_storage",
															"typeString": "struct ERC721A.TokenApprovalRef storage ref"
														}
													},
													"id": 723,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "18412:5:2",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 58,
													"src": "18387:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 709,
												"id": 724,
												"nodeType": "Return",
												"src": "18380:37:2"
											}
										]
									},
									"documentation": {
										"id": 702,
										"nodeType": "StructuredDocumentation",
										"src": "18057:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "18210:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 706,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "18259:8:2"
									},
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "18230:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "18222:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18222:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18221:17:2"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "18277:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18277:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18276:9:2"
									},
									"scope": 1832,
									"src": "18201:223:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1988
									],
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "18835:147:2",
										"statements": [
											{
												"expression": {
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 735,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 152,
																"src": "18845:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 739,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 736,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1813,
																	"src": "18864:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18864:19:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18845:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 740,
														"indexExpression": {
															"id": 738,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "18885:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18845:49:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 741,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 731,
														"src": "18897:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "18845:60:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 743,
												"nodeType": "ExpressionStatement",
												"src": "18845:60:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 745,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1813,
																"src": "18935:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18935:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 747,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "18956:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 748,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "18966:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 744,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1924,
														"src": "18920:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18920:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 750,
												"nodeType": "EmitStatement",
												"src": "18915:60:2"
											}
										]
									},
									"documentation": {
										"id": 727,
										"nodeType": "StructuredDocumentation",
										"src": "18430:316:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "18760:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 733,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "18826:8:2"
									},
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "18786:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "18778:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18778:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "18801:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "18796:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 730,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18796:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18777:33:2"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18835:0:2"
									},
									"scope": 1832,
									"src": "18751:231:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2006
									],
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "19235:59:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 763,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "19252:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 765,
														"indexExpression": {
															"id": 764,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "19271:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "19252:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 767,
													"indexExpression": {
														"id": 766,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "19278:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19252:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 762,
												"id": 768,
												"nodeType": "Return",
												"src": "19245:42:2"
											}
										]
									},
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "18988:139:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "19141:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 759,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "19211:8:2"
									},
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19166:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "19158:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19158:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "19181:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "19173:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19173:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19157:33:2"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "19229:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 760,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19229:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19228:6:2"
									},
									"scope": 1832,
									"src": "19132:162:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 812,
										"nodeType": "Block",
										"src": "19621:282:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 778,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "19635:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19635:15:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 780,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "19654:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19635:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 811,
												"nodeType": "IfStatement",
												"src": "19631:266:2",
												"trueBody": {
													"id": 810,
													"nodeType": "Block",
													"src": "19663:234:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 782,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 773,
																	"src": "19681:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 783,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 127,
																	"src": "19691:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19681:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 809,
															"nodeType": "IfStatement",
															"src": "19677:210:2",
															"trueBody": {
																"id": 808,
																"nodeType": "Block",
																"src": "19706:181:2",
																"statements": [
																	{
																		"assignments": [
																			786
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 786,
																				"mutability": "mutable",
																				"name": "packed",
																				"nameLocation": "19732:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 808,
																				"src": "19724:14:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 785,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "19724:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 787,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "19724:14:2"
																	},
																	{
																		"body": {
																			"expression": {
																				"id": 797,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "--",
																				"prefix": true,
																				"src": "19807:9:2",
																				"subExpression": {
																					"id": 796,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 773,
																					"src": "19809:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 798,
																			"nodeType": "ExpressionStatement",
																			"src": "19807:9:2"
																		},
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"id": 792,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 788,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 786,
																							"src": "19764:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"baseExpression": {
																								"id": 789,
																								"name": "_packedOwnerships",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 137,
																								"src": "19773:17:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																									"typeString": "mapping(uint256 => uint256)"
																								}
																							},
																							"id": 791,
																							"indexExpression": {
																								"id": 790,
																								"name": "tokenId",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 773,
																								"src": "19791:7:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "19773:26:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "19764:35:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 793,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "19763:37:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 794,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19804:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "19763:42:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 799,
																		"nodeType": "WhileStatement",
																		"src": "19756:60:2"
																	},
																	{
																		"expression": {
																			"id": 806,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 800,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 776,
																				"src": "19834:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 805,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 803,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 801,
																						"name": "packed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 786,
																						"src": "19843:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "&",
																					"rightExpression": {
																						"id": 802,
																						"name": "_BITMASK_BURNED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 92,
																						"src": "19852:15:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "19843:24:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 804,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "19871:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "19843:29:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "19834:38:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 807,
																		"nodeType": "ExpressionStatement",
																		"src": "19834:38:2"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 771,
										"nodeType": "StructuredDocumentation",
										"src": "19300:238:2",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted. See {_mint}."
									},
									"id": 813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "19552:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "19568:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "19560:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19560:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19559:17:2"
									},
									"returnParameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "19613:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "19608:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 775,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19608:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19607:13:2"
									},
									"scope": 1832,
									"src": "19543:360:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "20165:488:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "20184:463:2",
													"nodeType": "YulBlock",
													"src": "20184:463:2",
													"statements": [
														{
															"nativeSrc": "20294:37:2",
															"nodeType": "YulAssignment",
															"src": "20294:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nativeSrc": "20307:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "20307:5:2"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nativeSrc": "20314:16:2",
																		"nodeType": "YulIdentifier",
																		"src": "20314:16:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "20303:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "20303:3:2"
																},
																"nativeSrc": "20303:28:2",
																"nodeType": "YulFunctionCall",
																"src": "20303:28:2"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nativeSrc": "20294:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "20294:5:2"
																}
															]
														},
														{
															"nativeSrc": "20444:45:2",
															"nodeType": "YulAssignment",
															"src": "20444:45:2",
															"value": {
																"arguments": [
																	{
																		"name": "msgSender",
																		"nativeSrc": "20461:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "20461:9:2"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nativeSrc": "20472:16:2",
																		"nodeType": "YulIdentifier",
																		"src": "20472:16:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "20457:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "20457:3:2"
																},
																"nativeSrc": "20457:32:2",
																"nodeType": "YulFunctionCall",
																"src": "20457:32:2"
															},
															"variableNames": [
																{
																	"name": "msgSender",
																	"nativeSrc": "20444:9:2",
																	"nodeType": "YulIdentifier",
																	"src": "20444:9:2"
																}
															]
														},
														{
															"nativeSrc": "20571:66:2",
															"nodeType": "YulAssignment",
															"src": "20571:66:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nativeSrc": "20587:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "20587:9:2"
																			},
																			{
																				"name": "owner",
																				"nativeSrc": "20598:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "20598:5:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "20584:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "20584:2:2"
																		},
																		"nativeSrc": "20584:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "20584:20:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nativeSrc": "20609:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "20609:9:2"
																			},
																			{
																				"name": "approvedAddress",
																				"nativeSrc": "20620:15:2",
																				"nodeType": "YulIdentifier",
																				"src": "20620:15:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "20606:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "20606:2:2"
																		},
																		"nativeSrc": "20606:30:2",
																		"nodeType": "YulFunctionCall",
																		"src": "20606:30:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "20581:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "20581:2:2"
																},
																"nativeSrc": "20581:56:2",
																"nodeType": "YulFunctionCall",
																"src": "20581:56:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "20571:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "20571:6:2"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 119,
														"isOffset": false,
														"isSlot": false,
														"src": "20314:16:2",
														"valueSize": 1
													},
													{
														"declaration": 119,
														"isOffset": false,
														"isSlot": false,
														"src": "20472:16:2",
														"valueSize": 1
													},
													{
														"declaration": 816,
														"isOffset": false,
														"isSlot": false,
														"src": "20620:15:2",
														"valueSize": 1
													},
													{
														"declaration": 820,
														"isOffset": false,
														"isSlot": false,
														"src": "20444:9:2",
														"valueSize": 1
													},
													{
														"declaration": 820,
														"isOffset": false,
														"isSlot": false,
														"src": "20461:9:2",
														"valueSize": 1
													},
													{
														"declaration": 820,
														"isOffset": false,
														"isSlot": false,
														"src": "20587:9:2",
														"valueSize": 1
													},
													{
														"declaration": 820,
														"isOffset": false,
														"isSlot": false,
														"src": "20609:9:2",
														"valueSize": 1
													},
													{
														"declaration": 818,
														"isOffset": false,
														"isSlot": false,
														"src": "20294:5:2",
														"valueSize": 1
													},
													{
														"declaration": 818,
														"isOffset": false,
														"isSlot": false,
														"src": "20307:5:2",
														"valueSize": 1
													},
													{
														"declaration": 818,
														"isOffset": false,
														"isSlot": false,
														"src": "20598:5:2",
														"valueSize": 1
													},
													{
														"declaration": 823,
														"isOffset": false,
														"isSlot": false,
														"src": "20571:6:2",
														"valueSize": 1
													}
												],
												"id": 825,
												"nodeType": "InlineAssembly",
												"src": "20175:472:2"
											}
										]
									},
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "19909:93:2",
										"text": " @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`."
									},
									"id": 827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isSenderApprovedOrOwner",
									"nameLocation": "20016:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "20058:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "20050:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20050:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20091:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "20083:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20083:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "msgSender",
												"nameLocation": "20114:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "20106:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20106:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20040:89:2"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "20157:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "20152:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 822,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20152:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20151:13:2"
									},
									"scope": 1832,
									"src": "20007:646:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 845,
										"nodeType": "Block",
										"src": "20918:317:2",
										"statements": [
											{
												"assignments": [
													839
												],
												"declarations": [
													{
														"constant": false,
														"id": 839,
														"mutability": "mutable",
														"name": "tokenApproval",
														"nameLocation": "20953:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 845,
														"src": "20928:38:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$59_storage_ptr",
															"typeString": "struct ERC721A.TokenApprovalRef"
														},
														"typeName": {
															"id": 838,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 837,
																"name": "TokenApprovalRef",
																"nameLocations": [
																	"20928:16:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 59,
																"src": "20928:16:2"
															},
															"referencedDeclaration": 59,
															"src": "20928:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$59_storage_ptr",
																"typeString": "struct ERC721A.TokenApprovalRef"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 843,
												"initialValue": {
													"baseExpression": {
														"id": 840,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "20969:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$59_storage_$",
															"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
														}
													},
													"id": 842,
													"indexExpression": {
														"id": 841,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "20985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "20969:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenApprovalRef_$59_storage",
														"typeString": "struct ERC721A.TokenApprovalRef storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20928:65:2"
											},
											{
												"AST": {
													"nativeSrc": "21106:123:2",
													"nodeType": "YulBlock",
													"src": "21106:123:2",
													"statements": [
														{
															"nativeSrc": "21120:41:2",
															"nodeType": "YulAssignment",
															"src": "21120:41:2",
															"value": {
																"name": "tokenApproval.slot",
																"nativeSrc": "21143:18:2",
																"nodeType": "YulIdentifier",
																"src": "21143:18:2"
															},
															"variableNames": [
																{
																	"name": "approvedAddressSlot",
																	"nativeSrc": "21120:19:2",
																	"nodeType": "YulIdentifier",
																	"src": "21120:19:2"
																}
															]
														},
														{
															"nativeSrc": "21174:45:2",
															"nodeType": "YulAssignment",
															"src": "21174:45:2",
															"value": {
																"arguments": [
																	{
																		"name": "approvedAddressSlot",
																		"nativeSrc": "21199:19:2",
																		"nodeType": "YulIdentifier",
																		"src": "21199:19:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "21193:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "21193:5:2"
																},
																"nativeSrc": "21193:26:2",
																"nodeType": "YulFunctionCall",
																"src": "21193:26:2"
															},
															"variableNames": [
																{
																	"name": "approvedAddress",
																	"nativeSrc": "21174:15:2",
																	"nodeType": "YulIdentifier",
																	"src": "21174:15:2"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 835,
														"isOffset": false,
														"isSlot": false,
														"src": "21174:15:2",
														"valueSize": 1
													},
													{
														"declaration": 833,
														"isOffset": false,
														"isSlot": false,
														"src": "21120:19:2",
														"valueSize": 1
													},
													{
														"declaration": 833,
														"isOffset": false,
														"isSlot": false,
														"src": "21199:19:2",
														"valueSize": 1
													},
													{
														"declaration": 839,
														"isOffset": false,
														"isSlot": true,
														"src": "21143:18:2",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 844,
												"nodeType": "InlineAssembly",
												"src": "21097:132:2"
											}
										]
									},
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "20659:97:2",
										"text": " @dev Returns the storage slot and value for the approved address of `tokenId`."
									},
									"id": 846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApprovedSlotAndAddress",
									"nameLocation": "20770:26:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "20805:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "20797:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20797:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20796:17:2"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "approvedAddressSlot",
												"nameLocation": "20868:19:2",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "20860:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20860:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "20897:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "20889:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20889:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20859:54:2"
									},
									"scope": 1832,
									"src": "20761:474:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1972
									],
									"body": {
										"id": 1018,
										"nodeType": "Block",
										"src": "21963:3320:2",
										"statements": [
											{
												"assignments": [
													858
												],
												"declarations": [
													{
														"constant": false,
														"id": 858,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "21981:19:2",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "21973:27:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 857,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21973:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 862,
												"initialValue": {
													"arguments": [
														{
															"id": 860,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "22022:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 859,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "22003:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22003:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21973:57:2"
											},
											{
												"expression": {
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 863,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 849,
														"src": "22132:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 872,
																							"name": "from",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 849,
																							"src": "22171:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 871,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "22163:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint160_$",
																							"typeString": "type(uint160)"
																						},
																						"typeName": {
																							"id": 870,
																							"name": "uint160",
																							"nodeType": "ElementaryTypeName",
																							"src": "22163:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 873,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "22163:13:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				],
																				"id": 869,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "22155:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 868,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "22155:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 874,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "22155:22:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"id": 875,
																			"name": "_BITMASK_ADDRESS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 119,
																			"src": "22180:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "22155:41:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "22147:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 866,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "22147:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22147:50:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22139:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 864,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "22139:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 878,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22139:59:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "22132:66:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 880,
												"nodeType": "ExpressionStatement",
												"src": "22132:66:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 885,
																		"name": "prevOwnershipPacked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 858,
																		"src": "22229:19:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "22221:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 883,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "22221:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22221:28:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22213:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 881,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "22213:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22213:37:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 888,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 849,
														"src": "22254:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "22213:45:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 895,
												"nodeType": "IfStatement",
												"src": "22209:95:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 891,
																	"name": "TransferFromIncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1859,
																	"src": "22268:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "22295:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "22268:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 890,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "22260:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 893,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22260:44:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 894,
													"nodeType": "ExpressionStatement",
													"src": "22260:44:2"
												}
											},
											{
												"assignments": [
													897,
													899
												],
												"declarations": [
													{
														"constant": false,
														"id": 897,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "22324:19:2",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "22316:27:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 896,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22316:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 899,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "22353:15:2",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "22345:23:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 898,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "22345:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 903,
												"initialValue": {
													"arguments": [
														{
															"id": 901,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "22399:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 900,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "22372:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22372:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22315:92:2"
											},
											{
												"condition": {
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "22503:69:2",
													"subExpression": {
														"arguments": [
															{
																"id": 905,
																"name": "approvedAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 899,
																"src": "22529:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 906,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 849,
																"src": "22546:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 907,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1813,
																	"src": "22552:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 908,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22552:19:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 904,
															"name": "_isSenderApprovedOrOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "22504:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (address,address,address) pure returns (bool)"
															}
														},
														"id": 909,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22504:68:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 923,
												"nodeType": "IfStatement",
												"src": "22499:188:2",
												"trueBody": {
													"condition": {
														"id": 916,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "22590:44:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 912,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 849,
																	"src": "22608:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 913,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1813,
																		"src": "22614:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22614:19:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 911,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "22591:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22591:43:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 922,
													"nodeType": "IfStatement",
													"src": "22586:101:2",
													"trueBody": {
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 918,
																		"name": "TransferCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1856,
																		"src": "22644:33:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																			"typeString": "function () pure returns (error)"
																		}
																	},
																	"id": 919,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "22678:8:2",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "22644:42:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																],
																"id": 917,
																"name": "_revert",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1831,
																"src": "22636:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																	"typeString": "function (bytes4) pure"
																}
															},
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22636:51:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 921,
														"nodeType": "ExpressionStatement",
														"src": "22636:51:2"
													}
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 925,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "22720:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 926,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "22726:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 927,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "22730:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 928,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22739:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 924,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "22698:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22698:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 930,
												"nodeType": "ExpressionStatement",
												"src": "22698:43:2"
											},
											{
												"AST": {
													"nativeSrc": "22813:181:2",
													"nodeType": "YulBlock",
													"src": "22813:181:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "22846:138:2",
																"nodeType": "YulBlock",
																"src": "22846:138:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nativeSrc": "22947:19:2",
																					"nodeType": "YulIdentifier",
																					"src": "22947:19:2"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "22968:1:2",
																					"nodeType": "YulLiteral",
																					"src": "22968:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nativeSrc": "22940:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "22940:6:2"
																			},
																			"nativeSrc": "22940:30:2",
																			"nodeType": "YulFunctionCall",
																			"src": "22940:30:2"
																		},
																		"nativeSrc": "22940:30:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "22940:30:2"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nativeSrc": "22830:15:2",
																"nodeType": "YulIdentifier",
																"src": "22830:15:2"
															},
															"nativeSrc": "22827:157:2",
															"nodeType": "YulIf",
															"src": "22827:157:2"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 899,
														"isOffset": false,
														"isSlot": false,
														"src": "22830:15:2",
														"valueSize": 1
													},
													{
														"declaration": 897,
														"isOffset": false,
														"isSlot": false,
														"src": "22947:19:2",
														"valueSize": 1
													}
												],
												"id": 931,
												"nodeType": "InlineAssembly",
												"src": "22804:190:2"
											},
											{
												"id": 988,
												"nodeType": "UncheckedBlock",
												"src": "23261:1361:2",
												"statements": [
													{
														"expression": {
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "--",
															"prefix": true,
															"src": "23354:26:2",
															"subExpression": {
																"baseExpression": {
																	"id": 932,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "23356:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 934,
																"indexExpression": {
																	"id": 933,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 849,
																	"src": "23375:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "23356:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 936,
														"nodeType": "ExpressionStatement",
														"src": "23354:26:2"
													},
													{
														"expression": {
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": true,
															"src": "23422:24:2",
															"subExpression": {
																"baseExpression": {
																	"id": 937,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "23424:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 939,
																"indexExpression": {
																	"id": 938,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 851,
																	"src": "23443:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "23424:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 941,
														"nodeType": "ExpressionStatement",
														"src": "23422:24:2"
													},
													{
														"expression": {
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 942,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 137,
																	"src": "23710:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 944,
																"indexExpression": {
																	"id": 943,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 853,
																	"src": "23728:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "23710:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 946,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 851,
																		"src": "23775:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 947,
																			"name": "_BITMASK_NEXT_INITIALIZED",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 100,
																			"src": "23795:25:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 949,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 849,
																					"src": "23838:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 950,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 851,
																					"src": "23844:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 951,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 858,
																					"src": "23848:19:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 948,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1803,
																				"src": "23823:14:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 952,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23823:45:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "23795:73:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 945,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "23739:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 954,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23739:143:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23710:172:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 956,
														"nodeType": "ExpressionStatement",
														"src": "23710:172:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 957,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 858,
																	"src": "23999:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 958,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 100,
																	"src": "24021:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23999:47:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24050:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23999:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 987,
														"nodeType": "IfStatement",
														"src": "23995:617:2",
														"trueBody": {
															"id": 986,
															"nodeType": "Block",
															"src": "24053:559:2",
															"statements": [
																{
																	"assignments": [
																		963
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 963,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "24079:11:2",
																			"nodeType": "VariableDeclaration",
																			"scope": 986,
																			"src": "24071:19:2",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 962,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "24071:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 967,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 964,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 853,
																			"src": "24093:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 965,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24103:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "24093:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "24071:33:2"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 968,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 137,
																				"src": "24224:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 970,
																			"indexExpression": {
																				"id": 969,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 963,
																				"src": "24242:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "24224:30:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 971,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24258:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "24224:35:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 985,
																	"nodeType": "IfStatement",
																	"src": "24220:378:2",
																	"trueBody": {
																		"id": 984,
																		"nodeType": "Block",
																		"src": "24261:337:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 975,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 973,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 963,
																						"src": "24345:11:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 974,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 127,
																						"src": "24360:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "24345:28:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 983,
																				"nodeType": "IfStatement",
																				"src": "24341:239:2",
																				"trueBody": {
																					"id": 982,
																					"nodeType": "Block",
																					"src": "24375:205:2",
																					"statements": [
																						{
																							"expression": {
																								"id": 980,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 976,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 137,
																										"src": "24505:17:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 978,
																									"indexExpression": {
																										"id": 977,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 963,
																										"src": "24523:11:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "24505:30:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 979,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 858,
																									"src": "24538:19:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "24505:52:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 981,
																							"nodeType": "ExpressionStatement",
																							"src": "24505:52:2"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"assignments": [
													990
												],
												"declarations": [
													{
														"constant": false,
														"id": 990,
														"mutability": "mutable",
														"name": "toMasked",
														"nameLocation": "24729:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "24721:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 989,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "24721:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1000,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 995,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 851,
																		"src": "24756:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "24748:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 993,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "24748:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24748:11:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24740:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 991,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "24740:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24740:20:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 998,
														"name": "_BITMASK_ADDRESS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "24763:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24740:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24721:58:2"
											},
											{
												"AST": {
													"nativeSrc": "24798:358:2",
													"nodeType": "YulBlock",
													"src": "24798:358:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24876:1:2",
																		"nodeType": "YulLiteral",
																		"src": "24876:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24932:1:2",
																		"nodeType": "YulLiteral",
																		"src": "24932:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "_TRANSFER_EVENT_SIGNATURE",
																		"nativeSrc": "24986:25:2",
																		"nodeType": "YulIdentifier",
																		"src": "24986:25:2"
																	},
																	{
																		"name": "from",
																		"nativeSrc": "25043:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "25043:4:2"
																	},
																	{
																		"name": "toMasked",
																		"nativeSrc": "25076:8:2",
																		"nodeType": "YulIdentifier",
																		"src": "25076:8:2"
																	},
																	{
																		"name": "tokenId",
																		"nativeSrc": "25111:7:2",
																		"nodeType": "YulIdentifier",
																		"src": "25111:7:2"
																	}
																],
																"functionName": {
																	"name": "log4",
																	"nativeSrc": "24854:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "24854:4:2"
																},
																"nativeSrc": "24854:292:2",
																"nodeType": "YulFunctionCall",
																"src": "24854:292:2"
															},
															"nativeSrc": "24854:292:2",
															"nodeType": "YulExpressionStatement",
															"src": "24854:292:2"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 125,
														"isOffset": false,
														"isSlot": false,
														"src": "24986:25:2",
														"valueSize": 1
													},
													{
														"declaration": 849,
														"isOffset": false,
														"isSlot": false,
														"src": "25043:4:2",
														"valueSize": 1
													},
													{
														"declaration": 990,
														"isOffset": false,
														"isSlot": false,
														"src": "25076:8:2",
														"valueSize": 1
													},
													{
														"declaration": 853,
														"isOffset": false,
														"isSlot": false,
														"src": "25111:7:2",
														"valueSize": 1
													}
												],
												"id": 1001,
												"nodeType": "InlineAssembly",
												"src": "24789:367:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1002,
														"name": "toMasked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "25169:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25181:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "25169:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1010,
												"nodeType": "IfStatement",
												"src": "25165:58:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1006,
																	"name": "TransferToZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1865,
																	"src": "25192:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "25214:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "25192:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1005,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "25184:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1008,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25184:39:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1009,
													"nodeType": "ExpressionStatement",
													"src": "25184:39:2"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1012,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "25255:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1013,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "25261:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1014,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "25265:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25274:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1011,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "25234:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25234:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1017,
												"nodeType": "ExpressionStatement",
												"src": "25234:42:2"
											}
										]
									},
									"documentation": {
										"id": 847,
										"nodeType": "StructuredDocumentation",
										"src": "21428:403:2",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "21845:12:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 855,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "21954:8:2"
									},
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "21875:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "21867:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21867:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "21897:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "21889:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21889:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "21917:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "21909:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21909:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21857:73:2"
									},
									"returnParameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21963:0:2"
									},
									"scope": 1832,
									"src": "21836:3447:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1962
									],
									"body": {
										"id": 1037,
										"nodeType": "Block",
										"src": "25505:56:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1031,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "25532:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1032,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "25538:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1033,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "25542:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25551:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1030,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1038,
															1078
														],
														"referencedDeclaration": 1078,
														"src": "25515:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25515:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1036,
												"nodeType": "ExpressionStatement",
												"src": "25515:39:2"
											}
										]
									},
									"documentation": {
										"id": 1020,
										"nodeType": "StructuredDocumentation",
										"src": "25289:80:2",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 1038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "25383:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1028,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "25496:8:2"
									},
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "25417:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "25409:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25409:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25439:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "25431:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25431:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "25459:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "25451:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25451:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25399:73:2"
									},
									"returnParameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25505:0:2"
									},
									"scope": 1832,
									"src": "25374:187:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1952
									],
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "26301:246:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1052,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "26324:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1053,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "26330:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1054,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "26334:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1051,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "26311:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26311:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1056,
												"nodeType": "ExpressionStatement",
												"src": "26311:31:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1057,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1043,
																"src": "26356:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "26359:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "26356:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1059,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "26364:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "26356:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26374:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "26356:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1076,
												"nodeType": "IfStatement",
												"src": "26352:189:2",
												"trueBody": {
													"condition": {
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "26393:57:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 1063,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1041,
																	"src": "26425:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1064,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1043,
																	"src": "26431:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1065,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "26435:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1066,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1047,
																	"src": "26444:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1062,
																"name": "_checkContractOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1160,
																"src": "26394:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26394:56:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1075,
													"nodeType": "IfStatement",
													"src": "26389:152:2",
													"trueBody": {
														"id": 1074,
														"nodeType": "Block",
														"src": "26452:89:2",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1070,
																				"name": "TransferToNonERC721ReceiverImplementer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1862,
																				"src": "26478:38:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																					"typeString": "function () pure returns (error)"
																				}
																			},
																			"id": 1071,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "26517:8:2",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "26478:47:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		],
																		"id": 1069,
																		"name": "_revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1831,
																		"src": "26470:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																			"typeString": "function (bytes4) pure"
																		}
																	},
																	"id": 1072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26470:56:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1073,
																"nodeType": "ExpressionStatement",
																"src": "26470:56:2"
															}
														]
													}
												}
											}
										]
									},
									"documentation": {
										"id": 1039,
										"nodeType": "StructuredDocumentation",
										"src": "25567:570:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "26151:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1049,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "26292:8:2"
									},
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26185:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "26177:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26177:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26207:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "26199:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26199:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "26227:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "26219:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26219:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "26257:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "26244:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1046,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26244:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26167:101:2"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26301:0:2"
									},
									"scope": 1832,
									"src": "26142:405:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1090,
										"nodeType": "Block",
										"src": "27343:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1079,
										"nodeType": "StructuredDocumentation",
										"src": "26553:633:2",
										"text": " @dev Hook that is called before a set of serially-ordered token IDs\n are about to be transferred. This includes minting.\n And also called before burning one token.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1091,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "27200:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "27239:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "27231:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27231:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27261:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "27253:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27253:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "27281:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "27273:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27273:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "27311:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "27303:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27303:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27221:104:2"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27343:0:2"
									},
									"scope": 1832,
									"src": "27191:154:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "28143:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1092,
										"nodeType": "StructuredDocumentation",
										"src": "27351:636:2",
										"text": " @dev Hook that is called after a set of serially-ordered token IDs\n have been transferred. This includes minting.\n And also called after one token has been burned.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n transferred to `to`.\n - When `from` is zero, `tokenId` has been minted for `to`.\n - When `to` is zero, `tokenId` has been burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "28001:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "28039:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "28031:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28031:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "28061:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "28053:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28053:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "28081:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "28073:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28073:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "28111:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "28103:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28103:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28021:104:2"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28143:0:2"
									},
									"scope": 1832,
									"src": "27992:153:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1159,
										"nodeType": "Block",
										"src": "28737:509:2",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 1139,
															"nodeType": "Block",
															"src": "28886:96:2",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 1137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1131,
																			"name": "retval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1129,
																			"src": "28907:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 1133,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1109,
																							"src": "28942:2:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1132,
																						"name": "ERC721A__IERC721Receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 53,
																						"src": "28917:24:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$53_$",
																							"typeString": "type(contract ERC721A__IERC721Receiver)"
																						}
																					},
																					"id": 1134,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "28917:28:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$53",
																						"typeString": "contract ERC721A__IERC721Receiver"
																					}
																				},
																				"id": 1135,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "28946:16:2",
																				"memberName": "onERC721Received",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 52,
																				"src": "28917:45:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																				}
																			},
																			"id": 1136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "28963:8:2",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "28917:54:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "28907:64:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 1117,
																	"id": 1138,
																	"nodeType": "Return",
																	"src": "28900:71:2"
																}
															]
														},
														"errorName": "",
														"id": 1140,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1130,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1129,
																	"mutability": "mutable",
																	"name": "retval",
																	"nameLocation": "28869:6:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1140,
																	"src": "28862:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 1128,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "28862:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "28848:37:2"
														},
														"src": "28840:142:2"
													},
													{
														"block": {
															"id": 1156,
															"nodeType": "Block",
															"src": "29011:229:2",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1144,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1142,
																				"src": "29029:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1145,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "29036:6:2",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "29029:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1146,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29046:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "29029:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1154,
																	"nodeType": "IfStatement",
																	"src": "29025:113:2",
																	"trueBody": {
																		"id": 1153,
																		"nodeType": "Block",
																		"src": "29049:89:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 1149,
																								"name": "TransferToNonERC721ReceiverImplementer",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1862,
																								"src": "29075:38:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																									"typeString": "function () pure returns (error)"
																								}
																							},
																							"id": 1150,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "29114:8:2",
																							"memberName": "selector",
																							"nodeType": "MemberAccess",
																							"src": "29075:47:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes4",
																								"typeString": "bytes4"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes4",
																								"typeString": "bytes4"
																							}
																						],
																						"id": 1148,
																						"name": "_revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1831,
																						"src": "29067:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																							"typeString": "function (bytes4) pure"
																						}
																					},
																					"id": 1151,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "29067:56:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1152,
																				"nodeType": "ExpressionStatement",
																				"src": "29067:56:2"
																			}
																		]
																	}
																},
																{
																	"AST": {
																		"nativeSrc": "29160:70:2",
																		"nodeType": "YulBlock",
																		"src": "29160:70:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "29189:2:2",
																									"nodeType": "YulLiteral",
																									"src": "29189:2:2",
																									"type": "",
																									"value": "32"
																								},
																								{
																									"name": "reason",
																									"nativeSrc": "29193:6:2",
																									"nodeType": "YulIdentifier",
																									"src": "29193:6:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "29185:3:2",
																								"nodeType": "YulIdentifier",
																								"src": "29185:3:2"
																							},
																							"nativeSrc": "29185:15:2",
																							"nodeType": "YulFunctionCall",
																							"src": "29185:15:2"
																						},
																						{
																							"arguments": [
																								{
																									"name": "reason",
																									"nativeSrc": "29208:6:2",
																									"nodeType": "YulIdentifier",
																									"src": "29208:6:2"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "29202:5:2",
																								"nodeType": "YulIdentifier",
																								"src": "29202:5:2"
																							},
																							"nativeSrc": "29202:13:2",
																							"nodeType": "YulFunctionCall",
																							"src": "29202:13:2"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nativeSrc": "29178:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "29178:6:2"
																					},
																					"nativeSrc": "29178:38:2",
																					"nodeType": "YulFunctionCall",
																					"src": "29178:38:2"
																				},
																				"nativeSrc": "29178:38:2",
																				"nodeType": "YulExpressionStatement",
																				"src": "29178:38:2"
																			}
																		]
																	},
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 1142,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "29193:6:2",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1142,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "29208:6:2",
																			"valueSize": 1
																		}
																	],
																	"id": 1155,
																	"nodeType": "InlineAssembly",
																	"src": "29151:79:2"
																}
															]
														},
														"errorName": "",
														"id": 1157,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1143,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1142,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "29003:6:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1157,
																	"src": "28990:19:2",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1141,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "28990:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "28989:21:2"
														},
														"src": "28983:257:2"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1122,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1813,
																"src": "28797:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28797:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1124,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "28818:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1125,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "28824:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1126,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "28833:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1119,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1109,
																	"src": "28776:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1118,
																"name": "ERC721A__IERC721Receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 53,
																"src": "28751:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$53_$",
																	"typeString": "type(contract ERC721A__IERC721Receiver)"
																}
															},
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28751:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$53",
																"typeString": "contract ERC721A__IERC721Receiver"
															}
														},
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "28780:16:2",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 52,
														"src": "28751:45:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28751:88:2",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 1158,
												"nodeType": "TryStatement",
												"src": "28747:493:2"
											}
										]
									},
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "28151:417:2",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n `from` - Previous owner of the given token ID.\n `to` - Target address that will receive the token.\n `tokenId` - Token ID to be transferred.\n `_data` - Optional data to send along with the call.\n Returns whether the call correctly returned the expected magic value."
									},
									"id": 1160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkContractOnERC721Received",
									"nameLocation": "28582:30:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "28630:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "28622:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28622:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "28652:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "28644:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28644:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "28672:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "28664:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28664:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "28702:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "28689:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1112,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "28689:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28612:101:2"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "28731:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1115,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28731:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28730:6:2"
									},
									"scope": 1832,
									"src": "28573:673:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1278,
										"nodeType": "Block",
										"src": "29754:2189:2",
										"statements": [
											{
												"assignments": [
													1169
												],
												"declarations": [
													{
														"constant": false,
														"id": 1169,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "29772:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 1278,
														"src": "29764:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1168,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29764:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1171,
												"initialValue": {
													"id": 1170,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 127,
													"src": "29787:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29764:36:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1172,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "29814:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29826:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "29814:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1180,
												"nodeType": "IfStatement",
												"src": "29810:53:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1176,
																	"name": "MintZeroQuantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1850,
																	"src": "29837:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "29854:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "29837:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1175,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "29829:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1178,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29829:34:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1179,
													"nodeType": "ExpressionStatement",
													"src": "29829:34:2"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29904:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1183,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29896:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1182,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29896:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29896:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1186,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "29908:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1187,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "29912:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1188,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "29926:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1181,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "29874:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29874:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "29874:61:2"
											},
											{
												"id": 1267,
												"nodeType": "UncheckedBlock",
												"src": "30118:1749:2",
												"statements": [
													{
														"expression": {
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1191,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 137,
																	"src": "30363:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1193,
																"indexExpression": {
																	"id": 1192,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1169,
																	"src": "30381:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "30363:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1195,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1163,
																		"src": "30433:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1197,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1165,
																					"src": "30474:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1196,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 685,
																				"src": "30453:20:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "30453:30:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1202,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "30509:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1201,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "30501:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1200,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "30501:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1203,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "30501:10:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1204,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1163,
																					"src": "30513:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1205,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "30517:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1199,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1803,
																				"src": "30486:14:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "30486:33:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "30453:66:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1194,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "30397:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30397:136:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30363:170:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1210,
														"nodeType": "ExpressionStatement",
														"src": "30363:170:2"
													},
													{
														"expression": {
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1211,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "30744:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1213,
																"indexExpression": {
																	"id": 1212,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1163,
																	"src": "30763:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "30744:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1214,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1165,
																	"src": "30770:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1220,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1217,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1215,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "30783:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1216,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 70,
																							"src": "30788:21:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "30783:26:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1218,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "30782:28:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1219,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "30813:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "30782:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1221,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "30781:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30770:45:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30744:71:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1224,
														"nodeType": "ExpressionStatement",
														"src": "30744:71:2"
													},
													{
														"assignments": [
															1226
														],
														"declarations": [
															{
																"constant": false,
																"id": 1226,
																"mutability": "mutable",
																"name": "toMasked",
																"nameLocation": "30931:8:2",
																"nodeType": "VariableDeclaration",
																"scope": 1267,
																"src": "30923:16:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1225,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "30923:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1236,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1231,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1163,
																				"src": "30958:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1230,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "30950:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint160_$",
																				"typeString": "type(uint160)"
																			},
																			"typeName": {
																				"id": 1229,
																				"name": "uint160",
																				"nodeType": "ElementaryTypeName",
																				"src": "30950:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "30950:11:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	],
																	"id": 1228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "30942:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1227,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "30942:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30942:20:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 1234,
																"name": "_BITMASK_ADDRESS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 119,
																"src": "30965:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30942:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "30923:58:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1237,
																"name": "toMasked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "31000:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1238,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31012:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "31000:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1245,
														"nodeType": "IfStatement",
														"src": "30996:54:2",
														"trueBody": {
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1241,
																			"name": "MintToZeroAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1847,
																			"src": "31023:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 1242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "31041:8:2",
																		"memberName": "selector",
																		"nodeType": "MemberAccess",
																		"src": "31023:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"id": 1240,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1831,
																	"src": "31015:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																		"typeString": "function (bytes4) pure"
																	}
																},
																"id": 1243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31015:35:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1244,
															"nodeType": "ExpressionStatement",
															"src": "31015:35:2"
														}
													},
													{
														"assignments": [
															1247
														],
														"declarations": [
															{
																"constant": false,
																"id": 1247,
																"mutability": "mutable",
																"name": "end",
																"nameLocation": "31073:3:2",
																"nodeType": "VariableDeclaration",
																"scope": 1267,
																"src": "31065:11:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1246,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "31065:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1251,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1248,
																"name": "startTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1169,
																"src": "31079:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1249,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1165,
																"src": "31094:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31079:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "31065:37:2"
													},
													{
														"assignments": [
															1253
														],
														"declarations": [
															{
																"constant": false,
																"id": 1253,
																"mutability": "mutable",
																"name": "tokenId",
																"nameLocation": "31124:7:2",
																"nodeType": "VariableDeclaration",
																"scope": 1267,
																"src": "31116:15:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1252,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "31116:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1255,
														"initialValue": {
															"id": 1254,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "31134:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "31116:30:2"
													},
													{
														"body": {
															"id": 1257,
															"nodeType": "Block",
															"src": "31164:633:2",
															"statements": [
																{
																	"AST": {
																		"nativeSrc": "31191:441:2",
																		"nodeType": "YulBlock",
																		"src": "31191:441:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "31293:1:2",
																							"nodeType": "YulLiteral",
																							"src": "31293:1:2",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "31357:1:2",
																							"nodeType": "YulLiteral",
																							"src": "31357:1:2",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "_TRANSFER_EVENT_SIGNATURE",
																							"nativeSrc": "31419:25:2",
																							"nodeType": "YulIdentifier",
																							"src": "31419:25:2"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "31484:1:2",
																							"nodeType": "YulLiteral",
																							"src": "31484:1:2",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "toMasked",
																							"nativeSrc": "31528:8:2",
																							"nodeType": "YulIdentifier",
																							"src": "31528:8:2"
																						},
																						{
																							"name": "tokenId",
																							"nativeSrc": "31571:7:2",
																							"nodeType": "YulIdentifier",
																							"src": "31571:7:2"
																						}
																					],
																					"functionName": {
																						"name": "log4",
																						"nativeSrc": "31263:4:2",
																						"nodeType": "YulIdentifier",
																						"src": "31263:4:2"
																					},
																					"nativeSrc": "31263:351:2",
																					"nodeType": "YulFunctionCall",
																					"src": "31263:351:2"
																				},
																				"nativeSrc": "31263:351:2",
																				"nodeType": "YulExpressionStatement",
																				"src": "31263:351:2"
																			}
																		]
																	},
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 125,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "31419:25:2",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1226,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "31528:8:2",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1253,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "31571:7:2",
																			"valueSize": 1
																		}
																	],
																	"id": 1256,
																	"nodeType": "InlineAssembly",
																	"src": "31182:450:2"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": true,
																"src": "31805:9:2",
																"subExpression": {
																	"id": 1258,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1253,
																	"src": "31807:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1260,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1247,
																"src": "31818:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31805:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1262,
														"nodeType": "DoWhileStatement",
														"src": "31161:662:2"
													},
													{
														"expression": {
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1263,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 127,
																"src": "31837:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1264,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1247,
																"src": "31853:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31837:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1266,
														"nodeType": "ExpressionStatement",
														"src": "31837:19:2"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31905:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31897:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1269,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31897:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31897:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1273,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "31909:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1274,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "31913:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1275,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "31927:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1268,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "31876:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31876:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1277,
												"nodeType": "ExpressionStatement",
												"src": "31876:60:2"
											}
										]
									},
									"documentation": {
										"id": 1161,
										"nodeType": "StructuredDocumentation",
										"src": "29437:250:2",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event for each mint."
									},
									"id": 1279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "29701:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "29715:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "29707:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29707:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "29727:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "29719:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29719:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29706:30:2"
									},
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29754:0:2"
									},
									"scope": 1832,
									"src": "29692:2251:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1396,
										"nodeType": "Block",
										"src": "32852:1401:2",
										"statements": [
											{
												"assignments": [
													1288
												],
												"declarations": [
													{
														"constant": false,
														"id": 1288,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "32870:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 1396,
														"src": "32862:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1287,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "32862:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1290,
												"initialValue": {
													"id": 1289,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 127,
													"src": "32885:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32862:36:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1291,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1282,
														"src": "32912:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32926:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32918:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1292,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "32918:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1295,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32918:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "32912:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1302,
												"nodeType": "IfStatement",
												"src": "32908:57:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1298,
																	"name": "MintToZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1847,
																	"src": "32938:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "32956:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "32938:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1297,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "32930:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32930:35:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1301,
													"nodeType": "ExpressionStatement",
													"src": "32930:35:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1303,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1284,
														"src": "32979:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1304,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32991:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "32979:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1311,
												"nodeType": "IfStatement",
												"src": "32975:53:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1307,
																	"name": "MintZeroQuantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1850,
																	"src": "33002:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "33019:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "33002:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1306,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "32994:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32994:34:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1310,
													"nodeType": "ExpressionStatement",
													"src": "32994:34:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1312,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1284,
														"src": "33042:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1313,
														"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "33053:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33042:43:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1320,
												"nodeType": "IfStatement",
												"src": "33038:98:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1316,
																	"name": "MintERC2309QuantityExceedsLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1871,
																	"src": "33095:31:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "33127:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "33095:40:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1315,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "33087:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33087:49:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1319,
													"nodeType": "ExpressionStatement",
													"src": "33087:49:2"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33177:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "33169:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1322,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "33169:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33169:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1326,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1282,
															"src": "33181:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1327,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1288,
															"src": "33185:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1328,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1284,
															"src": "33199:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1321,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "33147:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33147:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1330,
												"nodeType": "ExpressionStatement",
												"src": "33147:61:2"
											},
											{
												"id": 1385,
												"nodeType": "UncheckedBlock",
												"src": "33317:860:2",
												"statements": [
													{
														"expression": {
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1331,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "33537:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1333,
																"indexExpression": {
																	"id": 1332,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1282,
																	"src": "33556:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "33537:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1334,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1284,
																	"src": "33563:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1337,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1335,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "33576:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1336,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 70,
																							"src": "33581:21:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "33576:26:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1338,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "33575:28:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1339,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "33606:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "33575:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1341,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "33574:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "33563:45:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "33537:71:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1344,
														"nodeType": "ExpressionStatement",
														"src": "33537:71:2"
													},
													{
														"expression": {
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1345,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 137,
																	"src": "33844:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1347,
																"indexExpression": {
																	"id": 1346,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1288,
																	"src": "33862:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "33844:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1349,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1282,
																		"src": "33914:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1351,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1284,
																					"src": "33955:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1350,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 685,
																				"src": "33934:20:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "33934:30:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1356,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "33990:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1355,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "33982:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1354,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "33982:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1357,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "33982:10:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1358,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1282,
																					"src": "33994:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1359,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "33998:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1353,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1803,
																				"src": "33967:14:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1360,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "33967:33:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "33934:66:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1348,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "33878:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33878:136:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "33844:170:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1364,
														"nodeType": "ExpressionStatement",
														"src": "33844:170:2"
													},
													{
														"eventCall": {
															"arguments": [
																{
																	"id": 1366,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1288,
																	"src": "34054:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1371,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1367,
																			"name": "startTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1288,
																			"src": "34068:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1368,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1284,
																			"src": "34083:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "34068:23:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34094:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "34068:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1374,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "34105:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "34097:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1372,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "34097:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34097:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1376,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1282,
																	"src": "34109:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1365,
																"name": "ConsecutiveTransfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2037,
																"src": "34034:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
																	"typeString": "function (uint256,uint256,address,address)"
																}
															},
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34034:78:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1378,
														"nodeType": "EmitStatement",
														"src": "34029:83:2"
													},
													{
														"expression": {
															"id": 1383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1379,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 127,
																"src": "34127:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1380,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1288,
																	"src": "34143:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1381,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1284,
																	"src": "34158:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "34143:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "34127:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1384,
														"nodeType": "ExpressionStatement",
														"src": "34127:39:2"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34215:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "34207:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1387,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "34207:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34207:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1391,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1282,
															"src": "34219:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1392,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1288,
															"src": "34223:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1393,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1284,
															"src": "34237:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1386,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "34186:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34186:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1395,
												"nodeType": "ExpressionStatement",
												"src": "34186:60:2"
											}
										]
									},
									"documentation": {
										"id": 1280,
										"nodeType": "StructuredDocumentation",
										"src": "31949:829:2",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n This function is intended for efficient minting only during contract creation.\n It emits only one {ConsecutiveTransfer} as defined in\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n instead of a sequence of {Transfer} event(s).\n Calling this function outside of contract creation WILL make your contract\n non-compliant with the ERC721 standard.\n For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n {ConsecutiveTransfer} event is only permissible during contract creation.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {ConsecutiveTransfer} event."
									},
									"id": 1397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintERC2309",
									"nameLocation": "32792:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "32813:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "32805:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32805:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "32825:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "32817:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32817:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32804:30:2"
									},
									"returnParameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32852:0:2"
									},
									"scope": 1832,
									"src": "32783:1470:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1464,
										"nodeType": "Block",
										"src": "34768:572:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1408,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "34784:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1409,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1402,
															"src": "34788:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1407,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1279,
														"src": "34778:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34778:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1411,
												"nodeType": "ExpressionStatement",
												"src": "34778:19:2"
											},
											{
												"id": 1463,
												"nodeType": "UncheckedBlock",
												"src": "34808:526:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 1412,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1400,
																		"src": "34836:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "34839:4:2",
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "34836:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "34844:6:2",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "34836:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "34854:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "34836:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1462,
														"nodeType": "IfStatement",
														"src": "34832:492:2",
														"trueBody": {
															"id": 1461,
															"nodeType": "Block",
															"src": "34857:467:2",
															"statements": [
																{
																	"assignments": [
																		1418
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1418,
																			"mutability": "mutable",
																			"name": "end",
																			"nameLocation": "34883:3:2",
																			"nodeType": "VariableDeclaration",
																			"scope": 1461,
																			"src": "34875:11:2",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1417,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "34875:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1420,
																	"initialValue": {
																		"id": 1419,
																		"name": "_currentIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 127,
																		"src": "34889:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "34875:27:2"
																},
																{
																	"assignments": [
																		1422
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1422,
																			"mutability": "mutable",
																			"name": "index",
																			"nameLocation": "34928:5:2",
																			"nodeType": "VariableDeclaration",
																			"scope": 1461,
																			"src": "34920:13:2",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1421,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "34920:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1426,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1423,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1418,
																			"src": "34936:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1424,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1402,
																			"src": "34942:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "34936:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "34920:30:2"
																},
																{
																	"body": {
																		"id": 1445,
																		"nodeType": "Block",
																		"src": "34971:214:2",
																		"statements": [
																			{
																				"condition": {
																					"id": 1437,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "!",
																					"prefix": true,
																					"src": "34997:63:2",
																					"subExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 1430,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "35037:1:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 1429,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "35029:7:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 1428,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "35029:7:2",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1431,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "35029:10:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1432,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1400,
																								"src": "35041:2:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1434,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "35045:7:2",
																								"subExpression": {
																									"id": 1433,
																									"name": "index",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1422,
																									"src": "35045:5:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1435,
																								"name": "_data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1404,
																								"src": "35054:5:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 1427,
																							"name": "_checkContractOnERC721Received",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1160,
																							"src": "34998:30:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																								"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																							}
																						},
																						"id": 1436,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "34998:62:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1444,
																				"nodeType": "IfStatement",
																				"src": "34993:174:2",
																				"trueBody": {
																					"id": 1443,
																					"nodeType": "Block",
																					"src": "35062:105:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"expression": {
																											"id": 1439,
																											"name": "TransferToNonERC721ReceiverImplementer",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1862,
																											"src": "35096:38:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																												"typeString": "function () pure returns (error)"
																											}
																										},
																										"id": 1440,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "35135:8:2",
																										"memberName": "selector",
																										"nodeType": "MemberAccess",
																										"src": "35096:47:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes4",
																											"typeString": "bytes4"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes4",
																											"typeString": "bytes4"
																										}
																									],
																									"id": 1438,
																									"name": "_revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1831,
																									"src": "35088:7:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																										"typeString": "function (bytes4) pure"
																									}
																								},
																								"id": 1441,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "35088:56:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1442,
																							"nodeType": "ExpressionStatement",
																							"src": "35088:56:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1446,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1422,
																			"src": "35193:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1447,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1418,
																			"src": "35201:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "35193:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1449,
																	"nodeType": "DoWhileStatement",
																	"src": "34968:238:2"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1450,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 127,
																			"src": "35269:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1451,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1418,
																			"src": "35286:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "35269:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1460,
																	"nodeType": "IfStatement",
																	"src": "35265:44:2",
																	"trueBody": {
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1456,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "35306:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1455,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "35299:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes4_$",
																							"typeString": "type(bytes4)"
																						},
																						"typeName": {
																							"id": 1454,
																							"name": "bytes4",
																							"nodeType": "ElementaryTypeName",
																							"src": "35299:6:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1457,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "35299:9:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				],
																				"id": 1453,
																				"name": "_revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1831,
																				"src": "35291:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																					"typeString": "function (bytes4) pure"
																				}
																			},
																			"id": 1458,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "35291:18:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1459,
																		"nodeType": "ExpressionStatement",
																		"src": "35291:18:2"
																	}
																}
															]
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "34259:388:2",
										"text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n See {_mint}.\n Emits a {Transfer} event for each mint."
									},
									"id": 1465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "34661:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "34688:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "34680:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34680:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "34708:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "34700:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34700:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "34739:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "34726:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1403,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "34726:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34670:80:2"
									},
									"returnParameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34768:0:2"
									},
									"scope": 1832,
									"src": "34652:688:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1479,
										"nodeType": "Block",
										"src": "35485:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1474,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "35505:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1475,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "35509:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35519:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1473,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1465,
															1480
														],
														"referencedDeclaration": 1465,
														"src": "35495:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35495:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1478,
												"nodeType": "ExpressionStatement",
												"src": "35495:27:2"
											}
										]
									},
									"documentation": {
										"id": 1466,
										"nodeType": "StructuredDocumentation",
										"src": "35346:68:2",
										"text": " @dev Equivalent to `_safeMint(to, quantity, '')`."
									},
									"id": 1480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "35428:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "35446:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "35438:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35438:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "35458:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "35450:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35450:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35437:30:2"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35485:0:2"
									},
									"scope": 1832,
									"src": "35419:110:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1494,
										"nodeType": "Block",
										"src": "35861:45:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1489,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "35880:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1490,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "35884:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35893:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1488,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1495,
															1545
														],
														"referencedDeclaration": 1545,
														"src": "35871:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35871:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1493,
												"nodeType": "ExpressionStatement",
												"src": "35871:28:2"
											}
										]
									},
									"documentation": {
										"id": 1481,
										"nodeType": "StructuredDocumentation",
										"src": "35723:69:2",
										"text": " @dev Equivalent to `_approve(to, tokenId, false)`."
									},
									"id": 1495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "35806:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "35823:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "35815:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35815:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "35835:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "35827:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35827:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35814:29:2"
									},
									"returnParameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35861:0:2"
									},
									"scope": 1832,
									"src": "35797:109:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1544,
										"nodeType": "Block",
										"src": "36423:346:2",
										"statements": [
											{
												"assignments": [
													1506
												],
												"declarations": [
													{
														"constant": false,
														"id": 1506,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "36441:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1544,
														"src": "36433:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1505,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "36433:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1510,
												"initialValue": {
													"arguments": [
														{
															"id": 1508,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1500,
															"src": "36457:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1507,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "36449:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36449:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36433:32:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1511,
														"name": "approvalCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1502,
														"src": "36480:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1512,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1813,
																"src": "36497:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36497:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1514,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1506,
															"src": "36520:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "36497:28:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "36480:45:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1530,
												"nodeType": "IfStatement",
												"src": "36476:198:2",
												"trueBody": {
													"condition": {
														"id": 1522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "36543:45:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 1518,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1506,
																	"src": "36561:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1519,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1813,
																		"src": "36568:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "36568:19:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1517,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "36544:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36544:44:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1529,
													"nodeType": "IfStatement",
													"src": "36539:135:2",
													"trueBody": {
														"id": 1528,
														"nodeType": "Block",
														"src": "36590:84:2",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1524,
																				"name": "ApprovalCallerNotOwnerNorApproved",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1838,
																				"src": "36616:33:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																					"typeString": "function () pure returns (error)"
																				}
																			},
																			"id": 1525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "36650:8:2",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "36616:42:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		],
																		"id": 1523,
																		"name": "_revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1831,
																		"src": "36608:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																			"typeString": "function (bytes4) pure"
																		}
																	},
																	"id": 1526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "36608:51:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1527,
																"nodeType": "ExpressionStatement",
																"src": "36608:51:2"
															}
														]
													}
												}
											},
											{
												"expression": {
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1531,
																"name": "_tokenApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "36684:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$59_storage_$",
																	"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
																}
															},
															"id": 1533,
															"indexExpression": {
																"id": 1532,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1500,
																"src": "36700:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "36684:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$59_storage",
																"typeString": "struct ERC721A.TokenApprovalRef storage ref"
															}
														},
														"id": 1534,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "36709:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 58,
														"src": "36684:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1535,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1498,
														"src": "36717:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "36684:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1537,
												"nodeType": "ExpressionStatement",
												"src": "36684:35:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1539,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1506,
															"src": "36743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1540,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1498,
															"src": "36750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1541,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1500,
															"src": "36754:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1538,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1915,
														"src": "36734:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36734:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1543,
												"nodeType": "EmitStatement",
												"src": "36729:33:2"
											}
										]
									},
									"documentation": {
										"id": 1496,
										"nodeType": "StructuredDocumentation",
										"src": "35912:392:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"id": 1545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "36318:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "36344:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "36336:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36336:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "36364:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "36356:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36356:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "36386:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "36381:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1501,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "36381:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36326:79:2"
									},
									"returnParameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36423:0:2"
									},
									"scope": 1832,
									"src": "36309:460:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1556,
										"nodeType": "Block",
										"src": "37076:38:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1552,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1548,
															"src": "37092:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37101:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1551,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1557,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "37086:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37086:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1555,
												"nodeType": "ExpressionStatement",
												"src": "37086:21:2"
											}
										]
									},
									"documentation": {
										"id": 1546,
										"nodeType": "StructuredDocumentation",
										"src": "36960:62:2",
										"text": " @dev Equivalent to `_burn(tokenId, false)`."
									},
									"id": 1557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "37036:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "37050:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "37042:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37042:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37041:17:2"
									},
									"returnParameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37076:0:2"
									},
									"scope": 1832,
									"src": "37027:87:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1710,
										"nodeType": "Block",
										"src": "37400:2955:2",
										"statements": [
											{
												"assignments": [
													1566
												],
												"declarations": [
													{
														"constant": false,
														"id": 1566,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "37418:19:2",
														"nodeType": "VariableDeclaration",
														"scope": 1710,
														"src": "37410:27:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1565,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "37410:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1570,
												"initialValue": {
													"arguments": [
														{
															"id": 1568,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1560,
															"src": "37459:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1567,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "37440:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37440:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37410:57:2"
											},
											{
												"assignments": [
													1572
												],
												"declarations": [
													{
														"constant": false,
														"id": 1572,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "37486:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 1710,
														"src": "37478:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1571,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "37478:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1580,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1577,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1566,
																	"src": "37509:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "37501:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1575,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "37501:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37501:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1574,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "37493:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1573,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "37493:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 1579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37493:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37478:52:2"
											},
											{
												"assignments": [
													1582,
													1584
												],
												"declarations": [
													{
														"constant": false,
														"id": 1582,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "37550:19:2",
														"nodeType": "VariableDeclaration",
														"scope": 1710,
														"src": "37542:27:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1581,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "37542:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1584,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "37579:15:2",
														"nodeType": "VariableDeclaration",
														"scope": 1710,
														"src": "37571:23:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1583,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "37571:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1588,
												"initialValue": {
													"arguments": [
														{
															"id": 1586,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1560,
															"src": "37625:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1585,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "37598:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37598:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37541:92:2"
											},
											{
												"condition": {
													"id": 1589,
													"name": "approvalCheck",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1562,
													"src": "37648:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1611,
												"nodeType": "IfStatement",
												"src": "37644:321:2",
												"trueBody": {
													"id": 1610,
													"nodeType": "Block",
													"src": "37663:302:2",
													"statements": [
														{
															"condition": {
																"id": 1596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "37766:69:2",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 1591,
																			"name": "approvedAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1584,
																			"src": "37792:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1592,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1572,
																			"src": "37809:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1593,
																				"name": "_msgSenderERC721A",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1813,
																				"src": "37815:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "37815:19:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1590,
																		"name": "_isSenderApprovedOrOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 827,
																		"src": "37767:24:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address,address) pure returns (bool)"
																		}
																	},
																	"id": 1595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "37767:68:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1609,
															"nodeType": "IfStatement",
															"src": "37762:192:2",
															"trueBody": {
																"condition": {
																	"id": 1602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "37857:44:2",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1598,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1572,
																				"src": "37875:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1599,
																					"name": "_msgSenderERC721A",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1813,
																					"src": "37881:17:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 1600,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "37881:19:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1597,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 770,
																			"src": "37858:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "37858:43:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1608,
																"nodeType": "IfStatement",
																"src": "37853:101:2",
																"trueBody": {
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1604,
																					"name": "TransferCallerNotOwnerNorApproved",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1856,
																					"src": "37911:33:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																						"typeString": "function () pure returns (error)"
																					}
																				},
																				"id": 1605,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "37945:8:2",
																				"memberName": "selector",
																				"nodeType": "MemberAccess",
																				"src": "37911:42:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			],
																			"id": 1603,
																			"name": "_revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1831,
																			"src": "37903:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																				"typeString": "function (bytes4) pure"
																			}
																		},
																		"id": 1606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "37903:51:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1607,
																	"nodeType": "ExpressionStatement",
																	"src": "37903:51:2"
																}
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1613,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1572,
															"src": "37997:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "38011:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1615,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "38003:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1614,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "38003:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38003:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1618,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1560,
															"src": "38015:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38024:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1612,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "37975:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37975:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1621,
												"nodeType": "ExpressionStatement",
												"src": "37975:51:2"
											},
											{
												"AST": {
													"nativeSrc": "38098:181:2",
													"nodeType": "YulBlock",
													"src": "38098:181:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "38131:138:2",
																"nodeType": "YulBlock",
																"src": "38131:138:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nativeSrc": "38232:19:2",
																					"nodeType": "YulIdentifier",
																					"src": "38232:19:2"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "38253:1:2",
																					"nodeType": "YulLiteral",
																					"src": "38253:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nativeSrc": "38225:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "38225:6:2"
																			},
																			"nativeSrc": "38225:30:2",
																			"nodeType": "YulFunctionCall",
																			"src": "38225:30:2"
																		},
																		"nativeSrc": "38225:30:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "38225:30:2"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nativeSrc": "38115:15:2",
																"nodeType": "YulIdentifier",
																"src": "38115:15:2"
															},
															"nativeSrc": "38112:157:2",
															"nodeType": "YulIf",
															"src": "38112:157:2"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1584,
														"isOffset": false,
														"isSlot": false,
														"src": "38115:15:2",
														"valueSize": 1
													},
													{
														"declaration": 1582,
														"isOffset": false,
														"isSlot": false,
														"src": "38232:19:2",
														"valueSize": 1
													}
												],
												"id": 1622,
												"nodeType": "InlineAssembly",
												"src": "38089:190:2"
											},
											{
												"id": 1686,
												"nodeType": "UncheckedBlock",
												"src": "38546:1545:2",
												"statements": [
													{
														"expression": {
															"id": 1632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1623,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "38858:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1625,
																"indexExpression": {
																	"id": 1624,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1572,
																	"src": "38877:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "38858:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 1626,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "38887:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 1627,
																				"name": "_BITPOS_NUMBER_BURNED",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 73,
																				"src": "38892:21:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "38887:26:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1629,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "38886:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "38917:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "38886:32:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "38858:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1633,
														"nodeType": "ExpressionStatement",
														"src": "38858:60:2"
													},
													{
														"expression": {
															"id": 1653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1634,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 137,
																	"src": "39149:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1636,
																"indexExpression": {
																	"id": 1635,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1560,
																	"src": "39167:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "39149:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1638,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1572,
																		"src": "39214:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1641,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1639,
																						"name": "_BITMASK_BURNED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 92,
																						"src": "39237:15:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "|",
																					"rightExpression": {
																						"id": 1640,
																						"name": "_BITMASK_NEXT_INITIALIZED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 100,
																						"src": "39255:25:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "39237:43:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1642,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "39236:45:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1644,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1572,
																					"src": "39299:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1647,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "39313:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1646,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "39305:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1645,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "39305:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1648,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "39305:10:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1649,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1566,
																					"src": "39317:19:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1643,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1803,
																				"src": "39284:14:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1650,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "39284:53:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "39236:101:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1637,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "39178:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "39178:173:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "39149:202:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1654,
														"nodeType": "ExpressionStatement",
														"src": "39149:202:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1655,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1566,
																	"src": "39468:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1656,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 100,
																	"src": "39490:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "39468:47:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1658,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "39519:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "39468:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1685,
														"nodeType": "IfStatement",
														"src": "39464:617:2",
														"trueBody": {
															"id": 1684,
															"nodeType": "Block",
															"src": "39522:559:2",
															"statements": [
																{
																	"assignments": [
																		1661
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1661,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "39548:11:2",
																			"nodeType": "VariableDeclaration",
																			"scope": 1684,
																			"src": "39540:19:2",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1660,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "39540:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1665,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1662,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1560,
																			"src": "39562:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1663,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "39572:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "39562:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "39540:33:2"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1666,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 137,
																				"src": "39693:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1668,
																			"indexExpression": {
																				"id": 1667,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1661,
																				"src": "39711:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "39693:30:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1669,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "39727:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "39693:35:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1683,
																	"nodeType": "IfStatement",
																	"src": "39689:378:2",
																	"trueBody": {
																		"id": 1682,
																		"nodeType": "Block",
																		"src": "39730:337:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1673,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1671,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1661,
																						"src": "39814:11:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 1672,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 127,
																						"src": "39829:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "39814:28:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1681,
																				"nodeType": "IfStatement",
																				"src": "39810:239:2",
																				"trueBody": {
																					"id": 1680,
																					"nodeType": "Block",
																					"src": "39844:205:2",
																					"statements": [
																						{
																							"expression": {
																								"id": 1678,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 1674,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 137,
																										"src": "39974:17:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1676,
																									"indexExpression": {
																										"id": 1675,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1661,
																										"src": "39992:11:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "39974:30:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 1677,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1566,
																									"src": "40007:19:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "39974:52:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1679,
																							"nodeType": "ExpressionStatement",
																							"src": "39974:52:2"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1688,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1572,
															"src": "40115:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "40129:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1690,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "40121:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1689,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "40121:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1692,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "40121:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1693,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1560,
															"src": "40133:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1687,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1906,
														"src": "40106:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40106:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1695,
												"nodeType": "EmitStatement",
												"src": "40101:40:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1697,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1572,
															"src": "40172:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "40186:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "40178:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1698,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "40178:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1701,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "40178:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1702,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1560,
															"src": "40190:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1703,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "40199:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1696,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "40151:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40151:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1705,
												"nodeType": "ExpressionStatement",
												"src": "40151:50:2"
											},
											{
												"id": 1709,
												"nodeType": "UncheckedBlock",
												"src": "40300:49:2",
												"statements": [
													{
														"expression": {
															"id": 1707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "40324:14:2",
															"subExpression": {
																"id": 1706,
																"name": "_burnCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "40324:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1708,
														"nodeType": "ExpressionStatement",
														"src": "40324:14:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1558,
										"nodeType": "StructuredDocumentation",
										"src": "37120:206:2",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1711,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "37340:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "37354:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "37346:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37346:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "37368:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "37363:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1561,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "37363:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37345:37:2"
									},
									"returnParameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37400:0:2"
									},
									"scope": 1832,
									"src": "37331:3024:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1756,
										"nodeType": "Block",
										"src": "40713:456:2",
										"statements": [
											{
												"assignments": [
													1720
												],
												"declarations": [
													{
														"constant": false,
														"id": 1720,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "40731:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1756,
														"src": "40723:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1719,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "40723:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1724,
												"initialValue": {
													"baseExpression": {
														"id": 1721,
														"name": "_packedOwnerships",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "40740:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1723,
													"indexExpression": {
														"id": 1722,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1714,
														"src": "40758:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "40740:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "40723:41:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1725,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1720,
														"src": "40778:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1726,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "40788:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "40778:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1733,
												"nodeType": "IfStatement",
												"src": "40774:70:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1729,
																	"name": "OwnershipNotInitializedForExtraData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1874,
																	"src": "40799:35:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "40835:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "40799:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1728,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "40791:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "40791:53:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1732,
													"nodeType": "ExpressionStatement",
													"src": "40791:53:2"
												}
											},
											{
												"assignments": [
													1735
												],
												"declarations": [
													{
														"constant": false,
														"id": 1735,
														"mutability": "mutable",
														"name": "extraDataCasted",
														"nameLocation": "40862:15:2",
														"nodeType": "VariableDeclaration",
														"scope": 1756,
														"src": "40854:23:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1734,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "40854:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1736,
												"nodeType": "VariableDeclarationStatement",
												"src": "40854:23:2"
											},
											{
												"AST": {
													"nativeSrc": "40966:52:2",
													"nodeType": "YulBlock",
													"src": "40966:52:2",
													"statements": [
														{
															"nativeSrc": "40980:28:2",
															"nodeType": "YulAssignment",
															"src": "40980:28:2",
															"value": {
																"name": "extraData",
																"nativeSrc": "40999:9:2",
																"nodeType": "YulIdentifier",
																"src": "40999:9:2"
															},
															"variableNames": [
																{
																	"name": "extraDataCasted",
																	"nativeSrc": "40980:15:2",
																	"nodeType": "YulIdentifier",
																	"src": "40980:15:2"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1716,
														"isOffset": false,
														"isSlot": false,
														"src": "40999:9:2",
														"valueSize": 1
													},
													{
														"declaration": 1735,
														"isOffset": false,
														"isSlot": false,
														"src": "40980:15:2",
														"valueSize": 1
													}
												],
												"id": 1737,
												"nodeType": "InlineAssembly",
												"src": "40957:61:2"
											},
											{
												"expression": {
													"id": 1748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1738,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1720,
														"src": "41027:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1739,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1720,
																		"src": "41037:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 1740,
																		"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 111,
																		"src": "41046:30:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "41037:39:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1742,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "41036:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1743,
																		"name": "extraDataCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1735,
																		"src": "41081:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 1744,
																		"name": "_BITPOS_EXTRA_DATA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 103,
																		"src": "41100:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "41081:37:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1746,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "41080:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "41036:83:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "41027:92:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1749,
												"nodeType": "ExpressionStatement",
												"src": "41027:92:2"
											},
											{
												"expression": {
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1750,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "41129:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1752,
														"indexExpression": {
															"id": 1751,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1714,
															"src": "41147:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "41129:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1753,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1720,
														"src": "41156:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "41129:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1755,
												"nodeType": "ExpressionStatement",
												"src": "41129:33:2"
											}
										]
									},
									"documentation": {
										"id": 1712,
										"nodeType": "StructuredDocumentation",
										"src": "40549:84:2",
										"text": " @dev Directly sets the extra data for the ownership data `index`."
									},
									"id": 1757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setExtraDataAt",
									"nameLocation": "40647:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "40671:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "40663:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40663:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "extraData",
												"nameLocation": "40685:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "40678:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1715,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "40678:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40662:33:2"
									},
									"returnParameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40713:0:2"
									},
									"scope": 1832,
									"src": "40638:531:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1769,
										"nodeType": "Block",
										"src": "41870:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1758,
										"nodeType": "StructuredDocumentation",
										"src": "41175:549:2",
										"text": " @dev Called during each token transfer to set the 24bit `extraData` field.\n Intended to be overridden by the cosumer contract.\n `previousExtraData` - the value of `extraData` before transfer.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_extraData",
									"nameLocation": "41738:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "41766:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "41758:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41758:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "41788:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "41780:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41780:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "previousExtraData",
												"nameLocation": "41807:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "41800:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1763,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "41800:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41748:82:2"
									},
									"returnParameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "41862:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1766,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "41862:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41861:8:2"
									},
									"scope": 1832,
									"src": "41729:143:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1802,
										"nodeType": "Block",
										"src": "42158:164:2",
										"statements": [
											{
												"assignments": [
													1783
												],
												"declarations": [
													{
														"constant": false,
														"id": 1783,
														"mutability": "mutable",
														"name": "extraData",
														"nameLocation": "42175:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 1802,
														"src": "42168:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 1782,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "42168:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1790,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1786,
																"name": "prevOwnershipPacked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1777,
																"src": "42194:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 1787,
																"name": "_BITPOS_EXTRA_DATA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 103,
																"src": "42217:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "42194:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1785,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "42187:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 1784,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "42187:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42187:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42168:68:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1794,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1773,
																		"src": "42272:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1795,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1775,
																		"src": "42278:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1796,
																		"name": "extraData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1783,
																		"src": "42282:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	],
																	"id": 1793,
																	"name": "_extraData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1770,
																	"src": "42261:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_uint24_$",
																		"typeString": "function (address,address,uint24) view returns (uint24)"
																	}
																},
																"id": 1797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "42261:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 1792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "42253:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1791,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "42253:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1798,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "42253:40:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 1799,
														"name": "_BITPOS_EXTRA_DATA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "42297:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "42253:62:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1781,
												"id": 1801,
												"nodeType": "Return",
												"src": "42246:69:2"
											}
										]
									},
									"documentation": {
										"id": 1771,
										"nodeType": "StructuredDocumentation",
										"src": "41878:135:2",
										"text": " @dev Returns the next extra data for the packed ownership data.\n The returned result is shifted into position."
									},
									"id": 1803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextExtraData",
									"nameLocation": "42027:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "42059:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "42051:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42051:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "42081:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "42073:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42073:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "prevOwnershipPacked",
												"nameLocation": "42101:19:2",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "42093:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42093:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42041:85:2"
									},
									"returnParameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "42149:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42149:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42148:9:2"
									},
									"scope": 1832,
									"src": "42018:304:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1812,
										"nodeType": "Block",
										"src": "42760:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1809,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "42777:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "42781:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "42777:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1808,
												"id": 1811,
												"nodeType": "Return",
												"src": "42770:17:2"
											}
										]
									},
									"documentation": {
										"id": 1804,
										"nodeType": "StructuredDocumentation",
										"src": "42513:173:2",
										"text": " @dev Returns the message sender (defaults to `msg.sender`).\n If you are writing GSN compatible contracts, you need to override this function."
									},
									"id": 1813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSenderERC721A",
									"nameLocation": "42700:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42717:2:2"
									},
									"returnParameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "42751:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42751:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42750:9:2"
									},
									"scope": 1832,
									"src": "42691:103:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1822,
										"nodeType": "Block",
										"src": "42975:1624:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "42994:1599:2",
													"nodeType": "YulBlock",
													"src": "42994:1599:2",
													"statements": [
														{
															"nativeSrc": "43358:31:2",
															"nodeType": "YulVariableDeclaration",
															"src": "43358:31:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "43377:4:2",
																				"nodeType": "YulLiteral",
																				"src": "43377:4:2",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "43371:5:2",
																			"nodeType": "YulIdentifier",
																			"src": "43371:5:2"
																		},
																		"nativeSrc": "43371:11:2",
																		"nodeType": "YulFunctionCall",
																		"src": "43371:11:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "43384:4:2",
																		"nodeType": "YulLiteral",
																		"src": "43384:4:2",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "43367:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "43367:3:2"
																},
																"nativeSrc": "43367:22:2",
																"nodeType": "YulFunctionCall",
																"src": "43367:22:2"
															},
															"variables": [
																{
																	"name": "m",
																	"nativeSrc": "43362:1:2",
																	"nodeType": "YulTypedName",
																	"src": "43362:1:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "43468:4:2",
																		"nodeType": "YulLiteral",
																		"src": "43468:4:2",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "m",
																		"nativeSrc": "43474:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "43474:1:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "43461:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "43461:6:2"
																},
																"nativeSrc": "43461:15:2",
																"nodeType": "YulFunctionCall",
																"src": "43461:15:2"
															},
															"nativeSrc": "43461:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "43461:15:2"
														},
														{
															"nativeSrc": "43533:19:2",
															"nodeType": "YulAssignment",
															"src": "43533:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "m",
																		"nativeSrc": "43544:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "43544:1:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "43547:4:2",
																		"nodeType": "YulLiteral",
																		"src": "43547:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "43540:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "43540:3:2"
																},
																"nativeSrc": "43540:12:2",
																"nodeType": "YulFunctionCall",
																"src": "43540:12:2"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nativeSrc": "43533:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "43533:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "43622:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "43622:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "43627:1:2",
																		"nodeType": "YulLiteral",
																		"src": "43627:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "43615:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "43615:6:2"
																},
																"nativeSrc": "43615:14:2",
																"nodeType": "YulFunctionCall",
																"src": "43615:14:2"
															},
															"nativeSrc": "43615:14:2",
															"nodeType": "YulExpressionStatement",
															"src": "43615:14:2"
														},
														{
															"nativeSrc": "43717:14:2",
															"nodeType": "YulVariableDeclaration",
															"src": "43717:14:2",
															"value": {
																"name": "str",
																"nativeSrc": "43728:3:2",
																"nodeType": "YulIdentifier",
																"src": "43728:3:2"
															},
															"variables": [
																{
																	"name": "end",
																	"nativeSrc": "43721:3:2",
																	"nodeType": "YulTypedName",
																	"src": "43721:3:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "43975:388:2",
																"nodeType": "YulBlock",
																"src": "43975:388:2",
																"statements": [
																	{
																		"nativeSrc": "43993:18:2",
																		"nodeType": "YulAssignment",
																		"src": "43993:18:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "str",
																					"nativeSrc": "44004:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "44004:3:2"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "44009:1:2",
																					"nodeType": "YulLiteral",
																					"src": "44009:1:2",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nativeSrc": "44000:3:2",
																				"nodeType": "YulIdentifier",
																				"src": "44000:3:2"
																			},
																			"nativeSrc": "44000:11:2",
																			"nodeType": "YulFunctionCall",
																			"src": "44000:11:2"
																		},
																		"variableNames": [
																			{
																				"name": "str",
																				"nativeSrc": "43993:3:2",
																				"nodeType": "YulIdentifier",
																				"src": "43993:3:2"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "str",
																					"nativeSrc": "44154:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "44154:3:2"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "44163:2:2",
																							"nodeType": "YulLiteral",
																							"src": "44163:2:2",
																							"type": "",
																							"value": "48"
																						},
																						{
																							"arguments": [
																								{
																									"name": "temp",
																									"nativeSrc": "44171:4:2",
																									"nodeType": "YulIdentifier",
																									"src": "44171:4:2"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "44177:2:2",
																									"nodeType": "YulLiteral",
																									"src": "44177:2:2",
																									"type": "",
																									"value": "10"
																								}
																							],
																							"functionName": {
																								"name": "mod",
																								"nativeSrc": "44167:3:2",
																								"nodeType": "YulIdentifier",
																								"src": "44167:3:2"
																							},
																							"nativeSrc": "44167:13:2",
																							"nodeType": "YulFunctionCall",
																							"src": "44167:13:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "44159:3:2",
																						"nodeType": "YulIdentifier",
																						"src": "44159:3:2"
																					},
																					"nativeSrc": "44159:22:2",
																					"nodeType": "YulFunctionCall",
																					"src": "44159:22:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nativeSrc": "44146:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "44146:7:2"
																			},
																			"nativeSrc": "44146:36:2",
																			"nodeType": "YulFunctionCall",
																			"src": "44146:36:2"
																		},
																		"nativeSrc": "44146:36:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "44146:36:2"
																	},
																	{
																		"nativeSrc": "44251:21:2",
																		"nodeType": "YulAssignment",
																		"src": "44251:21:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nativeSrc": "44263:4:2",
																					"nodeType": "YulIdentifier",
																					"src": "44263:4:2"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "44269:2:2",
																					"nodeType": "YulLiteral",
																					"src": "44269:2:2",
																					"type": "",
																					"value": "10"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nativeSrc": "44259:3:2",
																				"nodeType": "YulIdentifier",
																				"src": "44259:3:2"
																			},
																			"nativeSrc": "44259:13:2",
																			"nodeType": "YulFunctionCall",
																			"src": "44259:13:2"
																		},
																		"variableNames": [
																			{
																				"name": "temp",
																				"nativeSrc": "44251:4:2",
																				"nodeType": "YulIdentifier",
																				"src": "44251:4:2"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "44340:9:2",
																			"nodeType": "YulBlock",
																			"src": "44340:9:2",
																			"statements": [
																				{
																					"nativeSrc": "44342:5:2",
																					"nodeType": "YulBreak",
																					"src": "44342:5:2"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nativeSrc": "44334:4:2",
																					"nodeType": "YulIdentifier",
																					"src": "44334:4:2"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nativeSrc": "44327:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "44327:6:2"
																			},
																			"nativeSrc": "44327:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "44327:12:2"
																		},
																		"nativeSrc": "44324:25:2",
																		"nodeType": "YulIf",
																		"src": "44324:25:2"
																	}
																]
															},
															"condition": {
																"kind": "number",
																"nativeSrc": "43970:1:2",
																"nodeType": "YulLiteral",
																"src": "43970:1:2",
																"type": "",
																"value": "1"
															},
															"nativeSrc": "43944:419:2",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "43972:2:2",
																"nodeType": "YulBlock",
																"src": "43972:2:2",
																"statements": []
															},
															"pre": {
																"nativeSrc": "43948:21:2",
																"nodeType": "YulBlock",
																"src": "43948:21:2",
																"statements": [
																	{
																		"nativeSrc": "43950:17:2",
																		"nodeType": "YulVariableDeclaration",
																		"src": "43950:17:2",
																		"value": {
																			"name": "value",
																			"nativeSrc": "43962:5:2",
																			"nodeType": "YulIdentifier",
																			"src": "43962:5:2"
																		},
																		"variables": [
																			{
																				"name": "temp",
																				"nativeSrc": "43954:4:2",
																				"nodeType": "YulTypedName",
																				"src": "43954:4:2",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "43944:419:2"
														},
														{
															"nativeSrc": "44377:27:2",
															"nodeType": "YulVariableDeclaration",
															"src": "44377:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "end",
																		"nativeSrc": "44395:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "44395:3:2"
																	},
																	{
																		"name": "str",
																		"nativeSrc": "44400:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "44400:3:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "44391:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "44391:3:2"
																},
																"nativeSrc": "44391:13:2",
																"nodeType": "YulFunctionCall",
																"src": "44391:13:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "44381:6:2",
																	"nodeType": "YulTypedName",
																	"src": "44381:6:2",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "44497:21:2",
															"nodeType": "YulAssignment",
															"src": "44497:21:2",
															"value": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "44508:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "44508:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "44513:4:2",
																		"nodeType": "YulLiteral",
																		"src": "44513:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "44504:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "44504:3:2"
																},
																"nativeSrc": "44504:14:2",
																"nodeType": "YulFunctionCall",
																"src": "44504:14:2"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nativeSrc": "44497:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "44497:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "44571:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "44571:3:2"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "44576:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "44576:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "44564:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "44564:6:2"
																},
																"nativeSrc": "44564:19:2",
																"nodeType": "YulFunctionCall",
																"src": "44564:19:2"
															},
															"nativeSrc": "44564:19:2",
															"nodeType": "YulExpressionStatement",
															"src": "44564:19:2"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1819,
														"isOffset": false,
														"isSlot": false,
														"src": "43533:3:2",
														"valueSize": 1
													},
													{
														"declaration": 1819,
														"isOffset": false,
														"isSlot": false,
														"src": "43622:3:2",
														"valueSize": 1
													},
													{
														"declaration": 1819,
														"isOffset": false,
														"isSlot": false,
														"src": "43728:3:2",
														"valueSize": 1
													},
													{
														"declaration": 1819,
														"isOffset": false,
														"isSlot": false,
														"src": "43993:3:2",
														"valueSize": 1
													},
													{
														"declaration": 1819,
														"isOffset": false,
														"isSlot": false,
														"src": "44004:3:2",
														"valueSize": 1
													},
													{
														"declaration": 1819,
														"isOffset": false,
														"isSlot": false,
														"src": "44154:3:2",
														"valueSize": 1
													},
													{
														"declaration": 1819,
														"isOffset": false,
														"isSlot": false,
														"src": "44400:3:2",
														"valueSize": 1
													},
													{
														"declaration": 1819,
														"isOffset": false,
														"isSlot": false,
														"src": "44497:3:2",
														"valueSize": 1
													},
													{
														"declaration": 1819,
														"isOffset": false,
														"isSlot": false,
														"src": "44508:3:2",
														"valueSize": 1
													},
													{
														"declaration": 1819,
														"isOffset": false,
														"isSlot": false,
														"src": "44571:3:2",
														"valueSize": 1
													},
													{
														"declaration": 1816,
														"isOffset": false,
														"isSlot": false,
														"src": "43962:5:2",
														"valueSize": 1
													}
												],
												"id": 1821,
												"nodeType": "InlineAssembly",
												"src": "42985:1608:2"
											}
										]
									},
									"documentation": {
										"id": 1814,
										"nodeType": "StructuredDocumentation",
										"src": "42800:86:2",
										"text": " @dev Converts a uint256 to its ASCII string decimal representation."
									},
									"id": 1823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_toString",
									"nameLocation": "42900:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "42918:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "42910:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42910:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42909:15:2"
									},
									"returnParameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "42970:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "42956:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1818,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "42956:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42955:19:2"
									},
									"scope": 1832,
									"src": "42891:1708:2",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1830,
										"nodeType": "Block",
										"src": "44714:107:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "44733:82:2",
													"nodeType": "YulBlock",
													"src": "44733:82:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "44754:4:2",
																		"nodeType": "YulLiteral",
																		"src": "44754:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "errorSelector",
																		"nativeSrc": "44760:13:2",
																		"nodeType": "YulIdentifier",
																		"src": "44760:13:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "44747:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "44747:6:2"
																},
																"nativeSrc": "44747:27:2",
																"nodeType": "YulFunctionCall",
																"src": "44747:27:2"
															},
															"nativeSrc": "44747:27:2",
															"nodeType": "YulExpressionStatement",
															"src": "44747:27:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "44794:4:2",
																		"nodeType": "YulLiteral",
																		"src": "44794:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "44800:4:2",
																		"nodeType": "YulLiteral",
																		"src": "44800:4:2",
																		"type": "",
																		"value": "0x04"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "44787:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "44787:6:2"
																},
																"nativeSrc": "44787:18:2",
																"nodeType": "YulFunctionCall",
																"src": "44787:18:2"
															},
															"nativeSrc": "44787:18:2",
															"nodeType": "YulExpressionStatement",
															"src": "44787:18:2"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1826,
														"isOffset": false,
														"isSlot": false,
														"src": "44760:13:2",
														"valueSize": 1
													}
												],
												"id": 1829,
												"nodeType": "InlineAssembly",
												"src": "44724:91:2"
											}
										]
									},
									"documentation": {
										"id": 1824,
										"nodeType": "StructuredDocumentation",
										"src": "44605:51:2",
										"text": " @dev For more efficient reverts."
									},
									"id": 1831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "44670:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "errorSelector",
												"nameLocation": "44685:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "44678:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1825,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "44678:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44677:22:2"
									},
									"returnParameters": {
										"id": 1828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44714:0:2"
									},
									"scope": 1832,
									"src": "44661:160:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1833,
							"src": "2185:42638:2",
							"usedErrors": [
								1838,
								1841,
								1844,
								1847,
								1850,
								1853,
								1856,
								1859,
								1862,
								1865,
								1868,
								1871,
								1874
							],
							"usedEvents": [
								1906,
								1915,
								1924,
								2037
							]
						}
					],
					"src": "1374:43450:2"
				},
				"id": 2
			},
			"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/IERC721A.sol": {
				"ast": {
					"absolutePath": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)/IERC721A.sol",
					"exportedSymbols": {
						"IERC721A": [
							2038
						]
					},
					"id": 2039,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1834,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "1374:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721A",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1835,
								"nodeType": "StructuredDocumentation",
								"src": "1399:37:3",
								"text": " @dev Interface of ERC721A."
							},
							"fullyImplemented": false,
							"id": 2038,
							"linearizedBaseContracts": [
								2038
							],
							"name": "IERC721A",
							"nameLocation": "1447:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1836,
										"nodeType": "StructuredDocumentation",
										"src": "1462:76:3",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "cfb3b942",
									"id": 1838,
									"name": "ApprovalCallerNotOwnerNorApproved",
									"nameLocation": "1549:33:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1582:2:3"
									},
									"src": "1543:42:3"
								},
								{
									"documentation": {
										"id": 1839,
										"nodeType": "StructuredDocumentation",
										"src": "1591:44:3",
										"text": " The token does not exist."
									},
									"errorSelector": "cf4700e4",
									"id": 1841,
									"name": "ApprovalQueryForNonexistentToken",
									"nameLocation": "1646:32:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1678:2:3"
									},
									"src": "1640:41:3"
								},
								{
									"documentation": {
										"id": 1842,
										"nodeType": "StructuredDocumentation",
										"src": "1687:65:3",
										"text": " Cannot query the balance for the zero address."
									},
									"errorSelector": "8f4eb604",
									"id": 1844,
									"name": "BalanceQueryForZeroAddress",
									"nameLocation": "1763:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1789:2:3"
									},
									"src": "1757:35:3"
								},
								{
									"documentation": {
										"id": 1845,
										"nodeType": "StructuredDocumentation",
										"src": "1798:51:3",
										"text": " Cannot mint to the zero address."
									},
									"errorSelector": "2e076300",
									"id": 1847,
									"name": "MintToZeroAddress",
									"nameLocation": "1860:17:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1877:2:3"
									},
									"src": "1854:26:3"
								},
								{
									"documentation": {
										"id": 1848,
										"nodeType": "StructuredDocumentation",
										"src": "1886:72:3",
										"text": " The quantity of tokens minted must be more than zero."
									},
									"errorSelector": "b562e8dd",
									"id": 1850,
									"name": "MintZeroQuantity",
									"nameLocation": "1969:16:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1985:2:3"
									},
									"src": "1963:25:3"
								},
								{
									"documentation": {
										"id": 1851,
										"nodeType": "StructuredDocumentation",
										"src": "1994:44:3",
										"text": " The token does not exist."
									},
									"errorSelector": "df2d9b42",
									"id": 1853,
									"name": "OwnerQueryForNonexistentToken",
									"nameLocation": "2049:29:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2078:2:3"
									},
									"src": "2043:38:3"
								},
								{
									"documentation": {
										"id": 1854,
										"nodeType": "StructuredDocumentation",
										"src": "2087:76:3",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "59c896be",
									"id": 1856,
									"name": "TransferCallerNotOwnerNorApproved",
									"nameLocation": "2174:33:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2207:2:3"
									},
									"src": "2168:42:3"
								},
								{
									"documentation": {
										"id": 1857,
										"nodeType": "StructuredDocumentation",
										"src": "2216:53:3",
										"text": " The token must be owned by `from`."
									},
									"errorSelector": "a1148100",
									"id": 1859,
									"name": "TransferFromIncorrectOwner",
									"nameLocation": "2280:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2306:2:3"
									},
									"src": "2274:35:3"
								},
								{
									"documentation": {
										"id": 1860,
										"nodeType": "StructuredDocumentation",
										"src": "2315:116:3",
										"text": " Cannot safely transfer to a contract that does not implement the\n ERC721Receiver interface."
									},
									"errorSelector": "d1a57ed6",
									"id": 1862,
									"name": "TransferToNonERC721ReceiverImplementer",
									"nameLocation": "2442:38:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2480:2:3"
									},
									"src": "2436:47:3"
								},
								{
									"documentation": {
										"id": 1863,
										"nodeType": "StructuredDocumentation",
										"src": "2489:55:3",
										"text": " Cannot transfer to the zero address."
									},
									"errorSelector": "ea553b34",
									"id": 1865,
									"name": "TransferToZeroAddress",
									"nameLocation": "2555:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2576:2:3"
									},
									"src": "2549:30:3"
								},
								{
									"documentation": {
										"id": 1866,
										"nodeType": "StructuredDocumentation",
										"src": "2585:44:3",
										"text": " The token does not exist."
									},
									"errorSelector": "a14c4b50",
									"id": 1868,
									"name": "URIQueryForNonexistentToken",
									"nameLocation": "2640:27:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:2:3"
									},
									"src": "2634:36:3"
								},
								{
									"documentation": {
										"id": 1869,
										"nodeType": "StructuredDocumentation",
										"src": "2676:79:3",
										"text": " The `quantity` minted with ERC2309 exceeds the safety limit."
									},
									"errorSelector": "3db1f9af",
									"id": 1871,
									"name": "MintERC2309QuantityExceedsLimit",
									"nameLocation": "2766:31:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2797:2:3"
									},
									"src": "2760:40:3"
								},
								{
									"documentation": {
										"id": 1872,
										"nodeType": "StructuredDocumentation",
										"src": "2806:83:3",
										"text": " The `extraData` cannot be set on an unintialized ownership slot."
									},
									"errorSelector": "00d58153",
									"id": 1874,
									"name": "OwnershipNotInitializedForExtraData",
									"nameLocation": "2900:35:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2935:2:3"
									},
									"src": "2894:44:3"
								},
								{
									"canonicalName": "IERC721A.TokenOwnership",
									"id": 1883,
									"members": [
										{
											"constant": false,
											"id": 1876,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "3202:4:3",
											"nodeType": "VariableDeclaration",
											"scope": 1883,
											"src": "3194:12:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1875,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3194:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1878,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "3307:14:3",
											"nodeType": "VariableDeclaration",
											"scope": 1883,
											"src": "3300:21:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1877,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "3300:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1880,
											"mutability": "mutable",
											"name": "burned",
											"nameLocation": "3382:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 1883,
											"src": "3377:11:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1879,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "3377:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1882,
											"mutability": "mutable",
											"name": "extraData",
											"nameLocation": "3493:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 1883,
											"src": "3486:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1881,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "3486:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "3132:14:3",
									"nodeType": "StructDefinition",
									"scope": 2038,
									"src": "3125:384:3",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1884,
										"nodeType": "StructuredDocumentation",
										"src": "3700:192:3",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 1889,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3906:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3917:2:3"
									},
									"returnParameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "3943:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3943:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3942:9:3"
									},
									"scope": 2038,
									"src": "3897:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1890,
										"nodeType": "StructuredDocumentation",
										"src": "4139:341:3",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1897,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "4494:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "4519:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "4512:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1891,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "4512:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4511:20:3"
									},
									"returnParameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "4555:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1894,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4555:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4554:6:3"
									},
									"scope": 2038,
									"src": "4485:76:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1898,
										"nodeType": "StructuredDocumentation",
										"src": "4748:88:3",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1906,
									"name": "Transfer",
									"nameLocation": "4847:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4872:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1906,
												"src": "4856:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4856:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1902,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4894:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1906,
												"src": "4878:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1904,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4914:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1906,
												"src": "4898:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4898:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4855:67:3"
									},
									"src": "4841:82:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1907,
										"nodeType": "StructuredDocumentation",
										"src": "4929:94:3",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1915,
									"name": "Approval",
									"nameLocation": "5034:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1909,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5059:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "5043:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5043:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1911,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "5082:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "5066:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5066:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1913,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5108:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "5092:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5092:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5042:74:3"
									},
									"src": "5028:89:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1916,
										"nodeType": "StructuredDocumentation",
										"src": "5123:124:3",
										"text": " @dev Emitted when `owner` enables or disables\n (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1924,
									"name": "ApprovalForAll",
									"nameLocation": "5258:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5289:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "5273:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5273:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1920,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5312:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "5296:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5296:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1922,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "5327:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "5322:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1921,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5322:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5272:64:3"
									},
									"src": "5252:85:3"
								},
								{
									"documentation": {
										"id": 1925,
										"nodeType": "StructuredDocumentation",
										"src": "5343:74:3",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 1932,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "5431:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1927,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5449:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "5441:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5441:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5440:15:3"
									},
									"returnParameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "5487:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "5479:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5479:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5478:17:3"
									},
									"scope": 2038,
									"src": "5422:74:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1933,
										"nodeType": "StructuredDocumentation",
										"src": "5502:131:3",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1940,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "5647:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5663:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1940,
												"src": "5655:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5655:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5654:17:3"
									},
									"returnParameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5703:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1940,
												"src": "5695:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5695:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5694:15:3"
									},
									"scope": 2038,
									"src": "5638:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1941,
										"nodeType": "StructuredDocumentation",
										"src": "5716:711:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`,\n checking first that contract recipients are aware of the ERC721 protocol\n to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move\n this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1952,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "6441:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6475:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "6467:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6467:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6497:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "6489:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6489:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1947,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6517:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "6509:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6509:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6549:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "6534:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1948,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6534:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6457:102:3"
									},
									"returnParameters": {
										"id": 1951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6576:0:3"
									},
									"scope": 2038,
									"src": "6432:145:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1953,
										"nodeType": "StructuredDocumentation",
										"src": "6583:80:3",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 1962,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "6677:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6711:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "6703:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6703:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "6725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6753:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "6745:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6745:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6693:73:3"
									},
									"returnParameters": {
										"id": 1961,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6783:0:3"
									},
									"scope": 2038,
									"src": "6668:116:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1963,
										"nodeType": "StructuredDocumentation",
										"src": "6790:512:3",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1972,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "7316:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7346:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "7338:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7338:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7368:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "7360:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7360:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7388:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "7380:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7380:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7328:73:3"
									},
									"returnParameters": {
										"id": 1971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7418:0:3"
									},
									"scope": 2038,
									"src": "7307:112:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1973,
										"nodeType": "StructuredDocumentation",
										"src": "7425:459:3",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1980,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "7898:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7914:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "7906:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7906:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7926:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "7918:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7918:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7905:29:3"
									},
									"returnParameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7951:0:3"
									},
									"scope": 2038,
									"src": "7889:63:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1981,
										"nodeType": "StructuredDocumentation",
										"src": "7958:316:3",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1988,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "8288:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8314:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "8306:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8306:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "8329:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "8324:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1984,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8324:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8305:34:3"
									},
									"returnParameters": {
										"id": 1987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8348:0:3"
									},
									"scope": 2038,
									"src": "8279:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1989,
										"nodeType": "StructuredDocumentation",
										"src": "8355:139:3",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1996,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "8508:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8528:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "8520:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8520:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8519:17:3"
									},
									"returnParameters": {
										"id": 1995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8568:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "8560:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8560:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8559:18:3"
									},
									"scope": 2038,
									"src": "8499:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1997,
										"nodeType": "StructuredDocumentation",
										"src": "8584:139:3",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 2006,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "8737:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8762:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "8754:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8754:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8777:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "8769:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8769:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8753:33:3"
									},
									"returnParameters": {
										"id": 2005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2004,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "8810:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2003,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8810:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8809:6:3"
									},
									"scope": 2038,
									"src": "8728:88:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2007,
										"nodeType": "StructuredDocumentation",
										"src": "9007:58:3",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 2012,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "9079:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9083:2:3"
									},
									"returnParameters": {
										"id": 2011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "9109:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2009,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9109:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9108:15:3"
									},
									"scope": 2038,
									"src": "9070:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2013,
										"nodeType": "StructuredDocumentation",
										"src": "9130:60:3",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 2018,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "9204:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9210:2:3"
									},
									"returnParameters": {
										"id": 2017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "9236:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2015,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9236:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9235:15:3"
									},
									"scope": 2038,
									"src": "9195:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2019,
										"nodeType": "StructuredDocumentation",
										"src": "9257:90:3",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 2026,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "9361:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9378:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 2026,
												"src": "9370:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9370:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9369:17:3"
									},
									"returnParameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2026,
												"src": "9410:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2023,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9410:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9409:15:3"
									},
									"scope": 2038,
									"src": "9352:73:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2027,
										"nodeType": "StructuredDocumentation",
										"src": "9612:267:3",
										"text": " @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n (inclusive) is transferred from `from` to `to`, as defined in the\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n See {_mintERC2309} for more details."
									},
									"eventSelector": "deaa91b6123d068f5821d0fb0678463d1a8a6079fe8af5de3ce5e896dcf9133d",
									"id": 2037,
									"name": "ConsecutiveTransfer",
									"nameLocation": "9890:19:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2029,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromTokenId",
												"nameLocation": "9926:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "9910:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9910:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2031,
												"indexed": false,
												"mutability": "mutable",
												"name": "toTokenId",
												"nameLocation": "9947:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "9939:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9939:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2033,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9974:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "9958:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9958:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2035,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9996:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "9980:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9980:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9909:90:3"
									},
									"src": "9884:116:3"
								}
							],
							"scope": 2039,
							"src": "1437:8565:3",
							"usedErrors": [
								1838,
								1841,
								1844,
								1847,
								1850,
								1853,
								1856,
								1859,
								1862,
								1865,
								1868,
								1871,
								1874
							],
							"usedEvents": [
								1906,
								1915,
								1924,
								2037
							]
						}
					],
					"src": "1374:8629:3"
				},
				"id": 3
			}
		}
	}
}