{
	"id": "c5ac2d93e904132439d0aa7c0c11f2df",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.27",
	"solcLongVersion": "0.8.27+commit.40a35a09",
	"input": {
		"language": "Solidity",
		"sources": {
			"Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/ERC721ABurnable.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/Azuki-ERC721A-ERC721ABurnable?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.3\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport './IERC721ABurnable.sol';\nimport '../ERC721A.sol';\n\n/**\n * @title ERC721ABurnable.\n *\n * @dev ERC721A token that can be irreversibly burned (destroyed).\n */\nabstract contract ERC721ABurnable is ERC721A, IERC721ABurnable {\n    /**\n     * @dev Burns `tokenId`. See {ERC721A-_burn}.\n     *\n     * Requirements:\n     *\n     * - The caller must own `tokenId` or be an approved operator.\n     */\n    function burn(uint256 tokenId) public virtual override {\n        _burn(tokenId, true);\n    }\n}\n"
			},
			"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/Azuki-ERC721A-ERC721ABurnable?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.3\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport './IERC721A.sol';\n\n/**\n * @dev Interface of ERC721 token receiver.\n */\ninterface ERC721A__IERC721Receiver {\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n\n/**\n * @title ERC721A\n *\n * @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n * Non-Fungible Token Standard, including the Metadata extension.\n * Optimized for lower gas during batch mints.\n *\n * Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n * starting from `_startTokenId()`.\n *\n * Assumptions:\n *\n * - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n * - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\n */\ncontract ERC721A is IERC721A {\n    // Bypass for a `--via-ir` bug (https://github.com/chiru-labs/ERC721A/pull/364).\n    struct TokenApprovalRef {\n        address value;\n    }\n\n    // =============================================================\n    //                           CONSTANTS\n    // =============================================================\n\n    // Mask of an entry in packed address data.\n    uint256 private constant _BITMASK_ADDRESS_DATA_ENTRY = (1 << 64) - 1;\n\n    // The bit position of `numberMinted` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_MINTED = 64;\n\n    // The bit position of `numberBurned` in packed address data.\n    uint256 private constant _BITPOS_NUMBER_BURNED = 128;\n\n    // The bit position of `aux` in packed address data.\n    uint256 private constant _BITPOS_AUX = 192;\n\n    // Mask of all 256 bits in packed address data except the 64 bits for `aux`.\n    uint256 private constant _BITMASK_AUX_COMPLEMENT = (1 << 192) - 1;\n\n    // The bit position of `startTimestamp` in packed ownership.\n    uint256 private constant _BITPOS_START_TIMESTAMP = 160;\n\n    // The bit mask of the `burned` bit in packed ownership.\n    uint256 private constant _BITMASK_BURNED = 1 << 224;\n\n    // The bit position of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITPOS_NEXT_INITIALIZED = 225;\n\n    // The bit mask of the `nextInitialized` bit in packed ownership.\n    uint256 private constant _BITMASK_NEXT_INITIALIZED = 1 << 225;\n\n    // The bit position of `extraData` in packed ownership.\n    uint256 private constant _BITPOS_EXTRA_DATA = 232;\n\n    // Mask of all 256 bits in a packed ownership except the 24 bits for `extraData`.\n    uint256 private constant _BITMASK_EXTRA_DATA_COMPLEMENT = (1 << 232) - 1;\n\n    // The mask of the lower 160 bits for addresses.\n    uint256 private constant _BITMASK_ADDRESS = (1 << 160) - 1;\n\n    // The maximum `quantity` that can be minted with {_mintERC2309}.\n    // This limit is to prevent overflows on the address data entries.\n    // For a limit of 5000, a total of 3.689e15 calls to {_mintERC2309}\n    // is required to cause an overflow, which is unrealistic.\n    uint256 private constant _MAX_MINT_ERC2309_QUANTITY_LIMIT = 5000;\n\n    // The `Transfer` event signature is given by:\n    // `keccak256(bytes(\"Transfer(address,address,uint256)\"))`.\n    bytes32 private constant _TRANSFER_EVENT_SIGNATURE =\n        0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef;\n\n    // =============================================================\n    //                            STORAGE\n    // =============================================================\n\n    // The next token ID to be minted.\n    uint256 private _currentIndex;\n\n    // The number of tokens burned.\n    uint256 private _burnCounter;\n\n    // Token name\n    string private _name;\n\n    // Token symbol\n    string private _symbol;\n\n    // Mapping from token ID to ownership details\n    // An empty struct value does not necessarily mean the token is unowned.\n    // See {_packedOwnershipOf} implementation for details.\n    //\n    // Bits Layout:\n    // - [0..159]   `addr`\n    // - [160..223] `startTimestamp`\n    // - [224]      `burned`\n    // - [225]      `nextInitialized`\n    // - [232..255] `extraData`\n    mapping(uint256 => uint256) private _packedOwnerships;\n\n    // Mapping owner address to address data.\n    //\n    // Bits Layout:\n    // - [0..63]    `balance`\n    // - [64..127]  `numberMinted`\n    // - [128..191] `numberBurned`\n    // - [192..255] `aux`\n    mapping(address => uint256) private _packedAddressData;\n\n    // Mapping from token ID to approved address.\n    mapping(uint256 => TokenApprovalRef) private _tokenApprovals;\n\n    // Mapping from owner to operator approvals\n    mapping(address => mapping(address => bool)) private _operatorApprovals;\n\n    // =============================================================\n    //                          CONSTRUCTOR\n    // =============================================================\n\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n        _currentIndex = _startTokenId();\n    }\n\n    // =============================================================\n    //                   TOKEN COUNTING OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the starting token ID.\n     * To change the starting token ID, please override this function.\n     */\n    function _startTokenId() internal view virtual returns (uint256) {\n        return 0;\n    }\n\n    /**\n     * @dev Returns the next token ID to be minted.\n     */\n    function _nextTokenId() internal view virtual returns (uint256) {\n        return _currentIndex;\n    }\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        // Counter underflow is impossible as _burnCounter cannot be incremented\n        // more than `_currentIndex - _startTokenId()` times.\n        unchecked {\n            return _currentIndex - _burnCounter - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev Returns the total amount of tokens minted in the contract.\n     */\n    function _totalMinted() internal view virtual returns (uint256) {\n        // Counter underflow is impossible as `_currentIndex` does not decrement,\n        // and it is initialized to `_startTokenId()`.\n        unchecked {\n            return _currentIndex - _startTokenId();\n        }\n    }\n\n    /**\n     * @dev Returns the total number of tokens burned.\n     */\n    function _totalBurned() internal view virtual returns (uint256) {\n        return _burnCounter;\n    }\n\n    // =============================================================\n    //                    ADDRESS DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) public view virtual override returns (uint256) {\n        if (owner == address(0)) _revert(BalanceQueryForZeroAddress.selector);\n        return _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens minted by `owner`.\n     */\n    function _numberMinted(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_MINTED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the number of tokens burned by or on behalf of `owner`.\n     */\n    function _numberBurned(address owner) internal view returns (uint256) {\n        return (_packedAddressData[owner] >> _BITPOS_NUMBER_BURNED) & _BITMASK_ADDRESS_DATA_ENTRY;\n    }\n\n    /**\n     * Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     */\n    function _getAux(address owner) internal view returns (uint64) {\n        return uint64(_packedAddressData[owner] >> _BITPOS_AUX);\n    }\n\n    /**\n     * Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n     * If there are multiple variables, please pack them into a uint64.\n     */\n    function _setAux(address owner, uint64 aux) internal virtual {\n        uint256 packed = _packedAddressData[owner];\n        uint256 auxCasted;\n        // Cast `aux` with assembly to avoid redundant masking.\n        assembly {\n            auxCasted := aux\n        }\n        packed = (packed & _BITMASK_AUX_COMPLEMENT) | (auxCasted << _BITPOS_AUX);\n        _packedAddressData[owner] = packed;\n    }\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        // The interface IDs are constants representing the first 4 bytes\n        // of the XOR of all function selectors in the interface.\n        // See: [ERC165](https://eips.ethereum.org/EIPS/eip-165)\n        // (e.g. `bytes4(i.functionA.selector ^ i.functionB.selector ^ ...)`)\n        return\n            interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.\n            interfaceId == 0x80ac58cd || // ERC165 interface ID for ERC721.\n            interfaceId == 0x5b5e139f; // ERC165 interface ID for ERC721Metadata.\n    }\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {\n        if (!_exists(tokenId)) _revert(URIQueryForNonexistentToken.selector);\n\n        string memory baseURI = _baseURI();\n        return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '';\n    }\n\n    /**\n     * @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n     * token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n     * by default, it can be overridden in child contracts.\n     */\n    function _baseURI() internal view virtual returns (string memory) {\n        return '';\n    }\n\n    // =============================================================\n    //                     OWNERSHIPS OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) public view virtual override returns (address) {\n        return address(uint160(_packedOwnershipOf(tokenId)));\n    }\n\n    /**\n     * @dev Gas spent here starts off proportional to the maximum mint batch size.\n     * It gradually moves to O(1) as tokens get transferred around over time.\n     */\n    function _ownershipOf(uint256 tokenId) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnershipOf(tokenId));\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct at `index`.\n     */\n    function _ownershipAt(uint256 index) internal view virtual returns (TokenOwnership memory) {\n        return _unpackedOwnership(_packedOwnerships[index]);\n    }\n\n    /**\n     * @dev Returns whether the ownership slot at `index` is initialized.\n     * An uninitialized slot does not necessarily mean that the slot has no owner.\n     */\n    function _ownershipIsInitialized(uint256 index) internal view virtual returns (bool) {\n        return _packedOwnerships[index] != 0;\n    }\n\n    /**\n     * @dev Initializes the ownership slot minted at `index` for efficiency purposes.\n     */\n    function _initializeOwnershipAt(uint256 index) internal virtual {\n        if (_packedOwnerships[index] == 0) {\n            _packedOwnerships[index] = _packedOwnershipOf(index);\n        }\n    }\n\n    /**\n     * Returns the packed ownership data of `tokenId`.\n     */\n    function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {\n        if (_startTokenId() <= tokenId) {\n            packed = _packedOwnerships[tokenId];\n            // If the data at the starting slot does not exist, start the scan.\n            if (packed == 0) {\n                if (tokenId >= _currentIndex) _revert(OwnerQueryForNonexistentToken.selector);\n                // Invariant:\n                // There will always be an initialized ownership slot\n                // (i.e. `ownership.addr != address(0) && ownership.burned == false`)\n                // before an unintialized ownership slot\n                // (i.e. `ownership.addr == address(0) && ownership.burned == false`)\n                // Hence, `tokenId` will not underflow.\n                //\n                // We can directly compare the packed value.\n                // If the address is zero, packed will be zero.\n                for (;;) {\n                    unchecked {\n                        packed = _packedOwnerships[--tokenId];\n                    }\n                    if (packed == 0) continue;\n                    if (packed & _BITMASK_BURNED == 0) return packed;\n                    // Otherwise, the token is burned, and we must revert.\n                    // This handles the case of batch burned tokens, where only the burned bit\n                    // of the starting slot is set, and remaining slots are left uninitialized.\n                    _revert(OwnerQueryForNonexistentToken.selector);\n                }\n            }\n            // Otherwise, the data exists and we can skip the scan.\n            // This is possible because we have already achieved the target condition.\n            // This saves 2143 gas on transfers of initialized tokens.\n            // If the token is not burned, return `packed`. Otherwise, revert.\n            if (packed & _BITMASK_BURNED == 0) return packed;\n        }\n        _revert(OwnerQueryForNonexistentToken.selector);\n    }\n\n    /**\n     * @dev Returns the unpacked `TokenOwnership` struct from `packed`.\n     */\n    function _unpackedOwnership(uint256 packed) private pure returns (TokenOwnership memory ownership) {\n        ownership.addr = address(uint160(packed));\n        ownership.startTimestamp = uint64(packed >> _BITPOS_START_TIMESTAMP);\n        ownership.burned = packed & _BITMASK_BURNED != 0;\n        ownership.extraData = uint24(packed >> _BITPOS_EXTRA_DATA);\n    }\n\n    /**\n     * @dev Packs ownership data into a single uint256.\n     */\n    function _packOwnershipData(address owner, uint256 flags) private view returns (uint256 result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // `owner | (block.timestamp << _BITPOS_START_TIMESTAMP) | flags`.\n            result := or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags))\n        }\n    }\n\n    /**\n     * @dev Returns the `nextInitialized` flag set if `quantity` equals 1.\n     */\n    function _nextInitializedFlag(uint256 quantity) private pure returns (uint256 result) {\n        // For branchless setting of the `nextInitialized` flag.\n        assembly {\n            // `(quantity == 1) << _BITPOS_NEXT_INITIALIZED`.\n            result := shl(_BITPOS_NEXT_INITIALIZED, eq(quantity, 1))\n        }\n    }\n\n    // =============================================================\n    //                      APPROVAL OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     */\n    function approve(address to, uint256 tokenId) public payable virtual override {\n        _approve(to, tokenId, true);\n    }\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) public view virtual override returns (address) {\n        if (!_exists(tokenId)) _revert(ApprovalQueryForNonexistentToken.selector);\n\n        return _tokenApprovals[tokenId].value;\n    }\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) public virtual override {\n        _operatorApprovals[_msgSenderERC721A()][operator] = approved;\n        emit ApprovalForAll(_msgSenderERC721A(), operator, approved);\n    }\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {\n        return _operatorApprovals[owner][operator];\n    }\n\n    /**\n     * @dev Returns whether `tokenId` exists.\n     *\n     * Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n     *\n     * Tokens start existing when they are minted. See {_mint}.\n     */\n    function _exists(uint256 tokenId) internal view virtual returns (bool result) {\n        if (_startTokenId() <= tokenId) {\n            if (tokenId < _currentIndex) {\n                uint256 packed;\n                while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId;\n                result = packed & _BITMASK_BURNED == 0;\n            }\n        }\n    }\n\n    /**\n     * @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`.\n     */\n    function _isSenderApprovedOrOwner(\n        address approvedAddress,\n        address owner,\n        address msgSender\n    ) private pure returns (bool result) {\n        assembly {\n            // Mask `owner` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            owner := and(owner, _BITMASK_ADDRESS)\n            // Mask `msgSender` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            msgSender := and(msgSender, _BITMASK_ADDRESS)\n            // `msgSender == owner || msgSender == approvedAddress`.\n            result := or(eq(msgSender, owner), eq(msgSender, approvedAddress))\n        }\n    }\n\n    /**\n     * @dev Returns the storage slot and value for the approved address of `tokenId`.\n     */\n    function _getApprovedSlotAndAddress(uint256 tokenId)\n        private\n        view\n        returns (uint256 approvedAddressSlot, address approvedAddress)\n    {\n        TokenApprovalRef storage tokenApproval = _tokenApprovals[tokenId];\n        // The following is equivalent to `approvedAddress = _tokenApprovals[tokenId].value`.\n        assembly {\n            approvedAddressSlot := tokenApproval.slot\n            approvedAddress := sload(approvedAddressSlot)\n        }\n    }\n\n    // =============================================================\n    //                      TRANSFER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        // Mask `from` to the lower 160 bits, in case the upper bits somehow aren't clean.\n        from = address(uint160(uint256(uint160(from)) & _BITMASK_ADDRESS));\n\n        if (address(uint160(prevOwnershipPacked)) != from) _revert(TransferFromIncorrectOwner.selector);\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        // The nested ifs save around 20+ gas over a compound boolean condition.\n        if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n            if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector);\n\n        _beforeTokenTransfers(from, to, tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // We can directly increment and decrement the balances.\n            --_packedAddressData[from]; // Updates: `balance -= 1`.\n            ++_packedAddressData[to]; // Updates: `balance += 1`.\n\n            // Updates:\n            // - `address` to the next owner.\n            // - `startTimestamp` to the timestamp of transfering.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                to,\n                _BITMASK_NEXT_INITIALIZED | _nextExtraData(from, to, prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n        uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\n        assembly {\n            // Emit the `Transfer` event.\n            log4(\n                0, // Start of data (0, since no data).\n                0, // End of data (0, since no data).\n                _TRANSFER_EVENT_SIGNATURE, // Signature.\n                from, // `from`.\n                toMasked, // `to`.\n                tokenId // `tokenId`.\n            )\n        }\n        if (toMasked == 0) _revert(TransferToZeroAddress.selector);\n\n        _afterTokenTransfers(from, to, tokenId, 1);\n    }\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) public payable virtual override {\n        safeTransferFrom(from, to, tokenId, '');\n    }\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) public payable virtual override {\n        transferFrom(from, to, tokenId);\n        if (to.code.length != 0)\n            if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {\n                _revert(TransferToNonERC721ReceiverImplementer.selector);\n            }\n    }\n\n    /**\n     * @dev Hook that is called before a set of serially-ordered token IDs\n     * are about to be transferred. This includes minting.\n     * And also called before burning one token.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _beforeTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after a set of serially-ordered token IDs\n     * have been transferred. This includes minting.\n     * And also called after one token has been burned.\n     *\n     * `startTokenId` - the first token ID to be transferred.\n     * `quantity` - the amount to be transferred.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` has been minted for `to`.\n     * - When `to` is zero, `tokenId` has been burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _afterTokenTransfers(\n        address from,\n        address to,\n        uint256 startTokenId,\n        uint256 quantity\n    ) internal virtual {}\n\n    /**\n     * @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n     *\n     * `from` - Previous owner of the given token ID.\n     * `to` - Target address that will receive the token.\n     * `tokenId` - Token ID to be transferred.\n     * `_data` - Optional data to send along with the call.\n     *\n     * Returns whether the call correctly returned the expected magic value.\n     */\n    function _checkContractOnERC721Received(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes memory _data\n    ) private returns (bool) {\n        try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (\n            bytes4 retval\n        ) {\n            return retval == ERC721A__IERC721Receiver(to).onERC721Received.selector;\n        } catch (bytes memory reason) {\n            if (reason.length == 0) {\n                _revert(TransferToNonERC721ReceiverImplementer.selector);\n            }\n            assembly {\n                revert(add(32, reason), mload(reason))\n            }\n        }\n    }\n\n    // =============================================================\n    //                        MINT OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _mint(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (quantity == 0) _revert(MintZeroQuantity.selector);\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are incredibly unrealistic.\n        // `balance` and `numberMinted` have a maximum limit of 2**64.\n        // `tokenId` has a maximum limit of 2**256.\n        unchecked {\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Mask `to` to the lower 160 bits, in case the upper bits somehow aren't clean.\n            uint256 toMasked = uint256(uint160(to)) & _BITMASK_ADDRESS;\n\n            if (toMasked == 0) _revert(MintToZeroAddress.selector);\n\n            uint256 end = startTokenId + quantity;\n            uint256 tokenId = startTokenId;\n\n            do {\n                assembly {\n                    // Emit the `Transfer` event.\n                    log4(\n                        0, // Start of data (0, since no data).\n                        0, // End of data (0, since no data).\n                        _TRANSFER_EVENT_SIGNATURE, // Signature.\n                        0, // `address(0)`.\n                        toMasked, // `to`.\n                        tokenId // `tokenId`.\n                    )\n                }\n                // The `!=` check ensures that large values of `quantity`\n                // that overflows uint256 will make the loop run out of gas.\n            } while (++tokenId != end);\n\n            _currentIndex = end;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Mints `quantity` tokens and transfers them to `to`.\n     *\n     * This function is intended for efficient minting only during contract creation.\n     *\n     * It emits only one {ConsecutiveTransfer} as defined in\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n     * instead of a sequence of {Transfer} event(s).\n     *\n     * Calling this function outside of contract creation WILL make your contract\n     * non-compliant with the ERC721 standard.\n     * For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n     * {ConsecutiveTransfer} event is only permissible during contract creation.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - `quantity` must be greater than 0.\n     *\n     * Emits a {ConsecutiveTransfer} event.\n     */\n    function _mintERC2309(address to, uint256 quantity) internal virtual {\n        uint256 startTokenId = _currentIndex;\n        if (to == address(0)) _revert(MintToZeroAddress.selector);\n        if (quantity == 0) _revert(MintZeroQuantity.selector);\n        if (quantity > _MAX_MINT_ERC2309_QUANTITY_LIMIT) _revert(MintERC2309QuantityExceedsLimit.selector);\n\n        _beforeTokenTransfers(address(0), to, startTokenId, quantity);\n\n        // Overflows are unrealistic due to the above check for `quantity` to be below the limit.\n        unchecked {\n            // Updates:\n            // - `balance += quantity`.\n            // - `numberMinted += quantity`.\n            //\n            // We can directly add to the `balance` and `numberMinted`.\n            _packedAddressData[to] += quantity * ((1 << _BITPOS_NUMBER_MINTED) | 1);\n\n            // Updates:\n            // - `address` to the owner.\n            // - `startTimestamp` to the timestamp of minting.\n            // - `burned` to `false`.\n            // - `nextInitialized` to `quantity == 1`.\n            _packedOwnerships[startTokenId] = _packOwnershipData(\n                to,\n                _nextInitializedFlag(quantity) | _nextExtraData(address(0), to, 0)\n            );\n\n            emit ConsecutiveTransfer(startTokenId, startTokenId + quantity - 1, address(0), to);\n\n            _currentIndex = startTokenId + quantity;\n        }\n        _afterTokenTransfers(address(0), to, startTokenId, quantity);\n    }\n\n    /**\n     * @dev Safely mints `quantity` tokens and transfers them to `to`.\n     *\n     * Requirements:\n     *\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n     * - `quantity` must be greater than 0.\n     *\n     * See {_mint}.\n     *\n     * Emits a {Transfer} event for each mint.\n     */\n    function _safeMint(\n        address to,\n        uint256 quantity,\n        bytes memory _data\n    ) internal virtual {\n        _mint(to, quantity);\n\n        unchecked {\n            if (to.code.length != 0) {\n                uint256 end = _currentIndex;\n                uint256 index = end - quantity;\n                do {\n                    if (!_checkContractOnERC721Received(address(0), to, index++, _data)) {\n                        _revert(TransferToNonERC721ReceiverImplementer.selector);\n                    }\n                } while (index < end);\n                // Reentrancy protection.\n                if (_currentIndex != end) _revert(bytes4(0));\n            }\n        }\n    }\n\n    /**\n     * @dev Equivalent to `_safeMint(to, quantity, '')`.\n     */\n    function _safeMint(address to, uint256 quantity) internal virtual {\n        _safeMint(to, quantity, '');\n    }\n\n    // =============================================================\n    //                       APPROVAL OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Equivalent to `_approve(to, tokenId, false)`.\n     */\n    function _approve(address to, uint256 tokenId) internal virtual {\n        _approve(to, tokenId, false);\n    }\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function _approve(\n        address to,\n        uint256 tokenId,\n        bool approvalCheck\n    ) internal virtual {\n        address owner = ownerOf(tokenId);\n\n        if (approvalCheck && _msgSenderERC721A() != owner)\n            if (!isApprovedForAll(owner, _msgSenderERC721A())) {\n                _revert(ApprovalCallerNotOwnerNorApproved.selector);\n            }\n\n        _tokenApprovals[tokenId].value = to;\n        emit Approval(owner, to, tokenId);\n    }\n\n    // =============================================================\n    //                        BURN OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Equivalent to `_burn(tokenId, false)`.\n     */\n    function _burn(uint256 tokenId) internal virtual {\n        _burn(tokenId, false);\n    }\n\n    /**\n     * @dev Destroys `tokenId`.\n     * The approval is cleared when the token is burned.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _burn(uint256 tokenId, bool approvalCheck) internal virtual {\n        uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId);\n\n        address from = address(uint160(prevOwnershipPacked));\n\n        (uint256 approvedAddressSlot, address approvedAddress) = _getApprovedSlotAndAddress(tokenId);\n\n        if (approvalCheck) {\n            // The nested ifs save around 20+ gas over a compound boolean condition.\n            if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))\n                if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector);\n        }\n\n        _beforeTokenTransfers(from, address(0), tokenId, 1);\n\n        // Clear approvals from the previous owner.\n        assembly {\n            if approvedAddress {\n                // This is equivalent to `delete _tokenApprovals[tokenId]`.\n                sstore(approvedAddressSlot, 0)\n            }\n        }\n\n        // Underflow of the sender's balance is impossible because we check for\n        // ownership above and the recipient's balance can't realistically overflow.\n        // Counter overflow is incredibly unrealistic as `tokenId` would have to be 2**256.\n        unchecked {\n            // Updates:\n            // - `balance -= 1`.\n            // - `numberBurned += 1`.\n            //\n            // We can directly decrement the balance, and increment the number burned.\n            // This is equivalent to `packed -= 1; packed += 1 << _BITPOS_NUMBER_BURNED;`.\n            _packedAddressData[from] += (1 << _BITPOS_NUMBER_BURNED) - 1;\n\n            // Updates:\n            // - `address` to the last owner.\n            // - `startTimestamp` to the timestamp of burning.\n            // - `burned` to `true`.\n            // - `nextInitialized` to `true`.\n            _packedOwnerships[tokenId] = _packOwnershipData(\n                from,\n                (_BITMASK_BURNED | _BITMASK_NEXT_INITIALIZED) | _nextExtraData(from, address(0), prevOwnershipPacked)\n            );\n\n            // If the next slot may not have been initialized (i.e. `nextInitialized == false`) .\n            if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {\n                uint256 nextTokenId = tokenId + 1;\n                // If the next slot's address is zero and not burned (i.e. packed value is zero).\n                if (_packedOwnerships[nextTokenId] == 0) {\n                    // If the next slot is within bounds.\n                    if (nextTokenId != _currentIndex) {\n                        // Initialize the next slot to maintain correctness for `ownerOf(tokenId + 1)`.\n                        _packedOwnerships[nextTokenId] = prevOwnershipPacked;\n                    }\n                }\n            }\n        }\n\n        emit Transfer(from, address(0), tokenId);\n        _afterTokenTransfers(from, address(0), tokenId, 1);\n\n        // Overflow not possible, as _burnCounter cannot be exceed _currentIndex times.\n        unchecked {\n            _burnCounter++;\n        }\n    }\n\n    // =============================================================\n    //                     EXTRA DATA OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Directly sets the extra data for the ownership data `index`.\n     */\n    function _setExtraDataAt(uint256 index, uint24 extraData) internal virtual {\n        uint256 packed = _packedOwnerships[index];\n        if (packed == 0) _revert(OwnershipNotInitializedForExtraData.selector);\n        uint256 extraDataCasted;\n        // Cast `extraData` with assembly to avoid redundant masking.\n        assembly {\n            extraDataCasted := extraData\n        }\n        packed = (packed & _BITMASK_EXTRA_DATA_COMPLEMENT) | (extraDataCasted << _BITPOS_EXTRA_DATA);\n        _packedOwnerships[index] = packed;\n    }\n\n    /**\n     * @dev Called during each token transfer to set the 24bit `extraData` field.\n     * Intended to be overridden by the cosumer contract.\n     *\n     * `previousExtraData` - the value of `extraData` before transfer.\n     *\n     * Calling conditions:\n     *\n     * - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n     * transferred to `to`.\n     * - When `from` is zero, `tokenId` will be minted for `to`.\n     * - When `to` is zero, `tokenId` will be burned by `from`.\n     * - `from` and `to` are never both zero.\n     */\n    function _extraData(\n        address from,\n        address to,\n        uint24 previousExtraData\n    ) internal view virtual returns (uint24) {}\n\n    /**\n     * @dev Returns the next extra data for the packed ownership data.\n     * The returned result is shifted into position.\n     */\n    function _nextExtraData(\n        address from,\n        address to,\n        uint256 prevOwnershipPacked\n    ) private view returns (uint256) {\n        uint24 extraData = uint24(prevOwnershipPacked >> _BITPOS_EXTRA_DATA);\n        return uint256(_extraData(from, to, extraData)) << _BITPOS_EXTRA_DATA;\n    }\n\n    // =============================================================\n    //                       OTHER OPERATIONS\n    // =============================================================\n\n    /**\n     * @dev Returns the message sender (defaults to `msg.sender`).\n     *\n     * If you are writing GSN compatible contracts, you need to override this function.\n     */\n    function _msgSenderERC721A() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    /**\n     * @dev Converts a uint256 to its ASCII string decimal representation.\n     */\n    function _toString(uint256 value) internal pure virtual returns (string memory str) {\n        assembly {\n            // The maximum value of a uint256 contains 78 digits (1 byte per digit), but\n            // we allocate 0xa0 bytes to keep the free memory pointer 32-byte word aligned.\n            // We will need 1 word for the trailing zeros padding, 1 word for the length,\n            // and 3 words for a maximum of 78 digits. Total: 5 * 0x20 = 0xa0.\n            let m := add(mload(0x40), 0xa0)\n            // Update the free memory pointer to allocate.\n            mstore(0x40, m)\n            // Assign the `str` to the end.\n            str := sub(m, 0x20)\n            // Zeroize the slot after the string.\n            mstore(str, 0)\n\n            // Cache the end of the memory to calculate the length later.\n            let end := str\n\n            // We write the string from rightmost digit to leftmost digit.\n            // The following is essentially a do-while loop that also handles the zero case.\n            // prettier-ignore\n            for { let temp := value } 1 {} {\n                str := sub(str, 1)\n                // Write the character to the pointer.\n                // The ASCII index of the '0' character is 48.\n                mstore8(str, add(48, mod(temp, 10)))\n                // Keep dividing `temp` until zero.\n                temp := div(temp, 10)\n                // prettier-ignore\n                if iszero(temp) { break }\n            }\n\n            let length := sub(end, str)\n            // Move the pointer 32 bytes leftwards to make room for the length.\n            str := sub(str, 0x20)\n            // Store the length.\n            mstore(str, length)\n        }\n    }\n\n    /**\n     * @dev For more efficient reverts.\n     */\n    function _revert(bytes4 errorSelector) internal pure {\n        assembly {\n            mstore(0x00, errorSelector)\n            revert(0x00, 0x04)\n        }\n    }\n}\n"
			},
			"Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/IERC721ABurnable.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/Azuki-ERC721A-ERC721ABurnable?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.3\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\nimport '../IERC721A.sol';\n\n/**\n * @dev Interface of ERC721ABurnable.\n */\ninterface IERC721ABurnable is IERC721A {\n    /**\n     * @dev Burns `tokenId`. See {ERC721A-_burn}.\n     *\n     * Requirements:\n     *\n     * - The caller must own `tokenId` or be an approved operator.\n     */\n    function burn(uint256 tokenId) external;\n}\n"
			},
			"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/IERC721A.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/Azuki-ERC721A-ERC721ABurnable?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// ERC721A Contracts v4.2.3\n// Creator: Chiru Labs\n\npragma solidity ^0.8.4;\n\n/**\n * @dev Interface of ERC721A.\n */\ninterface IERC721A {\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error ApprovalCallerNotOwnerNorApproved();\n\n    /**\n     * The token does not exist.\n     */\n    error ApprovalQueryForNonexistentToken();\n\n    /**\n     * Cannot query the balance for the zero address.\n     */\n    error BalanceQueryForZeroAddress();\n\n    /**\n     * Cannot mint to the zero address.\n     */\n    error MintToZeroAddress();\n\n    /**\n     * The quantity of tokens minted must be more than zero.\n     */\n    error MintZeroQuantity();\n\n    /**\n     * The token does not exist.\n     */\n    error OwnerQueryForNonexistentToken();\n\n    /**\n     * The caller must own the token or be an approved operator.\n     */\n    error TransferCallerNotOwnerNorApproved();\n\n    /**\n     * The token must be owned by `from`.\n     */\n    error TransferFromIncorrectOwner();\n\n    /**\n     * Cannot safely transfer to a contract that does not implement the\n     * ERC721Receiver interface.\n     */\n    error TransferToNonERC721ReceiverImplementer();\n\n    /**\n     * Cannot transfer to the zero address.\n     */\n    error TransferToZeroAddress();\n\n    /**\n     * The token does not exist.\n     */\n    error URIQueryForNonexistentToken();\n\n    /**\n     * The `quantity` minted with ERC2309 exceeds the safety limit.\n     */\n    error MintERC2309QuantityExceedsLimit();\n\n    /**\n     * The `extraData` cannot be set on an unintialized ownership slot.\n     */\n    error OwnershipNotInitializedForExtraData();\n\n    // =============================================================\n    //                            STRUCTS\n    // =============================================================\n\n    struct TokenOwnership {\n        // The address of the owner.\n        address addr;\n        // Stores the start time of ownership with minimal overhead for tokenomics.\n        uint64 startTimestamp;\n        // Whether the token has been burned.\n        bool burned;\n        // Arbitrary data similar to `startTimestamp` that can be set via {_extraData}.\n        uint24 extraData;\n    }\n\n    // =============================================================\n    //                         TOKEN COUNTERS\n    // =============================================================\n\n    /**\n     * @dev Returns the total number of tokens in existence.\n     * Burned tokens will reduce the count.\n     * To get the total number of tokens minted, please see {_totalMinted}.\n     */\n    function totalSupply() external view returns (uint256);\n\n    // =============================================================\n    //                            IERC165\n    // =============================================================\n\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n\n    // =============================================================\n    //                            IERC721\n    // =============================================================\n\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables\n     * (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in `owner`'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`,\n     * checking first that contract recipients are aware of the ERC721 protocol\n     * to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move\n     * this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement\n     * {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external payable;\n\n    /**\n     * @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Transfers `tokenId` from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n     * whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token\n     * by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external payable;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the\n     * zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external payable;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom}\n     * for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    // =============================================================\n    //                        IERC721Metadata\n    // =============================================================\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n\n    // =============================================================\n    //                           IERC2309\n    // =============================================================\n\n    /**\n     * @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n     * (inclusive) is transferred from `from` to `to`, as defined in the\n     * [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n     *\n     * See {_mintERC2309} for more details.\n     */\n    event ConsecutiveTransfer(uint256 indexed fromTokenId, uint256 toTokenId, address indexed from, address indexed to);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 5000000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "istanbul"
		}
	},
	"output": {
		"contracts": {
			"Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/ERC721ABurnable.sol": {
				"ERC721ABurnable": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC721A token that can be irreversibly burned (destroyed).",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC721ABurnable.",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC721A token that can be irreversibly burned (destroyed).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721ABurnable.\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/ERC721ABurnable.sol\":\"ERC721ABurnable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/ERC721ABurnable.sol\":{\"keccak256\":\"0x3e80cd0ad775e5f1f7edec91cb68fc1bbe9639e95db22cedf04a7d1608702770\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5fa472053f1094bac8445dbf3f283ff8cb8ad80585d2e27ddb951f2064ecbeb9\",\"dweb:/ipfs/QmZpn6ySq24KZTGx4KK4nQywyzRUTMyi9bAAFTqFzf4pjx\"]},\"Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/IERC721ABurnable.sol\":{\"keccak256\":\"0x79c0f16710e7243a647f6ec3c44e282f54f370c55cfe9d4834a9672391203fd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://506e60ac09a2e3ad7fe1eabc3d3f5b3393178280d55cc61d4b982da6f354942b\",\"dweb:/ipfs/QmQxJ4uEEdjPu28buKRVpdbTYqu19H99JBPU3AdjDyvhbN\"]},\"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":{\"keccak256\":\"0xbf164ed12ed2fb1eca6dba3afc7be8958a03cc8979f7302fda9c45d70cf3735d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://845f4ab43711e9a2e49f81519d6daef7bdbc98ba9ffcfe059f0fb2372c217288\",\"dweb:/ipfs/QmVxJtRznhL6M7daatv3HqL2S4joGMqiFzPS21SqK7r6h4\"]},\"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/IERC721A.sol\":{\"keccak256\":\"0xa50758be4b6557e7ffb8da3a58ab42d8c913849dfaeaf099ef2112d18fc0540c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e459408d4969a470969bebe5de840f0a1e1d014c9d9a273f6413f17a8ba69c2e\",\"dweb:/ipfs/QmYDd4TqiFStL25VebeP9KikYBnL6uSpoaxx7E2h6sLDG6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 127,
								"contract": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 129,
								"contract": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 131,
								"contract": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 133,
								"contract": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 137,
								"contract": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 141,
								"contract": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 146,
								"contract": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)59_storage)"
							},
							{
								"astId": 152,
								"contract": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/ERC721ABurnable.sol:ERC721ABurnable",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(TokenApprovalRef)59_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenApprovalRef)59_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenApprovalRef)59_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenApprovalRef",
								"members": [
									{
										"astId": 58,
										"contract": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/ERC721ABurnable.sol:ERC721ABurnable",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/IERC721ABurnable.sol": {
				"IERC721ABurnable": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721ABurnable.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"burn(uint256)": {
								"details": "Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721ABurnable.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"burn(uint256)\":{\"details\":\"Burns `tokenId`. See {ERC721A-_burn}. Requirements: - The caller must own `tokenId` or be an approved operator.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/IERC721ABurnable.sol\":\"IERC721ABurnable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/IERC721ABurnable.sol\":{\"keccak256\":\"0x79c0f16710e7243a647f6ec3c44e282f54f370c55cfe9d4834a9672391203fd8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://506e60ac09a2e3ad7fe1eabc3d3f5b3393178280d55cc61d4b982da6f354942b\",\"dweb:/ipfs/QmQxJ4uEEdjPu28buKRVpdbTYqu19H99JBPU3AdjDyvhbN\"]},\"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/IERC721A.sol\":{\"keccak256\":\"0xa50758be4b6557e7ffb8da3a58ab42d8c913849dfaeaf099ef2112d18fc0540c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e459408d4969a470969bebe5de840f0a1e1d014c9d9a273f6413f17a8ba69c2e\",\"dweb:/ipfs/QmYDd4TqiFStL25VebeP9KikYBnL6uSpoaxx7E2h6sLDG6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol": {
				"ERC721A": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"title": "ERC721A",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":2185:44823  contract ERC721A is IERC721A {... */\n  mstore(0x40, 0x80)\n    /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":6236:6390  constructor(string memory name_, string memory symbol_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":6302:6307  _name */\n  0x02\n    /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":6302:6315  _name = name_ */\n  tag_6\n    /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":6310:6315  name_ */\n  dup4\n    /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":6302:6307  _name */\n  dup3\n    /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":6302:6315  _name = name_ */\n  tag_7\n  jump\t// in\ntag_6:\n  pop\n    /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":6325:6332  _symbol */\n  0x03\n    /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":6325:6342  _symbol = symbol_ */\n  tag_8\n    /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":6335:6342  symbol_ */\n  dup3\n    /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":6325:6332  _symbol */\n  dup3\n    /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":6325:6342  _symbol = symbol_ */\n  tag_7\n  jump\t// in\ntag_8:\n  pop\n  pop\n    /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":6772:6779  uint256 */\n  0x00\n    /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":6352:6383  _currentIndex = _startTokenId() */\n  dup1\n  sstore\n  pop\n    /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":2185:44823  contract ERC721A is IERC721A {... */\n  jump(tag_19)\n    /* \"#utility.yul\":14:141   */\ntag_13:\n    /* \"#utility.yul\":75:85   */\n  0x4e487b71\n    /* \"#utility.yul\":70:73   */\n  0xe0\n    /* \"#utility.yul\":66:86   */\n  shl\n    /* \"#utility.yul\":63:64   */\n  0x00\n    /* \"#utility.yul\":56:87   */\n  mstore\n    /* \"#utility.yul\":106:110   */\n  0x41\n    /* \"#utility.yul\":103:104   */\n  0x04\n    /* \"#utility.yul\":96:111   */\n  mstore\n    /* \"#utility.yul\":130:134   */\n  0x24\n    /* \"#utility.yul\":127:128   */\n  0x00\n    /* \"#utility.yul\":120:135   */\n  revert\n    /* \"#utility.yul\":146:980   */\ntag_14:\n    /* \"#utility.yul\":200:205   */\n  0x00\n    /* \"#utility.yul\":253:256   */\n  dup3\n    /* \"#utility.yul\":246:250   */\n  0x1f\n    /* \"#utility.yul\":238:244   */\n  dup4\n    /* \"#utility.yul\":234:251   */\n  add\n    /* \"#utility.yul\":230:257   */\n  slt\n    /* \"#utility.yul\":220:275   */\n  tag_22\n  jumpi\n    /* \"#utility.yul\":271:272   */\n  0x00\n    /* \"#utility.yul\":268:269   */\n  dup1\n    /* \"#utility.yul\":261:273   */\n  revert\n    /* \"#utility.yul\":220:275   */\ntag_22:\n    /* \"#utility.yul\":298:311   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":323:353   */\n  dup2\n  gt\n    /* \"#utility.yul\":320:376   */\n  iszero\n  tag_24\n  jumpi\n    /* \"#utility.yul\":356:374   */\n  tag_24\n  tag_13\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":405:407   */\n  0x40\n    /* \"#utility.yul\":399:408   */\n  mload\n    /* \"#utility.yul\":497:499   */\n  0x1f\n    /* \"#utility.yul\":459:476   */\n  dup3\n  add\n  not(0x1f)\n    /* \"#utility.yul\":455:486   */\n  swap1\n  dup2\n  and\n    /* \"#utility.yul\":488:490   */\n  0x3f\n    /* \"#utility.yul\":451:491   */\n  add\n    /* \"#utility.yul\":447:501   */\n  and\n    /* \"#utility.yul\":435:502   */\n  dup2\n  add\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":517:551   */\n  dup2\n  gt\n    /* \"#utility.yul\":553:575   */\n  dup3\n  dup3\n  lt\n    /* \"#utility.yul\":514:576   */\n  or\n    /* \"#utility.yul\":511:599   */\n  iszero\n  tag_26\n  jumpi\n    /* \"#utility.yul\":579:597   */\n  tag_26\n  tag_13\n  jump\t// in\ntag_26:\n    /* \"#utility.yul\":615:617   */\n  0x40\n    /* \"#utility.yul\":608:630   */\n  mstore\n    /* \"#utility.yul\":639:661   */\n  dup2\n  dup2\n  mstore\n    /* \"#utility.yul\":680:699   */\n  dup4\n  dup3\n  add\n    /* \"#utility.yul\":701:705   */\n  0x20\n    /* \"#utility.yul\":676:706   */\n  add\n    /* \"#utility.yul\":673:712   */\n  dup6\n  lt\n    /* \"#utility.yul\":670:729   */\n  iszero\n  tag_27\n  jumpi\n    /* \"#utility.yul\":725:726   */\n  0x00\n    /* \"#utility.yul\":722:723   */\n  dup1\n    /* \"#utility.yul\":715:727   */\n  revert\n    /* \"#utility.yul\":670:729   */\ntag_27:\n    /* \"#utility.yul\":747:748   */\n  0x00\n    /* \"#utility.yul\":757:900   */\ntag_28:\n    /* \"#utility.yul\":771:777   */\n  dup3\n    /* \"#utility.yul\":768:769   */\n  dup2\n    /* \"#utility.yul\":765:778   */\n  lt\n    /* \"#utility.yul\":757:900   */\n  iszero\n  tag_30\n  jumpi\n    /* \"#utility.yul\":883:887   */\n  0x20\n    /* \"#utility.yul\":867:881   */\n  dup2\n  dup7\n  add\n    /* \"#utility.yul\":863:888   */\n  dup2\n  add\n    /* \"#utility.yul\":857:889   */\n  mload\n    /* \"#utility.yul\":834:848   */\n  dup4\n  dup4\n  add\n    /* \"#utility.yul\":830:855   */\n  dup3\n  add\n    /* \"#utility.yul\":823:890   */\n  mstore\n    /* \"#utility.yul\":786:798   */\n  add\n    /* \"#utility.yul\":757:900   */\n  jump(tag_28)\ntag_30:\n  pop\n    /* \"#utility.yul\":948:949   */\n  0x00\n    /* \"#utility.yul\":920:939   */\n  swap2\n  dup2\n  add\n    /* \"#utility.yul\":941:945   */\n  0x20\n    /* \"#utility.yul\":916:946   */\n  add\n    /* \"#utility.yul\":909:950   */\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"#utility.yul\":924:930   */\n  swap4\n    /* \"#utility.yul\":146:980   */\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":985:1542   */\ntag_3:\n    /* \"#utility.yul\":1084:1090   */\n  0x00\n    /* \"#utility.yul\":1092:1098   */\n  dup1\n    /* \"#utility.yul\":1145:1147   */\n  0x40\n    /* \"#utility.yul\":1133:1142   */\n  dup4\n    /* \"#utility.yul\":1124:1131   */\n  dup6\n    /* \"#utility.yul\":1120:1143   */\n  sub\n    /* \"#utility.yul\":1116:1148   */\n  slt\n    /* \"#utility.yul\":1113:1165   */\n  iszero\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1161:1162   */\n  0x00\n    /* \"#utility.yul\":1158:1159   */\n  dup1\n    /* \"#utility.yul\":1151:1163   */\n  revert\n    /* \"#utility.yul\":1113:1165   */\ntag_32:\n    /* \"#utility.yul\":1188:1204   */\n  dup3\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1216:1246   */\n  dup2\n  gt\n    /* \"#utility.yul\":1213:1263   */\n  iszero\n  tag_33\n  jumpi\n    /* \"#utility.yul\":1259:1260   */\n  0x00\n    /* \"#utility.yul\":1256:1257   */\n  dup1\n    /* \"#utility.yul\":1249:1261   */\n  revert\n    /* \"#utility.yul\":1213:1263   */\ntag_33:\n    /* \"#utility.yul\":1282:1343   */\n  tag_34\n    /* \"#utility.yul\":1335:1342   */\n  dup6\n    /* \"#utility.yul\":1326:1332   */\n  dup3\n    /* \"#utility.yul\":1315:1324   */\n  dup7\n    /* \"#utility.yul\":1311:1333   */\n  add\n    /* \"#utility.yul\":1282:1343   */\n  tag_14\n  jump\t// in\ntag_34:\n    /* \"#utility.yul\":1389:1391   */\n  0x20\n    /* \"#utility.yul\":1374:1392   */\n  dup6\n  add\n    /* \"#utility.yul\":1368:1393   */\n  mload\n    /* \"#utility.yul\":1272:1343   */\n  swap1\n  swap4\n  pop\n    /* \"#utility.yul\":1368:1393   */\n  swap1\n  pop\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":1405:1437   */\n  dup2\n  gt\n    /* \"#utility.yul\":1402:1454   */\n  iszero\n  tag_35\n  jumpi\n    /* \"#utility.yul\":1450:1451   */\n  0x00\n    /* \"#utility.yul\":1447:1448   */\n  dup1\n    /* \"#utility.yul\":1440:1452   */\n  revert\n    /* \"#utility.yul\":1402:1454   */\ntag_35:\n    /* \"#utility.yul\":1473:1536   */\n  tag_36\n    /* \"#utility.yul\":1528:1535   */\n  dup6\n    /* \"#utility.yul\":1517:1525   */\n  dup3\n    /* \"#utility.yul\":1506:1515   */\n  dup7\n    /* \"#utility.yul\":1502:1526   */\n  add\n    /* \"#utility.yul\":1473:1536   */\n  tag_14\n  jump\t// in\ntag_36:\n    /* \"#utility.yul\":1463:1536   */\n  swap2\n  pop\n  pop\n    /* \"#utility.yul\":985:1542   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1547:1927   */\ntag_15:\n    /* \"#utility.yul\":1626:1627   */\n  0x01\n    /* \"#utility.yul\":1622:1634   */\n  dup2\n  dup2\n  shr\n  swap1\n    /* \"#utility.yul\":1669:1681   */\n  dup3\n  and\n  dup1\n    /* \"#utility.yul\":1690:1751   */\n  tag_38\n  jumpi\n    /* \"#utility.yul\":1744:1748   */\n  0x7f\n    /* \"#utility.yul\":1736:1742   */\n  dup3\n    /* \"#utility.yul\":1732:1749   */\n  and\n    /* \"#utility.yul\":1722:1749   */\n  swap2\n  pop\n    /* \"#utility.yul\":1690:1751   */\ntag_38:\n    /* \"#utility.yul\":1797:1799   */\n  0x20\n    /* \"#utility.yul\":1789:1795   */\n  dup3\n    /* \"#utility.yul\":1786:1800   */\n  lt\n    /* \"#utility.yul\":1766:1784   */\n  dup2\n    /* \"#utility.yul\":1763:1801   */\n  sub\n    /* \"#utility.yul\":1760:1921   */\n  tag_39\n  jumpi\n    /* \"#utility.yul\":1843:1853   */\n  0x4e487b71\n    /* \"#utility.yul\":1838:1841   */\n  0xe0\n    /* \"#utility.yul\":1834:1854   */\n  shl\n    /* \"#utility.yul\":1831:1832   */\n  0x00\n    /* \"#utility.yul\":1824:1855   */\n  mstore\n    /* \"#utility.yul\":1878:1882   */\n  0x22\n    /* \"#utility.yul\":1875:1876   */\n  0x04\n    /* \"#utility.yul\":1868:1883   */\n  mstore\n    /* \"#utility.yul\":1906:1910   */\n  0x24\n    /* \"#utility.yul\":1903:1904   */\n  0x00\n    /* \"#utility.yul\":1896:1911   */\n  revert\n    /* \"#utility.yul\":1760:1921   */\ntag_39:\n  pop\n    /* \"#utility.yul\":1547:1927   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2058:2576   */\ntag_17:\n    /* \"#utility.yul\":2160:2162   */\n  0x1f\n    /* \"#utility.yul\":2155:2158   */\n  dup3\n    /* \"#utility.yul\":2152:2163   */\n  gt\n    /* \"#utility.yul\":2149:2570   */\n  iszero\n  tag_42\n  jumpi\n    /* \"#utility.yul\":2196:2201   */\n  dup1\n    /* \"#utility.yul\":2193:2194   */\n  0x00\n    /* \"#utility.yul\":2186:2202   */\n  mstore\n    /* \"#utility.yul\":2240:2244   */\n  0x20\n    /* \"#utility.yul\":2237:2238   */\n  0x00\n    /* \"#utility.yul\":2227:2245   */\n  keccak256\n    /* \"#utility.yul\":2310:2312   */\n  0x1f\n    /* \"#utility.yul\":2298:2308   */\n  dup5\n    /* \"#utility.yul\":2294:2313   */\n  add\n    /* \"#utility.yul\":2291:2292   */\n  0x05\n    /* \"#utility.yul\":2287:2314   */\n  shr\n    /* \"#utility.yul\":2281:2285   */\n  dup2\n    /* \"#utility.yul\":2277:2315   */\n  add\n    /* \"#utility.yul\":2346:2350   */\n  0x20\n    /* \"#utility.yul\":2334:2344   */\n  dup6\n    /* \"#utility.yul\":2331:2351   */\n  lt\n    /* \"#utility.yul\":2328:2375   */\n  iszero\n  tag_43\n  jumpi\n  pop\n    /* \"#utility.yul\":2369:2373   */\n  dup1\n    /* \"#utility.yul\":2328:2375   */\ntag_43:\n    /* \"#utility.yul\":2424:2426   */\n  0x1f\n    /* \"#utility.yul\":2419:2422   */\n  dup5\n    /* \"#utility.yul\":2415:2427   */\n  add\n    /* \"#utility.yul\":2412:2413   */\n  0x05\n    /* \"#utility.yul\":2408:2428   */\n  shr\n    /* \"#utility.yul\":2402:2406   */\n  dup3\n    /* \"#utility.yul\":2398:2429   */\n  add\n    /* \"#utility.yul\":2388:2429   */\n  swap2\n  pop\n    /* \"#utility.yul\":2479:2560   */\ntag_44:\n    /* \"#utility.yul\":2497:2499   */\n  dup2\n    /* \"#utility.yul\":2490:2495   */\n  dup2\n    /* \"#utility.yul\":2487:2500   */\n  lt\n    /* \"#utility.yul\":2479:2560   */\n  iszero\n  tag_46\n  jumpi\n    /* \"#utility.yul\":2556:2557   */\n  0x00\n    /* \"#utility.yul\":2542:2558   */\n  dup2\n  sstore\n    /* \"#utility.yul\":2523:2524   */\n  0x01\n    /* \"#utility.yul\":2512:2525   */\n  add\n    /* \"#utility.yul\":2479:2560   */\n  jump(tag_44)\ntag_46:\n    /* \"#utility.yul\":2483:2486   */\n  pop\n  pop\n    /* \"#utility.yul\":2149:2570   */\ntag_42:\n    /* \"#utility.yul\":2058:2576   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2752:4051   */\ntag_7:\n    /* \"#utility.yul\":2872:2882   */\n  dup2\n  mload\n  sub(shl(0x40, 0x01), 0x01)\n    /* \"#utility.yul\":2894:2924   */\n  dup2\n  gt\n    /* \"#utility.yul\":2891:2947   */\n  iszero\n  tag_50\n  jumpi\n    /* \"#utility.yul\":2927:2945   */\n  tag_50\n  tag_13\n  jump\t// in\ntag_50:\n    /* \"#utility.yul\":2956:3053   */\n  tag_51\n    /* \"#utility.yul\":3046:3052   */\n  dup2\n    /* \"#utility.yul\":3006:3044   */\n  tag_52\n    /* \"#utility.yul\":3038:3042   */\n  dup5\n    /* \"#utility.yul\":3032:3043   */\n  sload\n    /* \"#utility.yul\":3006:3044   */\n  tag_15\n  jump\t// in\ntag_52:\n    /* \"#utility.yul\":3000:3004   */\n  dup5\n    /* \"#utility.yul\":2956:3053   */\n  tag_17\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":3102:3106   */\n  0x20\n    /* \"#utility.yul\":3133:3135   */\n  0x1f\n    /* \"#utility.yul\":3122:3136   */\n  dup3\n  gt\n    /* \"#utility.yul\":3150:3151   */\n  0x01\n    /* \"#utility.yul\":3145:3794   */\n  dup2\n  eq\n  tag_54\n  jumpi\n    /* \"#utility.yul\":3838:3839   */\n  0x00\n    /* \"#utility.yul\":3855:3861   */\n  dup4\n    /* \"#utility.yul\":3852:3941   */\n  iszero\n  tag_55\n  jumpi\n  pop\n    /* \"#utility.yul\":3907:3926   */\n  dup5\n  dup3\n  add\n    /* \"#utility.yul\":3901:3927   */\n  mload\n    /* \"#utility.yul\":3852:3941   */\ntag_55:\n  not(0x00)\n    /* \"#utility.yul\":2709:2710   */\n  0x03\n    /* \"#utility.yul\":2705:2716   */\n  dup6\n  swap1\n  shl\n    /* \"#utility.yul\":2701:2725   */\n  shr\n    /* \"#utility.yul\":2697:2726   */\n  not\n    /* \"#utility.yul\":2687:2727   */\n  and\n    /* \"#utility.yul\":2733:2734   */\n  0x01\n    /* \"#utility.yul\":2729:2740   */\n  dup5\n  swap1\n  shl\n    /* \"#utility.yul\":2684:2741   */\n  or\n    /* \"#utility.yul\":3954:4035   */\n  dup5\n  sstore\n    /* \"#utility.yul\":3115:4045   */\n  jump(tag_46)\n    /* \"#utility.yul\":3145:3794   */\ntag_54:\n    /* \"#utility.yul\":2005:2006   */\n  0x00\n    /* \"#utility.yul\":1998:2012   */\n  dup5\n  dup2\n  mstore\n    /* \"#utility.yul\":2042:2046   */\n  0x20\n    /* \"#utility.yul\":2029:2047   */\n  dup2\n  keccak256\n  not(0x1f)\n    /* \"#utility.yul\":3181:3201   */\n  dup6\n  and\n  swap2\n    /* \"#utility.yul\":3299:3521   */\ntag_58:\n    /* \"#utility.yul\":3313:3320   */\n  dup3\n    /* \"#utility.yul\":3310:3311   */\n  dup2\n    /* \"#utility.yul\":3307:3321   */\n  lt\n    /* \"#utility.yul\":3299:3521   */\n  iszero\n  tag_60\n  jumpi\n    /* \"#utility.yul\":3395:3414   */\n  dup8\n  dup6\n  add\n    /* \"#utility.yul\":3389:3415   */\n  mload\n    /* \"#utility.yul\":3374:3416   */\n  dup3\n  sstore\n    /* \"#utility.yul\":3502:3506   */\n  0x20\n    /* \"#utility.yul\":3487:3507   */\n  swap5\n  dup6\n  add\n  swap5\n    /* \"#utility.yul\":3455:3456   */\n  0x01\n    /* \"#utility.yul\":3443:3457   */\n  swap1\n  swap3\n  add\n  swap2\n    /* \"#utility.yul\":3329:3341   */\n  add\n    /* \"#utility.yul\":3299:3521   */\n  jump(tag_58)\ntag_60:\n    /* \"#utility.yul\":3303:3306   */\n  pop\n    /* \"#utility.yul\":3549:3555   */\n  dup5\n    /* \"#utility.yul\":3540:3547   */\n  dup3\n    /* \"#utility.yul\":3537:3556   */\n  lt\n    /* \"#utility.yul\":3534:3735   */\n  iszero\n  tag_61\n  jumpi\n    /* \"#utility.yul\":3610:3629   */\n  dup7\n  dup5\n  add\n    /* \"#utility.yul\":3604:3630   */\n  mload\n  not(0x00)\n    /* \"#utility.yul\":3693:3694   */\n  0x03\n    /* \"#utility.yul\":3689:3703   */\n  dup8\n  swap1\n  shl\n    /* \"#utility.yul\":3705:3708   */\n  0xf8\n    /* \"#utility.yul\":3685:3709   */\n  and\n    /* \"#utility.yul\":3681:3718   */\n  shr\n    /* \"#utility.yul\":3677:3719   */\n  not\n    /* \"#utility.yul\":3662:3720   */\n  and\n    /* \"#utility.yul\":3647:3721   */\n  dup2\n  sstore\n    /* \"#utility.yul\":3534:3735   */\ntag_61:\n  pop\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3781:3782   */\n  0x01\n    /* \"#utility.yul\":3765:3779   */\n  swap1\n  dup2\n  shl\n    /* \"#utility.yul\":3761:3783   */\n  add\n    /* \"#utility.yul\":3748:3784   */\n  swap1\n  sstore\n  pop\n    /* \"#utility.yul\":2752:4051   */\n  jump\t// out\ntag_19:\n    /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":2185:44823  contract ERC721A is IERC721A {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":2185:44823  contract ERC721A is IERC721A {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6352211e\n      gt\n      tag_16\n      jumpi\n      dup1\n      0xa22cb465\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xa22cb465\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xb88d4fde\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc87b56dd\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xe985e9c5\n      eq\n      tag_15\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_17:\n      dup1\n      0x6352211e\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      dup1\n      0x095ea7b3\n      gt\n      tag_18\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x42842e0e\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_18:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x081812fc\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":10454:11084  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_19:\n      pop\n      tag_20\n      tag_21\n      calldatasize\n      0x04\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n        /* \"#utility.yul\":611:625   */\n      swap1\n      iszero\n        /* \"#utility.yul\":604:626   */\n      iszero\n        /* \"#utility.yul\":586:627   */\n      dup2\n      mstore\n        /* \"#utility.yul\":574:576   */\n      0x20\n        /* \"#utility.yul\":559:577   */\n      add\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":10454:11084  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11338:11436  function name() public view virtual override returns (string memory) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_26:\n      pop\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18201:18424  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      pop\n      tag_32\n      tag_33\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      mload(0x40)\n        /* \"#utility.yul\":1860:1902   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1848:1903   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1830:1904   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1818:1820   */\n      0x20\n        /* \"#utility.yul\":1803:1821   */\n      add\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18201:18424  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      tag_24\n        /* \"#utility.yul\":1684:1910   */\n      jump\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":17929:18051  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_5:\n      tag_38\n      tag_39\n      calldatasize\n      0x04\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      stop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":7184:7501  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_42\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_42:\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":7454:7466  _burnCounter */\n      sload(0x01)\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":7245:7252  uint256 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":7438:7451  _currentIndex */\n      sload\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":7438:7466  _currentIndex - _burnCounter */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":7184:7501  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_43:\n      mload(0x40)\n        /* \"#utility.yul\":2567:2592   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2555:2557   */\n      0x20\n        /* \"#utility.yul\":2540:2558   */\n      add\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":7184:7501  function totalSupply() public view virtual override returns (uint256) {... */\n      tag_24\n        /* \"#utility.yul\":2421:2598   */\n      jump\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":21836:25283  function transferFrom(... */\n    tag_7:\n      tag_38\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25374:25561  function safeTransferFrom(... */\n    tag_8:\n      tag_38\n      tag_52\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_52:\n      tag_53\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":12699:12849  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_32\n      tag_56\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_56:\n      tag_57\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":8335:8574  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_43\n      tag_61\n      calldatasize\n      0x04\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11507:11609  function symbol() public view virtual override returns (string memory) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      tag_27\n      tag_67\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18751:18982  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_38\n      tag_71\n      calldatasize\n      0x04\n      tag_72\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26142:26547  function safeTransferFrom(... */\n    tag_13:\n      tag_38\n      tag_75\n      calldatasize\n      0x04\n      tag_76\n      jump\t// in\n    tag_75:\n      tag_77\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11710:12032  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_27\n      tag_80\n      calldatasize\n      0x04\n      tag_34\n      jump\t// in\n    tag_80:\n      tag_81\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19132:19294  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_83\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_83:\n      pop\n      tag_20\n      tag_85\n      calldatasize\n      0x04\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19252:19277  _operatorApprovals[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap2\n      dup3\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19229:19233  bool */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19252:19277  _operatorApprovals[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19252:19270  _operatorApprovals */\n      0x07\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19252:19277  _operatorApprovals[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19252:19287  _operatorApprovals[owner][operator] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19132:19294  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      jump\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":10454:11084  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_23:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":10539:10543  bool */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":10857:10882  interfaceId == 0x01ffc9a7 */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup4\n      and\n      eq\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":10857:10958  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      tag_90\n      jumpi\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":10933:10958  interfaceId == 0x80ac58cd */\n      0x80ac58cd00000000000000000000000000000000000000000000000000000000\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup4\n      and\n      eq\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":10857:10958  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_90:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":10857:11034  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n      dup1\n      tag_91\n      jumpi\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11009:11034  interfaceId == 0x5b5e139f */\n      0x5b5e139f00000000000000000000000000000000000000000000000000000000\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      dup4\n      and\n      eq\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":10857:11034  interfaceId == 0x01ffc9a7 || // ERC165 interface ID for ERC165.... */\n    tag_91:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":10838:11034  return... */\n      swap3\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":10454:11084  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11338:11436  function name() public view virtual override returns (string memory) {... */\n    tag_28:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11392:11405  string memory */\n      0x60\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11424:11429  _name */\n      0x02\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11417:11429  return _name */\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_94\n      jump\t// in\n    tag_95:\n      dup1\n      iszero\n      tag_96\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_97\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_96)\n    tag_97:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_98:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_98\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11338:11436  function name() public view virtual override returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18201:18424  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_35:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18277:18284  address */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18301:18317  _exists(tokenId) */\n      tag_100\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18309:18316  tokenId */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18301:18308  _exists */\n      tag_101\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18301:18317  _exists(tokenId) */\n      jump\t// in\n    tag_100:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18296:18369  if (!_exists(tokenId)) _revert(ApprovalQueryForNonexistentToken.selector) */\n      tag_103\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18319:18369  _revert(ApprovalQueryForNonexistentToken.selector) */\n      tag_103\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18327:18368  ApprovalQueryForNonexistentToken.selector */\n      0xcf4700e400000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18319:18326  _revert */\n      tag_104\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18319:18369  _revert(ApprovalQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_103:\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18387:18411  _tokenApprovals[tokenId] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18387:18402  _tokenApprovals */\n      0x06\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18387:18411  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18387:18417  _tokenApprovals[tokenId].value */\n      sload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18201:18424  function getApproved(uint256 tokenId) public view virtual override returns (address) {... */\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":17929:18051  function approve(address to, uint256 tokenId) public payable virtual override {... */\n    tag_41:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18017:18044  _approve(to, tokenId, true) */\n      tag_106\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18026:18028  to */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18030:18037  tokenId */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18039:18043  true */\n      0x01\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18017:18025  _approve */\n      tag_107\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18017:18044  _approve(to, tokenId, true) */\n      jump\t// in\n    tag_106:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":17929:18051  function approve(address to, uint256 tokenId) public payable virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":21836:25283  function transferFrom(... */\n    tag_50:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":21973:22000  uint256 prevOwnershipPacked */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22003:22030  _packedOwnershipOf(tokenId) */\n      tag_112\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22022:22029  tokenId */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22003:22021  _packedOwnershipOf */\n      tag_113\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22003:22030  _packedOwnershipOf(tokenId) */\n      jump\t// in\n    tag_112:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":4075:4089  (1 << 160) - 1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22155:22177  uint256(uint160(from)) */\n      swap5\n      dup6\n      and\n      swap5\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":21973:22030  uint256 prevOwnershipPacked = _packedOwnershipOf(tokenId) */\n      swap1\n      swap2\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22213:22258  address(uint160(prevOwnershipPacked)) != from */\n      dup2\n      and\n      dup5\n      eq\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22209:22304  if (address(uint160(prevOwnershipPacked)) != from) _revert(TransferFromIncorrectOwner.selector) */\n      tag_115\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22260:22304  _revert(TransferFromIncorrectOwner.selector) */\n      tag_115\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22268:22303  TransferFromIncorrectOwner.selector */\n      0xa114810000000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22260:22267  _revert */\n      tag_104\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22260:22304  _revert(TransferFromIncorrectOwner.selector) */\n      jump\t// in\n    tag_115:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22316:22343  uint256 approvedAddressSlot */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":20969:20993  _tokenApprovals[tokenId] */\n      dup3\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":20969:20984  _tokenApprovals */\n      0x06\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":20969:20993  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":21193:21219  sload(approvedAddressSlot) */\n      dup1\n      sload\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":42777:42787  msg.sender */\n      caller\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":20606:20636  eq(msgSender, approvedAddress) */\n      dup1\n      dup3\n      eq\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":20314:20330  _BITMASK_ADDRESS */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":20303:20331  and(owner, _BITMASK_ADDRESS) */\n      dup9\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":20584:20604  eq(msgSender, owner) */\n      swap1\n      swap2\n      eq\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":20581:20637  or(eq(msgSender, owner), eq(msgSender, approvedAddress)) */\n      or\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22499:22687  if (!_isSenderApprovedOrOwner(approvedAddress, from, _msgSenderERC721A()))... */\n      tag_126\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22591:22634  isApprovedForAll(from, _msgSenderERC721A()) */\n      tag_123\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22608:22612  from */\n      dup7\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":42777:42787  msg.sender */\n      caller\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19132:19294  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_85\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22591:22634  isApprovedForAll(from, _msgSenderERC721A()) */\n    tag_123:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22586:22687  if (!isApprovedForAll(from, _msgSenderERC721A())) _revert(TransferCallerNotOwnerNorApproved.selector) */\n      tag_126\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22636:22687  _revert(TransferCallerNotOwnerNorApproved.selector) */\n      tag_126\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22644:22686  TransferCallerNotOwnerNorApproved.selector */\n      0x59c896be00000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22636:22643  _revert */\n      tag_104\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22636:22687  _revert(TransferCallerNotOwnerNorApproved.selector) */\n      jump\t// in\n    tag_126:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22830:22845  approvedAddress */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22827:22984  if approvedAddress {... */\n      iszero\n      tag_129\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22968:22969  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22947:22966  approvedAddressSlot */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22940:22970  sstore(approvedAddressSlot, 0) */\n      sstore\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":22827:22984  if approvedAddress {... */\n    tag_129:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23356:23380  _packedAddressData[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup7\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23356:23374  _packedAddressData */\n      0x05\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23356:23380  _packedAddressData[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23354:23380  --_packedAddressData[from] */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      add\n      swap1\n      sstore\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23424:23446  _packedAddressData[to] */\n      swap2\n      dup8\n      and\n      dup1\n      dup3\n      mstore\n      swap2\n      swap1\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23422:23446  ++_packedAddressData[to] */\n      dup1\n      sload\n      0x01\n      add\n      swap1\n      sstore\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":17057:17068  timestamp() */\n      timestamp\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":17032:17055  _BITPOS_START_TIMESTAMP */\n      0xa0\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":17028:17069  shl(_BITPOS_START_TIMESTAMP, timestamp()) */\n      shl\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":17015:17078  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":3682:3690  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":17015:17078  or(owner, or(shl(_BITPOS_START_TIMESTAMP, timestamp()), flags)) */\n      or\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23710:23736  _packedOwnerships[tokenId] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23710:23727  _packedOwnerships */\n      0x04\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23710:23736  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23710:23882  _packedOwnerships[tokenId] = _packOwnershipData(... */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":3682:3690  1 << 225 */\n      0x0200000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23999:24046  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED */\n      dup5\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23999:24051  prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0 */\n      swap1\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23995:24612  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n      tag_134\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24103:24104  1 */\n      0x01\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24093:24104  tokenId + 1 */\n      dup5\n      add\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24071:24090  uint256 nextTokenId */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24224:24254  _packedOwnerships[nextTokenId] */\n      dup2\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24224:24241  _packedOwnerships */\n      0x04\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24224:24254  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24224:24259  _packedOwnerships[nextTokenId] == 0 */\n      swap1\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24220:24598  if (_packedOwnerships[nextTokenId] == 0) {... */\n      tag_136\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24360:24373  _currentIndex */\n      sload(0x00)\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24345:24356  nextTokenId */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24345:24373  nextTokenId != _currentIndex */\n      eq\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24341:24580  if (nextTokenId != _currentIndex) {... */\n      tag_136\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24505:24535  _packedOwnerships[nextTokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24505:24522  _packedOwnerships */\n      0x04\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24505:24535  _packedOwnerships[nextTokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24505:24557  _packedOwnerships[nextTokenId] = prevOwnershipPacked */\n      dup5\n      swap1\n      sstore\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24341:24580  if (nextTokenId != _currentIndex) {... */\n    tag_136:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24053:24612  {... */\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":23995:24612  if (prevOwnershipPacked & _BITMASK_NEXT_INITIALIZED == 0) {... */\n    tag_134:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":4075:4089  (1 << 160) - 1 */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24740:24760  uint256(uint160(to)) */\n      dup6\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25111:25118  tokenId */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24740:24760  uint256(uint160(to)) */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25043:25047  from */\n      dup9\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24986:25011  _TRANSFER_EVENT_SIGNATURE */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24721:24737  uint256 toMasked */\n      0x00\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":24854:25146  log4(... */\n      log4\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25169:25177  toMasked */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25181:25182  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25169:25182  toMasked == 0 */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25165:25223  if (toMasked == 0) _revert(TransferToZeroAddress.selector) */\n      tag_138\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25184:25223  _revert(TransferToZeroAddress.selector) */\n      tag_138\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25192:25222  TransferToZeroAddress.selector */\n      0xea553b3400000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25184:25191  _revert */\n      tag_104\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25184:25223  _revert(TransferToZeroAddress.selector) */\n      jump\t// in\n    tag_138:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":21963:25283  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":21836:25283  function transferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25374:25561  function safeTransferFrom(... */\n    tag_53:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25515:25554  safeTransferFrom(from, to, tokenId, '') */\n      tag_142\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25532:25536  from */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25538:25540  to */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25542:25549  tokenId */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25515:25554  safeTransferFrom(from, to, tokenId, '') */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25515:25531  safeTransferFrom */\n      tag_77\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25515:25554  safeTransferFrom(from, to, tokenId, '') */\n      jump\t// in\n    tag_142:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":25374:25561  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":12699:12849  function ownerOf(uint256 tokenId) public view virtual override returns (address) {... */\n    tag_57:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":12771:12778  address */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":12813:12840  _packedOwnershipOf(tokenId) */\n      tag_91\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":12832:12839  tokenId */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":12813:12831  _packedOwnershipOf */\n      tag_113\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":12813:12840  _packedOwnershipOf(tokenId) */\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":8335:8574  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n    tag_63:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":8407:8414  uint256 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":8430:8449  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":8426:8495  if (owner == address(0)) _revert(BalanceQueryForZeroAddress.selector) */\n      tag_147\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":8451:8495  _revert(BalanceQueryForZeroAddress.selector) */\n      tag_147\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":8459:8494  BalanceQueryForZeroAddress.selector */\n      0x8f4eb60400000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":8451:8458  _revert */\n      tag_104\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":8451:8495  _revert(BalanceQueryForZeroAddress.selector) */\n      jump\t// in\n    tag_147:\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":8512:8537  _packedAddressData[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":8512:8530  _packedAddressData */\n      0x05\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":8512:8537  _packedAddressData[owner] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":2650:2663  (1 << 64) - 1 */\n      0xffffffffffffffff\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":8512:8567  _packedAddressData[owner] & _BITMASK_ADDRESS_DATA_ENTRY */\n      and\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":8335:8574  function balanceOf(address owner) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11507:11609  function symbol() public view virtual override returns (string memory) {... */\n    tag_67:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11563:11576  string memory */\n      0x60\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11595:11602  _symbol */\n      0x03\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11588:11602  return _symbol */\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18751:18982  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n    tag_73:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":42777:42787  msg.sender */\n      caller\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18845:18884  _operatorApprovals[_msgSenderERC721A()] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18845:18863  _operatorApprovals */\n      0x07\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18845:18884  _operatorApprovals[_msgSenderERC721A()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18845:18894  _operatorApprovals[_msgSenderERC721A()][operator] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap1\n      dup4\n      mstore\n      swap3\n      dup2\n      swap1\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18845:18905  _operatorApprovals[_msgSenderERC721A()][operator] = approved */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00\n      and\n      dup7\n      iszero\n      iszero\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18920:18975  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      swap1\n      mload\n        /* \"#utility.yul\":586:627   */\n      swap1\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18845:18894  _operatorApprovals[_msgSenderERC721A()][operator] */\n      swap2\n      swap3\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":42777:42787  msg.sender */\n      swap2\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18920:18975  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31\n      swap2\n        /* \"#utility.yul\":559:577   */\n      add\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18920:18975  ApprovalForAll(_msgSenderERC721A(), operator, approved) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":18751:18982  function setApprovalForAll(address operator, bool approved) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26142:26547  function safeTransferFrom(... */\n    tag_77:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26311:26342  transferFrom(from, to, tokenId) */\n      tag_159\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26324:26328  from */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26330:26332  to */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26334:26341  tokenId */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26311:26323  transferFrom */\n      tag_50\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26311:26342  transferFrom(from, to, tokenId) */\n      jump\t// in\n    tag_159:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26356:26370  to.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup4\n      and\n      extcodesize\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26356:26375  to.code.length != 0 */\n      iszero\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26352:26541  if (to.code.length != 0)... */\n      tag_164\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26394:26450  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      tag_161\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26425:26429  from */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26431:26433  to */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26435:26442  tokenId */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26444:26449  _data */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26394:26424  _checkContractOnERC721Received */\n      tag_162\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26394:26450  _checkContractOnERC721Received(from, to, tokenId, _data) */\n      jump\t// in\n    tag_161:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26389:26541  if (!_checkContractOnERC721Received(from, to, tokenId, _data)) {... */\n      tag_164\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26470:26526  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      tag_164\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26478:26525  TransferToNonERC721ReceiverImplementer.selector */\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26470:26477  _revert */\n      tag_104\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26470:26526  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      jump\t// in\n    tag_164:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":26142:26547  function safeTransferFrom(... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11710:12032  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n    tag_81:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11783:11796  string memory */\n      0x60\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11813:11829  _exists(tokenId) */\n      tag_166\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11821:11828  tokenId */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11813:11820  _exists */\n      tag_101\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11813:11829  _exists(tokenId) */\n      jump\t// in\n    tag_166:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11808:11876  if (!_exists(tokenId)) _revert(URIQueryForNonexistentToken.selector) */\n      tag_168\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11831:11876  _revert(URIQueryForNonexistentToken.selector) */\n      tag_168\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11839:11875  URIQueryForNonexistentToken.selector */\n      0xa14c4b5000000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11831:11838  _revert */\n      tag_104\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11831:11876  _revert(URIQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_168:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11887:11908  string memory baseURI */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11911:11921  _baseURI() */\n      tag_169\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":12353:12362  return '' */\n      0x40\n      dup1\n      mload\n      0x20\n      dup2\n      add\n      swap1\n      swap2\n      mstore\n      0x00\n      dup2\n      mstore\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":12277:12369  function _baseURI() internal view virtual returns (string memory) {... */\n      jump\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11911:11921  _baseURI() */\n    tag_169:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11887:11921  string memory baseURI = _baseURI() */\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11944:11951  baseURI */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11938:11959  bytes(baseURI).length */\n      mload\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11963:11964  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11938:11964  bytes(baseURI).length != 0 */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11938:12025  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      tag_171\n      jumpi\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      jump(tag_172)\n    tag_171:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11991:11998  baseURI */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":12000:12018  _toString(tokenId) */\n      tag_173\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":12010:12017  tokenId */\n      dup5\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":12000:12009  _toString */\n      tag_174\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":12000:12018  _toString(tokenId) */\n      jump\t// in\n    tag_173:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11974:12019  abi.encodePacked(baseURI, _toString(tokenId)) */\n      add(0x20, mload(0x40))\n      tag_175\n      swap3\n      swap2\n      swap1\n      tag_176\n      jump\t// in\n    tag_175:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11938:12025  bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n    tag_172:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11931:12025  return bytes(baseURI).length != 0 ? string(abi.encodePacked(baseURI, _toString(tokenId))) : '' */\n      swap4\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":11710:12032  function tokenURI(uint256 tokenId) public view virtual override returns (string memory) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19543:19903  function _exists(uint256 tokenId) internal view virtual returns (bool result) {... */\n    tag_101:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19608:19619  bool result */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19691:19704  _currentIndex */\n      dup1\n      sload\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19681:19688  tokenId */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19681:19704  tokenId < _currentIndex */\n      lt\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19677:19887  if (tokenId < _currentIndex) {... */\n      iszero\n      tag_181\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19724:19738  uint256 packed */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19756:19816  while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId */\n    tag_182:\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19773:19799  _packedOwnerships[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19773:19790  _packedOwnerships */\n      0x04\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19773:19799  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19763:19805  (packed = _packedOwnerships[tokenId]) == 0 */\n      dup2\n      swap1\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19756:19816  while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId */\n      tag_183\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19807:19816  --tokenId */\n      tag_184\n      dup4\n      tag_185\n      jump\t// in\n    tag_184:\n      swap3\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19756:19816  while ((packed = _packedOwnerships[tokenId]) == 0) --tokenId */\n      jump(tag_182)\n    tag_183:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":3408:3416  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19843:19867  packed & _BITMASK_BURNED */\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19843:19872  packed & _BITMASK_BURNED == 0 */\n      iszero\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19677:19887  if (tokenId < _currentIndex) {... */\n    tag_181:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19543:19903  function _exists(uint256 tokenId) internal view virtual returns (bool result) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44661:44821  function _revert(bytes4 errorSelector) internal pure {... */\n    tag_104:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44760:44773  errorSelector */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44754:44758  0x00 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44747:44774  mstore(0x00, errorSelector) */\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44800:44804  0x04 */\n      0x04\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44794:44798  0x00 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44787:44805  revert(0x00, 0x04) */\n      revert\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36309:36769  function _approve(... */\n    tag_107:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36433:36446  address owner */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36449:36465  ownerOf(tokenId) */\n      tag_188\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36457:36464  tokenId */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36449:36456  ownerOf */\n      tag_57\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36449:36465  ownerOf(tokenId) */\n      jump\t// in\n    tag_188:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36433:36465  address owner = ownerOf(tokenId) */\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36480:36493  approvalCheck */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36480:36525  approvalCheck && _msgSenderERC721A() != owner */\n      dup1\n      iszero\n      tag_189\n      jumpi\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":42777:42787  msg.sender */\n      caller\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36497:36525  _msgSenderERC721A() != owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n      eq\n      iszero\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36480:36525  approvalCheck && _msgSenderERC721A() != owner */\n    tag_189:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36476:36674  if (approvalCheck && _msgSenderERC721A() != owner)... */\n      iszero\n      tag_195\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36544:36588  isApprovedForAll(owner, _msgSenderERC721A()) */\n      tag_192\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36561:36566  owner */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":42777:42787  msg.sender */\n      caller\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":19132:19294  function isApprovedForAll(address owner, address operator) public view virtual override returns (bool) {... */\n      tag_85\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36544:36588  isApprovedForAll(owner, _msgSenderERC721A()) */\n    tag_192:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36539:36674  if (!isApprovedForAll(owner, _msgSenderERC721A())) {... */\n      tag_195\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36608:36659  _revert(ApprovalCallerNotOwnerNorApproved.selector) */\n      tag_195\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36616:36658  ApprovalCallerNotOwnerNorApproved.selector */\n      0xcfb3b94200000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36608:36615  _revert */\n      tag_104\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36608:36659  _revert(ApprovalCallerNotOwnerNorApproved.selector) */\n      jump\t// in\n    tag_195:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36684:36708  _tokenApprovals[tokenId] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36684:36699  _tokenApprovals */\n      0x06\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36684:36708  _tokenApprovals[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36684:36719  _tokenApprovals[tokenId].value = to */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup9\n      dup2\n      and\n      swap2\n      dup3\n      or\n      swap1\n      swap3\n      sstore\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36734:36762  Approval(owner, to, tokenId) */\n      swap2\n      mload\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36684:36708  _tokenApprovals[tokenId] */\n      dup7\n      swap4\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36734:36762  Approval(owner, to, tokenId) */\n      swap2\n      dup6\n      and\n      swap2\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap2\n      log4\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36423:36769  {... */\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":36309:36769  function _approve(... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14140:16118  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {... */\n    tag_113:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14288:14314  _packedOwnerships[tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14288:14305  _packedOwnerships */\n      0x04\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14288:14314  _packedOwnerships[tokenId] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14412:14423  packed == 0 */\n      dup2\n      swap1\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14408:15678  if (packed == 0) {... */\n      tag_200\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14458:14471  _currentIndex */\n      sload(0x00)\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14447:14454  tokenId */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14447:14471  tokenId >= _currentIndex */\n      lt\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14443:14520  if (tokenId >= _currentIndex) _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_202\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14473:14520  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_202\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14481:14519  OwnerQueryForNonexistentToken.selector */\n      0xdf2d9b4200000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14473:14480  _revert */\n      tag_104\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14473:14520  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_202:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15067:15664  for (;;) {... */\n    tag_203:\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15161:15170  --tokenId */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      add\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15143:15171  _packedOwnerships[--tokenId] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15143:15160  _packedOwnerships */\n      0x04\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15143:15171  _packedOwnerships[--tokenId] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15215:15240  if (packed == 0) continue */\n      dup1\n      iszero\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15067:15664  for (;;) {... */\n      tag_203\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15215:15240  if (packed == 0) continue */\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":3408:3416  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15266:15272  packed */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15266:15290  packed & _BITMASK_BURNED */\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15294:15295  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15266:15295  packed & _BITMASK_BURNED == 0 */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15262:15310  if (packed & _BITMASK_BURNED == 0) return packed */\n      tag_207\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14140:16118  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15262:15310  if (packed & _BITMASK_BURNED == 0) return packed */\n    tag_207:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15598:15645  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_208\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15606:15644  OwnerQueryForNonexistentToken.selector */\n      0xdf2d9b4200000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15598:15605  _revert */\n      tag_104\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15598:15645  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n    tag_208:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15067:15664  for (;;) {... */\n      jump(tag_203)\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14408:15678  if (packed == 0) {... */\n    tag_200:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":3408:3416  1 << 224 */\n      0x0100000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":16000:16006  packed */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":16000:16024  packed & _BITMASK_BURNED */\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":16028:16029  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":16000:16029  packed & _BITMASK_BURNED == 0 */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15996:16044  if (packed & _BITMASK_BURNED == 0) return packed */\n      tag_209\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":14140:16118  function _packedOwnershipOf(uint256 tokenId) private view returns (uint256 packed) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":15996:16044  if (packed & _BITMASK_BURNED == 0) return packed */\n    tag_209:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":16064:16111  _revert(OwnerQueryForNonexistentToken.selector) */\n      tag_181\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":16072:16110  OwnerQueryForNonexistentToken.selector */\n      0xdf2d9b4200000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":16064:16071  _revert */\n      tag_104\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":16064:16111  _revert(OwnerQueryForNonexistentToken.selector) */\n      jump\t// in\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":28573:29246  function _checkContractOnERC721Received(... */\n    tag_162:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":28751:28839  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      mload(0x40)\n      0x150b7a0200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":28731:28735  bool */\n      0x00\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":28751:28796  ERC721A__IERC721Receiver(to).onERC721Received */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup6\n      and\n      swap1\n      0x150b7a02\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":28751:28839  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      tag_222\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":42777:42787  msg.sender */\n      caller\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":28818:28822  from */\n      dup10\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":28824:28831  tokenId */\n      dup9\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":28833:28838  _data */\n      dup9\n      swap1\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":28751:28839  ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) */\n      0x04\n      add\n      tag_223\n      jump\t// in\n    tag_222:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_224\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_225\n      swap2\n      dup2\n      add\n      swap1\n      tag_226\n      jump\t// in\n    tag_225:\n      0x01\n    tag_224:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":28747:29240  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n      tag_227\n      jumpi\n      returndatasize\n      dup1\n      dup1\n      iszero\n      tag_232\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_231)\n    tag_232:\n      0x60\n      swap2\n      pop\n    tag_231:\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":29029:29035  reason */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":29029:29042  reason.length */\n      mload\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":29046:29047  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":29029:29047  reason.length == 0 */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":29025:29138  if (reason.length == 0) {... */\n      tag_234\n      jumpi\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":29067:29123  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      tag_234\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":29075:29122  TransferToNonERC721ReceiverImplementer.selector */\n      0xd1a57ed600000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":29067:29074  _revert */\n      tag_104\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":29067:29123  _revert(TransferToNonERC721ReceiverImplementer.selector) */\n      jump\t// in\n    tag_234:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":29208:29214  reason */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":29202:29215  mload(reason) */\n      mload\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":29193:29199  reason */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":29189:29191  32 */\n      0x20\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":29185:29200  add(32, reason) */\n      add\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":29178:29216  revert(add(32, reason), mload(reason)) */\n      revert\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":28747:29240  try ERC721A__IERC721Receiver(to).onERC721Received(_msgSenderERC721A(), from, tokenId, _data) returns (... */\n    tag_227:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":28907:28971  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n      and\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":28917:28971  ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      0x150b7a0200000000000000000000000000000000000000000000000000000000\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":28907:28971  retval == ERC721A__IERC721Receiver(to).onERC721Received.selector */\n      eq\n      swap1\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":28573:29246  function _checkContractOnERC721Received(... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":42891:44599  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n    tag_174:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":42956:42973  string memory str */\n      0x60\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43384:43388  0xa0 */\n      0xa0\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43377:43381  0x40 */\n      0x40\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43371:43382  mload(0x40) */\n      mload\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43367:43389  add(mload(0x40), 0xa0) */\n      add\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43474:43475  m */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43468:43472  0x40 */\n      0x40\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43461:43476  mstore(0x40, m) */\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43547:43551  0x20 */\n      0x20\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43544:43545  m */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43540:43552  sub(m, 0x20) */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43533:43552  str := sub(m, 0x20) */\n      swap2\n      pop\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43627:43628  0 */\n      0x00\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43622:43625  str */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43615:43629  mstore(str, 0) */\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43728:43731  str */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43962:43967  value */\n      dup3\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43944:44363  for { let temp := value } 1 {} {... */\n    tag_238:\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44009:44010  1 */\n      0x01\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44004:44007  str */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44000:44011  sub(str, 1) */\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43993:44011  str := sub(str, 1) */\n      swap3\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44177:44179  10 */\n      0x0a\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44171:44175  temp */\n      dup2\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44167:44180  mod(temp, 10) */\n      mod\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44163:44165  48 */\n      0x30\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44159:44181  add(48, mod(temp, 10)) */\n      add\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44154:44157  str */\n      dup4\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44146:44182  mstore8(str, add(48, mod(temp, 10))) */\n      mstore8\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44269:44271  10 */\n      0x0a\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44259:44272  div(temp, 10) */\n      swap1\n      div\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44324:44349  if iszero(temp) { break } */\n      dup1\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":43944:44363  for { let temp := value } 1 {} {... */\n      tag_238\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44324:44349  if iszero(temp) { break } */\n      jumpi\n      pop\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44391:44404  sub(end, str) */\n      dup2\n      swap1\n      sub\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44504:44518  sub(str, 0x20) */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n      swap1\n      swap2\n      add\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44564:44583  mstore(str, length) */\n      swap1\n      dup2\n      mstore\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":44504:44518  sub(str, 0x20) */\n      swap2\n        /* \"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":42891:44599  function _toString(uint256 value) internal pure virtual returns (string memory str) {... */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:191   */\n    tag_243:\n        /* \"#utility.yul\":99:165   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":92:97   */\n      dup2\n        /* \"#utility.yul\":88:166   */\n      and\n        /* \"#utility.yul\":81:86   */\n      dup2\n        /* \"#utility.yul\":78:167   */\n      eq\n        /* \"#utility.yul\":68:185   */\n      tag_250\n      jumpi\n        /* \"#utility.yul\":181:182   */\n      0x00\n        /* \"#utility.yul\":178:179   */\n      dup1\n        /* \"#utility.yul\":171:183   */\n      revert\n        /* \"#utility.yul\":68:185   */\n    tag_250:\n        /* \"#utility.yul\":14:191   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":196:441   */\n    tag_22:\n        /* \"#utility.yul\":254:260   */\n      0x00\n        /* \"#utility.yul\":307:309   */\n      0x20\n        /* \"#utility.yul\":295:304   */\n      dup3\n        /* \"#utility.yul\":286:293   */\n      dup5\n        /* \"#utility.yul\":282:305   */\n      sub\n        /* \"#utility.yul\":278:310   */\n      slt\n        /* \"#utility.yul\":275:327   */\n      iszero\n      tag_252\n      jumpi\n        /* \"#utility.yul\":323:324   */\n      0x00\n        /* \"#utility.yul\":320:321   */\n      dup1\n        /* \"#utility.yul\":313:325   */\n      revert\n        /* \"#utility.yul\":275:327   */\n    tag_252:\n        /* \"#utility.yul\":362:371   */\n      dup2\n        /* \"#utility.yul\":349:372   */\n      calldataload\n        /* \"#utility.yul\":381:411   */\n      tag_172\n        /* \"#utility.yul\":405:410   */\n      dup2\n        /* \"#utility.yul\":381:411   */\n      tag_243\n      jump\t// in\n        /* \"#utility.yul\":638:888   */\n    tag_244:\n        /* \"#utility.yul\":723:724   */\n      0x00\n        /* \"#utility.yul\":733:846   */\n    tag_256:\n        /* \"#utility.yul\":747:753   */\n      dup4\n        /* \"#utility.yul\":744:745   */\n      dup2\n        /* \"#utility.yul\":741:754   */\n      lt\n        /* \"#utility.yul\":733:846   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":823:834   */\n      dup2\n      dup2\n      add\n        /* \"#utility.yul\":817:835   */\n      mload\n        /* \"#utility.yul\":804:815   */\n      dup4\n      dup3\n      add\n        /* \"#utility.yul\":797:836   */\n      mstore\n        /* \"#utility.yul\":769:771   */\n      0x20\n        /* \"#utility.yul\":762:772   */\n      add\n        /* \"#utility.yul\":733:846   */\n      jump(tag_256)\n    tag_258:\n      pop\n      pop\n        /* \"#utility.yul\":880:881   */\n      0x00\n        /* \"#utility.yul\":862:878   */\n      swap2\n      add\n        /* \"#utility.yul\":855:882   */\n      mstore\n        /* \"#utility.yul\":638:888   */\n      jump\t// out\n        /* \"#utility.yul\":893:1223   */\n    tag_245:\n        /* \"#utility.yul\":935:938   */\n      0x00\n        /* \"#utility.yul\":973:978   */\n      dup2\n        /* \"#utility.yul\":967:979   */\n      mload\n        /* \"#utility.yul\":1000:1006   */\n      dup1\n        /* \"#utility.yul\":995:998   */\n      dup5\n        /* \"#utility.yul\":988:1007   */\n      mstore\n        /* \"#utility.yul\":1016:1092   */\n      tag_260\n        /* \"#utility.yul\":1085:1091   */\n      dup2\n        /* \"#utility.yul\":1078:1082   */\n      0x20\n        /* \"#utility.yul\":1073:1076   */\n      dup7\n        /* \"#utility.yul\":1069:1083   */\n      add\n        /* \"#utility.yul\":1062:1066   */\n      0x20\n        /* \"#utility.yul\":1055:1060   */\n      dup7\n        /* \"#utility.yul\":1051:1067   */\n      add\n        /* \"#utility.yul\":1016:1092   */\n      tag_244\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":1137:1139   */\n      0x1f\n        /* \"#utility.yul\":1125:1140   */\n      add\n        /* \"#utility.yul\":1142:1208   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":1121:1209   */\n      and\n        /* \"#utility.yul\":1112:1210   */\n      swap3\n      swap1\n      swap3\n      add\n        /* \"#utility.yul\":1212:1216   */\n      0x20\n        /* \"#utility.yul\":1108:1217   */\n      add\n      swap3\n        /* \"#utility.yul\":893:1223   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1228:1448   */\n    tag_30:\n        /* \"#utility.yul\":1377:1379   */\n      0x20\n        /* \"#utility.yul\":1366:1375   */\n      dup2\n        /* \"#utility.yul\":1359:1380   */\n      mstore\n        /* \"#utility.yul\":1340:1344   */\n      0x00\n        /* \"#utility.yul\":1397:1442   */\n      tag_172\n        /* \"#utility.yul\":1438:1440   */\n      0x20\n        /* \"#utility.yul\":1427:1436   */\n      dup4\n        /* \"#utility.yul\":1423:1441   */\n      add\n        /* \"#utility.yul\":1415:1421   */\n      dup5\n        /* \"#utility.yul\":1397:1442   */\n      tag_245\n      jump\t// in\n        /* \"#utility.yul\":1453:1679   */\n    tag_34:\n        /* \"#utility.yul\":1512:1518   */\n      0x00\n        /* \"#utility.yul\":1565:1567   */\n      0x20\n        /* \"#utility.yul\":1553:1562   */\n      dup3\n        /* \"#utility.yul\":1544:1551   */\n      dup5\n        /* \"#utility.yul\":1540:1563   */\n      sub\n        /* \"#utility.yul\":1536:1568   */\n      slt\n        /* \"#utility.yul\":1533:1585   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":1581:1582   */\n      0x00\n        /* \"#utility.yul\":1578:1579   */\n      dup1\n        /* \"#utility.yul\":1571:1583   */\n      revert\n        /* \"#utility.yul\":1533:1585   */\n    tag_264:\n      pop\n        /* \"#utility.yul\":1626:1649   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1453:1679   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1915:2111   */\n    tag_246:\n        /* \"#utility.yul\":1983:2003   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":2043:2085   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2032:2086   */\n      dup2\n      and\n        /* \"#utility.yul\":2022:2087   */\n      dup2\n      eq\n        /* \"#utility.yul\":2012:2105   */\n      tag_181\n      jumpi\n        /* \"#utility.yul\":2101:2102   */\n      0x00\n        /* \"#utility.yul\":2098:2099   */\n      dup1\n        /* \"#utility.yul\":2091:2103   */\n      revert\n        /* \"#utility.yul\":2116:2416   */\n    tag_40:\n        /* \"#utility.yul\":2184:2190   */\n      0x00\n        /* \"#utility.yul\":2192:2198   */\n      dup1\n        /* \"#utility.yul\":2245:2247   */\n      0x40\n        /* \"#utility.yul\":2233:2242   */\n      dup4\n        /* \"#utility.yul\":2224:2231   */\n      dup6\n        /* \"#utility.yul\":2220:2243   */\n      sub\n        /* \"#utility.yul\":2216:2248   */\n      slt\n        /* \"#utility.yul\":2213:2265   */\n      iszero\n      tag_269\n      jumpi\n        /* \"#utility.yul\":2261:2262   */\n      0x00\n        /* \"#utility.yul\":2258:2259   */\n      dup1\n        /* \"#utility.yul\":2251:2263   */\n      revert\n        /* \"#utility.yul\":2213:2265   */\n    tag_269:\n        /* \"#utility.yul\":2284:2313   */\n      tag_270\n        /* \"#utility.yul\":2303:2312   */\n      dup4\n        /* \"#utility.yul\":2284:2313   */\n      tag_246\n      jump\t// in\n    tag_270:\n        /* \"#utility.yul\":2274:2313   */\n      swap5\n        /* \"#utility.yul\":2382:2384   */\n      0x20\n        /* \"#utility.yul\":2367:2385   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":2354:2386   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2116:2416   */\n      jump\t// out\n        /* \"#utility.yul\":2603:2977   */\n    tag_49:\n        /* \"#utility.yul\":2680:2686   */\n      0x00\n        /* \"#utility.yul\":2688:2694   */\n      dup1\n        /* \"#utility.yul\":2696:2702   */\n      0x00\n        /* \"#utility.yul\":2749:2751   */\n      0x60\n        /* \"#utility.yul\":2737:2746   */\n      dup5\n        /* \"#utility.yul\":2728:2735   */\n      dup7\n        /* \"#utility.yul\":2724:2747   */\n      sub\n        /* \"#utility.yul\":2720:2752   */\n      slt\n        /* \"#utility.yul\":2717:2769   */\n      iszero\n      tag_273\n      jumpi\n        /* \"#utility.yul\":2765:2766   */\n      0x00\n        /* \"#utility.yul\":2762:2763   */\n      dup1\n        /* \"#utility.yul\":2755:2767   */\n      revert\n        /* \"#utility.yul\":2717:2769   */\n    tag_273:\n        /* \"#utility.yul\":2788:2817   */\n      tag_274\n        /* \"#utility.yul\":2807:2816   */\n      dup5\n        /* \"#utility.yul\":2788:2817   */\n      tag_246\n      jump\t// in\n    tag_274:\n        /* \"#utility.yul\":2778:2817   */\n      swap3\n      pop\n        /* \"#utility.yul\":2836:2874   */\n      tag_275\n        /* \"#utility.yul\":2870:2872   */\n      0x20\n        /* \"#utility.yul\":2859:2868   */\n      dup6\n        /* \"#utility.yul\":2855:2873   */\n      add\n        /* \"#utility.yul\":2836:2874   */\n      tag_246\n      jump\t// in\n    tag_275:\n        /* \"#utility.yul\":2603:2977   */\n      swap3\n      swap6\n        /* \"#utility.yul\":2826:2874   */\n      swap3\n      swap5\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2943:2945   */\n      0x40\n        /* \"#utility.yul\":2928:2946   */\n      swap2\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":2915:2947   */\n      calldataload\n      swap1\n        /* \"#utility.yul\":2603:2977   */\n      jump\t// out\n        /* \"#utility.yul\":2982:3168   */\n    tag_62:\n        /* \"#utility.yul\":3041:3047   */\n      0x00\n        /* \"#utility.yul\":3094:3096   */\n      0x20\n        /* \"#utility.yul\":3082:3091   */\n      dup3\n        /* \"#utility.yul\":3073:3080   */\n      dup5\n        /* \"#utility.yul\":3069:3092   */\n      sub\n        /* \"#utility.yul\":3065:3097   */\n      slt\n        /* \"#utility.yul\":3062:3114   */\n      iszero\n      tag_277\n      jumpi\n        /* \"#utility.yul\":3110:3111   */\n      0x00\n        /* \"#utility.yul\":3107:3108   */\n      dup1\n        /* \"#utility.yul\":3100:3112   */\n      revert\n        /* \"#utility.yul\":3062:3114   */\n    tag_277:\n        /* \"#utility.yul\":3133:3162   */\n      tag_172\n        /* \"#utility.yul\":3152:3161   */\n      dup3\n        /* \"#utility.yul\":3133:3162   */\n      tag_246\n      jump\t// in\n        /* \"#utility.yul\":3173:3520   */\n    tag_72:\n        /* \"#utility.yul\":3238:3244   */\n      0x00\n        /* \"#utility.yul\":3246:3252   */\n      dup1\n        /* \"#utility.yul\":3299:3301   */\n      0x40\n        /* \"#utility.yul\":3287:3296   */\n      dup4\n        /* \"#utility.yul\":3278:3285   */\n      dup6\n        /* \"#utility.yul\":3274:3297   */\n      sub\n        /* \"#utility.yul\":3270:3302   */\n      slt\n        /* \"#utility.yul\":3267:3319   */\n      iszero\n      tag_280\n      jumpi\n        /* \"#utility.yul\":3315:3316   */\n      0x00\n        /* \"#utility.yul\":3312:3313   */\n      dup1\n        /* \"#utility.yul\":3305:3317   */\n      revert\n        /* \"#utility.yul\":3267:3319   */\n    tag_280:\n        /* \"#utility.yul\":3338:3367   */\n      tag_281\n        /* \"#utility.yul\":3357:3366   */\n      dup4\n        /* \"#utility.yul\":3338:3367   */\n      tag_246\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":3328:3367   */\n      swap2\n      pop\n        /* \"#utility.yul\":3417:3419   */\n      0x20\n        /* \"#utility.yul\":3406:3415   */\n      dup4\n        /* \"#utility.yul\":3402:3420   */\n      add\n        /* \"#utility.yul\":3389:3421   */\n      calldataload\n        /* \"#utility.yul\":3464:3469   */\n      dup1\n        /* \"#utility.yul\":3457:3470   */\n      iszero\n        /* \"#utility.yul\":3450:3471   */\n      iszero\n        /* \"#utility.yul\":3443:3448   */\n      dup2\n        /* \"#utility.yul\":3440:3472   */\n      eq\n        /* \"#utility.yul\":3430:3490   */\n      tag_282\n      jumpi\n        /* \"#utility.yul\":3486:3487   */\n      0x00\n        /* \"#utility.yul\":3483:3484   */\n      dup1\n        /* \"#utility.yul\":3476:3488   */\n      revert\n        /* \"#utility.yul\":3430:3490   */\n    tag_282:\n        /* \"#utility.yul\":3509:3514   */\n      dup1\n        /* \"#utility.yul\":3499:3514   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3173:3520   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3525:3709   */\n    tag_247:\n        /* \"#utility.yul\":3577:3654   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":3574:3575   */\n      0x00\n        /* \"#utility.yul\":3567:3655   */\n      mstore\n        /* \"#utility.yul\":3674:3678   */\n      0x41\n        /* \"#utility.yul\":3671:3672   */\n      0x04\n        /* \"#utility.yul\":3664:3679   */\n      mstore\n        /* \"#utility.yul\":3698:3702   */\n      0x24\n        /* \"#utility.yul\":3695:3696   */\n      0x00\n        /* \"#utility.yul\":3688:3703   */\n      revert\n        /* \"#utility.yul\":3714:5039   */\n    tag_76:\n        /* \"#utility.yul\":3809:3815   */\n      0x00\n        /* \"#utility.yul\":3817:3823   */\n      dup1\n        /* \"#utility.yul\":3825:3831   */\n      0x00\n        /* \"#utility.yul\":3833:3839   */\n      dup1\n        /* \"#utility.yul\":3886:3889   */\n      0x80\n        /* \"#utility.yul\":3874:3883   */\n      dup6\n        /* \"#utility.yul\":3865:3872   */\n      dup8\n        /* \"#utility.yul\":3861:3884   */\n      sub\n        /* \"#utility.yul\":3857:3890   */\n      slt\n        /* \"#utility.yul\":3854:3907   */\n      iszero\n      tag_285\n      jumpi\n        /* \"#utility.yul\":3903:3904   */\n      0x00\n        /* \"#utility.yul\":3900:3901   */\n      dup1\n        /* \"#utility.yul\":3893:3905   */\n      revert\n        /* \"#utility.yul\":3854:3907   */\n    tag_285:\n        /* \"#utility.yul\":3926:3955   */\n      tag_286\n        /* \"#utility.yul\":3945:3954   */\n      dup6\n        /* \"#utility.yul\":3926:3955   */\n      tag_246\n      jump\t// in\n    tag_286:\n        /* \"#utility.yul\":3916:3955   */\n      swap4\n      pop\n        /* \"#utility.yul\":3974:4012   */\n      tag_287\n        /* \"#utility.yul\":4008:4010   */\n      0x20\n        /* \"#utility.yul\":3997:4006   */\n      dup7\n        /* \"#utility.yul\":3993:4011   */\n      add\n        /* \"#utility.yul\":3974:4012   */\n      tag_246\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":3964:4012   */\n      swap3\n      pop\n        /* \"#utility.yul\":4081:4083   */\n      0x40\n        /* \"#utility.yul\":4066:4084   */\n      dup6\n      add\n        /* \"#utility.yul\":4053:4085   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":4160:4162   */\n      0x60\n        /* \"#utility.yul\":4145:4163   */\n      dup6\n      add\n        /* \"#utility.yul\":4132:4164   */\n      calldataload\n        /* \"#utility.yul\":4187:4205   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4176:4206   */\n      dup2\n      gt\n        /* \"#utility.yul\":4173:4223   */\n      iszero\n      tag_288\n      jumpi\n        /* \"#utility.yul\":4219:4220   */\n      0x00\n        /* \"#utility.yul\":4216:4217   */\n      dup1\n        /* \"#utility.yul\":4209:4221   */\n      revert\n        /* \"#utility.yul\":4173:4223   */\n    tag_288:\n        /* \"#utility.yul\":4242:4264   */\n      dup6\n      add\n        /* \"#utility.yul\":4295:4299   */\n      0x1f\n        /* \"#utility.yul\":4287:4300   */\n      dup2\n      add\n        /* \"#utility.yul\":4283:4310   */\n      dup8\n      sgt\n        /* \"#utility.yul\":4273:4328   */\n      tag_289\n      jumpi\n        /* \"#utility.yul\":4324:4325   */\n      0x00\n        /* \"#utility.yul\":4321:4322   */\n      dup1\n        /* \"#utility.yul\":4314:4326   */\n      revert\n        /* \"#utility.yul\":4273:4328   */\n    tag_289:\n        /* \"#utility.yul\":4364:4366   */\n      dup1\n        /* \"#utility.yul\":4351:4367   */\n      calldataload\n        /* \"#utility.yul\":4390:4408   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4382:4388   */\n      dup2\n        /* \"#utility.yul\":4379:4409   */\n      gt\n        /* \"#utility.yul\":4376:4432   */\n      iszero\n      tag_291\n      jumpi\n        /* \"#utility.yul\":4412:4430   */\n      tag_291\n      tag_247\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":4461:4463   */\n      0x40\n        /* \"#utility.yul\":4455:4464   */\n      mload\n        /* \"#utility.yul\":4608:4674   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":4603:4605   */\n      0x3f\n        /* \"#utility.yul\":4534:4600   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0\n        /* \"#utility.yul\":4527:4531   */\n      0x1f\n        /* \"#utility.yul\":4519:4525   */\n      dup6\n        /* \"#utility.yul\":4515:4532   */\n      add\n        /* \"#utility.yul\":4511:4601   */\n      and\n        /* \"#utility.yul\":4507:4606   */\n      add\n        /* \"#utility.yul\":4503:4675   */\n      and\n        /* \"#utility.yul\":4495:4501   */\n      dup2\n        /* \"#utility.yul\":4491:4676   */\n      add\n        /* \"#utility.yul\":4742:4748   */\n      dup2\n        /* \"#utility.yul\":4730:4740   */\n      dup2\n        /* \"#utility.yul\":4727:4749   */\n      lt\n        /* \"#utility.yul\":4706:4724   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4694:4704   */\n      dup3\n        /* \"#utility.yul\":4691:4725   */\n      gt\n        /* \"#utility.yul\":4688:4750   */\n      or\n        /* \"#utility.yul\":4685:4773   */\n      iszero\n      tag_293\n      jumpi\n        /* \"#utility.yul\":4753:4771   */\n      tag_293\n      tag_247\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":4789:4791   */\n      0x40\n        /* \"#utility.yul\":4782:4804   */\n      mstore\n        /* \"#utility.yul\":4813:4835   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":4854:4869   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":4871:4873   */\n      0x20\n        /* \"#utility.yul\":4850:4874   */\n      add\n        /* \"#utility.yul\":4847:4884   */\n      dup10\n      lt\n        /* \"#utility.yul\":4844:4901   */\n      iszero\n      tag_294\n      jumpi\n        /* \"#utility.yul\":4897:4898   */\n      0x00\n        /* \"#utility.yul\":4894:4895   */\n      dup1\n        /* \"#utility.yul\":4887:4899   */\n      revert\n        /* \"#utility.yul\":4844:4901   */\n    tag_294:\n        /* \"#utility.yul\":4953:4959   */\n      dup2\n        /* \"#utility.yul\":4948:4950   */\n      0x20\n        /* \"#utility.yul\":4944:4946   */\n      dup5\n        /* \"#utility.yul\":4940:4951   */\n      add\n        /* \"#utility.yul\":4935:4937   */\n      0x20\n        /* \"#utility.yul\":4927:4933   */\n      dup4\n        /* \"#utility.yul\":4923:4938   */\n      add\n        /* \"#utility.yul\":4910:4960   */\n      calldatacopy\n        /* \"#utility.yul\":5006:5007   */\n      0x00\n        /* \"#utility.yul\":5001:5003   */\n      0x20\n        /* \"#utility.yul\":4992:4998   */\n      dup4\n        /* \"#utility.yul\":4984:4990   */\n      dup4\n        /* \"#utility.yul\":4980:4999   */\n      add\n        /* \"#utility.yul\":4976:5004   */\n      add\n        /* \"#utility.yul\":4969:5008   */\n      mstore\n        /* \"#utility.yul\":5027:5033   */\n      dup1\n        /* \"#utility.yul\":5017:5033   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3714:5039   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5044:5304   */\n    tag_86:\n        /* \"#utility.yul\":5112:5118   */\n      0x00\n        /* \"#utility.yul\":5120:5126   */\n      dup1\n        /* \"#utility.yul\":5173:5175   */\n      0x40\n        /* \"#utility.yul\":5161:5170   */\n      dup4\n        /* \"#utility.yul\":5152:5159   */\n      dup6\n        /* \"#utility.yul\":5148:5171   */\n      sub\n        /* \"#utility.yul\":5144:5176   */\n      slt\n        /* \"#utility.yul\":5141:5193   */\n      iszero\n      tag_296\n      jumpi\n        /* \"#utility.yul\":5189:5190   */\n      0x00\n        /* \"#utility.yul\":5186:5187   */\n      dup1\n        /* \"#utility.yul\":5179:5191   */\n      revert\n        /* \"#utility.yul\":5141:5193   */\n    tag_296:\n        /* \"#utility.yul\":5212:5241   */\n      tag_297\n        /* \"#utility.yul\":5231:5240   */\n      dup4\n        /* \"#utility.yul\":5212:5241   */\n      tag_246\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":5202:5241   */\n      swap2\n      pop\n        /* \"#utility.yul\":5260:5298   */\n      tag_298\n        /* \"#utility.yul\":5294:5296   */\n      0x20\n        /* \"#utility.yul\":5283:5292   */\n      dup5\n        /* \"#utility.yul\":5279:5297   */\n      add\n        /* \"#utility.yul\":5260:5298   */\n      tag_246\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":5250:5298   */\n      swap1\n      pop\n        /* \"#utility.yul\":5044:5304   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5309:5746   */\n    tag_94:\n        /* \"#utility.yul\":5388:5389   */\n      0x01\n        /* \"#utility.yul\":5384:5396   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":5431:5443   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":5452:5513   */\n      tag_300\n      jumpi\n        /* \"#utility.yul\":5506:5510   */\n      0x7f\n        /* \"#utility.yul\":5498:5504   */\n      dup3\n        /* \"#utility.yul\":5494:5511   */\n      and\n        /* \"#utility.yul\":5484:5511   */\n      swap2\n      pop\n        /* \"#utility.yul\":5452:5513   */\n    tag_300:\n        /* \"#utility.yul\":5559:5561   */\n      0x20\n        /* \"#utility.yul\":5551:5557   */\n      dup3\n        /* \"#utility.yul\":5548:5562   */\n      lt\n        /* \"#utility.yul\":5528:5546   */\n      dup2\n        /* \"#utility.yul\":5525:5563   */\n      sub\n        /* \"#utility.yul\":5522:5740   */\n      tag_301\n      jumpi\n        /* \"#utility.yul\":5596:5673   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5593:5594   */\n      0x00\n        /* \"#utility.yul\":5586:5674   */\n      mstore\n        /* \"#utility.yul\":5697:5701   */\n      0x22\n        /* \"#utility.yul\":5694:5695   */\n      0x04\n        /* \"#utility.yul\":5687:5702   */\n      mstore\n        /* \"#utility.yul\":5725:5729   */\n      0x24\n        /* \"#utility.yul\":5722:5723   */\n      0x00\n        /* \"#utility.yul\":5715:5730   */\n      revert\n        /* \"#utility.yul\":5522:5740   */\n    tag_301:\n      pop\n        /* \"#utility.yul\":5309:5746   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5751:6247   */\n    tag_176:\n        /* \"#utility.yul\":5930:5933   */\n      0x00\n        /* \"#utility.yul\":5968:5974   */\n      dup4\n        /* \"#utility.yul\":5962:5975   */\n      mload\n        /* \"#utility.yul\":5984:6050   */\n      tag_303\n        /* \"#utility.yul\":6043:6049   */\n      dup2\n        /* \"#utility.yul\":6038:6041   */\n      dup5\n        /* \"#utility.yul\":6031:6035   */\n      0x20\n        /* \"#utility.yul\":6023:6029   */\n      dup9\n        /* \"#utility.yul\":6019:6036   */\n      add\n        /* \"#utility.yul\":5984:6050   */\n      tag_244\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":6113:6126   */\n      dup4\n      mload\n        /* \"#utility.yul\":6072:6088   */\n      swap1\n      dup4\n      add\n      swap1\n        /* \"#utility.yul\":6135:6205   */\n      tag_304\n        /* \"#utility.yul\":6113:6126   */\n      dup2\n        /* \"#utility.yul\":6072:6088   */\n      dup4\n        /* \"#utility.yul\":6182:6186   */\n      0x20\n        /* \"#utility.yul\":6170:6187   */\n      dup9\n      add\n        /* \"#utility.yul\":6135:6205   */\n      tag_244\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":6221:6241   */\n      add\n      swap5\n        /* \"#utility.yul\":5751:6247   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6252:6602   */\n    tag_185:\n        /* \"#utility.yul\":6291:6294   */\n      0x00\n        /* \"#utility.yul\":6319:6324   */\n      dup2\n        /* \"#utility.yul\":6309:6502   */\n      tag_306\n      jumpi\n        /* \"#utility.yul\":6358:6435   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6355:6356   */\n      0x00\n        /* \"#utility.yul\":6348:6436   */\n      mstore\n        /* \"#utility.yul\":6459:6463   */\n      0x11\n        /* \"#utility.yul\":6456:6457   */\n      0x04\n        /* \"#utility.yul\":6449:6464   */\n      mstore\n        /* \"#utility.yul\":6487:6491   */\n      0x24\n        /* \"#utility.yul\":6484:6485   */\n      0x00\n        /* \"#utility.yul\":6477:6492   */\n      revert\n        /* \"#utility.yul\":6309:6502   */\n    tag_306:\n      pop\n        /* \"#utility.yul\":6529:6595   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6518:6596   */\n      add\n      swap1\n        /* \"#utility.yul\":6252:6602   */\n      jump\t// out\n        /* \"#utility.yul\":6607:7138   */\n    tag_223:\n        /* \"#utility.yul\":6850:6892   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6842:6848   */\n      dup6\n        /* \"#utility.yul\":6838:6893   */\n      and\n        /* \"#utility.yul\":6827:6836   */\n      dup2\n        /* \"#utility.yul\":6820:6894   */\n      mstore\n        /* \"#utility.yul\":6942:6984   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6934:6940   */\n      dup5\n        /* \"#utility.yul\":6930:6985   */\n      and\n        /* \"#utility.yul\":6925:6927   */\n      0x20\n        /* \"#utility.yul\":6914:6923   */\n      dup3\n        /* \"#utility.yul\":6910:6928   */\n      add\n        /* \"#utility.yul\":6903:6986   */\n      mstore\n        /* \"#utility.yul\":7022:7028   */\n      dup3\n        /* \"#utility.yul\":7017:7019   */\n      0x40\n        /* \"#utility.yul\":7006:7015   */\n      dup3\n        /* \"#utility.yul\":7002:7020   */\n      add\n        /* \"#utility.yul\":6995:7029   */\n      mstore\n        /* \"#utility.yul\":7065:7068   */\n      0x80\n        /* \"#utility.yul\":7060:7062   */\n      0x60\n        /* \"#utility.yul\":7049:7058   */\n      dup3\n        /* \"#utility.yul\":7045:7063   */\n      add\n        /* \"#utility.yul\":7038:7069   */\n      mstore\n        /* \"#utility.yul\":6801:6805   */\n      0x00\n        /* \"#utility.yul\":7086:7132   */\n      tag_308\n        /* \"#utility.yul\":7127:7130   */\n      0x80\n        /* \"#utility.yul\":7116:7125   */\n      dup4\n        /* \"#utility.yul\":7112:7131   */\n      add\n        /* \"#utility.yul\":7104:7110   */\n      dup5\n        /* \"#utility.yul\":7086:7132   */\n      tag_245\n      jump\t// in\n    tag_308:\n        /* \"#utility.yul\":7078:7132   */\n      swap7\n        /* \"#utility.yul\":6607:7138   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7143:7392   */\n    tag_226:\n        /* \"#utility.yul\":7212:7218   */\n      0x00\n        /* \"#utility.yul\":7265:7267   */\n      0x20\n        /* \"#utility.yul\":7253:7262   */\n      dup3\n        /* \"#utility.yul\":7244:7251   */\n      dup5\n        /* \"#utility.yul\":7240:7263   */\n      sub\n        /* \"#utility.yul\":7236:7268   */\n      slt\n        /* \"#utility.yul\":7233:7285   */\n      iszero\n      tag_310\n      jumpi\n        /* \"#utility.yul\":7281:7282   */\n      0x00\n        /* \"#utility.yul\":7278:7279   */\n      dup1\n        /* \"#utility.yul\":7271:7283   */\n      revert\n        /* \"#utility.yul\":7233:7285   */\n    tag_310:\n        /* \"#utility.yul\":7313:7322   */\n      dup2\n        /* \"#utility.yul\":7307:7323   */\n      mload\n        /* \"#utility.yul\":7332:7362   */\n      tag_172\n        /* \"#utility.yul\":7356:7361   */\n      dup2\n        /* \"#utility.yul\":7332:7362   */\n      tag_243\n      jump\t// in\n\n    auxdata: 0xa26469706673582212205dcf19b3c8e52ee9866c3a61d669f181267a4405dd62d8c4ecd351b1235f854764736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_173": {
									"entryPoint": null,
									"id": 173,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_startTokenId_182": {
									"entryPoint": null,
									"id": 182,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_string_fromMemory": {
									"entryPoint": 106,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory": {
									"entryPoint": 269,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 432,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 511,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 374,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 84,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4053:4",
										"nodeType": "YulBlock",
										"src": "0:4053:4",
										"statements": [
											{
												"nativeSrc": "6:3:4",
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "46:95:4",
													"nodeType": "YulBlock",
													"src": "46:95:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "63:1:4",
																		"nodeType": "YulLiteral",
																		"src": "63:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "70:3:4",
																				"nodeType": "YulLiteral",
																				"src": "70:3:4",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "75:10:4",
																				"nodeType": "YulLiteral",
																				"src": "75:10:4",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "66:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "66:3:4"
																		},
																		"nativeSrc": "66:20:4",
																		"nodeType": "YulFunctionCall",
																		"src": "66:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "56:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "56:6:4"
																},
																"nativeSrc": "56:31:4",
																"nodeType": "YulFunctionCall",
																"src": "56:31:4"
															},
															"nativeSrc": "56:31:4",
															"nodeType": "YulExpressionStatement",
															"src": "56:31:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "103:1:4",
																		"nodeType": "YulLiteral",
																		"src": "103:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "106:4:4",
																		"nodeType": "YulLiteral",
																		"src": "106:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "96:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "96:6:4"
																},
																"nativeSrc": "96:15:4",
																"nodeType": "YulFunctionCall",
																"src": "96:15:4"
															},
															"nativeSrc": "96:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "96:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "127:1:4",
																		"nodeType": "YulLiteral",
																		"src": "127:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "130:4:4",
																		"nodeType": "YulLiteral",
																		"src": "130:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "120:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "120:6:4"
																},
																"nativeSrc": "120:15:4",
																"nodeType": "YulFunctionCall",
																"src": "120:15:4"
															},
															"nativeSrc": "120:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "120:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "14:127:4",
												"nodeType": "YulFunctionDefinition",
												"src": "14:127:4"
											},
											{
												"body": {
													"nativeSrc": "210:770:4",
													"nodeType": "YulBlock",
													"src": "210:770:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "259:16:4",
																"nodeType": "YulBlock",
																"src": "259:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "268:1:4",
																					"nodeType": "YulLiteral",
																					"src": "268:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "271:1:4",
																					"nodeType": "YulLiteral",
																					"src": "271:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "261:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "261:6:4"
																			},
																			"nativeSrc": "261:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "261:12:4"
																		},
																		"nativeSrc": "261:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "261:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "238:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "238:6:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "246:4:4",
																						"nodeType": "YulLiteral",
																						"src": "246:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "234:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "234:3:4"
																				},
																				"nativeSrc": "234:17:4",
																				"nodeType": "YulFunctionCall",
																				"src": "234:17:4"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "253:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "253:3:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "230:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "230:3:4"
																		},
																		"nativeSrc": "230:27:4",
																		"nodeType": "YulFunctionCall",
																		"src": "230:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "223:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "223:6:4"
																},
																"nativeSrc": "223:35:4",
																"nodeType": "YulFunctionCall",
																"src": "223:35:4"
															},
															"nativeSrc": "220:55:4",
															"nodeType": "YulIf",
															"src": "220:55:4"
														},
														{
															"nativeSrc": "284:27:4",
															"nodeType": "YulVariableDeclaration",
															"src": "284:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "304:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "304:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "298:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "298:5:4"
																},
																"nativeSrc": "298:13:4",
																"nodeType": "YulFunctionCall",
																"src": "298:13:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "288:6:4",
																	"nodeType": "YulTypedName",
																	"src": "288:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "354:22:4",
																"nodeType": "YulBlock",
																"src": "354:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "356:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "356:16:4"
																			},
																			"nativeSrc": "356:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "356:18:4"
																		},
																		"nativeSrc": "356:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "356:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "326:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "326:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "342:2:4",
																						"nodeType": "YulLiteral",
																						"src": "342:2:4",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "346:1:4",
																						"nodeType": "YulLiteral",
																						"src": "346:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "338:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "338:3:4"
																				},
																				"nativeSrc": "338:10:4",
																				"nodeType": "YulFunctionCall",
																				"src": "338:10:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "350:1:4",
																				"nodeType": "YulLiteral",
																				"src": "350:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "334:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "334:3:4"
																		},
																		"nativeSrc": "334:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "334:18:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "323:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "323:2:4"
																},
																"nativeSrc": "323:30:4",
																"nodeType": "YulFunctionCall",
																"src": "323:30:4"
															},
															"nativeSrc": "320:56:4",
															"nodeType": "YulIf",
															"src": "320:56:4"
														},
														{
															"nativeSrc": "385:23:4",
															"nodeType": "YulVariableDeclaration",
															"src": "385:23:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "405:2:4",
																		"nodeType": "YulLiteral",
																		"src": "405:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "399:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "399:5:4"
																},
																"nativeSrc": "399:9:4",
																"nodeType": "YulFunctionCall",
																"src": "399:9:4"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "389:6:4",
																	"nodeType": "YulTypedName",
																	"src": "389:6:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "417:85:4",
															"nodeType": "YulVariableDeclaration",
															"src": "417:85:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "439:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "439:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "463:6:4",
																										"nodeType": "YulIdentifier",
																										"src": "463:6:4"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "471:4:4",
																										"nodeType": "YulLiteral",
																										"src": "471:4:4",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "459:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "459:3:4"
																								},
																								"nativeSrc": "459:17:4",
																								"nodeType": "YulFunctionCall",
																								"src": "459:17:4"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "482:2:4",
																										"nodeType": "YulLiteral",
																										"src": "482:2:4",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "478:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "478:3:4"
																								},
																								"nativeSrc": "478:7:4",
																								"nodeType": "YulFunctionCall",
																								"src": "478:7:4"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "455:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "455:3:4"
																						},
																						"nativeSrc": "455:31:4",
																						"nodeType": "YulFunctionCall",
																						"src": "455:31:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "488:2:4",
																						"nodeType": "YulLiteral",
																						"src": "488:2:4",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "451:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "451:3:4"
																				},
																				"nativeSrc": "451:40:4",
																				"nodeType": "YulFunctionCall",
																				"src": "451:40:4"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "497:2:4",
																						"nodeType": "YulLiteral",
																						"src": "497:2:4",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "493:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "493:3:4"
																				},
																				"nativeSrc": "493:7:4",
																				"nodeType": "YulFunctionCall",
																				"src": "493:7:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "447:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "447:3:4"
																		},
																		"nativeSrc": "447:54:4",
																		"nodeType": "YulFunctionCall",
																		"src": "447:54:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "435:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "435:3:4"
																},
																"nativeSrc": "435:67:4",
																"nodeType": "YulFunctionCall",
																"src": "435:67:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "421:10:4",
																	"nodeType": "YulTypedName",
																	"src": "421:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "577:22:4",
																"nodeType": "YulBlock",
																"src": "577:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "579:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "579:16:4"
																			},
																			"nativeSrc": "579:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "579:18:4"
																		},
																		"nativeSrc": "579:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "579:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "520:10:4",
																				"nodeType": "YulIdentifier",
																				"src": "520:10:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "540:2:4",
																								"nodeType": "YulLiteral",
																								"src": "540:2:4",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "544:1:4",
																								"nodeType": "YulLiteral",
																								"src": "544:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "536:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "536:3:4"
																						},
																						"nativeSrc": "536:10:4",
																						"nodeType": "YulFunctionCall",
																						"src": "536:10:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "548:1:4",
																						"nodeType": "YulLiteral",
																						"src": "548:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "532:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "532:3:4"
																				},
																				"nativeSrc": "532:18:4",
																				"nodeType": "YulFunctionCall",
																				"src": "532:18:4"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "517:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "517:2:4"
																		},
																		"nativeSrc": "517:34:4",
																		"nodeType": "YulFunctionCall",
																		"src": "517:34:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "556:10:4",
																				"nodeType": "YulIdentifier",
																				"src": "556:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "568:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "568:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "553:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "553:2:4"
																		},
																		"nativeSrc": "553:22:4",
																		"nodeType": "YulFunctionCall",
																		"src": "553:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "514:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "514:2:4"
																},
																"nativeSrc": "514:62:4",
																"nodeType": "YulFunctionCall",
																"src": "514:62:4"
															},
															"nativeSrc": "511:88:4",
															"nodeType": "YulIf",
															"src": "511:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "615:2:4",
																		"nodeType": "YulLiteral",
																		"src": "615:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "619:10:4",
																		"nodeType": "YulIdentifier",
																		"src": "619:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "608:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "608:6:4"
																},
																"nativeSrc": "608:22:4",
																"nodeType": "YulFunctionCall",
																"src": "608:22:4"
															},
															"nativeSrc": "608:22:4",
															"nodeType": "YulExpressionStatement",
															"src": "608:22:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "646:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "646:6:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "654:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "654:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "639:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "639:6:4"
																},
																"nativeSrc": "639:22:4",
																"nodeType": "YulFunctionCall",
																"src": "639:22:4"
															},
															"nativeSrc": "639:22:4",
															"nodeType": "YulExpressionStatement",
															"src": "639:22:4"
														},
														{
															"body": {
																"nativeSrc": "713:16:4",
																"nodeType": "YulBlock",
																"src": "713:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "722:1:4",
																					"nodeType": "YulLiteral",
																					"src": "722:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "725:1:4",
																					"nodeType": "YulLiteral",
																					"src": "725:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "715:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "715:6:4"
																			},
																			"nativeSrc": "715:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "715:12:4"
																		},
																		"nativeSrc": "715:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "715:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "684:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "684:6:4"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "692:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "692:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "680:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "680:3:4"
																				},
																				"nativeSrc": "680:19:4",
																				"nodeType": "YulFunctionCall",
																				"src": "680:19:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "701:4:4",
																				"nodeType": "YulLiteral",
																				"src": "701:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "676:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "676:3:4"
																		},
																		"nativeSrc": "676:30:4",
																		"nodeType": "YulFunctionCall",
																		"src": "676:30:4"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "708:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "708:3:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "673:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "673:2:4"
																},
																"nativeSrc": "673:39:4",
																"nodeType": "YulFunctionCall",
																"src": "673:39:4"
															},
															"nativeSrc": "670:59:4",
															"nodeType": "YulIf",
															"src": "670:59:4"
														},
														{
															"nativeSrc": "738:10:4",
															"nodeType": "YulVariableDeclaration",
															"src": "738:10:4",
															"value": {
																"kind": "number",
																"nativeSrc": "747:1:4",
																"nodeType": "YulLiteral",
																"src": "747:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "742:1:4",
																	"nodeType": "YulTypedName",
																	"src": "742:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "809:91:4",
																"nodeType": "YulBlock",
																"src": "809:91:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "memPtr",
																									"nativeSrc": "838:6:4",
																									"nodeType": "YulIdentifier",
																									"src": "838:6:4"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "846:1:4",
																									"nodeType": "YulIdentifier",
																									"src": "846:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "834:3:4",
																								"nodeType": "YulIdentifier",
																								"src": "834:3:4"
																							},
																							"nativeSrc": "834:14:4",
																							"nodeType": "YulFunctionCall",
																							"src": "834:14:4"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "850:4:4",
																							"nodeType": "YulLiteral",
																							"src": "850:4:4",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "830:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "830:3:4"
																					},
																					"nativeSrc": "830:25:4",
																					"nodeType": "YulFunctionCall",
																					"src": "830:25:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "offset",
																											"nativeSrc": "871:6:4",
																											"nodeType": "YulIdentifier",
																											"src": "871:6:4"
																										},
																										{
																											"name": "i",
																											"nativeSrc": "879:1:4",
																											"nodeType": "YulIdentifier",
																											"src": "879:1:4"
																										}
																									],
																									"functionName": {
																										"name": "add",
																										"nativeSrc": "867:3:4",
																										"nodeType": "YulIdentifier",
																										"src": "867:3:4"
																									},
																									"nativeSrc": "867:14:4",
																									"nodeType": "YulFunctionCall",
																									"src": "867:14:4"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "883:4:4",
																									"nodeType": "YulLiteral",
																									"src": "883:4:4",
																									"type": "",
																									"value": "0x20"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "863:3:4",
																								"nodeType": "YulIdentifier",
																								"src": "863:3:4"
																							},
																							"nativeSrc": "863:25:4",
																							"nodeType": "YulFunctionCall",
																							"src": "863:25:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "857:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "857:5:4"
																					},
																					"nativeSrc": "857:32:4",
																					"nodeType": "YulFunctionCall",
																					"src": "857:32:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "823:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "823:6:4"
																			},
																			"nativeSrc": "823:67:4",
																			"nodeType": "YulFunctionCall",
																			"src": "823:67:4"
																		},
																		"nativeSrc": "823:67:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "823:67:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "768:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "768:1:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "771:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "771:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "765:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "765:2:4"
																},
																"nativeSrc": "765:13:4",
																"nodeType": "YulFunctionCall",
																"src": "765:13:4"
															},
															"nativeSrc": "757:143:4",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "779:21:4",
																"nodeType": "YulBlock",
																"src": "779:21:4",
																"statements": [
																	{
																		"nativeSrc": "781:17:4",
																		"nodeType": "YulAssignment",
																		"src": "781:17:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "790:1:4",
																					"nodeType": "YulIdentifier",
																					"src": "790:1:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "793:4:4",
																					"nodeType": "YulLiteral",
																					"src": "793:4:4",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "786:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "786:3:4"
																			},
																			"nativeSrc": "786:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "786:12:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "781:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "781:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "761:3:4",
																"nodeType": "YulBlock",
																"src": "761:3:4",
																"statements": []
															},
															"src": "757:143:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "924:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "924:6:4"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "932:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "932:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "920:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "920:3:4"
																				},
																				"nativeSrc": "920:19:4",
																				"nodeType": "YulFunctionCall",
																				"src": "920:19:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "941:4:4",
																				"nodeType": "YulLiteral",
																				"src": "941:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "916:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "916:3:4"
																		},
																		"nativeSrc": "916:30:4",
																		"nodeType": "YulFunctionCall",
																		"src": "916:30:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "948:1:4",
																		"nodeType": "YulLiteral",
																		"src": "948:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "909:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "909:6:4"
																},
																"nativeSrc": "909:41:4",
																"nodeType": "YulFunctionCall",
																"src": "909:41:4"
															},
															"nativeSrc": "909:41:4",
															"nodeType": "YulExpressionStatement",
															"src": "909:41:4"
														},
														{
															"nativeSrc": "959:15:4",
															"nodeType": "YulAssignment",
															"src": "959:15:4",
															"value": {
																"name": "memPtr",
																"nativeSrc": "968:6:4",
																"nodeType": "YulIdentifier",
																"src": "968:6:4"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "959:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "959:5:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_string_fromMemory",
												"nativeSrc": "146:834:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "184:6:4",
														"nodeType": "YulTypedName",
														"src": "184:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "192:3:4",
														"nodeType": "YulTypedName",
														"src": "192:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "200:5:4",
														"nodeType": "YulTypedName",
														"src": "200:5:4",
														"type": ""
													}
												],
												"src": "146:834:4"
											},
											{
												"body": {
													"nativeSrc": "1103:439:4",
													"nodeType": "YulBlock",
													"src": "1103:439:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1149:16:4",
																"nodeType": "YulBlock",
																"src": "1149:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1158:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1158:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1161:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1161:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1151:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1151:6:4"
																			},
																			"nativeSrc": "1151:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1151:12:4"
																		},
																		"nativeSrc": "1151:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1151:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1124:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1124:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1133:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1133:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1120:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1120:3:4"
																		},
																		"nativeSrc": "1120:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1120:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1145:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1145:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1116:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1116:3:4"
																},
																"nativeSrc": "1116:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1116:32:4"
															},
															"nativeSrc": "1113:52:4",
															"nodeType": "YulIf",
															"src": "1113:52:4"
														},
														{
															"nativeSrc": "1174:30:4",
															"nodeType": "YulVariableDeclaration",
															"src": "1174:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1194:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1194:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1188:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1188:5:4"
																},
																"nativeSrc": "1188:16:4",
																"nodeType": "YulFunctionCall",
																"src": "1188:16:4"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1178:6:4",
																	"nodeType": "YulTypedName",
																	"src": "1178:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1247:16:4",
																"nodeType": "YulBlock",
																"src": "1247:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1256:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1256:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1259:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1259:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1249:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1249:6:4"
																			},
																			"nativeSrc": "1249:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1249:12:4"
																		},
																		"nativeSrc": "1249:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1249:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1219:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1219:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1235:2:4",
																						"nodeType": "YulLiteral",
																						"src": "1235:2:4",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1239:1:4",
																						"nodeType": "YulLiteral",
																						"src": "1239:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1231:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1231:3:4"
																				},
																				"nativeSrc": "1231:10:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1231:10:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1243:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1243:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1227:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1227:3:4"
																		},
																		"nativeSrc": "1227:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1227:18:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1216:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "1216:2:4"
																},
																"nativeSrc": "1216:30:4",
																"nodeType": "YulFunctionCall",
																"src": "1216:30:4"
															},
															"nativeSrc": "1213:50:4",
															"nodeType": "YulIf",
															"src": "1213:50:4"
														},
														{
															"nativeSrc": "1272:71:4",
															"nodeType": "YulAssignment",
															"src": "1272:71:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1315:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1315:9:4"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1326:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1326:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1311:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1311:3:4"
																		},
																		"nativeSrc": "1311:22:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1311:22:4"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1335:7:4",
																		"nodeType": "YulIdentifier",
																		"src": "1335:7:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1282:28:4",
																	"nodeType": "YulIdentifier",
																	"src": "1282:28:4"
																},
																"nativeSrc": "1282:61:4",
																"nodeType": "YulFunctionCall",
																"src": "1282:61:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1272:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1272:6:4"
																}
															]
														},
														{
															"nativeSrc": "1352:41:4",
															"nodeType": "YulVariableDeclaration",
															"src": "1352:41:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1378:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1378:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1389:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1389:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1374:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1374:3:4"
																		},
																		"nativeSrc": "1374:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1374:18:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1368:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1368:5:4"
																},
																"nativeSrc": "1368:25:4",
																"nodeType": "YulFunctionCall",
																"src": "1368:25:4"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "1356:8:4",
																	"nodeType": "YulTypedName",
																	"src": "1356:8:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1438:16:4",
																"nodeType": "YulBlock",
																"src": "1438:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1447:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1447:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1450:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1450:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1440:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1440:6:4"
																			},
																			"nativeSrc": "1440:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1440:12:4"
																		},
																		"nativeSrc": "1440:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1440:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "1408:8:4",
																		"nodeType": "YulIdentifier",
																		"src": "1408:8:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1426:2:4",
																						"nodeType": "YulLiteral",
																						"src": "1426:2:4",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1430:1:4",
																						"nodeType": "YulLiteral",
																						"src": "1430:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1422:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1422:3:4"
																				},
																				"nativeSrc": "1422:10:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1422:10:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1434:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1434:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1418:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1418:3:4"
																		},
																		"nativeSrc": "1418:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1418:18:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1405:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "1405:2:4"
																},
																"nativeSrc": "1405:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1405:32:4"
															},
															"nativeSrc": "1402:52:4",
															"nodeType": "YulIf",
															"src": "1402:52:4"
														},
														{
															"nativeSrc": "1463:73:4",
															"nodeType": "YulAssignment",
															"src": "1463:73:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1506:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1506:9:4"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "1517:8:4",
																				"nodeType": "YulIdentifier",
																				"src": "1517:8:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1502:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1502:3:4"
																		},
																		"nativeSrc": "1502:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1502:24:4"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1528:7:4",
																		"nodeType": "YulIdentifier",
																		"src": "1528:7:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string_fromMemory",
																	"nativeSrc": "1473:28:4",
																	"nodeType": "YulIdentifier",
																	"src": "1473:28:4"
																},
																"nativeSrc": "1473:63:4",
																"nodeType": "YulFunctionCall",
																"src": "1473:63:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1463:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1463:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
												"nativeSrc": "985:557:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1061:9:4",
														"nodeType": "YulTypedName",
														"src": "1061:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1072:7:4",
														"nodeType": "YulTypedName",
														"src": "1072:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1084:6:4",
														"nodeType": "YulTypedName",
														"src": "1084:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1092:6:4",
														"nodeType": "YulTypedName",
														"src": "1092:6:4",
														"type": ""
													}
												],
												"src": "985:557:4"
											},
											{
												"body": {
													"nativeSrc": "1602:325:4",
													"nodeType": "YulBlock",
													"src": "1602:325:4",
													"statements": [
														{
															"nativeSrc": "1612:22:4",
															"nodeType": "YulAssignment",
															"src": "1612:22:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1626:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1626:1:4",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "1629:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "1629:4:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "1622:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1622:3:4"
																},
																"nativeSrc": "1622:12:4",
																"nodeType": "YulFunctionCall",
																"src": "1622:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1612:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1612:6:4"
																}
															]
														},
														{
															"nativeSrc": "1643:38:4",
															"nodeType": "YulVariableDeclaration",
															"src": "1643:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1673:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "1673:4:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1679:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1679:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1669:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1669:3:4"
																},
																"nativeSrc": "1669:12:4",
																"nodeType": "YulFunctionCall",
																"src": "1669:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1647:18:4",
																	"nodeType": "YulTypedName",
																	"src": "1647:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1720:31:4",
																"nodeType": "YulBlock",
																"src": "1720:31:4",
																"statements": [
																	{
																		"nativeSrc": "1722:27:4",
																		"nodeType": "YulAssignment",
																		"src": "1722:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1736:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "1736:6:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1744:4:4",
																					"nodeType": "YulLiteral",
																					"src": "1744:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1732:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "1732:3:4"
																			},
																			"nativeSrc": "1732:17:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1732:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1722:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1722:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1700:18:4",
																		"nodeType": "YulIdentifier",
																		"src": "1700:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1693:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1693:6:4"
																},
																"nativeSrc": "1693:26:4",
																"nodeType": "YulFunctionCall",
																"src": "1693:26:4"
															},
															"nativeSrc": "1690:61:4",
															"nodeType": "YulIf",
															"src": "1690:61:4"
														},
														{
															"body": {
																"nativeSrc": "1810:111:4",
																"nodeType": "YulBlock",
																"src": "1810:111:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1831:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1831:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "1838:3:4",
																							"nodeType": "YulLiteral",
																							"src": "1838:3:4",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "1843:10:4",
																							"nodeType": "YulLiteral",
																							"src": "1843:10:4",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "1834:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "1834:3:4"
																					},
																					"nativeSrc": "1834:20:4",
																					"nodeType": "YulFunctionCall",
																					"src": "1834:20:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1824:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1824:6:4"
																			},
																			"nativeSrc": "1824:31:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1824:31:4"
																		},
																		"nativeSrc": "1824:31:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1824:31:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1875:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1875:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1878:4:4",
																					"nodeType": "YulLiteral",
																					"src": "1878:4:4",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "1868:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1868:6:4"
																			},
																			"nativeSrc": "1868:15:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1868:15:4"
																		},
																		"nativeSrc": "1868:15:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1868:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1903:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1903:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1906:4:4",
																					"nodeType": "YulLiteral",
																					"src": "1906:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1896:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1896:6:4"
																			},
																			"nativeSrc": "1896:15:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1896:15:4"
																		},
																		"nativeSrc": "1896:15:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1896:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1766:18:4",
																		"nodeType": "YulIdentifier",
																		"src": "1766:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1789:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1789:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1797:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1797:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1786:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "1786:2:4"
																		},
																		"nativeSrc": "1786:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1786:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1763:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "1763:2:4"
																},
																"nativeSrc": "1763:38:4",
																"nodeType": "YulFunctionCall",
																"src": "1763:38:4"
															},
															"nativeSrc": "1760:161:4",
															"nodeType": "YulIf",
															"src": "1760:161:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1547:380:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1582:4:4",
														"nodeType": "YulTypedName",
														"src": "1582:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1591:6:4",
														"nodeType": "YulTypedName",
														"src": "1591:6:4",
														"type": ""
													}
												],
												"src": "1547:380:4"
											},
											{
												"body": {
													"nativeSrc": "1988:65:4",
													"nodeType": "YulBlock",
													"src": "1988:65:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2005:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2005:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "2008:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2008:3:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1998:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1998:6:4"
																},
																"nativeSrc": "1998:14:4",
																"nodeType": "YulFunctionCall",
																"src": "1998:14:4"
															},
															"nativeSrc": "1998:14:4",
															"nodeType": "YulExpressionStatement",
															"src": "1998:14:4"
														},
														{
															"nativeSrc": "2021:26:4",
															"nodeType": "YulAssignment",
															"src": "2021:26:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2039:1:4",
																		"nodeType": "YulLiteral",
																		"src": "2039:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2042:4:4",
																		"nodeType": "YulLiteral",
																		"src": "2042:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "2029:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "2029:9:4"
																},
																"nativeSrc": "2029:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2029:18:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "2021:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2021:4:4"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "1932:121:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1971:3:4",
														"nodeType": "YulTypedName",
														"src": "1971:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1979:4:4",
														"nodeType": "YulTypedName",
														"src": "1979:4:4",
														"type": ""
													}
												],
												"src": "1932:121:4"
											},
											{
												"body": {
													"nativeSrc": "2139:437:4",
													"nodeType": "YulBlock",
													"src": "2139:437:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2172:398:4",
																"nodeType": "YulBlock",
																"src": "2172:398:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2193:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2193:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "2196:5:4",
																					"nodeType": "YulIdentifier",
																					"src": "2196:5:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "2186:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2186:6:4"
																			},
																			"nativeSrc": "2186:16:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2186:16:4"
																		},
																		"nativeSrc": "2186:16:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2186:16:4"
																	},
																	{
																		"nativeSrc": "2215:30:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2215:30:4",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2237:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2237:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2240:4:4",
																					"nodeType": "YulLiteral",
																					"src": "2240:4:4",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "2227:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2227:9:4"
																			},
																			"nativeSrc": "2227:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2227:18:4"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "2219:4:4",
																				"nodeType": "YulTypedName",
																				"src": "2219:4:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2258:57:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2258:57:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2281:4:4",
																					"nodeType": "YulIdentifier",
																					"src": "2281:4:4"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2291:1:4",
																							"nodeType": "YulLiteral",
																							"src": "2291:1:4",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "2298:10:4",
																									"nodeType": "YulIdentifier",
																									"src": "2298:10:4"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2310:2:4",
																									"nodeType": "YulLiteral",
																									"src": "2310:2:4",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2294:3:4",
																								"nodeType": "YulIdentifier",
																								"src": "2294:3:4"
																							},
																							"nativeSrc": "2294:19:4",
																							"nodeType": "YulFunctionCall",
																							"src": "2294:19:4"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2287:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "2287:3:4"
																					},
																					"nativeSrc": "2287:27:4",
																					"nodeType": "YulFunctionCall",
																					"src": "2287:27:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2277:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "2277:3:4"
																			},
																			"nativeSrc": "2277:38:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2277:38:4"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2262:11:4",
																				"nodeType": "YulTypedName",
																				"src": "2262:11:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2352:23:4",
																			"nodeType": "YulBlock",
																			"src": "2352:23:4",
																			"statements": [
																				{
																					"nativeSrc": "2354:19:4",
																					"nodeType": "YulAssignment",
																					"src": "2354:19:4",
																					"value": {
																						"name": "data",
																						"nativeSrc": "2369:4:4",
																						"nodeType": "YulIdentifier",
																						"src": "2369:4:4"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "2354:11:4",
																							"nodeType": "YulIdentifier",
																							"src": "2354:11:4"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "2334:10:4",
																					"nodeType": "YulIdentifier",
																					"src": "2334:10:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2346:4:4",
																					"nodeType": "YulLiteral",
																					"src": "2346:4:4",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2331:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "2331:2:4"
																			},
																			"nativeSrc": "2331:20:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2331:20:4"
																		},
																		"nativeSrc": "2328:47:4",
																		"nodeType": "YulIf",
																		"src": "2328:47:4"
																	},
																	{
																		"nativeSrc": "2388:41:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2388:41:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "2402:4:4",
																					"nodeType": "YulIdentifier",
																					"src": "2402:4:4"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "2412:1:4",
																							"nodeType": "YulLiteral",
																							"src": "2412:1:4",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "2419:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "2419:3:4"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "2424:2:4",
																									"nodeType": "YulLiteral",
																									"src": "2424:2:4",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "2415:3:4",
																								"nodeType": "YulIdentifier",
																								"src": "2415:3:4"
																							},
																							"nativeSrc": "2415:12:4",
																							"nodeType": "YulFunctionCall",
																							"src": "2415:12:4"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "2408:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "2408:3:4"
																					},
																					"nativeSrc": "2408:20:4",
																					"nodeType": "YulFunctionCall",
																					"src": "2408:20:4"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2398:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "2398:3:4"
																			},
																			"nativeSrc": "2398:31:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2398:31:4"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "2392:2:4",
																				"nodeType": "YulTypedName",
																				"src": "2392:2:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2442:24:4",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2442:24:4",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "2455:11:4",
																			"nodeType": "YulIdentifier",
																			"src": "2455:11:4"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "2446:5:4",
																				"nodeType": "YulTypedName",
																				"src": "2446:5:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "2540:20:4",
																			"nodeType": "YulBlock",
																			"src": "2540:20:4",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2549:5:4",
																								"nodeType": "YulIdentifier",
																								"src": "2549:5:4"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2556:1:4",
																								"nodeType": "YulLiteral",
																								"src": "2556:1:4",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "2542:6:4",
																							"nodeType": "YulIdentifier",
																							"src": "2542:6:4"
																						},
																						"nativeSrc": "2542:16:4",
																						"nodeType": "YulFunctionCall",
																						"src": "2542:16:4"
																					},
																					"nativeSrc": "2542:16:4",
																					"nodeType": "YulExpressionStatement",
																					"src": "2542:16:4"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2490:5:4",
																					"nodeType": "YulIdentifier",
																					"src": "2490:5:4"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "2497:2:4",
																					"nodeType": "YulIdentifier",
																					"src": "2497:2:4"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "2487:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "2487:2:4"
																			},
																			"nativeSrc": "2487:13:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2487:13:4"
																		},
																		"nativeSrc": "2479:81:4",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "2501:26:4",
																			"nodeType": "YulBlock",
																			"src": "2501:26:4",
																			"statements": [
																				{
																					"nativeSrc": "2503:22:4",
																					"nodeType": "YulAssignment",
																					"src": "2503:22:4",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "2516:5:4",
																								"nodeType": "YulIdentifier",
																								"src": "2516:5:4"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2523:1:4",
																								"nodeType": "YulLiteral",
																								"src": "2523:1:4",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "2512:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "2512:3:4"
																						},
																						"nativeSrc": "2512:13:4",
																						"nodeType": "YulFunctionCall",
																						"src": "2512:13:4"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "2503:5:4",
																							"nodeType": "YulIdentifier",
																							"src": "2503:5:4"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "2483:3:4",
																			"nodeType": "YulBlock",
																			"src": "2483:3:4",
																			"statements": []
																		},
																		"src": "2479:81:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2155:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2155:3:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2160:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2160:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2152:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "2152:2:4"
																},
																"nativeSrc": "2152:11:4",
																"nodeType": "YulFunctionCall",
																"src": "2152:11:4"
															},
															"nativeSrc": "2149:421:4",
															"nodeType": "YulIf",
															"src": "2149:421:4"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "2058:518:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2111:5:4",
														"nodeType": "YulTypedName",
														"src": "2111:5:4",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2118:3:4",
														"nodeType": "YulTypedName",
														"src": "2118:3:4",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2123:10:4",
														"nodeType": "YulTypedName",
														"src": "2123:10:4",
														"type": ""
													}
												],
												"src": "2058:518:4"
											},
											{
												"body": {
													"nativeSrc": "2666:81:4",
													"nodeType": "YulBlock",
													"src": "2666:81:4",
													"statements": [
														{
															"nativeSrc": "2676:65:4",
															"nodeType": "YulAssignment",
															"src": "2676:65:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "2691:4:4",
																				"nodeType": "YulIdentifier",
																				"src": "2691:4:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2709:1:4",
																										"nodeType": "YulLiteral",
																										"src": "2709:1:4",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "2712:3:4",
																										"nodeType": "YulIdentifier",
																										"src": "2712:3:4"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2705:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "2705:3:4"
																								},
																								"nativeSrc": "2705:11:4",
																								"nodeType": "YulFunctionCall",
																								"src": "2705:11:4"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2722:1:4",
																										"nodeType": "YulLiteral",
																										"src": "2722:1:4",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "2718:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "2718:3:4"
																								},
																								"nativeSrc": "2718:6:4",
																								"nodeType": "YulFunctionCall",
																								"src": "2718:6:4"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "2701:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "2701:3:4"
																						},
																						"nativeSrc": "2701:24:4",
																						"nodeType": "YulFunctionCall",
																						"src": "2701:24:4"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2697:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2697:3:4"
																				},
																				"nativeSrc": "2697:29:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2697:29:4"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2687:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2687:3:4"
																		},
																		"nativeSrc": "2687:40:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2687:40:4"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2733:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2733:1:4",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "2736:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "2736:3:4"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2729:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2729:3:4"
																		},
																		"nativeSrc": "2729:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2729:11:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2684:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "2684:2:4"
																},
																"nativeSrc": "2684:57:4",
																"nodeType": "YulFunctionCall",
																"src": "2684:57:4"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "2676:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2676:4:4"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "2581:166:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "2643:4:4",
														"nodeType": "YulTypedName",
														"src": "2643:4:4",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2649:3:4",
														"nodeType": "YulTypedName",
														"src": "2649:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "2657:4:4",
														"nodeType": "YulTypedName",
														"src": "2657:4:4",
														"type": ""
													}
												],
												"src": "2581:166:4"
											},
											{
												"body": {
													"nativeSrc": "2848:1203:4",
													"nodeType": "YulBlock",
													"src": "2848:1203:4",
													"statements": [
														{
															"nativeSrc": "2858:24:4",
															"nodeType": "YulVariableDeclaration",
															"src": "2858:24:4",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "2878:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2878:3:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2872:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "2872:5:4"
																},
																"nativeSrc": "2872:10:4",
																"nodeType": "YulFunctionCall",
																"src": "2872:10:4"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "2862:6:4",
																	"nodeType": "YulTypedName",
																	"src": "2862:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2925:22:4",
																"nodeType": "YulBlock",
																"src": "2925:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2927:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "2927:16:4"
																			},
																			"nativeSrc": "2927:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2927:18:4"
																		},
																		"nativeSrc": "2927:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2927:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "2897:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2897:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2913:2:4",
																						"nodeType": "YulLiteral",
																						"src": "2913:2:4",
																						"type": "",
																						"value": "64"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2917:1:4",
																						"nodeType": "YulLiteral",
																						"src": "2917:1:4",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "2909:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2909:3:4"
																				},
																				"nativeSrc": "2909:10:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2909:10:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2921:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2921:1:4",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2905:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2905:3:4"
																		},
																		"nativeSrc": "2905:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2905:18:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2894:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "2894:2:4"
																},
																"nativeSrc": "2894:30:4",
																"nodeType": "YulFunctionCall",
																"src": "2894:30:4"
															},
															"nativeSrc": "2891:56:4",
															"nodeType": "YulIf",
															"src": "2891:56:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3000:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "3000:4:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3038:4:4",
																						"nodeType": "YulIdentifier",
																						"src": "3038:4:4"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3032:5:4",
																					"nodeType": "YulIdentifier",
																					"src": "3032:5:4"
																				},
																				"nativeSrc": "3032:11:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3032:11:4"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "3006:25:4",
																			"nodeType": "YulIdentifier",
																			"src": "3006:25:4"
																		},
																		"nativeSrc": "3006:38:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3006:38:4"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "3046:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3046:6:4"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "2956:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "2956:43:4"
																},
																"nativeSrc": "2956:97:4",
																"nodeType": "YulFunctionCall",
																"src": "2956:97:4"
															},
															"nativeSrc": "2956:97:4",
															"nodeType": "YulExpressionStatement",
															"src": "2956:97:4"
														},
														{
															"nativeSrc": "3062:18:4",
															"nodeType": "YulVariableDeclaration",
															"src": "3062:18:4",
															"value": {
																"kind": "number",
																"nativeSrc": "3079:1:4",
																"nodeType": "YulLiteral",
																"src": "3079:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3066:9:4",
																	"nodeType": "YulTypedName",
																	"src": "3066:9:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3089:17:4",
															"nodeType": "YulAssignment",
															"src": "3089:17:4",
															"value": {
																"kind": "number",
																"nativeSrc": "3102:4:4",
																"nodeType": "YulLiteral",
																"src": "3102:4:4",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "3089:9:4",
																	"nodeType": "YulIdentifier",
																	"src": "3089:9:4"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "3152:642:4",
																		"nodeType": "YulBlock",
																		"src": "3152:642:4",
																		"statements": [
																			{
																				"nativeSrc": "3166:35:4",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3166:35:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "3185:6:4",
																							"nodeType": "YulIdentifier",
																							"src": "3185:6:4"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "3197:2:4",
																									"nodeType": "YulLiteral",
																									"src": "3197:2:4",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "3193:3:4",
																								"nodeType": "YulIdentifier",
																								"src": "3193:3:4"
																							},
																							"nativeSrc": "3193:7:4",
																							"nodeType": "YulFunctionCall",
																							"src": "3193:7:4"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "3181:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "3181:3:4"
																					},
																					"nativeSrc": "3181:20:4",
																					"nodeType": "YulFunctionCall",
																					"src": "3181:20:4"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "3170:7:4",
																						"nodeType": "YulTypedName",
																						"src": "3170:7:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3214:49:4",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3214:49:4",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3258:4:4",
																							"nodeType": "YulIdentifier",
																							"src": "3258:4:4"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "3228:29:4",
																						"nodeType": "YulIdentifier",
																						"src": "3228:29:4"
																					},
																					"nativeSrc": "3228:35:4",
																					"nodeType": "YulFunctionCall",
																					"src": "3228:35:4"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "3218:6:4",
																						"nodeType": "YulTypedName",
																						"src": "3218:6:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "3276:10:4",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3276:10:4",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3285:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3285:1:4",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "3280:1:4",
																						"nodeType": "YulTypedName",
																						"src": "3280:1:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3356:165:4",
																					"nodeType": "YulBlock",
																					"src": "3356:165:4",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3381:6:4",
																										"nodeType": "YulIdentifier",
																										"src": "3381:6:4"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "3399:3:4",
																														"nodeType": "YulIdentifier",
																														"src": "3399:3:4"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "3404:9:4",
																														"nodeType": "YulIdentifier",
																														"src": "3404:9:4"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "3395:3:4",
																													"nodeType": "YulIdentifier",
																													"src": "3395:3:4"
																												},
																												"nativeSrc": "3395:19:4",
																												"nodeType": "YulFunctionCall",
																												"src": "3395:19:4"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "3389:5:4",
																											"nodeType": "YulIdentifier",
																											"src": "3389:5:4"
																										},
																										"nativeSrc": "3389:26:4",
																										"nodeType": "YulFunctionCall",
																										"src": "3389:26:4"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3374:6:4",
																									"nodeType": "YulIdentifier",
																									"src": "3374:6:4"
																								},
																								"nativeSrc": "3374:42:4",
																								"nodeType": "YulFunctionCall",
																								"src": "3374:42:4"
																							},
																							"nativeSrc": "3374:42:4",
																							"nodeType": "YulExpressionStatement",
																							"src": "3374:42:4"
																						},
																						{
																							"nativeSrc": "3433:24:4",
																							"nodeType": "YulAssignment",
																							"src": "3433:24:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3447:6:4",
																										"nodeType": "YulIdentifier",
																										"src": "3447:6:4"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3455:1:4",
																										"nodeType": "YulLiteral",
																										"src": "3455:1:4",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3443:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "3443:3:4"
																								},
																								"nativeSrc": "3443:14:4",
																								"nodeType": "YulFunctionCall",
																								"src": "3443:14:4"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "3433:6:4",
																									"nodeType": "YulIdentifier",
																									"src": "3433:6:4"
																								}
																							]
																						},
																						{
																							"nativeSrc": "3474:33:4",
																							"nodeType": "YulAssignment",
																							"src": "3474:33:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "3491:9:4",
																										"nodeType": "YulIdentifier",
																										"src": "3491:9:4"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3502:4:4",
																										"nodeType": "YulLiteral",
																										"src": "3502:4:4",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3487:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "3487:3:4"
																								},
																								"nativeSrc": "3487:20:4",
																								"nodeType": "YulFunctionCall",
																								"src": "3487:20:4"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "3474:9:4",
																									"nodeType": "YulIdentifier",
																									"src": "3474:9:4"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "3310:1:4",
																							"nodeType": "YulIdentifier",
																							"src": "3310:1:4"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3313:7:4",
																							"nodeType": "YulIdentifier",
																							"src": "3313:7:4"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3307:2:4",
																						"nodeType": "YulIdentifier",
																						"src": "3307:2:4"
																					},
																					"nativeSrc": "3307:14:4",
																					"nodeType": "YulFunctionCall",
																					"src": "3307:14:4"
																				},
																				"nativeSrc": "3299:222:4",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "3322:21:4",
																					"nodeType": "YulBlock",
																					"src": "3322:21:4",
																					"statements": [
																						{
																							"nativeSrc": "3324:17:4",
																							"nodeType": "YulAssignment",
																							"src": "3324:17:4",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "3333:1:4",
																										"nodeType": "YulIdentifier",
																										"src": "3333:1:4"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "3336:4:4",
																										"nodeType": "YulLiteral",
																										"src": "3336:4:4",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "3329:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "3329:3:4"
																								},
																								"nativeSrc": "3329:12:4",
																								"nodeType": "YulFunctionCall",
																								"src": "3329:12:4"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "3324:1:4",
																									"nodeType": "YulIdentifier",
																									"src": "3324:1:4"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "3303:3:4",
																					"nodeType": "YulBlock",
																					"src": "3303:3:4",
																					"statements": []
																				},
																				"src": "3299:222:4"
																			},
																			{
																				"body": {
																					"nativeSrc": "3569:166:4",
																					"nodeType": "YulBlock",
																					"src": "3569:166:4",
																					"statements": [
																						{
																							"nativeSrc": "3587:43:4",
																							"nodeType": "YulVariableDeclaration",
																							"src": "3587:43:4",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3614:3:4",
																												"nodeType": "YulIdentifier",
																												"src": "3614:3:4"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3619:9:4",
																												"nodeType": "YulIdentifier",
																												"src": "3619:9:4"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3610:3:4",
																											"nodeType": "YulIdentifier",
																											"src": "3610:3:4"
																										},
																										"nativeSrc": "3610:19:4",
																										"nodeType": "YulFunctionCall",
																										"src": "3610:19:4"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3604:5:4",
																									"nodeType": "YulIdentifier",
																									"src": "3604:5:4"
																								},
																								"nativeSrc": "3604:26:4",
																								"nodeType": "YulFunctionCall",
																								"src": "3604:26:4"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "3591:9:4",
																									"nodeType": "YulTypedName",
																									"src": "3591:9:4",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "3654:6:4",
																										"nodeType": "YulIdentifier",
																										"src": "3654:6:4"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "3666:9:4",
																												"nodeType": "YulIdentifier",
																												"src": "3666:9:4"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "3693:1:4",
																																				"nodeType": "YulLiteral",
																																				"src": "3693:1:4",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "3696:6:4",
																																				"nodeType": "YulIdentifier",
																																				"src": "3696:6:4"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "3689:3:4",
																																			"nodeType": "YulIdentifier",
																																			"src": "3689:3:4"
																																		},
																																		"nativeSrc": "3689:14:4",
																																		"nodeType": "YulFunctionCall",
																																		"src": "3689:14:4"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3705:3:4",
																																		"nodeType": "YulLiteral",
																																		"src": "3705:3:4",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "3685:3:4",
																																	"nodeType": "YulIdentifier",
																																	"src": "3685:3:4"
																																},
																																"nativeSrc": "3685:24:4",
																																"nodeType": "YulFunctionCall",
																																"src": "3685:24:4"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "3715:1:4",
																																		"nodeType": "YulLiteral",
																																		"src": "3715:1:4",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "3711:3:4",
																																	"nodeType": "YulIdentifier",
																																	"src": "3711:3:4"
																																},
																																"nativeSrc": "3711:6:4",
																																"nodeType": "YulFunctionCall",
																																"src": "3711:6:4"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "3681:3:4",
																															"nodeType": "YulIdentifier",
																															"src": "3681:3:4"
																														},
																														"nativeSrc": "3681:37:4",
																														"nodeType": "YulFunctionCall",
																														"src": "3681:37:4"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "3677:3:4",
																													"nodeType": "YulIdentifier",
																													"src": "3677:3:4"
																												},
																												"nativeSrc": "3677:42:4",
																												"nodeType": "YulFunctionCall",
																												"src": "3677:42:4"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "3662:3:4",
																											"nodeType": "YulIdentifier",
																											"src": "3662:3:4"
																										},
																										"nativeSrc": "3662:58:4",
																										"nodeType": "YulFunctionCall",
																										"src": "3662:58:4"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "3647:6:4",
																									"nodeType": "YulIdentifier",
																									"src": "3647:6:4"
																								},
																								"nativeSrc": "3647:74:4",
																								"nodeType": "YulFunctionCall",
																								"src": "3647:74:4"
																							},
																							"nativeSrc": "3647:74:4",
																							"nodeType": "YulExpressionStatement",
																							"src": "3647:74:4"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "3540:7:4",
																							"nodeType": "YulIdentifier",
																							"src": "3540:7:4"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "3549:6:4",
																							"nodeType": "YulIdentifier",
																							"src": "3549:6:4"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "3537:2:4",
																						"nodeType": "YulIdentifier",
																						"src": "3537:2:4"
																					},
																					"nativeSrc": "3537:19:4",
																					"nodeType": "YulFunctionCall",
																					"src": "3537:19:4"
																				},
																				"nativeSrc": "3534:201:4",
																				"nodeType": "YulIf",
																				"src": "3534:201:4"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3755:4:4",
																							"nodeType": "YulIdentifier",
																							"src": "3755:4:4"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "3769:1:4",
																											"nodeType": "YulLiteral",
																											"src": "3769:1:4",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "3772:6:4",
																											"nodeType": "YulIdentifier",
																											"src": "3772:6:4"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "3765:3:4",
																										"nodeType": "YulIdentifier",
																										"src": "3765:3:4"
																									},
																									"nativeSrc": "3765:14:4",
																									"nodeType": "YulFunctionCall",
																									"src": "3765:14:4"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "3781:1:4",
																									"nodeType": "YulLiteral",
																									"src": "3781:1:4",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "3761:3:4",
																								"nodeType": "YulIdentifier",
																								"src": "3761:3:4"
																							},
																							"nativeSrc": "3761:22:4",
																							"nodeType": "YulFunctionCall",
																							"src": "3761:22:4"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3748:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "3748:6:4"
																					},
																					"nativeSrc": "3748:36:4",
																					"nodeType": "YulFunctionCall",
																					"src": "3748:36:4"
																				},
																				"nativeSrc": "3748:36:4",
																				"nodeType": "YulExpressionStatement",
																				"src": "3748:36:4"
																			}
																		]
																	},
																	"nativeSrc": "3145:649:4",
																	"nodeType": "YulCase",
																	"src": "3145:649:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3150:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3150:1:4",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "3811:234:4",
																		"nodeType": "YulBlock",
																		"src": "3811:234:4",
																		"statements": [
																			{
																				"nativeSrc": "3825:14:4",
																				"nodeType": "YulVariableDeclaration",
																				"src": "3825:14:4",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "3838:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3838:1:4",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "3829:5:4",
																						"nodeType": "YulTypedName",
																						"src": "3829:5:4",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "3874:67:4",
																					"nodeType": "YulBlock",
																					"src": "3874:67:4",
																					"statements": [
																						{
																							"nativeSrc": "3892:35:4",
																							"nodeType": "YulAssignment",
																							"src": "3892:35:4",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "3911:3:4",
																												"nodeType": "YulIdentifier",
																												"src": "3911:3:4"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "3916:9:4",
																												"nodeType": "YulIdentifier",
																												"src": "3916:9:4"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "3907:3:4",
																											"nodeType": "YulIdentifier",
																											"src": "3907:3:4"
																										},
																										"nativeSrc": "3907:19:4",
																										"nodeType": "YulFunctionCall",
																										"src": "3907:19:4"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "3901:5:4",
																									"nodeType": "YulIdentifier",
																									"src": "3901:5:4"
																								},
																								"nativeSrc": "3901:26:4",
																								"nodeType": "YulFunctionCall",
																								"src": "3901:26:4"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "3892:5:4",
																									"nodeType": "YulIdentifier",
																									"src": "3892:5:4"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "3855:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "3855:6:4"
																				},
																				"nativeSrc": "3852:89:4",
																				"nodeType": "YulIf",
																				"src": "3852:89:4"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "3961:4:4",
																							"nodeType": "YulIdentifier",
																							"src": "3961:4:4"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "4020:5:4",
																									"nodeType": "YulIdentifier",
																									"src": "4020:5:4"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "4027:6:4",
																									"nodeType": "YulIdentifier",
																									"src": "4027:6:4"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "3967:52:4",
																								"nodeType": "YulIdentifier",
																								"src": "3967:52:4"
																							},
																							"nativeSrc": "3967:67:4",
																							"nodeType": "YulFunctionCall",
																							"src": "3967:67:4"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "3954:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "3954:6:4"
																					},
																					"nativeSrc": "3954:81:4",
																					"nodeType": "YulFunctionCall",
																					"src": "3954:81:4"
																				},
																				"nativeSrc": "3954:81:4",
																				"nodeType": "YulExpressionStatement",
																				"src": "3954:81:4"
																			}
																		]
																	},
																	"nativeSrc": "3803:242:4",
																	"nodeType": "YulCase",
																	"src": "3803:242:4",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "3125:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "3125:6:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3133:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3133:2:4",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3122:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "3122:2:4"
																},
																"nativeSrc": "3122:14:4",
																"nodeType": "YulFunctionCall",
																"src": "3122:14:4"
															},
															"nativeSrc": "3115:930:4",
															"nodeType": "YulSwitch",
															"src": "3115:930:4"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "2752:1299:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2833:4:4",
														"nodeType": "YulTypedName",
														"src": "2833:4:4",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "2839:3:4",
														"nodeType": "YulTypedName",
														"src": "2839:3:4",
														"type": ""
													}
												],
												"src": "2752:1299:4"
											}
										]
									},
									"contents": "{\n    { }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let length := mload(offset)\n        if gt(length, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, sub(shl(64, 1), 1)), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(add(memPtr, i), 0x20), mload(add(add(offset, i), 0x20)))\n        }\n        mstore(add(add(memPtr, length), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := mload(headStart)\n        if gt(offset, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, sub(shl(64, 1), 1)) { revert(0, 0) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, sub(shl(64, 1), 1)) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 0x20)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161154738038061154783398101604081905261002f9161010d565b600261003b83826101ff565b50600361004882826101ff565b505060008055506102bd565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261007b57600080fd5b81516001600160401b0381111561009457610094610054565b604051601f8201601f19908116603f011681016001600160401b03811182821017156100c2576100c2610054565b6040528181528382016020018510156100da57600080fd5b60005b828110156100f9576020818601810151838301820152016100dd565b506000918101602001919091529392505050565b6000806040838503121561012057600080fd5b82516001600160401b0381111561013657600080fd5b6101428582860161006a565b602085015190935090506001600160401b0381111561016057600080fd5b61016c8582860161006a565b9150509250929050565b600181811c9082168061018a57607f821691505b6020821081036101aa57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156101fa57806000526020600020601f840160051c810160208510156101d75750805b601f840160051c820191505b818110156101f757600081556001016101e3565b50505b505050565b81516001600160401b0381111561021857610218610054565b61022c816102268454610176565b846101b0565b6020601f82116001811461026057600083156102485750848201515b600019600385901b1c1916600184901b1784556101f7565b600084815260208120601f198516915b828110156102905787850151825560209485019460019092019101610270565b50848210156102ae5786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b61127b806102cc6000396000f3fe6080604052600436106100dd5760003560e01c80636352211e1161007f578063a22cb46511610059578063a22cb46514610231578063b88d4fde14610251578063c87b56dd14610264578063e985e9c51461028457600080fd5b80636352211e146101dc57806370a08231146101fc57806395d89b411461021c57600080fd5b8063095ea7b3116100bb578063095ea7b31461017e57806318160ddd1461019357806323b872dd146101b657806342842e0e146101c957600080fd5b806301ffc9a7146100e257806306fdde0314610117578063081812fc14610139575b600080fd5b3480156100ee57600080fd5b506101026100fd366004610dd3565b6102da565b60405190151581526020015b60405180910390f35b34801561012357600080fd5b5061012c6103bf565b60405161010e9190610e5e565b34801561014557600080fd5b50610159610154366004610e71565b610451565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010e565b61019161018c366004610eae565b6104b2565b005b34801561019f57600080fd5b50600154600054035b60405190815260200161010e565b6101916101c4366004610ed8565b6104c2565b6101916101d7366004610ed8565b6106f7565b3480156101e857600080fd5b506101596101f7366004610e71565b610717565b34801561020857600080fd5b506101a8610217366004610f15565b610722565b34801561022857600080fd5b5061012c61079b565b34801561023d57600080fd5b5061019161024c366004610f30565b6107aa565b61019161025f366004610f9b565b610841565b34801561027057600080fd5b5061012c61027f366004610e71565b6108a8565b34801561029057600080fd5b5061010261029f3660046110bc565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260076020908152604080832093909416825291909152205460ff1690565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316148061036d57507f80ac58cd000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b806103b957507f5b5e139f000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6060600280546103ce906110ef565b80601f01602080910402602001604051908101604052809291908181526020018280546103fa906110ef565b80156104475780601f1061041c57610100808354040283529160200191610447565b820191906000526020600020905b81548152906001019060200180831161042a57829003601f168201915b5050505050905090565b600061045c82610949565b610489576104897fcf4700e4000000000000000000000000000000000000000000000000000000006109a7565b5060009081526006602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b6104be828260016109b1565b5050565b60006104cd82610a9f565b73ffffffffffffffffffffffffffffffffffffffff948516949091508116841461051a5761051a7fa1148100000000000000000000000000000000000000000000000000000000006109a7565b600082815260066020526040902080543380821473ffffffffffffffffffffffffffffffffffffffff88169091141761058457610557863361029f565b610584576105847f59c896be000000000000000000000000000000000000000000000000000000006109a7565b801561058f57600082555b73ffffffffffffffffffffffffffffffffffffffff86811660009081526005602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019055918716808252919020805460010190554260a01b177c0200000000000000000000000000000000000000000000000000000000176000858152600460205260408120919091557c02000000000000000000000000000000000000000000000000000000008416900361067e5760018401600081815260046020526040812054900361067c57600054811461067c5760008181526004602052604090208490555b505b73ffffffffffffffffffffffffffffffffffffffff85168481887fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef600080a4806000036106ee576106ee7fea553b34000000000000000000000000000000000000000000000000000000006109a7565b50505050505050565b61071283838360405180602001604052806000815250610841565b505050565b60006103b982610a9f565b600073ffffffffffffffffffffffffffffffffffffffff8216610768576107687f8f4eb604000000000000000000000000000000000000000000000000000000006109a7565b5073ffffffffffffffffffffffffffffffffffffffff1660009081526005602052604090205467ffffffffffffffff1690565b6060600380546103ce906110ef565b33600081815260076020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b61084c8484846104c2565b73ffffffffffffffffffffffffffffffffffffffff83163b156108a25761087584848484610bd0565b6108a2576108a27fd1a57ed6000000000000000000000000000000000000000000000000000000006109a7565b50505050565b60606108b382610949565b6108e0576108e07fa14c4b50000000000000000000000000000000000000000000000000000000006109a7565b60006108f760408051602081019091526000815290565b905080516000036109175760405180602001604052806000815250610942565b8061092184610d40565b604051602001610932929190611142565b6040516020818303038152906040525b9392505050565b600080548210156109a25760005b506000828152600460205260408120549081900361097f5761097883611171565b9250610957565b7c0100000000000000000000000000000000000000000000000000000000161590505b919050565b8060005260046000fd5b60006109bc83610717565b90508180156109e157503373ffffffffffffffffffffffffffffffffffffffff821614155b15610a1d576109f0813361029f565b610a1d57610a1d7fcfb3b942000000000000000000000000000000000000000000000000000000006109a7565b60008381526006602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff88811691821790925591518693918516917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591a450505050565b60008181526004602052604081205490819003610b7b576000548210610ae857610ae87fdf2d9b42000000000000000000000000000000000000000000000000000000006109a7565b5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016000818152600460205260409020548015610ae9577c01000000000000000000000000000000000000000000000000000000008116600003610b4d57919050565b610b767fdf2d9b42000000000000000000000000000000000000000000000000000000006109a7565b610ae9565b7c01000000000000000000000000000000000000000000000000000000008116600003610ba757919050565b6109a27fdf2d9b42000000000000000000000000000000000000000000000000000000006109a7565b6040517f150b7a0200000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff85169063150b7a0290610c2b9033908990889088906004016111cd565b6020604051808303816000875af1925050508015610c84575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252610c8191810190611228565b60015b610cf2573d808015610cb2576040519150601f19603f3d011682016040523d82523d6000602084013e610cb7565b606091505b508051600003610cea57610cea7fd1a57ed6000000000000000000000000000000000000000000000000000000006109a7565b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a0200000000000000000000000000000000000000000000000000000000149050949350505050565b606060a06040510180604052602081039150506000815280825b600183039250600a81066030018353600a900480610d5a57508190037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0909101908152919050565b7fffffffff0000000000000000000000000000000000000000000000000000000081168114610dd057600080fd5b50565b600060208284031215610de557600080fd5b813561094281610da2565b60005b83811015610e0b578181015183820152602001610df3565b50506000910152565b60008151808452610e2c816020860160208601610df0565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006109426020830184610e14565b600060208284031215610e8357600080fd5b5035919050565b803573ffffffffffffffffffffffffffffffffffffffff811681146109a257600080fd5b60008060408385031215610ec157600080fd5b610eca83610e8a565b946020939093013593505050565b600080600060608486031215610eed57600080fd5b610ef684610e8a565b9250610f0460208501610e8a565b929592945050506040919091013590565b600060208284031215610f2757600080fd5b61094282610e8a565b60008060408385031215610f4357600080fd5b610f4c83610e8a565b915060208301358015158114610f6157600080fd5b809150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60008060008060808587031215610fb157600080fd5b610fba85610e8a565b9350610fc860208601610e8a565b925060408501359150606085013567ffffffffffffffff811115610feb57600080fd5b8501601f81018713610ffc57600080fd5b803567ffffffffffffffff81111561101657611016610f6c565b6040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0603f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8501160116810181811067ffffffffffffffff8211171561108257611082610f6c565b60405281815282820160200189101561109a57600080fd5b8160208401602083013760006020838301015280935050505092959194509250565b600080604083850312156110cf57600080fd5b6110d883610e8a565b91506110e660208401610e8a565b90509250929050565b600181811c9082168061110357607f821691505b60208210810361113c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b60008351611154818460208801610df0565b835190830190611168818360208801610df0565b01949350505050565b6000816111a7577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0190565b73ffffffffffffffffffffffffffffffffffffffff8516815273ffffffffffffffffffffffffffffffffffffffff8416602082015282604082015260806060820152600061121e6080830184610e14565b9695505050505050565b60006020828403121561123a57600080fd5b815161094281610da256fea26469706673582212205dcf19b3c8e52ee9866c3a61d669f181267a4405dd62d8c4ecd351b1235f854764736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1547 CODESIZE SUB DUP1 PUSH2 0x1547 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH2 0x2F SWAP2 PUSH2 0x10D JUMP JUMPDEST PUSH1 0x2 PUSH2 0x3B DUP4 DUP3 PUSH2 0x1FF JUMP JUMPDEST POP PUSH1 0x3 PUSH2 0x48 DUP3 DUP3 PUSH2 0x1FF JUMP JUMPDEST POP POP PUSH1 0x0 DUP1 SSTORE POP PUSH2 0x2BD JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x7B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x94 JUMPI PUSH2 0x94 PUSH2 0x54 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0xC2 JUMPI PUSH2 0xC2 PUSH2 0x54 JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP4 DUP3 ADD PUSH1 0x20 ADD DUP6 LT ISZERO PUSH2 0xDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0xF9 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP4 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0xDD JUMP JUMPDEST POP PUSH1 0x0 SWAP2 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x136 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x142 DUP6 DUP3 DUP7 ADD PUSH2 0x6A JUMP JUMPDEST PUSH1 0x20 DUP6 ADD MLOAD SWAP1 SWAP4 POP SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x160 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x16C DUP6 DUP3 DUP7 ADD PUSH2 0x6A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x18A JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1AA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x1FA JUMPI DUP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1D7 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1F7 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1E3 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT ISZERO PUSH2 0x218 JUMPI PUSH2 0x218 PUSH2 0x54 JUMP JUMPDEST PUSH2 0x22C DUP2 PUSH2 0x226 DUP5 SLOAD PUSH2 0x176 JUMP JUMPDEST DUP5 PUSH2 0x1B0 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x1F DUP3 GT PUSH1 0x1 DUP2 EQ PUSH2 0x260 JUMPI PUSH1 0x0 DUP4 ISZERO PUSH2 0x248 JUMPI POP DUP5 DUP3 ADD MLOAD JUMPDEST PUSH1 0x0 NOT PUSH1 0x3 DUP6 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP5 SWAP1 SHL OR DUP5 SSTORE PUSH2 0x1F7 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP6 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x290 JUMPI DUP8 DUP6 ADD MLOAD DUP3 SSTORE PUSH1 0x20 SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0x270 JUMP JUMPDEST POP DUP5 DUP3 LT ISZERO PUSH2 0x2AE JUMPI DUP7 DUP5 ADD MLOAD PUSH1 0x0 NOT PUSH1 0x3 DUP8 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP POP POP PUSH1 0x1 SWAP1 DUP2 SHL ADD SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x127B DUP1 PUSH2 0x2CC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x139 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0xDD3 JUMP JUMPDEST PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xE5E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x154 CALLDATASIZE PUSH1 0x4 PUSH2 0xE71 JUMP JUMPDEST PUSH2 0x451 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x191 PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0xEAE JUMP JUMPDEST PUSH2 0x4B2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x191 PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0xED8 JUMP JUMPDEST PUSH2 0x4C2 JUMP JUMPDEST PUSH2 0x191 PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0xED8 JUMP JUMPDEST PUSH2 0x6F7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0xE71 JUMP JUMPDEST PUSH2 0x717 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A8 PUSH2 0x217 CALLDATASIZE PUSH1 0x4 PUSH2 0xF15 JUMP JUMPDEST PUSH2 0x722 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH2 0x79B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x191 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0xF30 JUMP JUMPDEST PUSH2 0x7AA JUMP JUMPDEST PUSH2 0x191 PUSH2 0x25F CALLDATASIZE PUSH1 0x4 PUSH2 0xF9B JUMP JUMPDEST PUSH2 0x841 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH2 0x27F CALLDATASIZE PUSH1 0x4 PUSH2 0xE71 JUMP JUMPDEST PUSH2 0x8A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0x29F CALLDATASIZE PUSH1 0x4 PUSH2 0x10BC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ DUP1 PUSH2 0x36D JUMPI POP PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x3B9 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x3CE SWAP1 PUSH2 0x10EF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3FA SWAP1 PUSH2 0x10EF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x447 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x41C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x447 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x42A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45C DUP3 PUSH2 0x949 JUMP JUMPDEST PUSH2 0x489 JUMPI PUSH2 0x489 PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x4BE DUP3 DUP3 PUSH1 0x1 PUSH2 0x9B1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CD DUP3 PUSH2 0xA9F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 AND SWAP5 SWAP1 SWAP2 POP DUP2 AND DUP5 EQ PUSH2 0x51A JUMPI PUSH2 0x51A PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER DUP1 DUP3 EQ PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND SWAP1 SWAP2 EQ OR PUSH2 0x584 JUMPI PUSH2 0x557 DUP7 CALLER PUSH2 0x29F JUMP JUMPDEST PUSH2 0x584 JUMPI PUSH2 0x584 PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x58F JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND SWAP1 SUB PUSH2 0x67E JUMPI PUSH1 0x1 DUP5 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x67C JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x67C JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 DUP2 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 DUP1 PUSH1 0x0 SUB PUSH2 0x6EE JUMPI PUSH2 0x6EE PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x712 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x841 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B9 DUP3 PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x768 JUMPI PUSH2 0x768 PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3CE SWAP1 PUSH2 0x10EF JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x84C DUP5 DUP5 DUP5 PUSH2 0x4C2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND EXTCODESIZE ISZERO PUSH2 0x8A2 JUMPI PUSH2 0x875 DUP5 DUP5 DUP5 DUP5 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x8A2 JUMPI PUSH2 0x8A2 PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8B3 DUP3 PUSH2 0x949 JUMP JUMPDEST PUSH2 0x8E0 JUMPI PUSH2 0x8E0 PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F7 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x917 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x942 JUMP JUMPDEST DUP1 PUSH2 0x921 DUP5 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x932 SWAP3 SWAP2 SWAP1 PUSH2 0x1142 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x0 JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x97F JUMPI PUSH2 0x978 DUP4 PUSH2 0x1171 JUMP JUMPDEST SWAP3 POP PUSH2 0x957 JUMP JUMPDEST PUSH29 0x100000000000000000000000000000000000000000000000000000000 AND ISZERO SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9BC DUP4 PUSH2 0x717 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0x9E1 JUMPI POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xA1D JUMPI PUSH2 0x9F0 DUP2 CALLER PUSH2 0x29F JUMP JUMPDEST PUSH2 0xA1D JUMPI PUSH2 0xA1D PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP7 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0xB7B JUMPI PUSH1 0x0 SLOAD DUP3 LT PUSH2 0xAE8 JUMPI PUSH2 0xAE8 PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xAE9 JUMPI PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH1 0x0 SUB PUSH2 0xB4D JUMPI SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB76 PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST PUSH2 0xAE9 JUMP JUMPDEST PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH1 0x0 SUB PUSH2 0xBA7 JUMPI SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9A2 PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC2B SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11CD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC84 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xC81 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1228 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xCF2 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xCB2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCB7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xCEA JUMPI PUSH2 0xCEA PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP POP PUSH1 0x0 DUP2 MSTORE DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV DUP1 PUSH2 0xD5A JUMPI POP DUP2 SWAP1 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0xDD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x942 DUP2 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE0B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xDF3 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xE2C DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x942 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x9A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xECA DUP4 PUSH2 0xE8A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEF6 DUP5 PUSH2 0xE8A JUMP JUMPDEST SWAP3 POP PUSH2 0xF04 PUSH1 0x20 DUP6 ADD PUSH2 0xE8A JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x942 DUP3 PUSH2 0xE8A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF4C DUP4 PUSH2 0xE8A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xFB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFBA DUP6 PUSH2 0xE8A JUMP JUMPDEST SWAP4 POP PUSH2 0xFC8 PUSH1 0x20 DUP7 ADD PUSH2 0xE8A JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0xFFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1016 JUMPI PUSH2 0x1016 PUSH2 0xF6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x3F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP6 ADD AND ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1082 JUMPI PUSH2 0x1082 PUSH2 0xF6C JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP10 LT ISZERO PUSH2 0x109A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D8 DUP4 PUSH2 0xE8A JUMP JUMPDEST SWAP2 POP PUSH2 0x10E6 PUSH1 0x20 DUP5 ADD PUSH2 0xE8A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1103 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x113C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1154 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xDF0 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1168 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xDF0 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x11A7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x121E PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xE14 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x123A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x942 DUP2 PUSH2 0xDA2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TSTORE 0xCF NOT 0xB3 0xC8 0xE5 0x2E 0xE9 DUP7 PUSH13 0x3A61D669F181267A4405DD62D8 0xC4 0xEC 0xD3 MLOAD 0xB1 0x23 PUSH0 DUP6 SELFBALANCE PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "2185:42638:2:-:0;;;6236:154;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6302:5;:13;6310:5;6302;:13;:::i;:::-;-1:-1:-1;6325:7:2;:17;6335:7;6325;:17;:::i;:::-;-1:-1:-1;;6772:7:2;6352:31;;-1:-1:-1;2185:42638:2;;14:127:4;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:834;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;298:13;;-1:-1:-1;;;;;323:30:4;;320:56;;;356:18;;:::i;:::-;405:2;399:9;497:2;459:17;;-1:-1:-1;;455:31:4;;;488:2;451:40;447:54;435:67;;-1:-1:-1;;;;;517:34:4;;553:22;;;514:62;511:88;;;579:18;;:::i;:::-;615:2;608:22;639;;;680:19;;;701:4;676:30;673:39;-1:-1:-1;670:59:4;;;725:1;722;715:12;670:59;747:1;757:143;771:6;768:1;765:13;757:143;;;883:4;867:14;;;863:25;;857:32;834:14;;;830:25;;823:67;786:12;757:143;;;-1:-1:-1;948:1:4;920:19;;;941:4;916:30;909:41;;;;924:6;146:834;-1:-1:-1;;;146:834:4:o;985:557::-;1084:6;1092;1145:2;1133:9;1124:7;1120:23;1116:32;1113:52;;;1161:1;1158;1151:12;1113:52;1188:16;;-1:-1:-1;;;;;1216:30:4;;1213:50;;;1259:1;1256;1249:12;1213:50;1282:61;1335:7;1326:6;1315:9;1311:22;1282:61;:::i;:::-;1389:2;1374:18;;1368:25;1272:71;;-1:-1:-1;1368:25:4;-1:-1:-1;;;;;;1405:32:4;;1402:52;;;1450:1;1447;1440:12;1402:52;1473:63;1528:7;1517:8;1506:9;1502:24;1473:63;:::i;:::-;1463:73;;;985:557;;;;;:::o;1547:380::-;1626:1;1622:12;;;;1669;;;1690:61;;1744:4;1736:6;1732:17;1722:27;;1690:61;1797:2;1789:6;1786:14;1766:18;1763:38;1760:161;;1843:10;1838:3;1834:20;1831:1;1824:31;1878:4;1875:1;1868:15;1906:4;1903:1;1896:15;1760:161;;1547:380;;;:::o;2058:518::-;2160:2;2155:3;2152:11;2149:421;;;2196:5;2193:1;2186:16;2240:4;2237:1;2227:18;2310:2;2298:10;2294:19;2291:1;2287:27;2281:4;2277:38;2346:4;2334:10;2331:20;2328:47;;;-1:-1:-1;2369:4:4;2328:47;2424:2;2419:3;2415:12;2412:1;2408:20;2402:4;2398:31;2388:41;;2479:81;2497:2;2490:5;2487:13;2479:81;;;2556:1;2542:16;;2523:1;2512:13;2479:81;;;2483:3;;2149:421;2058:518;;;:::o;2752:1299::-;2872:10;;-1:-1:-1;;;;;2894:30:4;;2891:56;;;2927:18;;:::i;:::-;2956:97;3046:6;3006:38;3038:4;3032:11;3006:38;:::i;:::-;3000:4;2956:97;:::i;:::-;3102:4;3133:2;3122:14;;3150:1;3145:649;;;;3838:1;3855:6;3852:89;;;-1:-1:-1;3907:19:4;;;3901:26;3852:89;-1:-1:-1;;2709:1:4;2705:11;;;2701:24;2697:29;2687:40;2733:1;2729:11;;;2684:57;3954:81;;3115:930;;3145:649;2005:1;1998:14;;;2042:4;2029:18;;-1:-1:-1;;3181:20:4;;;3299:222;3313:7;3310:1;3307:14;3299:222;;;3395:19;;;3389:26;3374:42;;3502:4;3487:20;;;;3455:1;3443:14;;;;3329:12;3299:222;;;3303:3;3549:6;3540:7;3537:19;3534:201;;;3610:19;;;3604:26;-1:-1:-1;;3693:1:4;3689:14;;;3705:3;3685:24;3681:37;3677:42;3662:58;3647:74;;3534:201;-1:-1:-1;;;;3781:1:4;3765:14;;;3761:22;3748:36;;-1:-1:-1;2752:1299:4:o;:::-;2185:42638:2;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_afterTokenTransfers_1104": {
									"entryPoint": null,
									"id": 1104,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_approve_1545": {
									"entryPoint": 2481,
									"id": 1545,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_baseURI_444": {
									"entryPoint": null,
									"id": 444,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_beforeTokenTransfers_1091": {
									"entryPoint": null,
									"id": 1091,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_checkContractOnERC721Received_1160": {
									"entryPoint": 3024,
									"id": 1160,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@_exists_813": {
									"entryPoint": 2377,
									"id": 813,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_extraData_1770": {
									"entryPoint": null,
									"id": 1770,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_getApprovedSlotAndAddress_846": {
									"entryPoint": null,
									"id": 846,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@_isSenderApprovedOrOwner_827": {
									"entryPoint": null,
									"id": 827,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_msgSenderERC721A_1813": {
									"entryPoint": null,
									"id": 1813,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nextExtraData_1803": {
									"entryPoint": null,
									"id": 1803,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@_packOwnershipData_675": {
									"entryPoint": null,
									"id": 675,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_packedOwnershipOf_609": {
									"entryPoint": 2719,
									"id": 609,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@_revert_1831": {
									"entryPoint": 2471,
									"id": 1831,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_startTokenId_182": {
									"entryPoint": null,
									"id": 182,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_toString_1823": {
									"entryPoint": 3392,
									"id": 1823,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@approve_701": {
									"entryPoint": 1202,
									"id": 701,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@balanceOf_257": {
									"entryPoint": 1826,
									"id": 257,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getApproved_726": {
									"entryPoint": 1105,
									"id": 726,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isApprovedForAll_770": {
									"entryPoint": null,
									"id": 770,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@name_380": {
									"entryPoint": 959,
									"id": 380,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@ownerOf_464": {
									"entryPoint": 1815,
									"id": 464,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@safeTransferFrom_1038": {
									"entryPoint": 1783,
									"id": 1038,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@safeTransferFrom_1078": {
									"entryPoint": 2113,
									"id": 1078,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@setApprovalForAll_752": {
									"entryPoint": 1962,
									"id": 752,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_370": {
									"entryPoint": 730,
									"id": 370,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@symbol_390": {
									"entryPoint": 1947,
									"id": 390,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tokenURI_435": {
									"entryPoint": 2216,
									"id": 435,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalSupply_207": {
									"entryPoint": null,
									"id": 207,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_1019": {
									"entryPoint": 1218,
									"id": 1019,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 3722,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3861,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4284,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3800,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 3995,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 3888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 3539,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4_fromMemory": {
									"entryPoint": 4648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 3697,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 3604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 4418,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed": {
									"entryPoint": 4557,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3568,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 4465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 4335,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x41": {
									"entryPoint": 3948,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_bytes4": {
									"entryPoint": 3490,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7394:4",
										"nodeType": "YulBlock",
										"src": "0:7394:4",
										"statements": [
											{
												"nativeSrc": "6:3:4",
												"nodeType": "YulBlock",
												"src": "6:3:4",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "58:133:4",
													"nodeType": "YulBlock",
													"src": "58:133:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "169:16:4",
																"nodeType": "YulBlock",
																"src": "169:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:4",
																					"nodeType": "YulLiteral",
																					"src": "178:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:4",
																					"nodeType": "YulLiteral",
																					"src": "181:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:4"
																			},
																			"nativeSrc": "171:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:4"
																		},
																		"nativeSrc": "171:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "81:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "81:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "92:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "92:5:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "99:66:4",
																						"nodeType": "YulLiteral",
																						"src": "99:66:4",
																						"type": "",
																						"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "88:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "88:3:4"
																				},
																				"nativeSrc": "88:78:4",
																				"nodeType": "YulFunctionCall",
																				"src": "88:78:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "78:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "78:2:4"
																		},
																		"nativeSrc": "78:89:4",
																		"nodeType": "YulFunctionCall",
																		"src": "78:89:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "71:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "71:6:4"
																},
																"nativeSrc": "71:97:4",
																"nodeType": "YulFunctionCall",
																"src": "71:97:4"
															},
															"nativeSrc": "68:117:4",
															"nodeType": "YulIf",
															"src": "68:117:4"
														}
													]
												},
												"name": "validator_revert_bytes4",
												"nativeSrc": "14:177:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "47:5:4",
														"nodeType": "YulTypedName",
														"src": "47:5:4",
														"type": ""
													}
												],
												"src": "14:177:4"
											},
											{
												"body": {
													"nativeSrc": "265:176:4",
													"nodeType": "YulBlock",
													"src": "265:176:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "311:16:4",
																"nodeType": "YulBlock",
																"src": "311:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "320:1:4",
																					"nodeType": "YulLiteral",
																					"src": "320:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "323:1:4",
																					"nodeType": "YulLiteral",
																					"src": "323:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "313:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "313:6:4"
																			},
																			"nativeSrc": "313:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "313:12:4"
																		},
																		"nativeSrc": "313:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "313:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "286:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "286:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "295:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "295:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "282:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "282:3:4"
																		},
																		"nativeSrc": "282:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "282:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "307:2:4",
																		"nodeType": "YulLiteral",
																		"src": "307:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "278:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "278:3:4"
																},
																"nativeSrc": "278:32:4",
																"nodeType": "YulFunctionCall",
																"src": "278:32:4"
															},
															"nativeSrc": "275:52:4",
															"nodeType": "YulIf",
															"src": "275:52:4"
														},
														{
															"nativeSrc": "336:36:4",
															"nodeType": "YulVariableDeclaration",
															"src": "336:36:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "362:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "349:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "349:12:4"
																},
																"nativeSrc": "349:23:4",
																"nodeType": "YulFunctionCall",
																"src": "349:23:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "340:5:4",
																	"nodeType": "YulTypedName",
																	"src": "340:5:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "405:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "405:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "381:23:4",
																	"nodeType": "YulIdentifier",
																	"src": "381:23:4"
																},
																"nativeSrc": "381:30:4",
																"nodeType": "YulFunctionCall",
																"src": "381:30:4"
															},
															"nativeSrc": "381:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "381:30:4"
														},
														{
															"nativeSrc": "420:15:4",
															"nodeType": "YulAssignment",
															"src": "420:15:4",
															"value": {
																"name": "value",
																"nativeSrc": "430:5:4",
																"nodeType": "YulIdentifier",
																"src": "430:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "420:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "420:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "196:245:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "231:9:4",
														"nodeType": "YulTypedName",
														"src": "231:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "242:7:4",
														"nodeType": "YulTypedName",
														"src": "242:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "254:6:4",
														"nodeType": "YulTypedName",
														"src": "254:6:4",
														"type": ""
													}
												],
												"src": "196:245:4"
											},
											{
												"body": {
													"nativeSrc": "541:92:4",
													"nodeType": "YulBlock",
													"src": "541:92:4",
													"statements": [
														{
															"nativeSrc": "551:26:4",
															"nodeType": "YulAssignment",
															"src": "551:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "563:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "563:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "574:2:4",
																		"nodeType": "YulLiteral",
																		"src": "574:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "559:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "559:3:4"
																},
																"nativeSrc": "559:18:4",
																"nodeType": "YulFunctionCall",
																"src": "559:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "551:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "551:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "593:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "593:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "618:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "618:6:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "611:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "611:6:4"
																				},
																				"nativeSrc": "611:14:4",
																				"nodeType": "YulFunctionCall",
																				"src": "611:14:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "604:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "604:6:4"
																		},
																		"nativeSrc": "604:22:4",
																		"nodeType": "YulFunctionCall",
																		"src": "604:22:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "586:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "586:6:4"
																},
																"nativeSrc": "586:41:4",
																"nodeType": "YulFunctionCall",
																"src": "586:41:4"
															},
															"nativeSrc": "586:41:4",
															"nodeType": "YulExpressionStatement",
															"src": "586:41:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "446:187:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "510:9:4",
														"nodeType": "YulTypedName",
														"src": "510:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "521:6:4",
														"nodeType": "YulTypedName",
														"src": "521:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "532:4:4",
														"nodeType": "YulTypedName",
														"src": "532:4:4",
														"type": ""
													}
												],
												"src": "446:187:4"
											},
											{
												"body": {
													"nativeSrc": "704:184:4",
													"nodeType": "YulBlock",
													"src": "704:184:4",
													"statements": [
														{
															"nativeSrc": "714:10:4",
															"nodeType": "YulVariableDeclaration",
															"src": "714:10:4",
															"value": {
																"kind": "number",
																"nativeSrc": "723:1:4",
																"nodeType": "YulLiteral",
																"src": "723:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "718:1:4",
																	"nodeType": "YulTypedName",
																	"src": "718:1:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "783:63:4",
																"nodeType": "YulBlock",
																"src": "783:63:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "808:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "808:3:4"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "813:1:4",
																							"nodeType": "YulIdentifier",
																							"src": "813:1:4"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "804:3:4",
																						"nodeType": "YulIdentifier",
																						"src": "804:3:4"
																					},
																					"nativeSrc": "804:11:4",
																					"nodeType": "YulFunctionCall",
																					"src": "804:11:4"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "827:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "827:3:4"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "832:1:4",
																									"nodeType": "YulIdentifier",
																									"src": "832:1:4"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "823:3:4",
																								"nodeType": "YulIdentifier",
																								"src": "823:3:4"
																							},
																							"nativeSrc": "823:11:4",
																							"nodeType": "YulFunctionCall",
																							"src": "823:11:4"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "817:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "817:5:4"
																					},
																					"nativeSrc": "817:18:4",
																					"nodeType": "YulFunctionCall",
																					"src": "817:18:4"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "797:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "797:6:4"
																			},
																			"nativeSrc": "797:39:4",
																			"nodeType": "YulFunctionCall",
																			"src": "797:39:4"
																		},
																		"nativeSrc": "797:39:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "797:39:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "744:1:4",
																		"nodeType": "YulIdentifier",
																		"src": "744:1:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "747:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "747:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "741:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "741:2:4"
																},
																"nativeSrc": "741:13:4",
																"nodeType": "YulFunctionCall",
																"src": "741:13:4"
															},
															"nativeSrc": "733:113:4",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "755:19:4",
																"nodeType": "YulBlock",
																"src": "755:19:4",
																"statements": [
																	{
																		"nativeSrc": "757:15:4",
																		"nodeType": "YulAssignment",
																		"src": "757:15:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "766:1:4",
																					"nodeType": "YulIdentifier",
																					"src": "766:1:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "769:2:4",
																					"nodeType": "YulLiteral",
																					"src": "769:2:4",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "762:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "762:3:4"
																			},
																			"nativeSrc": "762:10:4",
																			"nodeType": "YulFunctionCall",
																			"src": "762:10:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "757:1:4",
																				"nodeType": "YulIdentifier",
																				"src": "757:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "737:3:4",
																"nodeType": "YulBlock",
																"src": "737:3:4",
																"statements": []
															},
															"src": "733:113:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "866:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "866:3:4"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "871:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "871:6:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "862:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "862:3:4"
																		},
																		"nativeSrc": "862:16:4",
																		"nodeType": "YulFunctionCall",
																		"src": "862:16:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "880:1:4",
																		"nodeType": "YulLiteral",
																		"src": "880:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "855:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "855:6:4"
																},
																"nativeSrc": "855:27:4",
																"nodeType": "YulFunctionCall",
																"src": "855:27:4"
															},
															"nativeSrc": "855:27:4",
															"nodeType": "YulExpressionStatement",
															"src": "855:27:4"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "638:250:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "682:3:4",
														"nodeType": "YulTypedName",
														"src": "682:3:4",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "687:3:4",
														"nodeType": "YulTypedName",
														"src": "687:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "692:6:4",
														"nodeType": "YulTypedName",
														"src": "692:6:4",
														"type": ""
													}
												],
												"src": "638:250:4"
											},
											{
												"body": {
													"nativeSrc": "943:280:4",
													"nodeType": "YulBlock",
													"src": "943:280:4",
													"statements": [
														{
															"nativeSrc": "953:26:4",
															"nodeType": "YulVariableDeclaration",
															"src": "953:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "973:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "973:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "967:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "967:5:4"
																},
																"nativeSrc": "967:12:4",
																"nodeType": "YulFunctionCall",
																"src": "967:12:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "957:6:4",
																	"nodeType": "YulTypedName",
																	"src": "957:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "995:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "995:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1000:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1000:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "988:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "988:6:4"
																},
																"nativeSrc": "988:19:4",
																"nodeType": "YulFunctionCall",
																"src": "988:19:4"
															},
															"nativeSrc": "988:19:4",
															"nodeType": "YulExpressionStatement",
															"src": "988:19:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1055:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1055:5:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1062:4:4",
																				"nodeType": "YulLiteral",
																				"src": "1062:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1051:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1051:3:4"
																		},
																		"nativeSrc": "1051:16:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1051:16:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1073:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "1073:3:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1078:4:4",
																				"nodeType": "YulLiteral",
																				"src": "1078:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1069:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1069:3:4"
																		},
																		"nativeSrc": "1069:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1069:14:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1085:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1085:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1016:34:4",
																	"nodeType": "YulIdentifier",
																	"src": "1016:34:4"
																},
																"nativeSrc": "1016:76:4",
																"nodeType": "YulFunctionCall",
																"src": "1016:76:4"
															},
															"nativeSrc": "1016:76:4",
															"nodeType": "YulExpressionStatement",
															"src": "1016:76:4"
														},
														{
															"nativeSrc": "1101:116:4",
															"nodeType": "YulAssignment",
															"src": "1101:116:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "1116:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "1116:3:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "1129:6:4",
																								"nodeType": "YulIdentifier",
																								"src": "1129:6:4"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1137:2:4",
																								"nodeType": "YulLiteral",
																								"src": "1137:2:4",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1125:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "1125:3:4"
																						},
																						"nativeSrc": "1125:15:4",
																						"nodeType": "YulFunctionCall",
																						"src": "1125:15:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1142:66:4",
																						"nodeType": "YulLiteral",
																						"src": "1142:66:4",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1121:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:4"
																				},
																				"nativeSrc": "1121:88:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:88:4"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1112:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1112:3:4"
																		},
																		"nativeSrc": "1112:98:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1112:98:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1212:4:4",
																		"nodeType": "YulLiteral",
																		"src": "1212:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1108:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1108:3:4"
																},
																"nativeSrc": "1108:109:4",
																"nodeType": "YulFunctionCall",
																"src": "1108:109:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1101:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1101:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "893:330:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "920:5:4",
														"nodeType": "YulTypedName",
														"src": "920:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "927:3:4",
														"nodeType": "YulTypedName",
														"src": "927:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "935:3:4",
														"nodeType": "YulTypedName",
														"src": "935:3:4",
														"type": ""
													}
												],
												"src": "893:330:4"
											},
											{
												"body": {
													"nativeSrc": "1349:99:4",
													"nodeType": "YulBlock",
													"src": "1349:99:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1366:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1366:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1377:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1377:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1359:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1359:6:4"
																},
																"nativeSrc": "1359:21:4",
																"nodeType": "YulFunctionCall",
																"src": "1359:21:4"
															},
															"nativeSrc": "1359:21:4",
															"nodeType": "YulExpressionStatement",
															"src": "1359:21:4"
														},
														{
															"nativeSrc": "1389:53:4",
															"nodeType": "YulAssignment",
															"src": "1389:53:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1415:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1415:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1427:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1427:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1438:2:4",
																				"nodeType": "YulLiteral",
																				"src": "1438:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1423:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1423:3:4"
																		},
																		"nativeSrc": "1423:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1423:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "1397:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "1397:17:4"
																},
																"nativeSrc": "1397:45:4",
																"nodeType": "YulFunctionCall",
																"src": "1397:45:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1389:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1389:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1228:220:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1318:9:4",
														"nodeType": "YulTypedName",
														"src": "1318:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1329:6:4",
														"nodeType": "YulTypedName",
														"src": "1329:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1340:4:4",
														"nodeType": "YulTypedName",
														"src": "1340:4:4",
														"type": ""
													}
												],
												"src": "1228:220:4"
											},
											{
												"body": {
													"nativeSrc": "1523:156:4",
													"nodeType": "YulBlock",
													"src": "1523:156:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1569:16:4",
																"nodeType": "YulBlock",
																"src": "1569:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1578:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1578:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1581:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1581:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1571:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1571:6:4"
																			},
																			"nativeSrc": "1571:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1571:12:4"
																		},
																		"nativeSrc": "1571:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1571:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1544:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1544:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1553:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1553:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1540:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1540:3:4"
																		},
																		"nativeSrc": "1540:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1540:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1565:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1565:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1536:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1536:3:4"
																},
																"nativeSrc": "1536:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1536:32:4"
															},
															"nativeSrc": "1533:52:4",
															"nodeType": "YulIf",
															"src": "1533:52:4"
														},
														{
															"nativeSrc": "1594:14:4",
															"nodeType": "YulVariableDeclaration",
															"src": "1594:14:4",
															"value": {
																"kind": "number",
																"nativeSrc": "1607:1:4",
																"nodeType": "YulLiteral",
																"src": "1607:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1598:5:4",
																	"nodeType": "YulTypedName",
																	"src": "1598:5:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1617:32:4",
															"nodeType": "YulAssignment",
															"src": "1617:32:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1639:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1639:9:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1626:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1626:12:4"
																},
																"nativeSrc": "1626:23:4",
																"nodeType": "YulFunctionCall",
																"src": "1626:23:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1617:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1617:5:4"
																}
															]
														},
														{
															"nativeSrc": "1658:15:4",
															"nodeType": "YulAssignment",
															"src": "1658:15:4",
															"value": {
																"name": "value",
																"nativeSrc": "1668:5:4",
																"nodeType": "YulIdentifier",
																"src": "1668:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1658:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1658:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1453:226:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1489:9:4",
														"nodeType": "YulTypedName",
														"src": "1489:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1500:7:4",
														"nodeType": "YulTypedName",
														"src": "1500:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1512:6:4",
														"nodeType": "YulTypedName",
														"src": "1512:6:4",
														"type": ""
													}
												],
												"src": "1453:226:4"
											},
											{
												"body": {
													"nativeSrc": "1785:125:4",
													"nodeType": "YulBlock",
													"src": "1785:125:4",
													"statements": [
														{
															"nativeSrc": "1795:26:4",
															"nodeType": "YulAssignment",
															"src": "1795:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1807:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1807:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1818:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1818:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1803:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1803:3:4"
																},
																"nativeSrc": "1803:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1803:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1795:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1795:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1837:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1837:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1852:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1852:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1860:42:4",
																				"nodeType": "YulLiteral",
																				"src": "1860:42:4",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1848:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1848:3:4"
																		},
																		"nativeSrc": "1848:55:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1848:55:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1830:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1830:6:4"
																},
																"nativeSrc": "1830:74:4",
																"nodeType": "YulFunctionCall",
																"src": "1830:74:4"
															},
															"nativeSrc": "1830:74:4",
															"nodeType": "YulExpressionStatement",
															"src": "1830:74:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "1684:226:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1754:9:4",
														"nodeType": "YulTypedName",
														"src": "1754:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1765:6:4",
														"nodeType": "YulTypedName",
														"src": "1765:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1776:4:4",
														"nodeType": "YulTypedName",
														"src": "1776:4:4",
														"type": ""
													}
												],
												"src": "1684:226:4"
											},
											{
												"body": {
													"nativeSrc": "1964:147:4",
													"nodeType": "YulBlock",
													"src": "1964:147:4",
													"statements": [
														{
															"nativeSrc": "1974:29:4",
															"nodeType": "YulAssignment",
															"src": "1974:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1996:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1996:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1983:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1983:12:4"
																},
																"nativeSrc": "1983:20:4",
																"nodeType": "YulFunctionCall",
																"src": "1983:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1974:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1974:5:4"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2089:16:4",
																"nodeType": "YulBlock",
																"src": "2089:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2098:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2098:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2101:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2101:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2091:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2091:6:4"
																			},
																			"nativeSrc": "2091:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2091:12:4"
																		},
																		"nativeSrc": "2091:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2091:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2025:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2025:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2036:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "2036:5:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2043:42:4",
																						"nodeType": "YulLiteral",
																						"src": "2043:42:4",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "2032:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "2032:3:4"
																				},
																				"nativeSrc": "2032:54:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2032:54:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2022:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "2022:2:4"
																		},
																		"nativeSrc": "2022:65:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2022:65:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2015:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2015:6:4"
																},
																"nativeSrc": "2015:73:4",
																"nodeType": "YulFunctionCall",
																"src": "2015:73:4"
															},
															"nativeSrc": "2012:93:4",
															"nodeType": "YulIf",
															"src": "2012:93:4"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "1915:196:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1943:6:4",
														"nodeType": "YulTypedName",
														"src": "1943:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1954:5:4",
														"nodeType": "YulTypedName",
														"src": "1954:5:4",
														"type": ""
													}
												],
												"src": "1915:196:4"
											},
											{
												"body": {
													"nativeSrc": "2203:213:4",
													"nodeType": "YulBlock",
													"src": "2203:213:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2249:16:4",
																"nodeType": "YulBlock",
																"src": "2249:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2258:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2258:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2261:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2261:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2251:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2251:6:4"
																			},
																			"nativeSrc": "2251:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2251:12:4"
																		},
																		"nativeSrc": "2251:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2251:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2224:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2224:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2233:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2233:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2220:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2220:3:4"
																		},
																		"nativeSrc": "2220:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2220:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2245:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2245:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2216:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2216:3:4"
																},
																"nativeSrc": "2216:32:4",
																"nodeType": "YulFunctionCall",
																"src": "2216:32:4"
															},
															"nativeSrc": "2213:52:4",
															"nodeType": "YulIf",
															"src": "2213:52:4"
														},
														{
															"nativeSrc": "2274:39:4",
															"nodeType": "YulAssignment",
															"src": "2274:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2303:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2303:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2284:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "2284:18:4"
																},
																"nativeSrc": "2284:29:4",
																"nodeType": "YulFunctionCall",
																"src": "2284:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2274:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2274:6:4"
																}
															]
														},
														{
															"nativeSrc": "2322:14:4",
															"nodeType": "YulVariableDeclaration",
															"src": "2322:14:4",
															"value": {
																"kind": "number",
																"nativeSrc": "2335:1:4",
																"nodeType": "YulLiteral",
																"src": "2335:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2326:5:4",
																	"nodeType": "YulTypedName",
																	"src": "2326:5:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2345:41:4",
															"nodeType": "YulAssignment",
															"src": "2345:41:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2371:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2371:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2382:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2382:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2367:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2367:3:4"
																		},
																		"nativeSrc": "2367:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2367:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2354:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "2354:12:4"
																},
																"nativeSrc": "2354:32:4",
																"nodeType": "YulFunctionCall",
																"src": "2354:32:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2345:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "2345:5:4"
																}
															]
														},
														{
															"nativeSrc": "2395:15:4",
															"nodeType": "YulAssignment",
															"src": "2395:15:4",
															"value": {
																"name": "value",
																"nativeSrc": "2405:5:4",
																"nodeType": "YulIdentifier",
																"src": "2405:5:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2395:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2395:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2116:300:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2161:9:4",
														"nodeType": "YulTypedName",
														"src": "2161:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2172:7:4",
														"nodeType": "YulTypedName",
														"src": "2172:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2184:6:4",
														"nodeType": "YulTypedName",
														"src": "2184:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2192:6:4",
														"nodeType": "YulTypedName",
														"src": "2192:6:4",
														"type": ""
													}
												],
												"src": "2116:300:4"
											},
											{
												"body": {
													"nativeSrc": "2522:76:4",
													"nodeType": "YulBlock",
													"src": "2522:76:4",
													"statements": [
														{
															"nativeSrc": "2532:26:4",
															"nodeType": "YulAssignment",
															"src": "2532:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2544:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2544:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2555:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2555:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2540:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2540:3:4"
																},
																"nativeSrc": "2540:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2540:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2532:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2532:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2574:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2574:9:4"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2585:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2585:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2567:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2567:6:4"
																},
																"nativeSrc": "2567:25:4",
																"nodeType": "YulFunctionCall",
																"src": "2567:25:4"
															},
															"nativeSrc": "2567:25:4",
															"nodeType": "YulExpressionStatement",
															"src": "2567:25:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2421:177:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2491:9:4",
														"nodeType": "YulTypedName",
														"src": "2491:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2502:6:4",
														"nodeType": "YulTypedName",
														"src": "2502:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2513:4:4",
														"nodeType": "YulTypedName",
														"src": "2513:4:4",
														"type": ""
													}
												],
												"src": "2421:177:4"
											},
											{
												"body": {
													"nativeSrc": "2707:270:4",
													"nodeType": "YulBlock",
													"src": "2707:270:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2753:16:4",
																"nodeType": "YulBlock",
																"src": "2753:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2762:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2762:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2765:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2765:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2755:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2755:6:4"
																			},
																			"nativeSrc": "2755:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2755:12:4"
																		},
																		"nativeSrc": "2755:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2755:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2728:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2728:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2737:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2737:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2724:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2724:3:4"
																		},
																		"nativeSrc": "2724:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2724:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2749:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2749:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2720:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2720:3:4"
																},
																"nativeSrc": "2720:32:4",
																"nodeType": "YulFunctionCall",
																"src": "2720:32:4"
															},
															"nativeSrc": "2717:52:4",
															"nodeType": "YulIf",
															"src": "2717:52:4"
														},
														{
															"nativeSrc": "2778:39:4",
															"nodeType": "YulAssignment",
															"src": "2778:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2807:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2807:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2788:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "2788:18:4"
																},
																"nativeSrc": "2788:29:4",
																"nodeType": "YulFunctionCall",
																"src": "2788:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2778:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2778:6:4"
																}
															]
														},
														{
															"nativeSrc": "2826:48:4",
															"nodeType": "YulAssignment",
															"src": "2826:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2859:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2859:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2870:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2870:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2855:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2855:3:4"
																		},
																		"nativeSrc": "2855:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2855:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2836:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "2836:18:4"
																},
																"nativeSrc": "2836:38:4",
																"nodeType": "YulFunctionCall",
																"src": "2836:38:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2826:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2826:6:4"
																}
															]
														},
														{
															"nativeSrc": "2883:14:4",
															"nodeType": "YulVariableDeclaration",
															"src": "2883:14:4",
															"value": {
																"kind": "number",
																"nativeSrc": "2896:1:4",
																"nodeType": "YulLiteral",
																"src": "2896:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2887:5:4",
																	"nodeType": "YulTypedName",
																	"src": "2887:5:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2906:41:4",
															"nodeType": "YulAssignment",
															"src": "2906:41:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2932:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2932:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2943:2:4",
																				"nodeType": "YulLiteral",
																				"src": "2943:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2928:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2928:3:4"
																		},
																		"nativeSrc": "2928:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2928:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2915:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "2915:12:4"
																},
																"nativeSrc": "2915:32:4",
																"nodeType": "YulFunctionCall",
																"src": "2915:32:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2906:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "2906:5:4"
																}
															]
														},
														{
															"nativeSrc": "2956:15:4",
															"nodeType": "YulAssignment",
															"src": "2956:15:4",
															"value": {
																"name": "value",
																"nativeSrc": "2966:5:4",
																"nodeType": "YulIdentifier",
																"src": "2966:5:4"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "2956:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2956:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "2603:374:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2657:9:4",
														"nodeType": "YulTypedName",
														"src": "2657:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2668:7:4",
														"nodeType": "YulTypedName",
														"src": "2668:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2680:6:4",
														"nodeType": "YulTypedName",
														"src": "2680:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2688:6:4",
														"nodeType": "YulTypedName",
														"src": "2688:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2696:6:4",
														"nodeType": "YulTypedName",
														"src": "2696:6:4",
														"type": ""
													}
												],
												"src": "2603:374:4"
											},
											{
												"body": {
													"nativeSrc": "3052:116:4",
													"nodeType": "YulBlock",
													"src": "3052:116:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "3098:16:4",
																"nodeType": "YulBlock",
																"src": "3098:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3107:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3107:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3110:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3110:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3100:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3100:6:4"
																			},
																			"nativeSrc": "3100:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3100:12:4"
																		},
																		"nativeSrc": "3100:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3100:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3073:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3073:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3082:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3082:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3069:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3069:3:4"
																		},
																		"nativeSrc": "3069:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3069:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3094:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3094:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3065:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3065:3:4"
																},
																"nativeSrc": "3065:32:4",
																"nodeType": "YulFunctionCall",
																"src": "3065:32:4"
															},
															"nativeSrc": "3062:52:4",
															"nodeType": "YulIf",
															"src": "3062:52:4"
														},
														{
															"nativeSrc": "3123:39:4",
															"nodeType": "YulAssignment",
															"src": "3123:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3152:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3152:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3133:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "3133:18:4"
																},
																"nativeSrc": "3133:29:4",
																"nodeType": "YulFunctionCall",
																"src": "3133:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3123:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3123:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "2982:186:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3018:9:4",
														"nodeType": "YulTypedName",
														"src": "3018:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3029:7:4",
														"nodeType": "YulTypedName",
														"src": "3029:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3041:6:4",
														"nodeType": "YulTypedName",
														"src": "3041:6:4",
														"type": ""
													}
												],
												"src": "2982:186:4"
											},
											{
												"body": {
													"nativeSrc": "3257:263:4",
													"nodeType": "YulBlock",
													"src": "3257:263:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "3303:16:4",
																"nodeType": "YulBlock",
																"src": "3303:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3312:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3312:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3315:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3315:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3305:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3305:6:4"
																			},
																			"nativeSrc": "3305:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3305:12:4"
																		},
																		"nativeSrc": "3305:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3305:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3278:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3278:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3287:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3287:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3274:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3274:3:4"
																		},
																		"nativeSrc": "3274:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3274:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3299:2:4",
																		"nodeType": "YulLiteral",
																		"src": "3299:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3270:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3270:3:4"
																},
																"nativeSrc": "3270:32:4",
																"nodeType": "YulFunctionCall",
																"src": "3270:32:4"
															},
															"nativeSrc": "3267:52:4",
															"nodeType": "YulIf",
															"src": "3267:52:4"
														},
														{
															"nativeSrc": "3328:39:4",
															"nodeType": "YulAssignment",
															"src": "3328:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3357:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3357:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3338:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "3338:18:4"
																},
																"nativeSrc": "3338:29:4",
																"nodeType": "YulFunctionCall",
																"src": "3338:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3328:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3328:6:4"
																}
															]
														},
														{
															"nativeSrc": "3376:45:4",
															"nodeType": "YulVariableDeclaration",
															"src": "3376:45:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3406:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3406:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3417:2:4",
																				"nodeType": "YulLiteral",
																				"src": "3417:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3402:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3402:3:4"
																		},
																		"nativeSrc": "3402:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3402:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3389:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "3389:12:4"
																},
																"nativeSrc": "3389:32:4",
																"nodeType": "YulFunctionCall",
																"src": "3389:32:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3380:5:4",
																	"nodeType": "YulTypedName",
																	"src": "3380:5:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3474:16:4",
																"nodeType": "YulBlock",
																"src": "3474:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3483:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3483:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3486:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3486:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3476:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3476:6:4"
																			},
																			"nativeSrc": "3476:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3476:12:4"
																		},
																		"nativeSrc": "3476:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3476:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3443:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "3443:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "3464:5:4",
																								"nodeType": "YulIdentifier",
																								"src": "3464:5:4"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "3457:6:4",
																							"nodeType": "YulIdentifier",
																							"src": "3457:6:4"
																						},
																						"nativeSrc": "3457:13:4",
																						"nodeType": "YulFunctionCall",
																						"src": "3457:13:4"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "3450:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "3450:6:4"
																				},
																				"nativeSrc": "3450:21:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3450:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3440:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "3440:2:4"
																		},
																		"nativeSrc": "3440:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3440:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3433:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3433:6:4"
																},
																"nativeSrc": "3433:40:4",
																"nodeType": "YulFunctionCall",
																"src": "3433:40:4"
															},
															"nativeSrc": "3430:60:4",
															"nodeType": "YulIf",
															"src": "3430:60:4"
														},
														{
															"nativeSrc": "3499:15:4",
															"nodeType": "YulAssignment",
															"src": "3499:15:4",
															"value": {
																"name": "value",
																"nativeSrc": "3509:5:4",
																"nodeType": "YulIdentifier",
																"src": "3509:5:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3499:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3499:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "3173:347:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3215:9:4",
														"nodeType": "YulTypedName",
														"src": "3215:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3226:7:4",
														"nodeType": "YulTypedName",
														"src": "3226:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3238:6:4",
														"nodeType": "YulTypedName",
														"src": "3238:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3246:6:4",
														"nodeType": "YulTypedName",
														"src": "3246:6:4",
														"type": ""
													}
												],
												"src": "3173:347:4"
											},
											{
												"body": {
													"nativeSrc": "3557:152:4",
													"nodeType": "YulBlock",
													"src": "3557:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3574:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3574:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3577:77:4",
																		"nodeType": "YulLiteral",
																		"src": "3577:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3567:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3567:6:4"
																},
																"nativeSrc": "3567:88:4",
																"nodeType": "YulFunctionCall",
																"src": "3567:88:4"
															},
															"nativeSrc": "3567:88:4",
															"nodeType": "YulExpressionStatement",
															"src": "3567:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3671:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3671:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3674:4:4",
																		"nodeType": "YulLiteral",
																		"src": "3674:4:4",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3664:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3664:6:4"
																},
																"nativeSrc": "3664:15:4",
																"nodeType": "YulFunctionCall",
																"src": "3664:15:4"
															},
															"nativeSrc": "3664:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "3664:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3695:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3695:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3698:4:4",
																		"nodeType": "YulLiteral",
																		"src": "3698:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3688:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3688:6:4"
																},
																"nativeSrc": "3688:15:4",
																"nodeType": "YulFunctionCall",
																"src": "3688:15:4"
															},
															"nativeSrc": "3688:15:4",
															"nodeType": "YulExpressionStatement",
															"src": "3688:15:4"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3525:184:4",
												"nodeType": "YulFunctionDefinition",
												"src": "3525:184:4"
											},
											{
												"body": {
													"nativeSrc": "3844:1195:4",
													"nodeType": "YulBlock",
													"src": "3844:1195:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "3891:16:4",
																"nodeType": "YulBlock",
																"src": "3891:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3900:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3900:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3903:1:4",
																					"nodeType": "YulLiteral",
																					"src": "3903:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3893:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "3893:6:4"
																			},
																			"nativeSrc": "3893:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "3893:12:4"
																		},
																		"nativeSrc": "3893:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "3893:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3865:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3865:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3874:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3874:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3861:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3861:3:4"
																		},
																		"nativeSrc": "3861:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3861:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3886:3:4",
																		"nodeType": "YulLiteral",
																		"src": "3886:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3857:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "3857:3:4"
																},
																"nativeSrc": "3857:33:4",
																"nodeType": "YulFunctionCall",
																"src": "3857:33:4"
															},
															"nativeSrc": "3854:53:4",
															"nodeType": "YulIf",
															"src": "3854:53:4"
														},
														{
															"nativeSrc": "3916:39:4",
															"nodeType": "YulAssignment",
															"src": "3916:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3945:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "3945:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3926:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "3926:18:4"
																},
																"nativeSrc": "3926:29:4",
																"nodeType": "YulFunctionCall",
																"src": "3926:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3916:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3916:6:4"
																}
															]
														},
														{
															"nativeSrc": "3964:48:4",
															"nodeType": "YulAssignment",
															"src": "3964:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3997:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "3997:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4008:2:4",
																				"nodeType": "YulLiteral",
																				"src": "4008:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3993:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "3993:3:4"
																		},
																		"nativeSrc": "3993:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3993:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3974:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "3974:18:4"
																},
																"nativeSrc": "3974:38:4",
																"nodeType": "YulFunctionCall",
																"src": "3974:38:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3964:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "3964:6:4"
																}
															]
														},
														{
															"nativeSrc": "4021:14:4",
															"nodeType": "YulVariableDeclaration",
															"src": "4021:14:4",
															"value": {
																"kind": "number",
																"nativeSrc": "4034:1:4",
																"nodeType": "YulLiteral",
																"src": "4034:1:4",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4025:5:4",
																	"nodeType": "YulTypedName",
																	"src": "4025:5:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4044:41:4",
															"nodeType": "YulAssignment",
															"src": "4044:41:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4070:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4070:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4081:2:4",
																				"nodeType": "YulLiteral",
																				"src": "4081:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4066:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4066:3:4"
																		},
																		"nativeSrc": "4066:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4066:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4053:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "4053:12:4"
																},
																"nativeSrc": "4053:32:4",
																"nodeType": "YulFunctionCall",
																"src": "4053:32:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "4044:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "4044:5:4"
																}
															]
														},
														{
															"nativeSrc": "4094:15:4",
															"nodeType": "YulAssignment",
															"src": "4094:15:4",
															"value": {
																"name": "value",
																"nativeSrc": "4104:5:4",
																"nodeType": "YulIdentifier",
																"src": "4104:5:4"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "4094:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4094:6:4"
																}
															]
														},
														{
															"nativeSrc": "4118:46:4",
															"nodeType": "YulVariableDeclaration",
															"src": "4118:46:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4149:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "4149:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4160:2:4",
																				"nodeType": "YulLiteral",
																				"src": "4160:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4145:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4145:3:4"
																		},
																		"nativeSrc": "4145:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4145:18:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4132:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "4132:12:4"
																},
																"nativeSrc": "4132:32:4",
																"nodeType": "YulFunctionCall",
																"src": "4132:32:4"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "4122:6:4",
																	"nodeType": "YulTypedName",
																	"src": "4122:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4207:16:4",
																"nodeType": "YulBlock",
																"src": "4207:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4216:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4216:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4219:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4219:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4209:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4209:6:4"
																			},
																			"nativeSrc": "4209:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4209:12:4"
																		},
																		"nativeSrc": "4209:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4209:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4179:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4179:6:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4187:18:4",
																		"nodeType": "YulLiteral",
																		"src": "4187:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4176:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "4176:2:4"
																},
																"nativeSrc": "4176:30:4",
																"nodeType": "YulFunctionCall",
																"src": "4176:30:4"
															},
															"nativeSrc": "4173:50:4",
															"nodeType": "YulIf",
															"src": "4173:50:4"
														},
														{
															"nativeSrc": "4232:32:4",
															"nodeType": "YulVariableDeclaration",
															"src": "4232:32:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4246:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "4246:9:4"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4257:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4257:6:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4242:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4242:3:4"
																},
																"nativeSrc": "4242:22:4",
																"nodeType": "YulFunctionCall",
																"src": "4242:22:4"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4236:2:4",
																	"nodeType": "YulTypedName",
																	"src": "4236:2:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4312:16:4",
																"nodeType": "YulBlock",
																"src": "4312:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4321:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4321:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4324:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4324:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4314:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4314:6:4"
																			},
																			"nativeSrc": "4314:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4314:12:4"
																		},
																		"nativeSrc": "4314:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4314:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "4291:2:4",
																						"nodeType": "YulIdentifier",
																						"src": "4291:2:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4295:4:4",
																						"nodeType": "YulLiteral",
																						"src": "4295:4:4",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4287:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "4287:3:4"
																				},
																				"nativeSrc": "4287:13:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4287:13:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4302:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "4302:7:4"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4283:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4283:3:4"
																		},
																		"nativeSrc": "4283:27:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4283:27:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4276:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4276:6:4"
																},
																"nativeSrc": "4276:35:4",
																"nodeType": "YulFunctionCall",
																"src": "4276:35:4"
															},
															"nativeSrc": "4273:55:4",
															"nodeType": "YulIf",
															"src": "4273:55:4"
														},
														{
															"nativeSrc": "4337:30:4",
															"nodeType": "YulVariableDeclaration",
															"src": "4337:30:4",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "4364:2:4",
																		"nodeType": "YulIdentifier",
																		"src": "4364:2:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4351:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "4351:12:4"
																},
																"nativeSrc": "4351:16:4",
																"nodeType": "YulFunctionCall",
																"src": "4351:16:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4341:6:4",
																	"nodeType": "YulTypedName",
																	"src": "4341:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4410:22:4",
																"nodeType": "YulBlock",
																"src": "4410:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4412:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "4412:16:4"
																			},
																			"nativeSrc": "4412:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4412:18:4"
																		},
																		"nativeSrc": "4412:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4412:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4382:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4382:6:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4390:18:4",
																		"nodeType": "YulLiteral",
																		"src": "4390:18:4",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4379:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "4379:2:4"
																},
																"nativeSrc": "4379:30:4",
																"nodeType": "YulFunctionCall",
																"src": "4379:30:4"
															},
															"nativeSrc": "4376:56:4",
															"nodeType": "YulIf",
															"src": "4376:56:4"
														},
														{
															"nativeSrc": "4441:23:4",
															"nodeType": "YulVariableDeclaration",
															"src": "4441:23:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4461:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4461:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4455:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "4455:5:4"
																},
																"nativeSrc": "4455:9:4",
																"nodeType": "YulFunctionCall",
																"src": "4455:9:4"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "4445:6:4",
																	"nodeType": "YulTypedName",
																	"src": "4445:6:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4473:203:4",
															"nodeType": "YulVariableDeclaration",
															"src": "4473:203:4",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4495:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4495:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "4519:6:4",
																										"nodeType": "YulIdentifier",
																										"src": "4519:6:4"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4527:4:4",
																										"nodeType": "YulLiteral",
																										"src": "4527:4:4",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4515:3:4",
																									"nodeType": "YulIdentifier",
																									"src": "4515:3:4"
																								},
																								"nativeSrc": "4515:17:4",
																								"nodeType": "YulFunctionCall",
																								"src": "4515:17:4"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4534:66:4",
																								"nodeType": "YulLiteral",
																								"src": "4534:66:4",
																								"type": "",
																								"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "4511:3:4",
																							"nodeType": "YulIdentifier",
																							"src": "4511:3:4"
																						},
																						"nativeSrc": "4511:90:4",
																						"nodeType": "YulFunctionCall",
																						"src": "4511:90:4"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4603:2:4",
																						"nodeType": "YulLiteral",
																						"src": "4603:2:4",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4507:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "4507:3:4"
																				},
																				"nativeSrc": "4507:99:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4507:99:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4608:66:4",
																				"nodeType": "YulLiteral",
																				"src": "4608:66:4",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4503:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4503:3:4"
																		},
																		"nativeSrc": "4503:172:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4503:172:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4491:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "4491:3:4"
																},
																"nativeSrc": "4491:185:4",
																"nodeType": "YulFunctionCall",
																"src": "4491:185:4"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "4477:10:4",
																	"nodeType": "YulTypedName",
																	"src": "4477:10:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4751:22:4",
																"nodeType": "YulBlock",
																"src": "4751:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4753:16:4",
																				"nodeType": "YulIdentifier",
																				"src": "4753:16:4"
																			},
																			"nativeSrc": "4753:18:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4753:18:4"
																		},
																		"nativeSrc": "4753:18:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4753:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4694:10:4",
																				"nodeType": "YulIdentifier",
																				"src": "4694:10:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4706:18:4",
																				"nodeType": "YulLiteral",
																				"src": "4706:18:4",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4691:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "4691:2:4"
																		},
																		"nativeSrc": "4691:34:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4691:34:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4730:10:4",
																				"nodeType": "YulIdentifier",
																				"src": "4730:10:4"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "4742:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4742:6:4"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4727:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "4727:2:4"
																		},
																		"nativeSrc": "4727:22:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4727:22:4"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4688:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "4688:2:4"
																},
																"nativeSrc": "4688:62:4",
																"nodeType": "YulFunctionCall",
																"src": "4688:62:4"
															},
															"nativeSrc": "4685:88:4",
															"nodeType": "YulIf",
															"src": "4685:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4789:2:4",
																		"nodeType": "YulLiteral",
																		"src": "4789:2:4",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4793:10:4",
																		"nodeType": "YulIdentifier",
																		"src": "4793:10:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4782:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4782:6:4"
																},
																"nativeSrc": "4782:22:4",
																"nodeType": "YulFunctionCall",
																"src": "4782:22:4"
															},
															"nativeSrc": "4782:22:4",
															"nodeType": "YulExpressionStatement",
															"src": "4782:22:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4820:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4820:6:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4828:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4828:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4813:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4813:6:4"
																},
																"nativeSrc": "4813:22:4",
																"nodeType": "YulFunctionCall",
																"src": "4813:22:4"
															},
															"nativeSrc": "4813:22:4",
															"nodeType": "YulExpressionStatement",
															"src": "4813:22:4"
														},
														{
															"body": {
																"nativeSrc": "4885:16:4",
																"nodeType": "YulBlock",
																"src": "4885:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4894:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4894:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4897:1:4",
																					"nodeType": "YulLiteral",
																					"src": "4897:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4887:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4887:6:4"
																			},
																			"nativeSrc": "4887:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "4887:12:4"
																		},
																		"nativeSrc": "4887:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "4887:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "4858:2:4",
																						"nodeType": "YulIdentifier",
																						"src": "4858:2:4"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "4862:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "4862:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4854:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "4854:3:4"
																				},
																				"nativeSrc": "4854:15:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4854:15:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4871:2:4",
																				"nodeType": "YulLiteral",
																				"src": "4871:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4850:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4850:3:4"
																		},
																		"nativeSrc": "4850:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4850:24:4"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4876:7:4",
																		"nodeType": "YulIdentifier",
																		"src": "4876:7:4"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4847:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "4847:2:4"
																},
																"nativeSrc": "4847:37:4",
																"nodeType": "YulFunctionCall",
																"src": "4847:37:4"
															},
															"nativeSrc": "4844:57:4",
															"nodeType": "YulIf",
															"src": "4844:57:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4927:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "4927:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4935:2:4",
																				"nodeType": "YulLiteral",
																				"src": "4935:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4923:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4923:3:4"
																		},
																		"nativeSrc": "4923:15:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4923:15:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "4944:2:4",
																				"nodeType": "YulIdentifier",
																				"src": "4944:2:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4948:2:4",
																				"nodeType": "YulLiteral",
																				"src": "4948:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4940:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4940:3:4"
																		},
																		"nativeSrc": "4940:11:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4940:11:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4953:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "4953:6:4"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "4910:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "4910:12:4"
																},
																"nativeSrc": "4910:50:4",
																"nodeType": "YulFunctionCall",
																"src": "4910:50:4"
															},
															"nativeSrc": "4910:50:4",
															"nodeType": "YulExpressionStatement",
															"src": "4910:50:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "4984:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "4984:6:4"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "4992:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "4992:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4980:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "4980:3:4"
																				},
																				"nativeSrc": "4980:19:4",
																				"nodeType": "YulFunctionCall",
																				"src": "4980:19:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5001:2:4",
																				"nodeType": "YulLiteral",
																				"src": "5001:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4976:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "4976:3:4"
																		},
																		"nativeSrc": "4976:28:4",
																		"nodeType": "YulFunctionCall",
																		"src": "4976:28:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5006:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5006:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4969:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "4969:6:4"
																},
																"nativeSrc": "4969:39:4",
																"nodeType": "YulFunctionCall",
																"src": "4969:39:4"
															},
															"nativeSrc": "4969:39:4",
															"nodeType": "YulExpressionStatement",
															"src": "4969:39:4"
														},
														{
															"nativeSrc": "5017:16:4",
															"nodeType": "YulAssignment",
															"src": "5017:16:4",
															"value": {
																"name": "memPtr",
																"nativeSrc": "5027:6:4",
																"nodeType": "YulIdentifier",
																"src": "5027:6:4"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "5017:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5017:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "3714:1325:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3786:9:4",
														"nodeType": "YulTypedName",
														"src": "3786:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3797:7:4",
														"nodeType": "YulTypedName",
														"src": "3797:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3809:6:4",
														"nodeType": "YulTypedName",
														"src": "3809:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3817:6:4",
														"nodeType": "YulTypedName",
														"src": "3817:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3825:6:4",
														"nodeType": "YulTypedName",
														"src": "3825:6:4",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "3833:6:4",
														"nodeType": "YulTypedName",
														"src": "3833:6:4",
														"type": ""
													}
												],
												"src": "3714:1325:4"
											},
											{
												"body": {
													"nativeSrc": "5131:173:4",
													"nodeType": "YulBlock",
													"src": "5131:173:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "5177:16:4",
																"nodeType": "YulBlock",
																"src": "5177:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5186:1:4",
																					"nodeType": "YulLiteral",
																					"src": "5186:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5189:1:4",
																					"nodeType": "YulLiteral",
																					"src": "5189:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5179:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "5179:6:4"
																			},
																			"nativeSrc": "5179:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5179:12:4"
																		},
																		"nativeSrc": "5179:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5179:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5152:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "5152:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5161:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5161:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5148:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5148:3:4"
																		},
																		"nativeSrc": "5148:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5148:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5173:2:4",
																		"nodeType": "YulLiteral",
																		"src": "5173:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5144:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5144:3:4"
																},
																"nativeSrc": "5144:32:4",
																"nodeType": "YulFunctionCall",
																"src": "5144:32:4"
															},
															"nativeSrc": "5141:52:4",
															"nodeType": "YulIf",
															"src": "5141:52:4"
														},
														{
															"nativeSrc": "5202:39:4",
															"nodeType": "YulAssignment",
															"src": "5202:39:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5231:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "5231:9:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5212:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "5212:18:4"
																},
																"nativeSrc": "5212:29:4",
																"nodeType": "YulFunctionCall",
																"src": "5212:29:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5202:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5202:6:4"
																}
															]
														},
														{
															"nativeSrc": "5250:48:4",
															"nodeType": "YulAssignment",
															"src": "5250:48:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5283:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "5283:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5294:2:4",
																				"nodeType": "YulLiteral",
																				"src": "5294:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5279:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "5279:3:4"
																		},
																		"nativeSrc": "5279:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5279:18:4"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5260:18:4",
																	"nodeType": "YulIdentifier",
																	"src": "5260:18:4"
																},
																"nativeSrc": "5260:38:4",
																"nodeType": "YulFunctionCall",
																"src": "5260:38:4"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5250:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5250:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5044:260:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5089:9:4",
														"nodeType": "YulTypedName",
														"src": "5089:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5100:7:4",
														"nodeType": "YulTypedName",
														"src": "5100:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5112:6:4",
														"nodeType": "YulTypedName",
														"src": "5112:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5120:6:4",
														"nodeType": "YulTypedName",
														"src": "5120:6:4",
														"type": ""
													}
												],
												"src": "5044:260:4"
											},
											{
												"body": {
													"nativeSrc": "5364:382:4",
													"nodeType": "YulBlock",
													"src": "5364:382:4",
													"statements": [
														{
															"nativeSrc": "5374:22:4",
															"nodeType": "YulAssignment",
															"src": "5374:22:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5388:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5388:1:4",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "5391:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "5391:4:4"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "5384:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5384:3:4"
																},
																"nativeSrc": "5384:12:4",
																"nodeType": "YulFunctionCall",
																"src": "5384:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5374:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5374:6:4"
																}
															]
														},
														{
															"nativeSrc": "5405:38:4",
															"nodeType": "YulVariableDeclaration",
															"src": "5405:38:4",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5435:4:4",
																		"nodeType": "YulIdentifier",
																		"src": "5435:4:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5441:1:4",
																		"nodeType": "YulLiteral",
																		"src": "5441:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5431:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "5431:3:4"
																},
																"nativeSrc": "5431:12:4",
																"nodeType": "YulFunctionCall",
																"src": "5431:12:4"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5409:18:4",
																	"nodeType": "YulTypedName",
																	"src": "5409:18:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5482:31:4",
																"nodeType": "YulBlock",
																"src": "5482:31:4",
																"statements": [
																	{
																		"nativeSrc": "5484:27:4",
																		"nodeType": "YulAssignment",
																		"src": "5484:27:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5498:6:4",
																					"nodeType": "YulIdentifier",
																					"src": "5498:6:4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5506:4:4",
																					"nodeType": "YulLiteral",
																					"src": "5506:4:4",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5494:3:4",
																				"nodeType": "YulIdentifier",
																				"src": "5494:3:4"
																			},
																			"nativeSrc": "5494:17:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5494:17:4"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5484:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "5484:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5462:18:4",
																		"nodeType": "YulIdentifier",
																		"src": "5462:18:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5455:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "5455:6:4"
																},
																"nativeSrc": "5455:26:4",
																"nodeType": "YulFunctionCall",
																"src": "5455:26:4"
															},
															"nativeSrc": "5452:61:4",
															"nodeType": "YulIf",
															"src": "5452:61:4"
														},
														{
															"body": {
																"nativeSrc": "5572:168:4",
																"nodeType": "YulBlock",
																"src": "5572:168:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5593:1:4",
																					"nodeType": "YulLiteral",
																					"src": "5593:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5596:77:4",
																					"nodeType": "YulLiteral",
																					"src": "5596:77:4",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5586:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "5586:6:4"
																			},
																			"nativeSrc": "5586:88:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5586:88:4"
																		},
																		"nativeSrc": "5586:88:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5586:88:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5694:1:4",
																					"nodeType": "YulLiteral",
																					"src": "5694:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5697:4:4",
																					"nodeType": "YulLiteral",
																					"src": "5697:4:4",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "5687:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "5687:6:4"
																			},
																			"nativeSrc": "5687:15:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5687:15:4"
																		},
																		"nativeSrc": "5687:15:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5687:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5722:1:4",
																					"nodeType": "YulLiteral",
																					"src": "5722:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5725:4:4",
																					"nodeType": "YulLiteral",
																					"src": "5725:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5715:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "5715:6:4"
																			},
																			"nativeSrc": "5715:15:4",
																			"nodeType": "YulFunctionCall",
																			"src": "5715:15:4"
																		},
																		"nativeSrc": "5715:15:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "5715:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5528:18:4",
																		"nodeType": "YulIdentifier",
																		"src": "5528:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "5551:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "5551:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5559:2:4",
																				"nodeType": "YulLiteral",
																				"src": "5559:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "5548:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "5548:2:4"
																		},
																		"nativeSrc": "5548:14:4",
																		"nodeType": "YulFunctionCall",
																		"src": "5548:14:4"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5525:2:4",
																	"nodeType": "YulIdentifier",
																	"src": "5525:2:4"
																},
																"nativeSrc": "5525:38:4",
																"nodeType": "YulFunctionCall",
																"src": "5525:38:4"
															},
															"nativeSrc": "5522:218:4",
															"nodeType": "YulIf",
															"src": "5522:218:4"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "5309:437:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5344:4:4",
														"nodeType": "YulTypedName",
														"src": "5344:4:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5353:6:4",
														"nodeType": "YulTypedName",
														"src": "5353:6:4",
														"type": ""
													}
												],
												"src": "5309:437:4"
											},
											{
												"body": {
													"nativeSrc": "5938:309:4",
													"nodeType": "YulBlock",
													"src": "5938:309:4",
													"statements": [
														{
															"nativeSrc": "5948:27:4",
															"nodeType": "YulVariableDeclaration",
															"src": "5948:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5968:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "5968:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5962:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "5962:5:4"
																},
																"nativeSrc": "5962:13:4",
																"nodeType": "YulFunctionCall",
																"src": "5962:13:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5952:6:4",
																	"nodeType": "YulTypedName",
																	"src": "5952:6:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6023:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6023:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6031:4:4",
																				"nodeType": "YulLiteral",
																				"src": "6031:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6019:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6019:3:4"
																		},
																		"nativeSrc": "6019:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6019:17:4"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "6038:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6038:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6043:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "6043:6:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "5984:34:4",
																	"nodeType": "YulIdentifier",
																	"src": "5984:34:4"
																},
																"nativeSrc": "5984:66:4",
																"nodeType": "YulFunctionCall",
																"src": "5984:66:4"
															},
															"nativeSrc": "5984:66:4",
															"nodeType": "YulExpressionStatement",
															"src": "5984:66:4"
														},
														{
															"nativeSrc": "6059:29:4",
															"nodeType": "YulVariableDeclaration",
															"src": "6059:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6076:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "6076:3:4"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "6081:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "6081:6:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6072:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6072:3:4"
																},
																"nativeSrc": "6072:16:4",
																"nodeType": "YulFunctionCall",
																"src": "6072:16:4"
															},
															"variables": [
																{
																	"name": "end_1",
																	"nativeSrc": "6063:5:4",
																	"nodeType": "YulTypedName",
																	"src": "6063:5:4",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6097:29:4",
															"nodeType": "YulVariableDeclaration",
															"src": "6097:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6119:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "6119:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "6113:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "6113:5:4"
																},
																"nativeSrc": "6113:13:4",
																"nodeType": "YulFunctionCall",
																"src": "6113:13:4"
															},
															"variables": [
																{
																	"name": "length_1",
																	"nativeSrc": "6101:8:4",
																	"nodeType": "YulTypedName",
																	"src": "6101:8:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "6174:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6174:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6182:4:4",
																				"nodeType": "YulLiteral",
																				"src": "6182:4:4",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6170:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6170:3:4"
																		},
																		"nativeSrc": "6170:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6170:17:4"
																	},
																	{
																		"name": "end_1",
																		"nativeSrc": "6189:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "6189:5:4"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "6196:8:4",
																		"nodeType": "YulIdentifier",
																		"src": "6196:8:4"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "6135:34:4",
																	"nodeType": "YulIdentifier",
																	"src": "6135:34:4"
																},
																"nativeSrc": "6135:70:4",
																"nodeType": "YulFunctionCall",
																"src": "6135:70:4"
															},
															"nativeSrc": "6135:70:4",
															"nodeType": "YulExpressionStatement",
															"src": "6135:70:4"
														},
														{
															"nativeSrc": "6214:27:4",
															"nodeType": "YulAssignment",
															"src": "6214:27:4",
															"value": {
																"arguments": [
																	{
																		"name": "end_1",
																		"nativeSrc": "6225:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "6225:5:4"
																	},
																	{
																		"name": "length_1",
																		"nativeSrc": "6232:8:4",
																		"nodeType": "YulIdentifier",
																		"src": "6232:8:4"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6221:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6221:3:4"
																},
																"nativeSrc": "6221:20:4",
																"nodeType": "YulFunctionCall",
																"src": "6221:20:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "6214:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6214:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "5751:496:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "5906:3:4",
														"nodeType": "YulTypedName",
														"src": "5906:3:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5911:6:4",
														"nodeType": "YulTypedName",
														"src": "5911:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5919:6:4",
														"nodeType": "YulTypedName",
														"src": "5919:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5930:3:4",
														"nodeType": "YulTypedName",
														"src": "5930:3:4",
														"type": ""
													}
												],
												"src": "5751:496:4"
											},
											{
												"body": {
													"nativeSrc": "6299:303:4",
													"nodeType": "YulBlock",
													"src": "6299:303:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "6334:168:4",
																"nodeType": "YulBlock",
																"src": "6334:168:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6355:1:4",
																					"nodeType": "YulLiteral",
																					"src": "6355:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6358:77:4",
																					"nodeType": "YulLiteral",
																					"src": "6358:77:4",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6348:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6348:6:4"
																			},
																			"nativeSrc": "6348:88:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6348:88:4"
																		},
																		"nativeSrc": "6348:88:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "6348:88:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6456:1:4",
																					"nodeType": "YulLiteral",
																					"src": "6456:1:4",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6459:4:4",
																					"nodeType": "YulLiteral",
																					"src": "6459:4:4",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6449:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6449:6:4"
																			},
																			"nativeSrc": "6449:15:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6449:15:4"
																		},
																		"nativeSrc": "6449:15:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "6449:15:4"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6484:1:4",
																					"nodeType": "YulLiteral",
																					"src": "6484:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6487:4:4",
																					"nodeType": "YulLiteral",
																					"src": "6487:4:4",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6477:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6477:6:4"
																			},
																			"nativeSrc": "6477:15:4",
																			"nodeType": "YulFunctionCall",
																			"src": "6477:15:4"
																		},
																		"nativeSrc": "6477:15:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "6477:15:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6319:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "6319:5:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6312:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6312:6:4"
																},
																"nativeSrc": "6312:13:4",
																"nodeType": "YulFunctionCall",
																"src": "6312:13:4"
															},
															"nativeSrc": "6309:193:4",
															"nodeType": "YulIf",
															"src": "6309:193:4"
														},
														{
															"nativeSrc": "6511:85:4",
															"nodeType": "YulAssignment",
															"src": "6511:85:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6522:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "6522:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6529:66:4",
																		"nodeType": "YulLiteral",
																		"src": "6529:66:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6518:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6518:3:4"
																},
																"nativeSrc": "6518:78:4",
																"nodeType": "YulFunctionCall",
																"src": "6518:78:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "6511:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "6511:3:4"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "6252:350:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6281:5:4",
														"nodeType": "YulTypedName",
														"src": "6281:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "6291:3:4",
														"nodeType": "YulTypedName",
														"src": "6291:3:4",
														"type": ""
													}
												],
												"src": "6252:350:4"
											},
											{
												"body": {
													"nativeSrc": "6810:328:4",
													"nodeType": "YulBlock",
													"src": "6810:328:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6827:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "6827:9:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6842:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6842:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6850:42:4",
																				"nodeType": "YulLiteral",
																				"src": "6850:42:4",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6838:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6838:3:4"
																		},
																		"nativeSrc": "6838:55:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6838:55:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6820:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6820:6:4"
																},
																"nativeSrc": "6820:74:4",
																"nodeType": "YulFunctionCall",
																"src": "6820:74:4"
															},
															"nativeSrc": "6820:74:4",
															"nodeType": "YulExpressionStatement",
															"src": "6820:74:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6914:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "6914:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6925:2:4",
																				"nodeType": "YulLiteral",
																				"src": "6925:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6910:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6910:3:4"
																		},
																		"nativeSrc": "6910:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6910:18:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "6934:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "6934:6:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6942:42:4",
																				"nodeType": "YulLiteral",
																				"src": "6942:42:4",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6930:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "6930:3:4"
																		},
																		"nativeSrc": "6930:55:4",
																		"nodeType": "YulFunctionCall",
																		"src": "6930:55:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6903:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6903:6:4"
																},
																"nativeSrc": "6903:83:4",
																"nodeType": "YulFunctionCall",
																"src": "6903:83:4"
															},
															"nativeSrc": "6903:83:4",
															"nodeType": "YulExpressionStatement",
															"src": "6903:83:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7006:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "7006:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7017:2:4",
																				"nodeType": "YulLiteral",
																				"src": "7017:2:4",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7002:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7002:3:4"
																		},
																		"nativeSrc": "7002:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7002:18:4"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "7022:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "7022:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6995:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "6995:6:4"
																},
																"nativeSrc": "6995:34:4",
																"nodeType": "YulFunctionCall",
																"src": "6995:34:4"
															},
															"nativeSrc": "6995:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "6995:34:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7049:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "7049:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7060:2:4",
																				"nodeType": "YulLiteral",
																				"src": "7060:2:4",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7045:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7045:3:4"
																		},
																		"nativeSrc": "7045:18:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7045:18:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7065:3:4",
																		"nodeType": "YulLiteral",
																		"src": "7065:3:4",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7038:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7038:6:4"
																},
																"nativeSrc": "7038:31:4",
																"nodeType": "YulFunctionCall",
																"src": "7038:31:4"
															},
															"nativeSrc": "7038:31:4",
															"nodeType": "YulExpressionStatement",
															"src": "7038:31:4"
														},
														{
															"nativeSrc": "7078:54:4",
															"nodeType": "YulAssignment",
															"src": "7078:54:4",
															"value": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "7104:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "7104:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7116:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "7116:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7127:3:4",
																				"nodeType": "YulLiteral",
																				"src": "7127:3:4",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7112:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7112:3:4"
																		},
																		"nativeSrc": "7112:19:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7112:19:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "7086:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "7086:17:4"
																},
																"nativeSrc": "7086:46:4",
																"nodeType": "YulFunctionCall",
																"src": "7086:46:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7078:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "7078:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed",
												"nativeSrc": "6607:531:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6755:9:4",
														"nodeType": "YulTypedName",
														"src": "6755:9:4",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "6766:6:4",
														"nodeType": "YulTypedName",
														"src": "6766:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6774:6:4",
														"nodeType": "YulTypedName",
														"src": "6774:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6782:6:4",
														"nodeType": "YulTypedName",
														"src": "6782:6:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6790:6:4",
														"nodeType": "YulTypedName",
														"src": "6790:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6801:4:4",
														"nodeType": "YulTypedName",
														"src": "6801:4:4",
														"type": ""
													}
												],
												"src": "6607:531:4"
											},
											{
												"body": {
													"nativeSrc": "7223:169:4",
													"nodeType": "YulBlock",
													"src": "7223:169:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "7269:16:4",
																"nodeType": "YulBlock",
																"src": "7269:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7278:1:4",
																					"nodeType": "YulLiteral",
																					"src": "7278:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7281:1:4",
																					"nodeType": "YulLiteral",
																					"src": "7281:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7271:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "7271:6:4"
																			},
																			"nativeSrc": "7271:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "7271:12:4"
																		},
																		"nativeSrc": "7271:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "7271:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7244:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "7244:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7253:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "7253:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7240:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "7240:3:4"
																		},
																		"nativeSrc": "7240:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "7240:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7265:2:4",
																		"nodeType": "YulLiteral",
																		"src": "7265:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7236:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "7236:3:4"
																},
																"nativeSrc": "7236:32:4",
																"nodeType": "YulFunctionCall",
																"src": "7236:32:4"
															},
															"nativeSrc": "7233:52:4",
															"nodeType": "YulIf",
															"src": "7233:52:4"
														},
														{
															"nativeSrc": "7294:29:4",
															"nodeType": "YulVariableDeclaration",
															"src": "7294:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7313:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "7313:9:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7307:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "7307:5:4"
																},
																"nativeSrc": "7307:16:4",
																"nodeType": "YulFunctionCall",
																"src": "7307:16:4"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "7298:5:4",
																	"nodeType": "YulTypedName",
																	"src": "7298:5:4",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7356:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "7356:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_bytes4",
																	"nativeSrc": "7332:23:4",
																	"nodeType": "YulIdentifier",
																	"src": "7332:23:4"
																},
																"nativeSrc": "7332:30:4",
																"nodeType": "YulFunctionCall",
																"src": "7332:30:4"
															},
															"nativeSrc": "7332:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "7332:30:4"
														},
														{
															"nativeSrc": "7371:15:4",
															"nodeType": "YulAssignment",
															"src": "7371:15:4",
															"value": {
																"name": "value",
																"nativeSrc": "7381:5:4",
																"nodeType": "YulIdentifier",
																"src": "7381:5:4"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7371:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "7371:6:4"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4_fromMemory",
												"nativeSrc": "7143:249:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7189:9:4",
														"nodeType": "YulTypedName",
														"src": "7189:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7200:7:4",
														"nodeType": "YulTypedName",
														"src": "7200:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7212:6:4",
														"nodeType": "YulTypedName",
														"src": "7212:6:4",
														"type": ""
													}
												],
												"src": "7143:249:4"
											}
										]
									},
									"contents": "{\n    { }\n    function validator_revert_bytes4(value)\n    {\n        if iszero(eq(value, and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function copy_memory_to_memory_with_cleanup(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0)), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := 0\n        value := calldataload(add(headStart, 32))\n        value1 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0), 63), 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_1, 32), length)\n        mstore(add(add(memPtr, length), 32), 0)\n        value3 := memPtr\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory_with_cleanup(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        let length_1 := mload(value1)\n        copy_memory_to_memory_with_cleanup(add(value1, 0x20), end_1, length_1)\n        end := add(end_1, length_1)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value)\n        {\n            mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x11)\n            revert(0, 0x24)\n        }\n        ret := add(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256_t_bytes_memory_ptr__to_t_address_t_address_t_uint256_t_bytes_memory_ptr__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), 128)\n        tail := abi_encode_string(value3, add(headStart, 128))\n    }\n    function abi_decode_tuple_t_bytes4_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_bytes4(value)\n        value0 := value\n    }\n}",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0xDD JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6352211E GT PUSH2 0x7F JUMPI DUP1 PUSH4 0xA22CB465 GT PUSH2 0x59 JUMPI DUP1 PUSH4 0xA22CB465 EQ PUSH2 0x231 JUMPI DUP1 PUSH4 0xB88D4FDE EQ PUSH2 0x251 JUMPI DUP1 PUSH4 0xC87B56DD EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xE985E9C5 EQ PUSH2 0x284 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6352211E EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x21C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x95EA7B3 GT PUSH2 0xBB JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x17E JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x193 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1B6 JUMPI DUP1 PUSH4 0x42842E0E EQ PUSH2 0x1C9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x117 JUMPI DUP1 PUSH4 0x81812FC EQ PUSH2 0x139 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0xFD CALLDATASIZE PUSH1 0x4 PUSH2 0xDD3 JUMP JUMPDEST PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x123 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10E SWAP2 SWAP1 PUSH2 0xE5E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x145 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x154 CALLDATASIZE PUSH1 0x4 PUSH2 0xE71 JUMP JUMPDEST PUSH2 0x451 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x191 PUSH2 0x18C CALLDATASIZE PUSH1 0x4 PUSH2 0xEAE JUMP JUMPDEST PUSH2 0x4B2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD SUB JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x10E JUMP JUMPDEST PUSH2 0x191 PUSH2 0x1C4 CALLDATASIZE PUSH1 0x4 PUSH2 0xED8 JUMP JUMPDEST PUSH2 0x4C2 JUMP JUMPDEST PUSH2 0x191 PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0xED8 JUMP JUMPDEST PUSH2 0x6F7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x159 PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0xE71 JUMP JUMPDEST PUSH2 0x717 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x208 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1A8 PUSH2 0x217 CALLDATASIZE PUSH1 0x4 PUSH2 0xF15 JUMP JUMPDEST PUSH2 0x722 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x228 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH2 0x79B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x191 PUSH2 0x24C CALLDATASIZE PUSH1 0x4 PUSH2 0xF30 JUMP JUMPDEST PUSH2 0x7AA JUMP JUMPDEST PUSH2 0x191 PUSH2 0x25F CALLDATASIZE PUSH1 0x4 PUSH2 0xF9B JUMP JUMPDEST PUSH2 0x841 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x270 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x12C PUSH2 0x27F CALLDATASIZE PUSH1 0x4 PUSH2 0xE71 JUMP JUMPDEST PUSH2 0x8A8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x290 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x102 PUSH2 0x29F CALLDATASIZE PUSH1 0x4 PUSH2 0x10BC JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ DUP1 PUSH2 0x36D JUMPI POP PUSH32 0x80AC58CD00000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST DUP1 PUSH2 0x3B9 JUMPI POP PUSH32 0x5B5E139F00000000000000000000000000000000000000000000000000000000 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x2 DUP1 SLOAD PUSH2 0x3CE SWAP1 PUSH2 0x10EF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3FA SWAP1 PUSH2 0x10EF JUMP JUMPDEST DUP1 ISZERO PUSH2 0x447 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x41C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x447 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x42A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x45C DUP3 PUSH2 0x949 JUMP JUMPDEST PUSH2 0x489 JUMPI PUSH2 0x489 PUSH32 0xCF4700E400000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST POP PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH2 0x4BE DUP3 DUP3 PUSH1 0x1 PUSH2 0x9B1 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4CD DUP3 PUSH2 0xA9F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP5 DUP6 AND SWAP5 SWAP1 SWAP2 POP DUP2 AND DUP5 EQ PUSH2 0x51A JUMPI PUSH2 0x51A PUSH32 0xA114810000000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD CALLER DUP1 DUP3 EQ PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 AND SWAP1 SWAP2 EQ OR PUSH2 0x584 JUMPI PUSH2 0x557 DUP7 CALLER PUSH2 0x29F JUMP JUMPDEST PUSH2 0x584 JUMPI PUSH2 0x584 PUSH32 0x59C896BE00000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x58F JUMPI PUSH1 0x0 DUP3 SSTORE JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 SSTORE SWAP2 DUP8 AND DUP1 DUP3 MSTORE SWAP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 ADD SWAP1 SSTORE TIMESTAMP PUSH1 0xA0 SHL OR PUSH29 0x200000000000000000000000000000000000000000000000000000000 OR PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH29 0x200000000000000000000000000000000000000000000000000000000 DUP5 AND SWAP1 SUB PUSH2 0x67E JUMPI PUSH1 0x1 DUP5 ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SUB PUSH2 0x67C JUMPI PUSH1 0x0 SLOAD DUP2 EQ PUSH2 0x67C JUMPI PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE JUMPDEST POP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP5 DUP2 DUP9 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF PUSH1 0x0 DUP1 LOG4 DUP1 PUSH1 0x0 SUB PUSH2 0x6EE JUMPI PUSH2 0x6EE PUSH32 0xEA553B3400000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x712 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x841 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B9 DUP3 PUSH2 0xA9F JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x768 JUMPI PUSH2 0x768 PUSH32 0x8F4EB60400000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3CE SWAP1 PUSH2 0x10EF JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP8 AND DUP1 DUP6 MSTORE SWAP1 DUP4 MSTORE SWAP3 DUP2 SWAP1 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00 AND DUP7 ISZERO ISZERO SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE SWAP1 MLOAD SWAP1 DUP2 MSTORE SWAP2 SWAP3 SWAP2 PUSH32 0x17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x84C DUP5 DUP5 DUP5 PUSH2 0x4C2 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 AND EXTCODESIZE ISZERO PUSH2 0x8A2 JUMPI PUSH2 0x875 DUP5 DUP5 DUP5 DUP5 PUSH2 0xBD0 JUMP JUMPDEST PUSH2 0x8A2 JUMPI PUSH2 0x8A2 PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x8B3 DUP3 PUSH2 0x949 JUMP JUMPDEST PUSH2 0x8E0 JUMPI PUSH2 0x8E0 PUSH32 0xA14C4B5000000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8F7 PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 DUP2 MSTORE SWAP1 JUMP JUMPDEST SWAP1 POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0x917 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x942 JUMP JUMPDEST DUP1 PUSH2 0x921 DUP5 PUSH2 0xD40 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x932 SWAP3 SWAP2 SWAP1 PUSH2 0x1142 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x9A2 JUMPI PUSH1 0x0 JUMPDEST POP PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0x97F JUMPI PUSH2 0x978 DUP4 PUSH2 0x1171 JUMP JUMPDEST SWAP3 POP PUSH2 0x957 JUMP JUMPDEST PUSH29 0x100000000000000000000000000000000000000000000000000000000 AND ISZERO SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 PUSH1 0x0 MSTORE PUSH1 0x4 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x9BC DUP4 PUSH2 0x717 JUMP JUMPDEST SWAP1 POP DUP2 DUP1 ISZERO PUSH2 0x9E1 JUMPI POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND EQ ISZERO JUMPDEST ISZERO PUSH2 0xA1D JUMPI PUSH2 0x9F0 DUP2 CALLER PUSH2 0x29F JUMP JUMPDEST PUSH2 0xA1D JUMPI PUSH2 0xA1D PUSH32 0xCFB3B94200000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP9 DUP2 AND SWAP2 DUP3 OR SWAP1 SWAP3 SSTORE SWAP2 MLOAD DUP7 SWAP4 SWAP2 DUP6 AND SWAP2 PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 LOG4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 DUP2 SWAP1 SUB PUSH2 0xB7B JUMPI PUSH1 0x0 SLOAD DUP3 LT PUSH2 0xAE8 JUMPI PUSH2 0xAE8 PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xAE9 JUMPI PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH1 0x0 SUB PUSH2 0xB4D JUMPI SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB76 PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST PUSH2 0xAE9 JUMP JUMPDEST PUSH29 0x100000000000000000000000000000000000000000000000000000000 DUP2 AND PUSH1 0x0 SUB PUSH2 0xBA7 JUMPI SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x9A2 PUSH32 0xDF2D9B4200000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP1 PUSH4 0x150B7A02 SWAP1 PUSH2 0xC2B SWAP1 CALLER SWAP1 DUP10 SWAP1 DUP9 SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x11CD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0xC84 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0xC81 SWAP2 DUP2 ADD SWAP1 PUSH2 0x1228 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0xCF2 JUMPI RETURNDATASIZE DUP1 DUP1 ISZERO PUSH2 0xCB2 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xCB7 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP DUP1 MLOAD PUSH1 0x0 SUB PUSH2 0xCEA JUMPI PUSH2 0xCEA PUSH32 0xD1A57ED600000000000000000000000000000000000000000000000000000000 PUSH2 0x9A7 JUMP JUMPDEST DUP1 MLOAD DUP2 PUSH1 0x20 ADD REVERT JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 AND PUSH32 0x150B7A0200000000000000000000000000000000000000000000000000000000 EQ SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0xA0 PUSH1 0x40 MLOAD ADD DUP1 PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 SUB SWAP2 POP POP PUSH1 0x0 DUP2 MSTORE DUP1 DUP3 JUMPDEST PUSH1 0x1 DUP4 SUB SWAP3 POP PUSH1 0xA DUP2 MOD PUSH1 0x30 ADD DUP4 MSTORE8 PUSH1 0xA SWAP1 DIV DUP1 PUSH2 0xD5A JUMPI POP DUP2 SWAP1 SUB PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 SWAP1 SWAP2 ADD SWAP1 DUP2 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP2 AND DUP2 EQ PUSH2 0xDD0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xDE5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x942 DUP2 PUSH2 0xDA2 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xE0B JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xDF3 JUMP JUMPDEST POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0xE2C DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0xDF0 JUMP JUMPDEST PUSH1 0x1F ADD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x942 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0xE14 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xE83 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x9A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xEC1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xECA DUP4 PUSH2 0xE8A JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xEED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xEF6 DUP5 PUSH2 0xE8A JUMP JUMPDEST SWAP3 POP PUSH2 0xF04 PUSH1 0x20 DUP6 ADD PUSH2 0xE8A JUMP JUMPDEST SWAP3 SWAP6 SWAP3 SWAP5 POP POP POP PUSH1 0x40 SWAP2 SWAP1 SWAP2 ADD CALLDATALOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF27 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x942 DUP3 PUSH2 0xE8A JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xF43 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xF4C DUP4 PUSH2 0xE8A JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xF61 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0xFB1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xFBA DUP6 PUSH2 0xE8A JUMP JUMPDEST SWAP4 POP PUSH2 0xFC8 PUSH1 0x20 DUP7 ADD PUSH2 0xE8A JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xFEB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP6 ADD PUSH1 0x1F DUP2 ADD DUP8 SGT PUSH2 0xFFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1016 JUMPI PUSH2 0x1016 PUSH2 0xF6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x3F PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0 PUSH1 0x1F DUP6 ADD AND ADD AND DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x1082 JUMPI PUSH2 0x1082 PUSH2 0xF6C JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP10 LT ISZERO PUSH2 0x109A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH1 0x0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x10CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D8 DUP4 PUSH2 0xE8A JUMP JUMPDEST SWAP2 POP PUSH2 0x10E6 PUSH1 0x20 DUP5 ADD PUSH2 0xE8A JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1103 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x113C JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x1154 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0xDF0 JUMP JUMPDEST DUP4 MLOAD SWAP1 DUP4 ADD SWAP1 PUSH2 0x1168 DUP2 DUP4 PUSH1 0x20 DUP9 ADD PUSH2 0xDF0 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x11A7 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF ADD SWAP1 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE DUP3 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x80 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x0 PUSH2 0x121E PUSH1 0x80 DUP4 ADD DUP5 PUSH2 0xE14 JUMP JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x123A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x942 DUP2 PUSH2 0xDA2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 TSTORE 0xCF NOT 0xB3 0xC8 0xE5 0x2E 0xE9 DUP7 PUSH13 0x3A61D669F181267A4405DD62D8 0xC4 0xEC 0xD3 MLOAD 0xB1 0x23 PUSH0 DUP6 SELFBALANCE PUSH5 0x736F6C6343 STOP ADDMOD SHL STOP CALLER ",
							"sourceMap": "2185:42638:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10454:630;;;;;;;;;;-1:-1:-1;10454:630:2;;;;;:::i;:::-;;:::i;:::-;;;611:14:4;;604:22;586:41;;574:2;559:18;10454:630:2;;;;;;;;11338:98;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;18201:223::-;;;;;;;;;;-1:-1:-1;18201:223:2;;;;;:::i;:::-;;:::i;:::-;;;1860:42:4;1848:55;;;1830:74;;1818:2;1803:18;18201:223:2;1684:226:4;17929:122:2;;;;;;:::i;:::-;;:::i;:::-;;7184:317;;;;;;;;;;-1:-1:-1;7454:12:2;;7245:7;7438:13;:28;7184:317;;;2567:25:4;;;2555:2;2540:18;7184:317:2;2421:177:4;21836:3447:2;;;;;;:::i;:::-;;:::i;25374:187::-;;;;;;:::i;:::-;;:::i;12699:150::-;;;;;;;;;;-1:-1:-1;12699:150:2;;;;;:::i;:::-;;:::i;8335:239::-;;;;;;;;;;-1:-1:-1;8335:239:2;;;;;:::i;:::-;;:::i;11507:102::-;;;;;;;;;;;;;:::i;18751:231::-;;;;;;;;;;-1:-1:-1;18751:231:2;;;;;:::i;:::-;;:::i;26142:405::-;;;;;;:::i;:::-;;:::i;11710:322::-;;;;;;;;;;-1:-1:-1;11710:322:2;;;;;:::i;:::-;;:::i;19132:162::-;;;;;;;;;;-1:-1:-1;19132:162:2;;;;;:::i;:::-;19252:25;;;;19229:4;19252:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;19132:162;10454:630;10539:4;10857:25;;;;;;:101;;-1:-1:-1;10933:25:2;;;;;10857:101;:177;;;-1:-1:-1;11009:25:2;;;;;10857:177;10838:196;10454:630;-1:-1:-1;;10454:630:2:o;11338:98::-;11392:13;11424:5;11417:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11338:98;:::o;18201:223::-;18277:7;18301:16;18309:7;18301;:16::i;:::-;18296:73;;18319:50;18327:41;18319:7;:50::i;:::-;-1:-1:-1;18387:24:2;;;;:15;:24;;;;;:30;;;;18201:223::o;17929:122::-;18017:27;18026:2;18030:7;18039:4;18017:8;:27::i;:::-;17929:122;;:::o;21836:3447::-;21973:27;22003;22022:7;22003:18;:27::i;:::-;4075:14;22155:22;;;;21973:57;;-1:-1:-1;22213:45:2;;;;22209:95;;22260:44;22268:35;22260:7;:44::i;:::-;22316:27;20969:24;;;:15;:24;;;;;21193:26;;42777:10;20606:30;;;20314:16;20303:28;;20584:20;;;20581:56;22499:188;;22591:43;22608:4;42777:10;19132:162;:::i;22591:43::-;22586:101;;22636:51;22644:42;22636:7;:51::i;:::-;22830:15;22827:157;;;22968:1;22947:19;22940:30;22827:157;23356:24;;;;;;;;:18;:24;;;;;;23354:26;;;;;;23424:22;;;;;;;;;23422:24;;-1:-1:-1;23422:24:2;;;17057:11;17032:23;17028:41;17015:63;3682:8;17015:63;23710:26;;;;:17;:26;;;;;:172;;;;3682:8;23999:47;;:52;;23995:617;;24103:1;24093:11;;24071:19;24224:30;;;:17;:30;;;;;;:35;;24220:378;;24360:13;;24345:11;:28;24341:239;;24505:30;;;;:17;:30;;;;;:52;;;24341:239;24053:559;23995:617;4075:14;24740:20;;25111:7;24740:20;25043:4;24986:25;24721:16;;24854:292;25169:8;25181:1;25169:13;25165:58;;25184:39;25192:30;25184:7;:39::i;:::-;21963:3320;;;;21836:3447;;;:::o;25374:187::-;25515:39;25532:4;25538:2;25542:7;25515:39;;;;;;;;;;;;:16;:39::i;:::-;25374:187;;;:::o;12699:150::-;12771:7;12813:27;12832:7;12813:18;:27::i;8335:239::-;8407:7;8430:19;;;8426:69;;8451:44;8459:35;8451:7;:44::i;:::-;-1:-1:-1;8512:25:2;;;;;;:18;:25;;;;;;2650:13;8512:55;;8335:239::o;11507:102::-;11563:13;11595:7;11588:14;;;;;:::i;18751:231::-;42777:10;18845:39;;;;:18;:39;;;;;;;;;:49;;;;;;;;;;;;:60;;;;;;;;;;;;;18920:55;;586:41:4;;;18845:49:2;;42777:10;18920:55;;559:18:4;18920:55:2;;;;;;;18751:231;;:::o;26142:405::-;26311:31;26324:4;26330:2;26334:7;26311:12;:31::i;:::-;26356:14;;;;:19;26352:189;;26394:56;26425:4;26431:2;26435:7;26444:5;26394:30;:56::i;:::-;26389:152;;26470:56;26478:47;26470:7;:56::i;:::-;26142:405;;;;:::o;11710:322::-;11783:13;11813:16;11821:7;11813;:16::i;:::-;11808:68;;11831:45;11839:36;11831:7;:45::i;:::-;11887:21;11911:10;12353:9;;;;;;;;;-1:-1:-1;12353:9:2;;;12277:92;11911:10;11887:34;;11944:7;11938:21;11963:1;11938:26;:87;;;;;;;;;;;;;;;;;11991:7;12000:18;12010:7;12000:9;:18::i;:::-;11974:45;;;;;;;;;:::i;:::-;;;;;;;;;;;;;11938:87;11931:94;11710:322;-1:-1:-1;;;11710:322:2:o;19543:360::-;19608:11;19691:13;;19681:7;:23;19677:210;;;19724:14;19756:60;-1:-1:-1;19773:26:2;;;;:17;:26;;;;;;;19763:42;;;19756:60;;19807:9;;;:::i;:::-;;;19756:60;;;3408:8;19843:24;:29;;-1:-1:-1;19677:210:2;19543:360;;;:::o;44661:160::-;44760:13;44754:4;44747:27;44800:4;44794;44787:18;36309:460;36433:13;36449:16;36457:7;36449;:16::i;:::-;36433:32;;36480:13;:45;;;;-1:-1:-1;42777:10:2;36497:28;;;;;36480:45;36476:198;;;36544:44;36561:5;42777:10;19132:162;:::i;36544:44::-;36539:135;;36608:51;36616:42;36608:7;:51::i;:::-;36684:24;;;;:15;:24;;;;;;:35;;;;;;;;;;;;;;36734:28;;36684:24;;36734:28;;;;;;;36423:346;36309:460;;;:::o;14140:1978::-;14288:26;;;;:17;:26;;;;;;;14412:11;;;14408:1270;;14458:13;;14447:7;:24;14443:77;;14473:47;14481:38;14473:7;:47::i;:::-;15067:597;-1:-1:-1;15161:9:2;;15143:28;;;;:17;:28;;;;;;15215:25;;15067:597;15215:25;3408:8;15266:6;:24;15294:1;15266:29;15262:48;;14140:1978;;;:::o;15262:48::-;15598:47;15606:38;15598:7;:47::i;:::-;15067:597;;14408:1270;3408:8;16000:6;:24;16028:1;16000:29;15996:48;;14140:1978;;;:::o;15996:48::-;16064:47;16072:38;16064:7;:47::i;28573:673::-;28751:88;;;;;28731:4;;28751:45;;;;;;:88;;42777:10;;28818:4;;28824:7;;28833:5;;28751:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;-1:-1:-1;28751:88:2;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;28747:493;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;29029:6;:13;29046:1;29029:18;29025:113;;29067:56;29075:47;29067:7;:56::i;:::-;29208:6;29202:13;29193:6;29189:2;29185:15;29178:38;28747:493;28907:64;;28917:54;28907:64;;-1:-1:-1;28573:673:2;;;;;;:::o;42891:1708::-;42956:17;43384:4;43377;43371:11;43367:22;43474:1;43468:4;43461:15;43547:4;43544:1;43540:12;43533:19;;;43627:1;43622:3;43615:14;43728:3;43962:5;43944:419;44009:1;44004:3;44000:11;43993:18;;44177:2;44171:4;44167:13;44163:2;44159:22;44154:3;44146:36;44269:2;44259:13;;44324:25;43944:419;44324:25;-1:-1:-1;44391:13:2;;;44504:14;;;;44564:19;;;44504:14;42891:1708;-1:-1:-1;42891:1708:2:o;14:177:4:-;99:66;92:5;88:78;81:5;78:89;68:117;;181:1;178;171:12;68:117;14:177;:::o;196:245::-;254:6;307:2;295:9;286:7;282:23;278:32;275:52;;;323:1;320;313:12;275:52;362:9;349:23;381:30;405:5;381:30;:::i;638:250::-;723:1;733:113;747:6;744:1;741:13;733:113;;;823:11;;;817:18;804:11;;;797:39;769:2;762:10;733:113;;;-1:-1:-1;;880:1:4;862:16;;855:27;638:250::o;893:330::-;935:3;973:5;967:12;1000:6;995:3;988:19;1016:76;1085:6;1078:4;1073:3;1069:14;1062:4;1055:5;1051:16;1016:76;:::i;:::-;1137:2;1125:15;1142:66;1121:88;1112:98;;;;1212:4;1108:109;;893:330;-1:-1:-1;;893:330:4:o;1228:220::-;1377:2;1366:9;1359:21;1340:4;1397:45;1438:2;1427:9;1423:18;1415:6;1397:45;:::i;1453:226::-;1512:6;1565:2;1553:9;1544:7;1540:23;1536:32;1533:52;;;1581:1;1578;1571:12;1533:52;-1:-1:-1;1626:23:4;;1453:226;-1:-1:-1;1453:226:4:o;1915:196::-;1983:20;;2043:42;2032:54;;2022:65;;2012:93;;2101:1;2098;2091:12;2116:300;2184:6;2192;2245:2;2233:9;2224:7;2220:23;2216:32;2213:52;;;2261:1;2258;2251:12;2213:52;2284:29;2303:9;2284:29;:::i;:::-;2274:39;2382:2;2367:18;;;;2354:32;;-1:-1:-1;;;2116:300:4:o;2603:374::-;2680:6;2688;2696;2749:2;2737:9;2728:7;2724:23;2720:32;2717:52;;;2765:1;2762;2755:12;2717:52;2788:29;2807:9;2788:29;:::i;:::-;2778:39;;2836:38;2870:2;2859:9;2855:18;2836:38;:::i;:::-;2603:374;;2826:48;;-1:-1:-1;;;2943:2:4;2928:18;;;;2915:32;;2603:374::o;2982:186::-;3041:6;3094:2;3082:9;3073:7;3069:23;3065:32;3062:52;;;3110:1;3107;3100:12;3062:52;3133:29;3152:9;3133:29;:::i;3173:347::-;3238:6;3246;3299:2;3287:9;3278:7;3274:23;3270:32;3267:52;;;3315:1;3312;3305:12;3267:52;3338:29;3357:9;3338:29;:::i;:::-;3328:39;;3417:2;3406:9;3402:18;3389:32;3464:5;3457:13;3450:21;3443:5;3440:32;3430:60;;3486:1;3483;3476:12;3430:60;3509:5;3499:15;;;3173:347;;;;;:::o;3525:184::-;3577:77;3574:1;3567:88;3674:4;3671:1;3664:15;3698:4;3695:1;3688:15;3714:1325;3809:6;3817;3825;3833;3886:3;3874:9;3865:7;3861:23;3857:33;3854:53;;;3903:1;3900;3893:12;3854:53;3926:29;3945:9;3926:29;:::i;:::-;3916:39;;3974:38;4008:2;3997:9;3993:18;3974:38;:::i;:::-;3964:48;-1:-1:-1;4081:2:4;4066:18;;4053:32;;-1:-1:-1;4160:2:4;4145:18;;4132:32;4187:18;4176:30;;4173:50;;;4219:1;4216;4209:12;4173:50;4242:22;;4295:4;4287:13;;4283:27;-1:-1:-1;4273:55:4;;4324:1;4321;4314:12;4273:55;4364:2;4351:16;4390:18;4382:6;4379:30;4376:56;;;4412:18;;:::i;:::-;4461:2;4455:9;4608:66;4603:2;4534:66;4527:4;4519:6;4515:17;4511:90;4507:99;4503:172;4495:6;4491:185;4742:6;4730:10;4727:22;4706:18;4694:10;4691:34;4688:62;4685:88;;;4753:18;;:::i;:::-;4789:2;4782:22;4813;;;4854:15;;;4871:2;4850:24;4847:37;-1:-1:-1;4844:57:4;;;4897:1;4894;4887:12;4844:57;4953:6;4948:2;4944;4940:11;4935:2;4927:6;4923:15;4910:50;5006:1;5001:2;4992:6;4984;4980:19;4976:28;4969:39;5027:6;5017:16;;;;;3714:1325;;;;;;;:::o;5044:260::-;5112:6;5120;5173:2;5161:9;5152:7;5148:23;5144:32;5141:52;;;5189:1;5186;5179:12;5141:52;5212:29;5231:9;5212:29;:::i;:::-;5202:39;;5260:38;5294:2;5283:9;5279:18;5260:38;:::i;:::-;5250:48;;5044:260;;;;;:::o;5309:437::-;5388:1;5384:12;;;;5431;;;5452:61;;5506:4;5498:6;5494:17;5484:27;;5452:61;5559:2;5551:6;5548:14;5528:18;5525:38;5522:218;;5596:77;5593:1;5586:88;5697:4;5694:1;5687:15;5725:4;5722:1;5715:15;5522:218;;5309:437;;;:::o;5751:496::-;5930:3;5968:6;5962:13;5984:66;6043:6;6038:3;6031:4;6023:6;6019:17;5984:66;:::i;:::-;6113:13;;6072:16;;;;6135:70;6113:13;6072:16;6182:4;6170:17;;6135:70;:::i;:::-;6221:20;;5751:496;-1:-1:-1;;;;5751:496:4:o;6252:350::-;6291:3;6319:5;6309:193;;6358:77;6355:1;6348:88;6459:4;6456:1;6449:15;6487:4;6484:1;6477:15;6309:193;-1:-1:-1;6529:66:4;6518:78;;6252:350::o;6607:531::-;6850:42;6842:6;6838:55;6827:9;6820:74;6942:42;6934:6;6930:55;6925:2;6914:9;6910:18;6903:83;7022:6;7017:2;7006:9;7002:18;6995:34;7065:3;7060:2;7049:9;7045:18;7038:31;6801:4;7086:46;7127:3;7116:9;7112:19;7104:6;7086:46;:::i;:::-;7078:54;6607:531;-1:-1:-1;;;;;;6607:531:4:o;7143:249::-;7212:6;7265:2;7253:9;7244:7;7240:23;7236:32;7233:52;;;7281:1;7278;7271:12;7233:52;7313:9;7307:16;7332:30;7356:5;7332:30;:::i"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "946200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1304",
								"getApproved(uint256)": "infinite",
								"isApprovedForAll(address,address)": "infinite",
								"name()": "infinite",
								"ownerOf(uint256)": "infinite",
								"safeTransferFrom(address,address,uint256)": "infinite",
								"safeTransferFrom(address,address,uint256,bytes)": "infinite",
								"setApprovalForAll(address,bool)": "23180",
								"supportsInterface(bytes4)": "456",
								"symbol()": "infinite",
								"tokenURI(uint256)": "infinite",
								"totalSupply()": "1832",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_afterTokenTransfers(address,address,uint256,uint256)": "infinite",
								"_approve(address,uint256)": "infinite",
								"_approve(address,uint256,bool)": "infinite",
								"_baseURI()": "infinite",
								"_beforeTokenTransfers(address,address,uint256,uint256)": "infinite",
								"_burn(uint256)": "infinite",
								"_burn(uint256,bool)": "infinite",
								"_checkContractOnERC721Received(address,address,uint256,bytes memory)": "infinite",
								"_exists(uint256)": "infinite",
								"_extraData(address,address,uint24)": "infinite",
								"_getApprovedSlotAndAddress(uint256)": "infinite",
								"_getAux(address)": "infinite",
								"_initializeOwnershipAt(uint256)": "infinite",
								"_isSenderApprovedOrOwner(address,address,address)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_mintERC2309(address,uint256)": "infinite",
								"_msgSenderERC721A()": "infinite",
								"_nextExtraData(address,address,uint256)": "infinite",
								"_nextInitializedFlag(uint256)": "infinite",
								"_nextTokenId()": "infinite",
								"_numberBurned(address)": "infinite",
								"_numberMinted(address)": "infinite",
								"_ownershipAt(uint256)": "infinite",
								"_ownershipIsInitialized(uint256)": "infinite",
								"_ownershipOf(uint256)": "infinite",
								"_packOwnershipData(address,uint256)": "infinite",
								"_packedOwnershipOf(uint256)": "infinite",
								"_revert(bytes4)": "19",
								"_safeMint(address,uint256)": "infinite",
								"_safeMint(address,uint256,bytes memory)": "infinite",
								"_setAux(address,uint64)": "infinite",
								"_setExtraDataAt(uint256,uint24)": "infinite",
								"_startTokenId()": "infinite",
								"_toString(uint256)": "infinite",
								"_totalBurned()": "infinite",
								"_totalMinted()": "infinite",
								"_unpackedOwnership(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2185,
									"end": 44823,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 2185,
									"end": 44823,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2185,
									"end": 44823,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "CODESIZE",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "PUSHSIZE",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 6236,
									"end": 6390,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "tag",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6236,
									"end": 6390,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 6302,
									"end": 6307,
									"name": "PUSH",
									"source": 2,
									"value": "2"
								},
								{
									"begin": 6302,
									"end": 6315,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 6310,
									"end": 6315,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 6302,
									"end": 6307,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6302,
									"end": 6315,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 6302,
									"end": 6315,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6302,
									"end": 6315,
									"name": "tag",
									"source": 2,
									"value": "6"
								},
								{
									"begin": 6302,
									"end": 6315,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6325,
									"end": 6332,
									"name": "PUSH",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 6325,
									"end": 6342,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 6335,
									"end": 6342,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6325,
									"end": 6332,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 6325,
									"end": 6342,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 6325,
									"end": 6342,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6325,
									"end": 6342,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 6325,
									"end": 6342,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 6772,
									"end": 6779,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 6352,
									"end": 6383,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 6352,
									"end": 6383,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2185,
									"end": 44823,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 2185,
									"end": 44823,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 14,
									"end": 141,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 14,
									"end": 141,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 75,
									"end": 85,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B71"
								},
								{
									"begin": 70,
									"end": 73,
									"name": "PUSH",
									"source": 4,
									"value": "E0"
								},
								{
									"begin": 66,
									"end": 86,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 63,
									"end": 64,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 56,
									"end": 87,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 106,
									"end": 110,
									"name": "PUSH",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 103,
									"end": 104,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 96,
									"end": 111,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 130,
									"end": 134,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 127,
									"end": 128,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 120,
									"end": 135,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 146,
									"end": 980,
									"name": "tag",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 146,
									"end": 980,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 200,
									"end": 205,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 253,
									"end": 256,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 246,
									"end": 250,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 238,
									"end": 244,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 234,
									"end": 251,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 230,
									"end": 257,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 220,
									"end": 275,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 271,
									"end": 272,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 268,
									"end": 269,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 261,
									"end": 273,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 220,
									"end": 275,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 220,
									"end": 275,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 298,
									"end": 311,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 298,
									"end": 311,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 323,
									"end": 353,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 323,
									"end": 353,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 320,
									"end": 376,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 320,
									"end": 376,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 320,
									"end": 376,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 356,
									"end": 374,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 356,
									"end": 374,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 356,
									"end": 374,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 405,
									"end": 407,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 399,
									"end": 408,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 497,
									"end": 499,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 459,
									"end": 476,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 459,
									"end": 476,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 455,
									"end": 486,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 455,
									"end": 486,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 455,
									"end": 486,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 488,
									"end": 490,
									"name": "PUSH",
									"source": 4,
									"value": "3F"
								},
								{
									"begin": 451,
									"end": 491,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 447,
									"end": 501,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 435,
									"end": 502,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 435,
									"end": 502,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 517,
									"end": 551,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 517,
									"end": 551,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 553,
									"end": 575,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 553,
									"end": 575,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 514,
									"end": 576,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 511,
									"end": 599,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 511,
									"end": 599,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 511,
									"end": 599,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 579,
									"end": 597,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 579,
									"end": 597,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 579,
									"end": 597,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 615,
									"end": 617,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 608,
									"end": 630,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 639,
									"end": 661,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 639,
									"end": 661,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 680,
									"end": 699,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 680,
									"end": 699,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 701,
									"end": 705,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 676,
									"end": 706,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 673,
									"end": 712,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 670,
									"end": 729,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 670,
									"end": 729,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 725,
									"end": 726,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 722,
									"end": 723,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 715,
									"end": 727,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 670,
									"end": 729,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 670,
									"end": 729,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 747,
									"end": 748,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 771,
									"end": 777,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 768,
									"end": 769,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 765,
									"end": 778,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 757,
									"end": 900,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 757,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 883,
									"end": 887,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 867,
									"end": 881,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 867,
									"end": 881,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 867,
									"end": 881,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 863,
									"end": 888,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 863,
									"end": 888,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 857,
									"end": 889,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 834,
									"end": 848,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 834,
									"end": 848,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 834,
									"end": 848,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 830,
									"end": 855,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 830,
									"end": 855,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 823,
									"end": 890,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 786,
									"end": 798,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 757,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 757,
									"end": 900,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 757,
									"end": 900,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 948,
									"end": 949,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 920,
									"end": 939,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 920,
									"end": 939,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 920,
									"end": 939,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 941,
									"end": 945,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 916,
									"end": 946,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 909,
									"end": 950,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 909,
									"end": 950,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 909,
									"end": 950,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 909,
									"end": 950,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 924,
									"end": 930,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 146,
									"end": 980,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 146,
									"end": 980,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1084,
									"end": 1090,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1092,
									"end": 1098,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1145,
									"end": 1147,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1133,
									"end": 1142,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1124,
									"end": 1131,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1120,
									"end": 1143,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1116,
									"end": 1148,
									"name": "SLT",
									"source": 4
								},
								{
									"begin": 1113,
									"end": 1165,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1113,
									"end": 1165,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 1113,
									"end": 1165,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1161,
									"end": 1162,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1158,
									"end": 1159,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1151,
									"end": 1163,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1113,
									"end": 1165,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 1113,
									"end": 1165,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1188,
									"end": 1204,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1188,
									"end": 1204,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1216,
									"end": 1246,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1216,
									"end": 1246,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1213,
									"end": 1263,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1213,
									"end": 1263,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 1213,
									"end": 1263,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1259,
									"end": 1260,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1256,
									"end": 1257,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1249,
									"end": 1261,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1213,
									"end": 1263,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 1213,
									"end": 1263,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1282,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 1335,
									"end": 1342,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1326,
									"end": 1332,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1315,
									"end": 1324,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1311,
									"end": 1333,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1282,
									"end": 1343,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 1282,
									"end": 1343,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1282,
									"end": 1343,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 1282,
									"end": 1343,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1389,
									"end": 1391,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1374,
									"end": 1392,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1374,
									"end": 1392,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1368,
									"end": 1393,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1272,
									"end": 1343,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1272,
									"end": 1343,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1368,
									"end": 1393,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1405,
									"end": 1437,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1405,
									"end": 1437,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1402,
									"end": 1454,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1402,
									"end": 1454,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 1402,
									"end": 1454,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1450,
									"end": 1451,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1447,
									"end": 1448,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1440,
									"end": 1452,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1402,
									"end": 1454,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 1402,
									"end": 1454,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1473,
									"end": 1536,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 1528,
									"end": 1535,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1517,
									"end": 1525,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1506,
									"end": 1515,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 1502,
									"end": 1526,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1473,
									"end": 1536,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "14"
								},
								{
									"begin": 1473,
									"end": 1536,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1473,
									"end": 1536,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 1473,
									"end": 1536,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1463,
									"end": 1536,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1463,
									"end": 1536,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1463,
									"end": 1536,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 985,
									"end": 1542,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 985,
									"end": 1542,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1547,
									"end": 1927,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 1547,
									"end": 1927,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1626,
									"end": 1627,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1622,
									"end": 1634,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1622,
									"end": 1634,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1622,
									"end": 1634,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 1622,
									"end": 1634,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1669,
									"end": 1681,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1669,
									"end": 1681,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1669,
									"end": 1681,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1751,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1690,
									"end": 1751,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1744,
									"end": 1748,
									"name": "PUSH",
									"source": 4,
									"value": "7F"
								},
								{
									"begin": 1736,
									"end": 1742,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1732,
									"end": 1749,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1722,
									"end": 1749,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1722,
									"end": 1749,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1751,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 1690,
									"end": 1751,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1797,
									"end": 1799,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1789,
									"end": 1795,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1786,
									"end": 1800,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1766,
									"end": 1784,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1763,
									"end": 1801,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1760,
									"end": 1921,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 1760,
									"end": 1921,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1843,
									"end": 1853,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B71"
								},
								{
									"begin": 1838,
									"end": 1841,
									"name": "PUSH",
									"source": 4,
									"value": "E0"
								},
								{
									"begin": 1834,
									"end": 1854,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 1831,
									"end": 1832,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1824,
									"end": 1855,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1878,
									"end": 1882,
									"name": "PUSH",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 1875,
									"end": 1876,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1868,
									"end": 1883,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1906,
									"end": 1910,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1903,
									"end": 1904,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1896,
									"end": 1911,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1760,
									"end": 1921,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 1760,
									"end": 1921,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1760,
									"end": 1921,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1547,
									"end": 1927,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1547,
									"end": 1927,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1547,
									"end": 1927,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1547,
									"end": 1927,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2058,
									"end": 2576,
									"name": "tag",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 2058,
									"end": 2576,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2160,
									"end": 2162,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 2155,
									"end": 2158,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2152,
									"end": 2163,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2149,
									"end": 2570,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2149,
									"end": 2570,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 2149,
									"end": 2570,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2196,
									"end": 2201,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2193,
									"end": 2194,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2186,
									"end": 2202,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2240,
									"end": 2244,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2237,
									"end": 2238,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2227,
									"end": 2245,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 2310,
									"end": 2312,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 2298,
									"end": 2308,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2294,
									"end": 2313,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2291,
									"end": 2292,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 2287,
									"end": 2314,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 2281,
									"end": 2285,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2277,
									"end": 2315,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2346,
									"end": 2350,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2334,
									"end": 2344,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2331,
									"end": 2351,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 2328,
									"end": 2375,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2328,
									"end": 2375,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 2328,
									"end": 2375,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2369,
									"end": 2373,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 2328,
									"end": 2375,
									"name": "tag",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 2328,
									"end": 2375,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2424,
									"end": 2426,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 2419,
									"end": 2422,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2415,
									"end": 2427,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2412,
									"end": 2413,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 2408,
									"end": 2428,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 2402,
									"end": 2406,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 2398,
									"end": 2429,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2388,
									"end": 2429,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 2388,
									"end": 2429,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "tag",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2497,
									"end": 2499,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2490,
									"end": 2495,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2487,
									"end": 2500,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2556,
									"end": 2557,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 2542,
									"end": 2558,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2542,
									"end": 2558,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 2523,
									"end": 2524,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2512,
									"end": 2525,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "tag",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 2479,
									"end": 2560,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2483,
									"end": 2486,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2483,
									"end": 2486,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2149,
									"end": 2570,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 2149,
									"end": 2570,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2058,
									"end": 2576,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2058,
									"end": 2576,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2058,
									"end": 2576,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 2058,
									"end": 2576,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2752,
									"end": 4051,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 2752,
									"end": 4051,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2872,
									"end": 2882,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2872,
									"end": 2882,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 2894,
									"end": 2924,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2894,
									"end": 2924,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 2891,
									"end": 2947,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 2891,
									"end": 2947,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 2891,
									"end": 2947,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 2927,
									"end": 2945,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 2927,
									"end": 2945,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 2927,
									"end": 2945,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2927,
									"end": 2945,
									"name": "tag",
									"source": 4,
									"value": "50"
								},
								{
									"begin": 2927,
									"end": 2945,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2956,
									"end": 3053,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 3046,
									"end": 3052,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3006,
									"end": 3044,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 3038,
									"end": 3042,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3032,
									"end": 3043,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 3006,
									"end": 3044,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 3006,
									"end": 3044,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3006,
									"end": 3044,
									"name": "tag",
									"source": 4,
									"value": "52"
								},
								{
									"begin": 3006,
									"end": 3044,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3000,
									"end": 3004,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2956,
									"end": 3053,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "17"
								},
								{
									"begin": 2956,
									"end": 3053,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2956,
									"end": 3053,
									"name": "tag",
									"source": 4,
									"value": "51"
								},
								{
									"begin": 2956,
									"end": 3053,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3102,
									"end": 3106,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3133,
									"end": 3135,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 3122,
									"end": 3136,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3122,
									"end": 3136,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 3150,
									"end": 3151,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3838,
									"end": 3839,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 3855,
									"end": 3861,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 3852,
									"end": 3941,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3852,
									"end": 3941,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "55"
								},
								{
									"begin": 3852,
									"end": 3941,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3907,
									"end": 3926,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3907,
									"end": 3926,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3907,
									"end": 3926,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3901,
									"end": 3927,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3852,
									"end": 3941,
									"name": "tag",
									"source": 4,
									"value": "55"
								},
								{
									"begin": 3852,
									"end": 3941,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 2709,
									"end": 2710,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 2705,
									"end": 2716,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 2705,
									"end": 2716,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2705,
									"end": 2716,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 2701,
									"end": 2725,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 2697,
									"end": 2726,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 2687,
									"end": 2727,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 2733,
									"end": 2734,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 2729,
									"end": 2740,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 2729,
									"end": 2740,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 2729,
									"end": 2740,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 2684,
									"end": 2741,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 3954,
									"end": 4035,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3954,
									"end": 4035,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3115,
									"end": 4045,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 3115,
									"end": 4045,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "tag",
									"source": 4,
									"value": "54"
								},
								{
									"begin": 3145,
									"end": 3794,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2005,
									"end": 2006,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1998,
									"end": 2012,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1998,
									"end": 2012,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1998,
									"end": 2012,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 2042,
									"end": 2046,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 2029,
									"end": 2047,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 2029,
									"end": 2047,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3181,
									"end": 3201,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3181,
									"end": 3201,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3181,
									"end": 3201,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "tag",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3313,
									"end": 3320,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3310,
									"end": 3311,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3307,
									"end": 3321,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3395,
									"end": 3414,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 3395,
									"end": 3414,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3395,
									"end": 3414,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3389,
									"end": 3415,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 3374,
									"end": 3416,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3374,
									"end": 3416,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3502,
									"end": 3506,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 3487,
									"end": 3507,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 3487,
									"end": 3507,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 3487,
									"end": 3507,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3487,
									"end": 3507,
									"name": "SWAP5",
									"source": 4
								},
								{
									"begin": 3455,
									"end": 3456,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3443,
									"end": 3457,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3443,
									"end": 3457,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 3443,
									"end": 3457,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3443,
									"end": 3457,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 3329,
									"end": 3341,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "58"
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "tag",
									"source": 4,
									"value": "60"
								},
								{
									"begin": 3299,
									"end": 3521,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 3303,
									"end": 3306,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 3549,
									"end": 3555,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3540,
									"end": 3547,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 3537,
									"end": 3556,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 3534,
									"end": 3735,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 3534,
									"end": 3735,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 3534,
									"end": 3735,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 3610,
									"end": 3629,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 3610,
									"end": 3629,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 3610,
									"end": 3629,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3604,
									"end": 3630,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3693,
									"end": 3694,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 3689,
									"end": 3703,
									"name": "DUP8",
									"source": 4
								},
								{
									"begin": 3689,
									"end": 3703,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3689,
									"end": 3703,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 3705,
									"end": 3708,
									"name": "PUSH",
									"source": 4,
									"value": "F8"
								},
								{
									"begin": 3685,
									"end": 3709,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3681,
									"end": 3718,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 3677,
									"end": 3719,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 3662,
									"end": 3720,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 3647,
									"end": 3721,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3647,
									"end": 3721,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 3534,
									"end": 3735,
									"name": "tag",
									"source": 4,
									"value": "61"
								},
								{
									"begin": 3534,
									"end": 3735,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3781,
									"end": 3782,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 3765,
									"end": 3779,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3765,
									"end": 3779,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 3765,
									"end": 3779,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 3761,
									"end": 3783,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 3748,
									"end": 3784,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3748,
									"end": 3784,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2752,
									"end": 4051,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2752,
									"end": 4051,
									"name": "tag",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 2752,
									"end": 4051,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 2185,
									"end": 44823,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2185,
									"end": 44823,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2185,
									"end": 44823,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2185,
									"end": 44823,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2185,
									"end": 44823,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 2185,
									"end": 44823,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2185,
									"end": 44823,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205dcf19b3c8e52ee9866c3a61d669f181267a4405dd62d8c4ecd351b1235f854764736f6c634300081b0033",
									".code": [
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "6352211E"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "A22CB465"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "A22CB465"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "B88D4FDE"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "C87B56DD"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "E985E9C5"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "6352211E"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "70A08231"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "95D89B41"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "95EA7B3"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "18160DDD"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "23B872DD"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "42842E0E"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A7"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "6FDDE03"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "81812FC"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2185,
											"end": 44823,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 10454,
											"end": 11084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 10454,
											"end": 11084,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 611,
											"end": 625,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 604,
											"end": 626,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 586,
											"end": 627,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 586,
											"end": 627,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 574,
											"end": 576,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 559,
											"end": 577,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 11338,
											"end": 11436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 11338,
											"end": 11436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 18201,
											"end": 18424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 18201,
											"end": 18424,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1860,
											"end": 1902,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1848,
											"end": 1903,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 1903,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 1903,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1904,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1904,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1820,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1803,
											"end": 1821,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1684,
											"end": 1910,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 17929,
											"end": 18051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 17929,
											"end": 18051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7454,
											"end": 7466,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 7454,
											"end": 7466,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7245,
											"end": 7252,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 7438,
											"end": 7451,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 7438,
											"end": 7466,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2567,
											"end": 2592,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2592,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2567,
											"end": 2592,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2555,
											"end": 2557,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2540,
											"end": 2558,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7184,
											"end": 7501,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2421,
											"end": 2598,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 21836,
											"end": 25283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "tag",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 21836,
											"end": 25283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 25374,
											"end": 25561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 25374,
											"end": 25561,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 12699,
											"end": 12849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 12699,
											"end": 12849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 8335,
											"end": 8574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 8335,
											"end": 8574,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "tag",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 11507,
											"end": 11609,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "tag",
											"source": 2,
											"value": "69"
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "72"
										},
										{
											"begin": 18751,
											"end": 18982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 18751,
											"end": 18982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 26142,
											"end": 26547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "tag",
											"source": 2,
											"value": "75"
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 26142,
											"end": 26547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 11710,
											"end": 12032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "tag",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 11710,
											"end": 12032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "tag",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "tag",
											"source": 2,
											"value": "83"
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 19132,
											"end": 19294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19277,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 19252,
											"end": 19277,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19277,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19277,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19229,
											"end": 19233,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19252,
											"end": 19277,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19277,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19277,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19270,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 19252,
											"end": 19277,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19252,
											"end": 19277,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19277,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19277,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19277,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19252,
											"end": 19277,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19277,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19277,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19252,
											"end": 19287,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10539,
											"end": 10543,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 10857,
											"end": 10882,
											"name": "PUSH",
											"source": 2,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10857,
											"end": 10882,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10857,
											"end": 10882,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10857,
											"end": 10882,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10857,
											"end": 10882,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10857,
											"end": 10882,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10857,
											"end": 10958,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 10857,
											"end": 10958,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10933,
											"end": 10958,
											"name": "PUSH",
											"source": 2,
											"value": "80AC58CD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10933,
											"end": 10958,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10933,
											"end": 10958,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 10933,
											"end": 10958,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 10933,
											"end": 10958,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10857,
											"end": 10958,
											"name": "tag",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 10857,
											"end": 10958,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10857,
											"end": 11034,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 10857,
											"end": 11034,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 10857,
											"end": 11034,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11009,
											"end": 11034,
											"name": "PUSH",
											"source": 2,
											"value": "5B5E139F00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11009,
											"end": 11034,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11009,
											"end": 11034,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11009,
											"end": 11034,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11009,
											"end": 11034,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 10857,
											"end": 11034,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 10857,
											"end": 11034,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 10838,
											"end": 11034,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 10454,
											"end": 11084,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10454,
											"end": 11084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11392,
											"end": 11405,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 11424,
											"end": 11429,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 11417,
											"end": 11429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "tag",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 11417,
											"end": 11429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "tag",
											"source": 2,
											"value": "95"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "tag",
											"source": 2,
											"value": "97"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11417,
											"end": 11429,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11338,
											"end": 11436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 18201,
											"end": 18424,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18277,
											"end": 18284,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18301,
											"end": 18317,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 18309,
											"end": 18316,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18301,
											"end": 18308,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 18301,
											"end": 18317,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18301,
											"end": 18317,
											"name": "tag",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 18301,
											"end": 18317,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18296,
											"end": 18369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 18296,
											"end": 18369,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 18319,
											"end": 18369,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 18327,
											"end": 18368,
											"name": "PUSH",
											"source": 2,
											"value": "CF4700E400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 18319,
											"end": 18326,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 18319,
											"end": 18369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18319,
											"end": 18369,
											"name": "tag",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 18319,
											"end": 18369,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 18387,
											"end": 18411,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18387,
											"end": 18411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18387,
											"end": 18411,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18387,
											"end": 18411,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18387,
											"end": 18402,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 18387,
											"end": 18411,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18387,
											"end": 18411,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18387,
											"end": 18411,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18387,
											"end": 18411,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18387,
											"end": 18411,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 18387,
											"end": 18417,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 18387,
											"end": 18417,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18387,
											"end": 18417,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18387,
											"end": 18417,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18201,
											"end": 18424,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 18017,
											"end": 18044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 18026,
											"end": 18028,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18030,
											"end": 18037,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 18039,
											"end": 18043,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 18017,
											"end": 18025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 18017,
											"end": 18044,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18017,
											"end": 18044,
											"name": "tag",
											"source": 2,
											"value": "106"
										},
										{
											"begin": 18017,
											"end": 18044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17929,
											"end": 18051,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 17929,
											"end": 18051,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21973,
											"end": 22000,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 22003,
											"end": 22030,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 22022,
											"end": 22029,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 22003,
											"end": 22021,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 22003,
											"end": 22030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 22003,
											"end": 22030,
											"name": "tag",
											"source": 2,
											"value": "112"
										},
										{
											"begin": 22003,
											"end": 22030,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4075,
											"end": 4089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 22155,
											"end": 22177,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 22155,
											"end": 22177,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 22155,
											"end": 22177,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 22155,
											"end": 22177,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 21973,
											"end": 22030,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 21973,
											"end": 22030,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 22213,
											"end": 22258,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 22213,
											"end": 22258,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 22213,
											"end": 22258,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 22213,
											"end": 22258,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 22209,
											"end": 22304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 22209,
											"end": 22304,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 22260,
											"end": 22304,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 22268,
											"end": 22303,
											"name": "PUSH",
											"source": 2,
											"value": "A114810000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22260,
											"end": 22267,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 22260,
											"end": 22304,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 22260,
											"end": 22304,
											"name": "tag",
											"source": 2,
											"value": "115"
										},
										{
											"begin": 22260,
											"end": 22304,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22316,
											"end": 22343,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 20969,
											"end": 20993,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20969,
											"end": 20993,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 20969,
											"end": 20993,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20969,
											"end": 20984,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 20969,
											"end": 20993,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 20969,
											"end": 20993,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 20969,
											"end": 20993,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 20969,
											"end": 20993,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20969,
											"end": 20993,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 21193,
											"end": 21219,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 21193,
											"end": 21219,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 42777,
											"end": 42787,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 20606,
											"end": 20636,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 20606,
											"end": 20636,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 20606,
											"end": 20636,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 20314,
											"end": 20330,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 20303,
											"end": 20331,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 20303,
											"end": 20331,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 20584,
											"end": 20604,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 20584,
											"end": 20604,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 20584,
											"end": 20604,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 20581,
											"end": 20637,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 22499,
											"end": 22687,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 22499,
											"end": 22687,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 22591,
											"end": 22634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 22608,
											"end": 22612,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 42777,
											"end": 42787,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 19132,
											"end": 19294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 22591,
											"end": 22634,
											"name": "tag",
											"source": 2,
											"value": "123"
										},
										{
											"begin": 22591,
											"end": 22634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22586,
											"end": 22687,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 22586,
											"end": 22687,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 22636,
											"end": 22687,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 22644,
											"end": 22686,
											"name": "PUSH",
											"source": 2,
											"value": "59C896BE00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 22636,
											"end": 22643,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 22636,
											"end": 22687,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 22636,
											"end": 22687,
											"name": "tag",
											"source": 2,
											"value": "126"
										},
										{
											"begin": 22636,
											"end": 22687,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 22830,
											"end": 22845,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 22827,
											"end": 22984,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 22827,
											"end": 22984,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 22827,
											"end": 22984,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 22968,
											"end": 22969,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 22947,
											"end": 22966,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 22940,
											"end": 22970,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 22827,
											"end": 22984,
											"name": "tag",
											"source": 2,
											"value": "129"
										},
										{
											"begin": 22827,
											"end": 22984,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 23356,
											"end": 23380,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23356,
											"end": 23380,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 23356,
											"end": 23380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 23356,
											"end": 23380,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 23356,
											"end": 23380,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 23356,
											"end": 23380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 23356,
											"end": 23380,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 23356,
											"end": 23380,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 23356,
											"end": 23374,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 23356,
											"end": 23380,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 23356,
											"end": 23380,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 23356,
											"end": 23380,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 23356,
											"end": 23380,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 23356,
											"end": 23380,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 23356,
											"end": 23380,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 23354,
											"end": 23380,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 23354,
											"end": 23380,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 23354,
											"end": 23380,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 23354,
											"end": 23380,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 23354,
											"end": 23380,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 23354,
											"end": 23380,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 23424,
											"end": 23446,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 23424,
											"end": 23446,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 23424,
											"end": 23446,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 23424,
											"end": 23446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 23424,
											"end": 23446,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 23424,
											"end": 23446,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 23424,
											"end": 23446,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 23424,
											"end": 23446,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 23424,
											"end": 23446,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 23422,
											"end": 23446,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 23422,
											"end": 23446,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 23422,
											"end": 23446,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 23422,
											"end": 23446,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 23422,
											"end": 23446,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 17057,
											"end": 17068,
											"name": "TIMESTAMP",
											"source": 2
										},
										{
											"begin": 17032,
											"end": 17055,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 17028,
											"end": 17069,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 17015,
											"end": 17078,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3682,
											"end": 3690,
											"name": "PUSH",
											"source": 2,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17015,
											"end": 17078,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 23710,
											"end": 23736,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 23710,
											"end": 23736,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 23710,
											"end": 23736,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 23710,
											"end": 23736,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 23710,
											"end": 23727,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 23710,
											"end": 23736,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 23710,
											"end": 23736,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 23710,
											"end": 23736,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 23710,
											"end": 23736,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 23710,
											"end": 23736,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 23710,
											"end": 23882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 23710,
											"end": 23882,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 23710,
											"end": 23882,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 23710,
											"end": 23882,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3682,
											"end": 3690,
											"name": "PUSH",
											"source": 2,
											"value": "200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 23999,
											"end": 24046,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 23999,
											"end": 24046,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 23999,
											"end": 24051,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 23999,
											"end": 24051,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 23995,
											"end": 24612,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 23995,
											"end": 24612,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 24103,
											"end": 24104,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 24093,
											"end": 24104,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 24093,
											"end": 24104,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 24071,
											"end": 24090,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 24224,
											"end": 24254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 24224,
											"end": 24254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 24224,
											"end": 24254,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 24224,
											"end": 24241,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 24224,
											"end": 24254,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 24224,
											"end": 24254,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 24224,
											"end": 24254,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 24224,
											"end": 24254,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 24224,
											"end": 24254,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 24224,
											"end": 24254,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 24224,
											"end": 24259,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 24224,
											"end": 24259,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 24220,
											"end": 24598,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 24220,
											"end": 24598,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 24360,
											"end": 24373,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 24360,
											"end": 24373,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 24345,
											"end": 24356,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 24345,
											"end": 24373,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 24341,
											"end": 24580,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 24341,
											"end": 24580,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 24505,
											"end": 24535,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 24505,
											"end": 24535,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 24505,
											"end": 24535,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 24505,
											"end": 24535,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 24505,
											"end": 24522,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 24505,
											"end": 24535,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 24505,
											"end": 24535,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 24505,
											"end": 24535,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 24505,
											"end": 24535,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 24505,
											"end": 24535,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 24505,
											"end": 24557,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 24505,
											"end": 24557,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 24505,
											"end": 24557,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 24341,
											"end": 24580,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 24341,
											"end": 24580,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 24053,
											"end": 24612,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 23995,
											"end": 24612,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 23995,
											"end": 24612,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4075,
											"end": 4089,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 24740,
											"end": 24760,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 24740,
											"end": 24760,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 25111,
											"end": 25118,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 24740,
											"end": 24760,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 25043,
											"end": 25047,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 24986,
											"end": 25011,
											"name": "PUSH",
											"source": 2,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 24721,
											"end": 24737,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 24721,
											"end": 24737,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 24854,
											"end": 25146,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 25169,
											"end": 25177,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 25181,
											"end": 25182,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 25169,
											"end": 25182,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 25165,
											"end": 25223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 25165,
											"end": 25223,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 25184,
											"end": 25223,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 25192,
											"end": 25222,
											"name": "PUSH",
											"source": 2,
											"value": "EA553B3400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 25184,
											"end": 25191,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 25184,
											"end": 25223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 25184,
											"end": 25223,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 25184,
											"end": 25223,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 21963,
											"end": 25283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21963,
											"end": 25283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21963,
											"end": 25283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21963,
											"end": 25283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21836,
											"end": 25283,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 21836,
											"end": 25283,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 25515,
											"end": 25554,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 25532,
											"end": 25536,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 25538,
											"end": 25540,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 25542,
											"end": 25549,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 25515,
											"end": 25554,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 25515,
											"end": 25554,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 25515,
											"end": 25554,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 25515,
											"end": 25554,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 25515,
											"end": 25554,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 25515,
											"end": 25554,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 25515,
											"end": 25554,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 25515,
											"end": 25554,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 25515,
											"end": 25554,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 25515,
											"end": 25554,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 25515,
											"end": 25554,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 25515,
											"end": 25554,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 25515,
											"end": 25531,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 25515,
											"end": 25554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 25515,
											"end": 25554,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 25515,
											"end": 25554,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 25374,
											"end": 25561,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 25374,
											"end": 25561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 12699,
											"end": 12849,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 12771,
											"end": 12778,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 12813,
											"end": 12840,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 12832,
											"end": 12839,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12813,
											"end": 12831,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 12813,
											"end": 12840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "tag",
											"source": 2,
											"value": "63"
										},
										{
											"begin": 8335,
											"end": 8574,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 8407,
											"end": 8414,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8430,
											"end": 8449,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8430,
											"end": 8449,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8430,
											"end": 8449,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8426,
											"end": 8495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 8426,
											"end": 8495,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 8451,
											"end": 8495,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 8459,
											"end": 8494,
											"name": "PUSH",
											"source": 2,
											"value": "8F4EB60400000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8451,
											"end": 8458,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 8451,
											"end": 8495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8451,
											"end": 8495,
											"name": "tag",
											"source": 2,
											"value": "147"
										},
										{
											"begin": 8451,
											"end": 8495,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8512,
											"end": 8530,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 8512,
											"end": 8537,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2650,
											"end": 2663,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8512,
											"end": 8567,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8512,
											"end": 8567,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 8335,
											"end": 8574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 11507,
											"end": 11609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11563,
											"end": 11576,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 11595,
											"end": 11602,
											"name": "PUSH",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "93"
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11588,
											"end": 11602,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 11588,
											"end": 11602,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 42777,
											"end": 42787,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18884,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 18845,
											"end": 18884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18863,
											"name": "PUSH",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 18845,
											"end": 18884,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 18845,
											"end": 18884,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18884,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18884,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18884,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18845,
											"end": 18884,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18884,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18884,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18884,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 18845,
											"end": 18894,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18894,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18894,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18894,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18894,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18894,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18894,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18894,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18894,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18894,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18894,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18905,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18905,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18905,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00"
										},
										{
											"begin": 18845,
											"end": 18905,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18905,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18905,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18905,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18905,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18905,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18905,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18905,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18905,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 18920,
											"end": 18975,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18920,
											"end": 18975,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 586,
											"end": 627,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 586,
											"end": 627,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 586,
											"end": 627,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 18845,
											"end": 18894,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18845,
											"end": 18894,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 42777,
											"end": 42787,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18920,
											"end": 18975,
											"name": "PUSH",
											"source": 2,
											"value": "17307EAB39AB6107E8899845AD3D59BD9653F200F220920489CA2B5937696C31"
										},
										{
											"begin": 18920,
											"end": 18975,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 559,
											"end": 577,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 18920,
											"end": 18975,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 18920,
											"end": 18975,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 18920,
											"end": 18975,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 18920,
											"end": 18975,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 18920,
											"end": 18975,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 18920,
											"end": 18975,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 18920,
											"end": 18975,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 18751,
											"end": 18982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26311,
											"end": 26342,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 26324,
											"end": 26328,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 26330,
											"end": 26332,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 26334,
											"end": 26341,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 26311,
											"end": 26323,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 26311,
											"end": 26342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 26311,
											"end": 26342,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 26311,
											"end": 26342,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26356,
											"end": 26370,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 26356,
											"end": 26370,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 26356,
											"end": 26370,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 26356,
											"end": 26370,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 26356,
											"end": 26375,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 26352,
											"end": 26541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 26352,
											"end": 26541,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 26394,
											"end": 26450,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 26425,
											"end": 26429,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 26431,
											"end": 26433,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 26435,
											"end": 26442,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 26444,
											"end": 26449,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 26394,
											"end": 26424,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 26394,
											"end": 26450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 26394,
											"end": 26450,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 26394,
											"end": 26450,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26389,
											"end": 26541,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 26389,
											"end": 26541,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 26470,
											"end": 26526,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 26478,
											"end": 26525,
											"name": "PUSH",
											"source": 2,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26470,
											"end": 26477,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 26470,
											"end": 26526,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 26470,
											"end": 26526,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 26470,
											"end": 26526,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26142,
											"end": 26547,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 26142,
											"end": 26547,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11783,
											"end": 11796,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 11813,
											"end": 11829,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 11821,
											"end": 11828,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11813,
											"end": 11820,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 11813,
											"end": 11829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11813,
											"end": 11829,
											"name": "tag",
											"source": 2,
											"value": "166"
										},
										{
											"begin": 11813,
											"end": 11829,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11808,
											"end": 11876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 11808,
											"end": 11876,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11831,
											"end": 11876,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 11839,
											"end": 11875,
											"name": "PUSH",
											"source": 2,
											"value": "A14C4B5000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11831,
											"end": 11838,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 11831,
											"end": 11876,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11831,
											"end": 11876,
											"name": "tag",
											"source": 2,
											"value": "168"
										},
										{
											"begin": 11831,
											"end": 11876,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11887,
											"end": 11908,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11911,
											"end": 11921,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 12353,
											"end": 12362,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 12353,
											"end": 12362,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12353,
											"end": 12362,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 12353,
											"end": 12362,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12353,
											"end": 12362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12353,
											"end": 12362,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12353,
											"end": 12362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12353,
											"end": 12362,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 12353,
											"end": 12362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 12353,
											"end": 12362,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 12353,
											"end": 12362,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12353,
											"end": 12362,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 12277,
											"end": 12369,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11911,
											"end": 11921,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 11911,
											"end": 11921,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11887,
											"end": 11921,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11887,
											"end": 11921,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11944,
											"end": 11951,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11938,
											"end": 11959,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11963,
											"end": 11964,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11938,
											"end": 11964,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "tag",
											"source": 2,
											"value": "171"
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11991,
											"end": 11998,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 12000,
											"end": 12018,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 12010,
											"end": 12017,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 12000,
											"end": 12009,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 12000,
											"end": 12018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12000,
											"end": 12018,
											"name": "tag",
											"source": 2,
											"value": "173"
										},
										{
											"begin": 12000,
											"end": 12018,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 11974,
											"end": 12019,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "tag",
											"source": 2,
											"value": "175"
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 11974,
											"end": 12019,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "tag",
											"source": 2,
											"value": "172"
										},
										{
											"begin": 11938,
											"end": 12025,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 11931,
											"end": 12025,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 11710,
											"end": 12032,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11710,
											"end": 12032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19543,
											"end": 19903,
											"name": "tag",
											"source": 2,
											"value": "101"
										},
										{
											"begin": 19543,
											"end": 19903,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19608,
											"end": 19619,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19691,
											"end": 19704,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 19691,
											"end": 19704,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 19681,
											"end": 19688,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 19681,
											"end": 19704,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 19677,
											"end": 19887,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 19677,
											"end": 19887,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 19677,
											"end": 19887,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 19724,
											"end": 19738,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19756,
											"end": 19816,
											"name": "tag",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 19756,
											"end": 19816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19773,
											"end": 19799,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 19773,
											"end": 19799,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 19773,
											"end": 19799,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19773,
											"end": 19799,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19773,
											"end": 19790,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 19773,
											"end": 19799,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 19773,
											"end": 19799,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 19773,
											"end": 19799,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 19773,
											"end": 19799,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19773,
											"end": 19799,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 19773,
											"end": 19799,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 19773,
											"end": 19799,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19763,
											"end": 19805,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 19763,
											"end": 19805,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19763,
											"end": 19805,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 19756,
											"end": 19816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 19756,
											"end": 19816,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 19807,
											"end": 19816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 19807,
											"end": 19816,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 19807,
											"end": 19816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "185"
										},
										{
											"begin": 19807,
											"end": 19816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19807,
											"end": 19816,
											"name": "tag",
											"source": 2,
											"value": "184"
										},
										{
											"begin": 19807,
											"end": 19816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19807,
											"end": 19816,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 19807,
											"end": 19816,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19756,
											"end": 19816,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "182"
										},
										{
											"begin": 19756,
											"end": 19816,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 19756,
											"end": 19816,
											"name": "tag",
											"source": 2,
											"value": "183"
										},
										{
											"begin": 19756,
											"end": 19816,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3416,
											"name": "PUSH",
											"source": 2,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 19843,
											"end": 19867,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 19843,
											"end": 19872,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 19843,
											"end": 19872,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19677,
											"end": 19887,
											"name": "tag",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 19677,
											"end": 19887,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 19543,
											"end": 19903,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 19543,
											"end": 19903,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 19543,
											"end": 19903,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 19543,
											"end": 19903,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 44661,
											"end": 44821,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 44661,
											"end": 44821,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 44760,
											"end": 44773,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 44754,
											"end": 44758,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 44747,
											"end": 44774,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 44800,
											"end": 44804,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 44794,
											"end": 44798,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 44787,
											"end": 44805,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 36309,
											"end": 36769,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 36309,
											"end": 36769,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 36433,
											"end": 36446,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 36449,
											"end": 36465,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 36457,
											"end": 36464,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 36449,
											"end": 36456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 36449,
											"end": 36465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 36449,
											"end": 36465,
											"name": "tag",
											"source": 2,
											"value": "188"
										},
										{
											"begin": 36449,
											"end": 36465,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 36433,
											"end": 36465,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 36433,
											"end": 36465,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 36480,
											"end": 36493,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 36480,
											"end": 36525,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 36480,
											"end": 36525,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 36480,
											"end": 36525,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 36480,
											"end": 36525,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42777,
											"end": 42787,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 36497,
											"end": 36525,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36497,
											"end": 36525,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 36497,
											"end": 36525,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 36497,
											"end": 36525,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 36497,
											"end": 36525,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 36480,
											"end": 36525,
											"name": "tag",
											"source": 2,
											"value": "189"
										},
										{
											"begin": 36480,
											"end": 36525,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 36476,
											"end": 36674,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 36476,
											"end": 36674,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 36476,
											"end": 36674,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 36544,
											"end": 36588,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 36561,
											"end": 36566,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 42777,
											"end": 42787,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 19132,
											"end": 19294,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 19132,
											"end": 19294,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 36544,
											"end": 36588,
											"name": "tag",
											"source": 2,
											"value": "192"
										},
										{
											"begin": 36544,
											"end": 36588,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 36539,
											"end": 36674,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 36539,
											"end": 36674,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 36608,
											"end": 36659,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 36616,
											"end": 36658,
											"name": "PUSH",
											"source": 2,
											"value": "CFB3B94200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 36608,
											"end": 36615,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 36608,
											"end": 36659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 36608,
											"end": 36659,
											"name": "tag",
											"source": 2,
											"value": "195"
										},
										{
											"begin": 36608,
											"end": 36659,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36708,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 36684,
											"end": 36708,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36708,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36708,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36699,
											"name": "PUSH",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 36684,
											"end": 36708,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 36684,
											"end": 36708,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36708,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 36684,
											"end": 36708,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36708,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36708,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36719,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36719,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36719,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 36684,
											"end": 36719,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36719,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 36684,
											"end": 36719,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36719,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36719,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36719,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36719,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36719,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36719,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36719,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36719,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 36734,
											"end": 36762,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 36734,
											"end": 36762,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36708,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 36684,
											"end": 36708,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 36734,
											"end": 36762,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 36734,
											"end": 36762,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 36734,
											"end": 36762,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 36734,
											"end": 36762,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 36734,
											"end": 36762,
											"name": "PUSH",
											"source": 2,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 36734,
											"end": 36762,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 36734,
											"end": 36762,
											"name": "LOG4",
											"source": 2
										},
										{
											"begin": 36423,
											"end": 36769,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 36309,
											"end": 36769,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 36309,
											"end": 36769,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 36309,
											"end": 36769,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 36309,
											"end": 36769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14140,
											"end": 16118,
											"name": "tag",
											"source": 2,
											"value": "113"
										},
										{
											"begin": 14140,
											"end": 16118,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14288,
											"end": 14314,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14288,
											"end": 14314,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14288,
											"end": 14314,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14288,
											"end": 14314,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14288,
											"end": 14305,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14288,
											"end": 14314,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14288,
											"end": 14314,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14288,
											"end": 14314,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 14288,
											"end": 14314,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14288,
											"end": 14314,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 14288,
											"end": 14314,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14288,
											"end": 14314,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14412,
											"end": 14423,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14412,
											"end": 14423,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14412,
											"end": 14423,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14408,
											"end": 15678,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 14408,
											"end": 15678,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14458,
											"end": 14471,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14458,
											"end": 14471,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 14447,
											"end": 14454,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14447,
											"end": 14471,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 14443,
											"end": 14520,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 14443,
											"end": 14520,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14473,
											"end": 14520,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 14481,
											"end": 14519,
											"name": "PUSH",
											"source": 2,
											"value": "DF2D9B4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14473,
											"end": 14480,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 14473,
											"end": 14520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14473,
											"end": 14520,
											"name": "tag",
											"source": 2,
											"value": "202"
										},
										{
											"begin": 14473,
											"end": 14520,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15067,
											"end": 15664,
											"name": "tag",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 15067,
											"end": 15664,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15161,
											"end": 15170,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15161,
											"end": 15170,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15143,
											"end": 15171,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15143,
											"end": 15171,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15143,
											"end": 15171,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15143,
											"end": 15171,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15143,
											"end": 15160,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 15143,
											"end": 15171,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15143,
											"end": 15171,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15143,
											"end": 15171,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 15143,
											"end": 15171,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 15143,
											"end": 15171,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 15143,
											"end": 15171,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 15215,
											"end": 15240,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 15215,
											"end": 15240,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 15067,
											"end": 15664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 15215,
											"end": 15240,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3416,
											"name": "PUSH",
											"source": 2,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15266,
											"end": 15272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 15266,
											"end": 15290,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 15294,
											"end": 15295,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 15266,
											"end": 15295,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15262,
											"end": 15310,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 15262,
											"end": 15310,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14140,
											"end": 16118,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14140,
											"end": 16118,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14140,
											"end": 16118,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14140,
											"end": 16118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15262,
											"end": 15310,
											"name": "tag",
											"source": 2,
											"value": "207"
										},
										{
											"begin": 15262,
											"end": 15310,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15598,
											"end": 15645,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 15606,
											"end": 15644,
											"name": "PUSH",
											"source": 2,
											"value": "DF2D9B4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15598,
											"end": 15605,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 15598,
											"end": 15645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15598,
											"end": 15645,
											"name": "tag",
											"source": 2,
											"value": "208"
										},
										{
											"begin": 15598,
											"end": 15645,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 15067,
											"end": 15664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "203"
										},
										{
											"begin": 15067,
											"end": 15664,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14408,
											"end": 15678,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 14408,
											"end": 15678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3408,
											"end": 3416,
											"name": "PUSH",
											"source": 2,
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16000,
											"end": 16006,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 16000,
											"end": 16024,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 16028,
											"end": 16029,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 16000,
											"end": 16029,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 15996,
											"end": 16044,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 15996,
											"end": 16044,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14140,
											"end": 16118,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 14140,
											"end": 16118,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14140,
											"end": 16118,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 14140,
											"end": 16118,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15996,
											"end": 16044,
											"name": "tag",
											"source": 2,
											"value": "209"
										},
										{
											"begin": 15996,
											"end": 16044,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 16064,
											"end": 16111,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "181"
										},
										{
											"begin": 16072,
											"end": 16110,
											"name": "PUSH",
											"source": 2,
											"value": "DF2D9B4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16064,
											"end": 16071,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 16064,
											"end": 16111,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 28573,
											"end": 29246,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 28573,
											"end": 29246,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A0200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 28731,
											"end": 28735,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 28731,
											"end": 28735,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28796,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 28751,
											"end": 28796,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28796,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28796,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28796,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A02"
										},
										{
											"begin": 28751,
											"end": 28796,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 42777,
											"end": 42787,
											"name": "CALLER",
											"source": 2
										},
										{
											"begin": 42777,
											"end": 42787,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 28818,
											"end": 28822,
											"name": "DUP10",
											"source": 2
										},
										{
											"begin": 28818,
											"end": 28822,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 28824,
											"end": 28831,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 28824,
											"end": 28831,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 28833,
											"end": 28838,
											"name": "DUP9",
											"source": 2
										},
										{
											"begin": 28833,
											"end": 28838,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "223"
										},
										{
											"begin": 28751,
											"end": 28839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "DUP8",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "CALL",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 28751,
											"end": 28839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 28751,
											"end": 28839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "PUSH",
											"source": 2,
											"value": "3F"
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "RETURNDATACOPY",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "tag",
											"source": 2,
											"value": "232"
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "tag",
											"source": 2,
											"value": "231"
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 29029,
											"end": 29035,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 29029,
											"end": 29042,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 29046,
											"end": 29047,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 29029,
											"end": 29047,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 29025,
											"end": 29138,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 29025,
											"end": 29138,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 29067,
											"end": 29123,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 29075,
											"end": 29122,
											"name": "PUSH",
											"source": 2,
											"value": "D1A57ED600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 29067,
											"end": 29074,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 29067,
											"end": 29123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 29067,
											"end": 29123,
											"name": "tag",
											"source": 2,
											"value": "234"
										},
										{
											"begin": 29067,
											"end": 29123,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 29208,
											"end": 29214,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 29202,
											"end": 29215,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 29193,
											"end": 29199,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 29189,
											"end": 29191,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 29185,
											"end": 29200,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 29178,
											"end": 29216,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 28747,
											"end": 29240,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 28907,
											"end": 28971,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28907,
											"end": 28971,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 28917,
											"end": 28971,
											"name": "PUSH",
											"source": 2,
											"value": "150B7A0200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 28907,
											"end": 28971,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 28907,
											"end": 28971,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 28573,
											"end": 29246,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 28573,
											"end": 29246,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 28573,
											"end": 29246,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 28573,
											"end": 29246,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 28573,
											"end": 29246,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 28573,
											"end": 29246,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 28573,
											"end": 29246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 42891,
											"end": 44599,
											"name": "tag",
											"source": 2,
											"value": "174"
										},
										{
											"begin": 42891,
											"end": 44599,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 42956,
											"end": 42973,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 43384,
											"end": 43388,
											"name": "PUSH",
											"source": 2,
											"value": "A0"
										},
										{
											"begin": 43377,
											"end": 43381,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 43371,
											"end": 43382,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 43367,
											"end": 43389,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 43474,
											"end": 43475,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 43468,
											"end": 43472,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 43461,
											"end": 43476,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 43547,
											"end": 43551,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 43544,
											"end": 43545,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 43540,
											"end": 43552,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 43533,
											"end": 43552,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 43533,
											"end": 43552,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 43533,
											"end": 43552,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 43627,
											"end": 43628,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 43622,
											"end": 43625,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 43615,
											"end": 43629,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 43728,
											"end": 43731,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 43962,
											"end": 43967,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 43944,
											"end": 44363,
											"name": "tag",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 43944,
											"end": 44363,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 44009,
											"end": 44010,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 44004,
											"end": 44007,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 44000,
											"end": 44011,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 43993,
											"end": 44011,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 43993,
											"end": 44011,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 44177,
											"end": 44179,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 44171,
											"end": 44175,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 44167,
											"end": 44180,
											"name": "MOD",
											"source": 2
										},
										{
											"begin": 44163,
											"end": 44165,
											"name": "PUSH",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 44159,
											"end": 44181,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 44154,
											"end": 44157,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 44146,
											"end": 44182,
											"name": "MSTORE8",
											"source": 2
										},
										{
											"begin": 44269,
											"end": 44271,
											"name": "PUSH",
											"source": 2,
											"value": "A"
										},
										{
											"begin": 44259,
											"end": 44272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 44259,
											"end": 44272,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 44324,
											"end": 44349,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 43944,
											"end": 44363,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "238"
										},
										{
											"begin": 44324,
											"end": 44349,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 44391,
											"end": 44404,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 44391,
											"end": 44404,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 44391,
											"end": 44404,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 44504,
											"end": 44518,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 44504,
											"end": 44518,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 44504,
											"end": 44518,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 44504,
											"end": 44518,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 44564,
											"end": 44583,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 44564,
											"end": 44583,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 44564,
											"end": 44583,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 44504,
											"end": 44518,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 42891,
											"end": 44599,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 42891,
											"end": 44599,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14,
											"end": 191,
											"name": "tag",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 14,
											"end": 191,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 99,
											"end": 165,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 92,
											"end": 97,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 88,
											"end": 166,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 81,
											"end": 86,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 78,
											"end": 167,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 68,
											"end": 185,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 68,
											"end": 185,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 181,
											"end": 182,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 178,
											"end": 179,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 171,
											"end": 183,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 68,
											"end": 185,
											"name": "tag",
											"source": 4,
											"value": "250"
										},
										{
											"begin": 68,
											"end": 185,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 14,
											"end": 191,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 14,
											"end": 191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 196,
											"end": 441,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 196,
											"end": 441,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 254,
											"end": 260,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 307,
											"end": 309,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 295,
											"end": 304,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 286,
											"end": 293,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 282,
											"end": 305,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 278,
											"end": 310,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 275,
											"end": 327,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 275,
											"end": 327,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 275,
											"end": 327,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 323,
											"end": 324,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 320,
											"end": 321,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 313,
											"end": 325,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 275,
											"end": 327,
											"name": "tag",
											"source": 4,
											"value": "252"
										},
										{
											"begin": 275,
											"end": 327,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 349,
											"end": 372,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 381,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 405,
											"end": 410,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 381,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 381,
											"end": 411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 638,
											"end": 888,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 638,
											"end": 888,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 723,
											"end": 724,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 733,
											"end": 846,
											"name": "tag",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 733,
											"end": 846,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 747,
											"end": 753,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 744,
											"end": 745,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 741,
											"end": 754,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 733,
											"end": 846,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 733,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 733,
											"end": 846,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 823,
											"end": 834,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 823,
											"end": 834,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 823,
											"end": 834,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 817,
											"end": 835,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 804,
											"end": 815,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 804,
											"end": 815,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 804,
											"end": 815,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 797,
											"end": 836,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 769,
											"end": 771,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 762,
											"end": 772,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 733,
											"end": 846,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "256"
										},
										{
											"begin": 733,
											"end": 846,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 733,
											"end": 846,
											"name": "tag",
											"source": 4,
											"value": "258"
										},
										{
											"begin": 733,
											"end": 846,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 880,
											"end": 881,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 862,
											"end": 878,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 862,
											"end": 878,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 855,
											"end": 882,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 638,
											"end": 888,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 893,
											"end": 1223,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 893,
											"end": 1223,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 935,
											"end": 938,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 973,
											"end": 978,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 967,
											"end": 979,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1000,
											"end": 1006,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 995,
											"end": 998,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 988,
											"end": 1007,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1016,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 1085,
											"end": 1091,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1082,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1073,
											"end": 1076,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1069,
											"end": 1083,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1062,
											"end": 1066,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1055,
											"end": 1060,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1051,
											"end": 1067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1016,
											"end": 1092,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 1016,
											"end": 1092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1016,
											"end": 1092,
											"name": "tag",
											"source": 4,
											"value": "260"
										},
										{
											"begin": 1016,
											"end": 1092,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1137,
											"end": 1139,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1125,
											"end": 1140,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1142,
											"end": 1208,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 1121,
											"end": 1209,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1210,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1210,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1210,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1210,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1212,
											"end": 1216,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1108,
											"end": 1217,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1108,
											"end": 1217,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 893,
											"end": 1223,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 893,
											"end": 1223,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1448,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1228,
											"end": 1448,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1377,
											"end": 1379,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1366,
											"end": 1375,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1380,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1340,
											"end": 1344,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1397,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 1438,
											"end": 1440,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1427,
											"end": 1436,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1423,
											"end": 1441,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1415,
											"end": 1421,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1442,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 1397,
											"end": 1442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1453,
											"end": 1679,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1453,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1512,
											"end": 1518,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1565,
											"end": 1567,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1553,
											"end": 1562,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1551,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1540,
											"end": 1563,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1536,
											"end": 1568,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1581,
											"end": 1582,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1578,
											"end": 1579,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1571,
											"end": 1583,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "tag",
											"source": 4,
											"value": "264"
										},
										{
											"begin": 1533,
											"end": 1585,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1626,
											"end": 1649,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1626,
											"end": 1649,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1453,
											"end": 1679,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1453,
											"end": 1679,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1915,
											"end": 2111,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 1915,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2003,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2003,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2043,
											"end": 2085,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2032,
											"end": 2086,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2032,
											"end": 2086,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2087,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2087,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2012,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 2012,
											"end": 2105,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2101,
											"end": 2102,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2098,
											"end": 2099,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2091,
											"end": 2103,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2116,
											"end": 2416,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2116,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2184,
											"end": 2190,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2192,
											"end": 2198,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2245,
											"end": 2247,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2233,
											"end": 2242,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2224,
											"end": 2231,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2220,
											"end": 2243,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2216,
											"end": 2248,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2213,
											"end": 2265,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2213,
											"end": 2265,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 2213,
											"end": 2265,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2262,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2258,
											"end": 2259,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2251,
											"end": 2263,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2213,
											"end": 2265,
											"name": "tag",
											"source": 4,
											"value": "269"
										},
										{
											"begin": 2213,
											"end": 2265,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2284,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 2303,
											"end": 2312,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2284,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 2284,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2284,
											"end": 2313,
											"name": "tag",
											"source": 4,
											"value": "270"
										},
										{
											"begin": 2284,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2274,
											"end": 2313,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 2382,
											"end": 2384,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2367,
											"end": 2385,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2367,
											"end": 2385,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2367,
											"end": 2385,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2367,
											"end": 2385,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2354,
											"end": 2386,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2354,
											"end": 2386,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2116,
											"end": 2416,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2603,
											"end": 2977,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 2603,
											"end": 2977,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2680,
											"end": 2686,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2688,
											"end": 2694,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2696,
											"end": 2702,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2749,
											"end": 2751,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2737,
											"end": 2746,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2728,
											"end": 2735,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2724,
											"end": 2747,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 2752,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2717,
											"end": 2769,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2717,
											"end": 2769,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 2717,
											"end": 2769,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2765,
											"end": 2766,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2762,
											"end": 2763,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2755,
											"end": 2767,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2717,
											"end": 2769,
											"name": "tag",
											"source": 4,
											"value": "273"
										},
										{
											"begin": 2717,
											"end": 2769,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2788,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 2807,
											"end": 2816,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2788,
											"end": 2817,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 2788,
											"end": 2817,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2788,
											"end": 2817,
											"name": "tag",
											"source": 4,
											"value": "274"
										},
										{
											"begin": 2788,
											"end": 2817,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2778,
											"end": 2817,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2778,
											"end": 2817,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2836,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 2870,
											"end": 2872,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2859,
											"end": 2868,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2855,
											"end": 2873,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2836,
											"end": 2874,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 2836,
											"end": 2874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2836,
											"end": 2874,
											"name": "tag",
											"source": 4,
											"value": "275"
										},
										{
											"begin": 2836,
											"end": 2874,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2603,
											"end": 2977,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2603,
											"end": 2977,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 2826,
											"end": 2874,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2826,
											"end": 2874,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2943,
											"end": 2945,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2928,
											"end": 2946,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2928,
											"end": 2946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2928,
											"end": 2946,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2928,
											"end": 2946,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2915,
											"end": 2947,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 2915,
											"end": 2947,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2603,
											"end": 2977,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2982,
											"end": 3168,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2982,
											"end": 3168,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3041,
											"end": 3047,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3094,
											"end": 3096,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3082,
											"end": 3091,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3073,
											"end": 3080,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3069,
											"end": 3092,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3065,
											"end": 3097,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3062,
											"end": 3114,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3062,
											"end": 3114,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 3062,
											"end": 3114,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3110,
											"end": 3111,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3107,
											"end": 3108,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3100,
											"end": 3112,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3062,
											"end": 3114,
											"name": "tag",
											"source": 4,
											"value": "277"
										},
										{
											"begin": 3062,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 3152,
											"end": 3161,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3133,
											"end": 3162,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 3133,
											"end": 3162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3173,
											"end": 3520,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 3173,
											"end": 3520,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3238,
											"end": 3244,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3246,
											"end": 3252,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3299,
											"end": 3301,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3287,
											"end": 3296,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3278,
											"end": 3285,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3274,
											"end": 3297,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3270,
											"end": 3302,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3267,
											"end": 3319,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3267,
											"end": 3319,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 3267,
											"end": 3319,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3316,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3313,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3305,
											"end": 3317,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3267,
											"end": 3319,
											"name": "tag",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 3267,
											"end": 3319,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3338,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 3357,
											"end": 3366,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3338,
											"end": 3367,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 3338,
											"end": 3367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3338,
											"end": 3367,
											"name": "tag",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 3338,
											"end": 3367,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3328,
											"end": 3367,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3328,
											"end": 3367,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3417,
											"end": 3419,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3406,
											"end": 3415,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3402,
											"end": 3420,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3389,
											"end": 3421,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 3464,
											"end": 3469,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3457,
											"end": 3470,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3450,
											"end": 3471,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3443,
											"end": 3448,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3440,
											"end": 3472,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 3430,
											"end": 3490,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3486,
											"end": 3487,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3483,
											"end": 3484,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3476,
											"end": 3488,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3430,
											"end": 3490,
											"name": "tag",
											"source": 4,
											"value": "282"
										},
										{
											"begin": 3430,
											"end": 3490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3509,
											"end": 3514,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3514,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3514,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3499,
											"end": 3514,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3173,
											"end": 3520,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3173,
											"end": 3520,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3173,
											"end": 3520,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3173,
											"end": 3520,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3173,
											"end": 3520,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3173,
											"end": 3520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3525,
											"end": 3709,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 3525,
											"end": 3709,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3577,
											"end": 3654,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3574,
											"end": 3575,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3567,
											"end": 3655,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3674,
											"end": 3678,
											"name": "PUSH",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 3671,
											"end": 3672,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3664,
											"end": 3679,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3698,
											"end": 3702,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 3695,
											"end": 3696,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3688,
											"end": 3703,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 5039,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3714,
											"end": 5039,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3809,
											"end": 3815,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3817,
											"end": 3823,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3825,
											"end": 3831,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3839,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3886,
											"end": 3889,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 3874,
											"end": 3883,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3865,
											"end": 3872,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3861,
											"end": 3884,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3857,
											"end": 3890,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3907,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 3854,
											"end": 3907,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3903,
											"end": 3904,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3900,
											"end": 3901,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3893,
											"end": 3905,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3907,
											"name": "tag",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 3854,
											"end": 3907,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3926,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 3945,
											"end": 3954,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3926,
											"end": 3955,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 3926,
											"end": 3955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3926,
											"end": 3955,
											"name": "tag",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 3926,
											"end": 3955,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3916,
											"end": 3955,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3916,
											"end": 3955,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4012,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 4008,
											"end": 4010,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3997,
											"end": 4006,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3993,
											"end": 4011,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4012,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 3974,
											"end": 4012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3974,
											"end": 4012,
											"name": "tag",
											"source": 4,
											"value": "287"
										},
										{
											"begin": 3974,
											"end": 4012,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3964,
											"end": 4012,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4081,
											"end": 4083,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4066,
											"end": 4084,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4053,
											"end": 4085,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4053,
											"end": 4085,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4160,
											"end": 4162,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 4145,
											"end": 4163,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4145,
											"end": 4163,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4132,
											"end": 4164,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4187,
											"end": 4205,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4176,
											"end": 4206,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4176,
											"end": 4206,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4173,
											"end": 4223,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4173,
											"end": 4223,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 4173,
											"end": 4223,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4219,
											"end": 4220,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4216,
											"end": 4217,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4209,
											"end": 4221,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4173,
											"end": 4223,
											"name": "tag",
											"source": 4,
											"value": "288"
										},
										{
											"begin": 4173,
											"end": 4223,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4242,
											"end": 4264,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4242,
											"end": 4264,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4295,
											"end": 4299,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4287,
											"end": 4300,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4287,
											"end": 4300,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4283,
											"end": 4310,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 4273,
											"end": 4328,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 4273,
											"end": 4328,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4324,
											"end": 4325,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4321,
											"end": 4322,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4314,
											"end": 4326,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4273,
											"end": 4328,
											"name": "tag",
											"source": 4,
											"value": "289"
										},
										{
											"begin": 4273,
											"end": 4328,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4364,
											"end": 4366,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4351,
											"end": 4367,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 4390,
											"end": 4408,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4382,
											"end": 4388,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4379,
											"end": 4409,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4376,
											"end": 4432,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4376,
											"end": 4432,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 4376,
											"end": 4432,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4412,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 4412,
											"end": 4430,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 4412,
											"end": 4430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4412,
											"end": 4430,
											"name": "tag",
											"source": 4,
											"value": "291"
										},
										{
											"begin": 4412,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4461,
											"end": 4463,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4455,
											"end": 4464,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4608,
											"end": 4674,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 4603,
											"end": 4605,
											"name": "PUSH",
											"source": 4,
											"value": "3F"
										},
										{
											"begin": 4534,
											"end": 4600,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0"
										},
										{
											"begin": 4527,
											"end": 4531,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 4519,
											"end": 4525,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4515,
											"end": 4532,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4511,
											"end": 4601,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4507,
											"end": 4606,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4503,
											"end": 4675,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4495,
											"end": 4501,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4491,
											"end": 4676,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4742,
											"end": 4748,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4730,
											"end": 4740,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4727,
											"end": 4749,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 4706,
											"end": 4724,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4694,
											"end": 4704,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4691,
											"end": 4725,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 4688,
											"end": 4750,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 4685,
											"end": 4773,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4685,
											"end": 4773,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 4685,
											"end": 4773,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4753,
											"end": 4771,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 4753,
											"end": 4771,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 4753,
											"end": 4771,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4753,
											"end": 4771,
											"name": "tag",
											"source": 4,
											"value": "293"
										},
										{
											"begin": 4753,
											"end": 4771,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4789,
											"end": 4791,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4782,
											"end": 4804,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4813,
											"end": 4835,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4813,
											"end": 4835,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4813,
											"end": 4835,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4854,
											"end": 4869,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4854,
											"end": 4869,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4854,
											"end": 4869,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4871,
											"end": 4873,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4850,
											"end": 4874,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4847,
											"end": 4884,
											"name": "DUP10",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4844,
											"end": 4901,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4844,
											"end": 4901,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 4844,
											"end": 4901,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4897,
											"end": 4898,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4894,
											"end": 4895,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4887,
											"end": 4899,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4844,
											"end": 4901,
											"name": "tag",
											"source": 4,
											"value": "294"
										},
										{
											"begin": 4844,
											"end": 4901,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4953,
											"end": 4959,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4948,
											"end": 4950,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4944,
											"end": 4946,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4940,
											"end": 4951,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4935,
											"end": 4937,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4927,
											"end": 4933,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4923,
											"end": 4938,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4910,
											"end": 4960,
											"name": "CALLDATACOPY",
											"source": 4
										},
										{
											"begin": 5006,
											"end": 5007,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5001,
											"end": 5003,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4992,
											"end": 4998,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4984,
											"end": 4990,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4980,
											"end": 4999,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4976,
											"end": 5004,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4969,
											"end": 5008,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5027,
											"end": 5033,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5033,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5033,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5033,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5033,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5017,
											"end": 5033,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 5039,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 5039,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 5039,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 5039,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 5039,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 5039,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 5039,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3714,
											"end": 5039,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5044,
											"end": 5304,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 5044,
											"end": 5304,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5120,
											"end": 5126,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5173,
											"end": 5175,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5161,
											"end": 5170,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5152,
											"end": 5159,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 5148,
											"end": 5171,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5144,
											"end": 5176,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 5141,
											"end": 5193,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 5141,
											"end": 5193,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 5141,
											"end": 5193,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5189,
											"end": 5190,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5186,
											"end": 5187,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5179,
											"end": 5191,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5141,
											"end": 5193,
											"name": "tag",
											"source": 4,
											"value": "296"
										},
										{
											"begin": 5141,
											"end": 5193,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5212,
											"end": 5241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 5231,
											"end": 5240,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5212,
											"end": 5241,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 5212,
											"end": 5241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5212,
											"end": 5241,
											"name": "tag",
											"source": 4,
											"value": "297"
										},
										{
											"begin": 5212,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5241,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5202,
											"end": 5241,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5260,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 5294,
											"end": 5296,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5283,
											"end": 5292,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 5279,
											"end": 5297,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5260,
											"end": 5298,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 5260,
											"end": 5298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5260,
											"end": 5298,
											"name": "tag",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 5260,
											"end": 5298,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5250,
											"end": 5298,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5250,
											"end": 5298,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5044,
											"end": 5304,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5044,
											"end": 5304,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5044,
											"end": 5304,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5044,
											"end": 5304,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5044,
											"end": 5304,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5044,
											"end": 5304,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5309,
											"end": 5746,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 5309,
											"end": 5746,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5388,
											"end": 5389,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5384,
											"end": 5396,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5384,
											"end": 5396,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5384,
											"end": 5396,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 5384,
											"end": 5396,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5431,
											"end": 5443,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5431,
											"end": 5443,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5431,
											"end": 5443,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5452,
											"end": 5513,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 5452,
											"end": 5513,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5506,
											"end": 5510,
											"name": "PUSH",
											"source": 4,
											"value": "7F"
										},
										{
											"begin": 5498,
											"end": 5504,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5494,
											"end": 5511,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5484,
											"end": 5511,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5484,
											"end": 5511,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5452,
											"end": 5513,
											"name": "tag",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 5452,
											"end": 5513,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5559,
											"end": 5561,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5551,
											"end": 5557,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5548,
											"end": 5562,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 5528,
											"end": 5546,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5525,
											"end": 5563,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5522,
											"end": 5740,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 5522,
											"end": 5740,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5596,
											"end": 5673,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5593,
											"end": 5594,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5586,
											"end": 5674,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5697,
											"end": 5701,
											"name": "PUSH",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 5694,
											"end": 5695,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5687,
											"end": 5702,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5725,
											"end": 5729,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 5722,
											"end": 5723,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5715,
											"end": 5730,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5522,
											"end": 5740,
											"name": "tag",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 5522,
											"end": 5740,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5522,
											"end": 5740,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5309,
											"end": 5746,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5309,
											"end": 5746,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5309,
											"end": 5746,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5309,
											"end": 5746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5751,
											"end": 6247,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 5751,
											"end": 6247,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5930,
											"end": 5933,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5968,
											"end": 5974,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5962,
											"end": 5975,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5984,
											"end": 6050,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 6043,
											"end": 6049,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6038,
											"end": 6041,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6031,
											"end": 6035,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6023,
											"end": 6029,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 6019,
											"end": 6036,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5984,
											"end": 6050,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 5984,
											"end": 6050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5984,
											"end": 6050,
											"name": "tag",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 5984,
											"end": 6050,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6113,
											"end": 6126,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6113,
											"end": 6126,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6072,
											"end": 6088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6072,
											"end": 6088,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6072,
											"end": 6088,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6072,
											"end": 6088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6135,
											"end": 6205,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 6113,
											"end": 6126,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6072,
											"end": 6088,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6182,
											"end": 6186,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6170,
											"end": 6187,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 6170,
											"end": 6187,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6135,
											"end": 6205,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 6135,
											"end": 6205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6135,
											"end": 6205,
											"name": "tag",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 6135,
											"end": 6205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6221,
											"end": 6241,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6221,
											"end": 6241,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 5751,
											"end": 6247,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5751,
											"end": 6247,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6252,
											"end": 6602,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 6252,
											"end": 6602,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6291,
											"end": 6294,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6319,
											"end": 6324,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6309,
											"end": 6502,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 6309,
											"end": 6502,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6358,
											"end": 6435,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6355,
											"end": 6356,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6348,
											"end": 6436,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6459,
											"end": 6463,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 6456,
											"end": 6457,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6449,
											"end": 6464,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6487,
											"end": 6491,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6484,
											"end": 6485,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6477,
											"end": 6492,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6309,
											"end": 6502,
											"name": "tag",
											"source": 4,
											"value": "306"
										},
										{
											"begin": 6309,
											"end": 6502,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6529,
											"end": 6595,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6518,
											"end": 6596,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6518,
											"end": 6596,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6252,
											"end": 6602,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6607,
											"end": 7138,
											"name": "tag",
											"source": 4,
											"value": "223"
										},
										{
											"begin": 6607,
											"end": 7138,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6850,
											"end": 6892,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6842,
											"end": 6848,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6838,
											"end": 6893,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6827,
											"end": 6836,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6820,
											"end": 6894,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6942,
											"end": 6984,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6934,
											"end": 6940,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 6930,
											"end": 6985,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6925,
											"end": 6927,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6914,
											"end": 6923,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6910,
											"end": 6928,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6903,
											"end": 6986,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7022,
											"end": 7028,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7017,
											"end": 7019,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7006,
											"end": 7015,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7002,
											"end": 7020,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6995,
											"end": 7029,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7065,
											"end": 7068,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 7060,
											"end": 7062,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 7049,
											"end": 7058,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7045,
											"end": 7063,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7038,
											"end": 7069,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6801,
											"end": 6805,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7086,
											"end": 7132,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 7127,
											"end": 7130,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 7116,
											"end": 7125,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7112,
											"end": 7131,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7104,
											"end": 7110,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7086,
											"end": 7132,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 7086,
											"end": 7132,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7086,
											"end": 7132,
											"name": "tag",
											"source": 4,
											"value": "308"
										},
										{
											"begin": 7086,
											"end": 7132,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7078,
											"end": 7132,
											"name": "SWAP7",
											"source": 4
										},
										{
											"begin": 6607,
											"end": 7138,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6607,
											"end": 7138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7143,
											"end": 7392,
											"name": "tag",
											"source": 4,
											"value": "226"
										},
										{
											"begin": 7143,
											"end": 7392,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7212,
											"end": 7218,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7265,
											"end": 7267,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7253,
											"end": 7262,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7244,
											"end": 7251,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7240,
											"end": 7263,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7236,
											"end": 7268,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 7233,
											"end": 7285,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7233,
											"end": 7285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 7233,
											"end": 7285,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 7281,
											"end": 7282,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7278,
											"end": 7279,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7271,
											"end": 7283,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7233,
											"end": 7285,
											"name": "tag",
											"source": 4,
											"value": "310"
										},
										{
											"begin": 7233,
											"end": 7285,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7313,
											"end": 7322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7307,
											"end": 7323,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7332,
											"end": 7362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 7356,
											"end": 7361,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7332,
											"end": 7362,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "243"
										},
										{
											"begin": 7332,
											"end": 7362,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/ERC721ABurnable.sol",
								"Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/IERC721ABurnable.sol",
								"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol",
								"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/IERC721A.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721) Non-Fungible Token Standard, including the Metadata extension. Optimized for lower gas during batch mints. Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...) starting from `_startTokenId()`. Assumptions: - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply. - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256).\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}. Requirements: - The caller must own the token or be an approved operator.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721A\",\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":\"ERC721A\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":{\"keccak256\":\"0xbf164ed12ed2fb1eca6dba3afc7be8958a03cc8979f7302fda9c45d70cf3735d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://845f4ab43711e9a2e49f81519d6daef7bdbc98ba9ffcfe059f0fb2372c217288\",\"dweb:/ipfs/QmVxJtRznhL6M7daatv3HqL2S4joGMqiFzPS21SqK7r6h4\"]},\"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/IERC721A.sol\":{\"keccak256\":\"0xa50758be4b6557e7ffb8da3a58ab42d8c913849dfaeaf099ef2112d18fc0540c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e459408d4969a470969bebe5de840f0a1e1d014c9d9a273f6413f17a8ba69c2e\",\"dweb:/ipfs/QmYDd4TqiFStL25VebeP9KikYBnL6uSpoaxx7E2h6sLDG6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 127,
								"contract": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol:ERC721A",
								"label": "_currentIndex",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 129,
								"contract": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol:ERC721A",
								"label": "_burnCounter",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 131,
								"contract": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol:ERC721A",
								"label": "_name",
								"offset": 0,
								"slot": "2",
								"type": "t_string_storage"
							},
							{
								"astId": 133,
								"contract": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol:ERC721A",
								"label": "_symbol",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 137,
								"contract": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol:ERC721A",
								"label": "_packedOwnerships",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 141,
								"contract": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol:ERC721A",
								"label": "_packedAddressData",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 146,
								"contract": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol:ERC721A",
								"label": "_tokenApprovals",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_struct(TokenApprovalRef)59_storage)"
							},
							{
								"astId": 152,
								"contract": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol:ERC721A",
								"label": "_operatorApprovals",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_mapping(t_address,t_bool))"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_struct(TokenApprovalRef)59_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct ERC721A.TokenApprovalRef)",
								"numberOfBytes": "32",
								"value": "t_struct(TokenApprovalRef)59_storage"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(TokenApprovalRef)59_storage": {
								"encoding": "inplace",
								"label": "struct ERC721A.TokenApprovalRef",
								"members": [
									{
										"astId": 58,
										"contract": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol:ERC721A",
										"label": "value",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC721A__IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721 token receiver.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721 token receiver.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":\"ERC721A__IERC721Receiver\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol\":{\"keccak256\":\"0xbf164ed12ed2fb1eca6dba3afc7be8958a03cc8979f7302fda9c45d70cf3735d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://845f4ab43711e9a2e49f81519d6daef7bdbc98ba9ffcfe059f0fb2372c217288\",\"dweb:/ipfs/QmVxJtRznhL6M7daatv3HqL2S4joGMqiFzPS21SqK7r6h4\"]},\"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/IERC721A.sol\":{\"keccak256\":\"0xa50758be4b6557e7ffb8da3a58ab42d8c913849dfaeaf099ef2112d18fc0540c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e459408d4969a470969bebe5de840f0a1e1d014c9d9a273f6413f17a8ba69c2e\",\"dweb:/ipfs/QmYDd4TqiFStL25VebeP9KikYBnL6uSpoaxx7E2h6sLDG6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/IERC721A.sol": {
				"IERC721A": {
					"abi": [
						{
							"inputs": [],
							"name": "ApprovalCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ApprovalQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "BalanceQueryForZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintERC2309QuantityExceedsLimit",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MintZeroQuantity",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnerQueryForNonexistentToken",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "OwnershipNotInitializedForExtraData",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferCallerNotOwnerNorApproved",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferFromIncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToNonERC721ReceiverImplementer",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "TransferToZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "URIQueryForNonexistentToken",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "fromTokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "toTokenId",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "ConsecutiveTransfer",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "tokenURI",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of ERC721A.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"ConsecutiveTransfer(uint256,uint256,address,address)": {
								"details": "Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in `owner`'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}."
							},
							"name()": {
								"details": "Returns the token collection name."
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas."
							},
							"symbol()": {
								"details": "Returns the token collection symbol."
							},
							"tokenURI(uint256)": {
								"details": "Returns the Uniform Resource Identifier (URI) for `tokenId` token."
							},
							"totalSupply()": {
								"details": "Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"name()": "06fdde03",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"symbol()": "95d89b41",
							"tokenURI(uint256)": "c87b56dd",
							"totalSupply()": "18160ddd",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ApprovalCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ApprovalQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"BalanceQueryForZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintERC2309QuantityExceedsLimit\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MintZeroQuantity\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnerQueryForNonexistentToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"OwnershipNotInitializedForExtraData\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferCallerNotOwnerNorApproved\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferFromIncorrectOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToNonERC721ReceiverImplementer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TransferToZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"URIQueryForNonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"fromTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"toTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"ConsecutiveTransfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of ERC721A.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"ConsecutiveTransfer(uint256,uint256,address,address)\":{\"details\":\"Emitted when tokens in `fromTokenId` to `toTokenId` (inclusive) is transferred from `from` to `to`, as defined in the [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard. See {_mintERC2309} for more details.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in `owner`'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}.\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Equivalent to `safeTransferFrom(from, to, tokenId, '')`.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified) to learn more about how these ids are created. This function call must use less than 30000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total number of tokens in existence. Burned tokens will reduce the count. To get the total number of tokens minted, please see {_totalMinted}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"errors\":{\"ApprovalCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"ApprovalQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"BalanceQueryForZeroAddress()\":[{\"notice\":\"Cannot query the balance for the zero address.\"}],\"MintERC2309QuantityExceedsLimit()\":[{\"notice\":\"The `quantity` minted with ERC2309 exceeds the safety limit.\"}],\"MintToZeroAddress()\":[{\"notice\":\"Cannot mint to the zero address.\"}],\"MintZeroQuantity()\":[{\"notice\":\"The quantity of tokens minted must be more than zero.\"}],\"OwnerQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}],\"OwnershipNotInitializedForExtraData()\":[{\"notice\":\"The `extraData` cannot be set on an unintialized ownership slot.\"}],\"TransferCallerNotOwnerNorApproved()\":[{\"notice\":\"The caller must own the token or be an approved operator.\"}],\"TransferFromIncorrectOwner()\":[{\"notice\":\"The token must be owned by `from`.\"}],\"TransferToNonERC721ReceiverImplementer()\":[{\"notice\":\"Cannot safely transfer to a contract that does not implement the ERC721Receiver interface.\"}],\"TransferToZeroAddress()\":[{\"notice\":\"Cannot transfer to the zero address.\"}],\"URIQueryForNonexistentToken()\":[{\"notice\":\"The token does not exist.\"}]},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/IERC721A.sol\":\"IERC721A\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/IERC721A.sol\":{\"keccak256\":\"0xa50758be4b6557e7ffb8da3a58ab42d8c913849dfaeaf099ef2112d18fc0540c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e459408d4969a470969bebe5de840f0a1e1d014c9d9a273f6413f17a8ba69c2e\",\"dweb:/ipfs/QmYDd4TqiFStL25VebeP9KikYBnL6uSpoaxx7E2h6sLDG6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"errors": {
							"ApprovalCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"ApprovalQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"BalanceQueryForZeroAddress()": [
								{
									"notice": "Cannot query the balance for the zero address."
								}
							],
							"MintERC2309QuantityExceedsLimit()": [
								{
									"notice": "The `quantity` minted with ERC2309 exceeds the safety limit."
								}
							],
							"MintToZeroAddress()": [
								{
									"notice": "Cannot mint to the zero address."
								}
							],
							"MintZeroQuantity()": [
								{
									"notice": "The quantity of tokens minted must be more than zero."
								}
							],
							"OwnerQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							],
							"OwnershipNotInitializedForExtraData()": [
								{
									"notice": "The `extraData` cannot be set on an unintialized ownership slot."
								}
							],
							"TransferCallerNotOwnerNorApproved()": [
								{
									"notice": "The caller must own the token or be an approved operator."
								}
							],
							"TransferFromIncorrectOwner()": [
								{
									"notice": "The token must be owned by `from`."
								}
							],
							"TransferToNonERC721ReceiverImplementer()": [
								{
									"notice": "Cannot safely transfer to a contract that does not implement the ERC721Receiver interface."
								}
							],
							"TransferToZeroAddress()": [
								{
									"notice": "Cannot transfer to the zero address."
								}
							],
							"URIQueryForNonexistentToken()": [
								{
									"notice": "The token does not exist."
								}
							]
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/ERC721ABurnable.sol": {
				"ast": {
					"absolutePath": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/ERC721ABurnable.sol",
					"exportedSymbols": {
						"ERC721A": [
							1832
						],
						"ERC721ABurnable": [
							22
						],
						"ERC721A__IERC721Receiver": [
							53
						],
						"IERC721A": [
							2038
						],
						"IERC721ABurnable": [
							35
						]
					},
					"id": 23,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "1374:23:0"
						},
						{
							"absolutePath": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/IERC721ABurnable.sol",
							"file": "./IERC721ABurnable.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 23,
							"sourceUnit": 36,
							"src": "1399:32:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol",
							"file": "../ERC721A.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 23,
							"sourceUnit": 1833,
							"src": "1432:24:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "ERC721A",
										"nameLocations": [
											"1600:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1832,
										"src": "1600:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "1600:7:0"
								},
								{
									"baseName": {
										"id": 7,
										"name": "IERC721ABurnable",
										"nameLocations": [
											"1609:16:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 35,
										"src": "1609:16:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "1609:16:0"
								}
							],
							"canonicalName": "ERC721ABurnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "1458:104:0",
								"text": " @title ERC721ABurnable.\n @dev ERC721A token that can be irreversibly burned (destroyed)."
							},
							"fullyImplemented": true,
							"id": 22,
							"linearizedBaseContracts": [
								22,
								35,
								1832,
								2038
							],
							"name": "ERC721ABurnable",
							"nameLocation": "1581:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										34
									],
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "1855:37:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 16,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "1871:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 17,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1880:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 15,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1557,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "1865:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1865:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 19,
												"nodeType": "ExpressionStatement",
												"src": "1865:20:0"
											}
										]
									},
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "1632:163:0",
										"text": " @dev Burns `tokenId`. See {ERC721A-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."
									},
									"functionSelector": "42966c68",
									"id": 21,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "1809:4:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 13,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1846:8:0"
									},
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1822:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "1814:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 10,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1814:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1813:17:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1855:0:0"
									},
									"scope": 22,
									"src": "1800:92:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 23,
							"src": "1563:331:0",
							"usedErrors": [
								1838,
								1841,
								1844,
								1847,
								1850,
								1853,
								1856,
								1859,
								1862,
								1865,
								1868,
								1871,
								1874
							],
							"usedEvents": [
								1906,
								1915,
								1924,
								2037
							]
						}
					],
					"src": "1374:521:0"
				},
				"id": 0
			},
			"Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/IERC721ABurnable.sol": {
				"ast": {
					"absolutePath": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)//extensions/IERC721ABurnable.sol",
					"exportedSymbols": {
						"IERC721A": [
							2038
						],
						"IERC721ABurnable": [
							35
						]
					},
					"id": 36,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 24,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "1374:23:1"
						},
						{
							"absolutePath": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)/IERC721A.sol",
							"file": "../IERC721A.sol",
							"id": 25,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 36,
							"sourceUnit": 2039,
							"src": "1399:25:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 27,
										"name": "IERC721A",
										"nameLocations": [
											"1502:8:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2038,
										"src": "1502:8:1"
									},
									"id": 28,
									"nodeType": "InheritanceSpecifier",
									"src": "1502:8:1"
								}
							],
							"canonicalName": "IERC721ABurnable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 26,
								"nodeType": "StructuredDocumentation",
								"src": "1426:45:1",
								"text": " @dev Interface of ERC721ABurnable."
							},
							"fullyImplemented": false,
							"id": 35,
							"linearizedBaseContracts": [
								35,
								2038
							],
							"name": "IERC721ABurnable",
							"nameLocation": "1482:16:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "1517:163:1",
										"text": " @dev Burns `tokenId`. See {ERC721A-_burn}.\n Requirements:\n - The caller must own `tokenId` or be an approved operator."
									},
									"functionSelector": "42966c68",
									"id": 34,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "1694:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1707:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "1699:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 30,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:17:1"
									},
									"returnParameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1724:0:1"
									},
									"scope": 35,
									"src": "1685:40:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 36,
							"src": "1472:255:1",
							"usedErrors": [
								1838,
								1841,
								1844,
								1847,
								1850,
								1853,
								1856,
								1859,
								1862,
								1865,
								1868,
								1871,
								1874
							],
							"usedEvents": [
								1906,
								1915,
								1924,
								2037
							]
						}
					],
					"src": "1374:354:1"
				},
				"id": 1
			},
			"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol": {
				"ast": {
					"absolutePath": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)/ERC721A.sol",
					"exportedSymbols": {
						"ERC721A": [
							1832
						],
						"ERC721A__IERC721Receiver": [
							53
						],
						"IERC721A": [
							2038
						]
					},
					"id": 1833,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 37,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "1374:23:2"
						},
						{
							"absolutePath": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)/IERC721A.sol",
							"file": "./IERC721A.sol",
							"id": 38,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1833,
							"sourceUnit": 2039,
							"src": "1399:24:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC721A__IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 39,
								"nodeType": "StructuredDocumentation",
								"src": "1425:51:2",
								"text": " @dev Interface of ERC721 token receiver."
							},
							"fullyImplemented": false,
							"id": 53,
							"linearizedBaseContracts": [
								53
							],
							"name": "ERC721A__IERC721Receiver",
							"nameLocation": "1487:24:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "150b7a02",
									"id": 52,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "1527:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1561:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "1553:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 40,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1553:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1587:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "1579:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 42,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1579:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1609:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "1601:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 44,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1601:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1641:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "1626:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 46,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1626:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1543:108:2"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 50,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 52,
												"src": "1670:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 49,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1670:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1669:8:2"
									},
									"scope": 53,
									"src": "1518:160:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1833,
							"src": "1477:203:2",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 55,
										"name": "IERC721A",
										"nameLocations": [
											"2205:8:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2038,
										"src": "2205:8:2"
									},
									"id": 56,
									"nodeType": "InheritanceSpecifier",
									"src": "2205:8:2"
								}
							],
							"canonicalName": "ERC721A",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 54,
								"nodeType": "StructuredDocumentation",
								"src": "1682:502:2",
								"text": " @title ERC721A\n @dev Implementation of the [ERC721](https://eips.ethereum.org/EIPS/eip-721)\n Non-Fungible Token Standard, including the Metadata extension.\n Optimized for lower gas during batch mints.\n Token IDs are minted in sequential order (e.g. 0, 1, 2, 3, ...)\n starting from `_startTokenId()`.\n Assumptions:\n - An owner cannot have more than 2**64 - 1 (max value of uint64) of supply.\n - The maximum token ID cannot exceed 2**256 - 1 (max value of uint256)."
							},
							"fullyImplemented": true,
							"id": 1832,
							"linearizedBaseContracts": [
								1832,
								2038
							],
							"name": "ERC721A",
							"nameLocation": "2194:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "ERC721A.TokenApprovalRef",
									"id": 59,
									"members": [
										{
											"constant": false,
											"id": 58,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "2347:5:2",
											"nodeType": "VariableDeclaration",
											"scope": 59,
											"src": "2339:13:2",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 57,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2339:7:2",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenApprovalRef",
									"nameLocation": "2312:16:2",
									"nodeType": "StructDefinition",
									"scope": 1832,
									"src": "2305:54:2",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 67,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS_DATA_ENTRY",
									"nameLocation": "2620:27:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "2595:68:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 60,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2595:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										},
										"id": 66,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													},
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 61,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2651:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "3634",
														"id": 62,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2656:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_64_by_1",
															"typeString": "int_const 64"
														},
														"value": "64"
													},
													"src": "2651:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18446744073709551616_by_1",
														"typeString": "int_const 18446744073709551616"
													}
												}
											],
											"id": 64,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "2650:9:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_18446744073709551616_by_1",
												"typeString": "int_const 18446744073709551616"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 65,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "2662:1:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "2650:13:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18446744073709551615_by_1",
											"typeString": "int_const 18446744073709551615"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 70,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_MINTED",
									"nameLocation": "2761:21:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "2736:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 68,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2736:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3634",
										"id": 69,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2785:2:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_64_by_1",
											"typeString": "int_const 64"
										},
										"value": "64"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 73,
									"mutability": "constant",
									"name": "_BITPOS_NUMBER_BURNED",
									"nameLocation": "2885:21:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "2860:52:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 71,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2860:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313238",
										"id": 72,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2909:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_128_by_1",
											"typeString": "int_const 128"
										},
										"value": "128"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 76,
									"mutability": "constant",
									"name": "_BITPOS_AUX",
									"nameLocation": "3001:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "2976:42:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 74,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2976:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313932",
										"id": 75,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3015:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_192_by_1",
											"typeString": "int_const 192"
										},
										"value": "192"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 84,
									"mutability": "constant",
									"name": "_BITMASK_AUX_COMPLEMENT",
									"nameLocation": "3131:23:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "3106:65:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 77,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3106:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										},
										"id": 83,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 78,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3158:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313932",
														"id": 79,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3163:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_192_by_1",
															"typeString": "int_const 192"
														},
														"value": "192"
													},
													"src": "3158:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
														"typeString": "int_const 6277...(50 digits omitted)...2896"
													}
												}
											],
											"id": 81,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "3157:10:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512896_by_1",
												"typeString": "int_const 6277...(50 digits omitted)...2896"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 82,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3170:1:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "3157:14:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6277101735386680763835789423207666416102355444464034512895_by_1",
											"typeString": "int_const 6277...(50 digits omitted)...2895"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 87,
									"mutability": "constant",
									"name": "_BITPOS_START_TIMESTAMP",
									"nameLocation": "3268:23:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "3243:54:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 85,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3243:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "313630",
										"id": 86,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3294:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_160_by_1",
											"typeString": "int_const 160"
										},
										"value": "160"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 92,
									"mutability": "constant",
									"name": "_BITMASK_BURNED",
									"nameLocation": "3390:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "3365:51:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 88,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3365:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										},
										"id": 91,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 89,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3408:1:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323234",
											"id": 90,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3413:3:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_224_by_1",
												"typeString": "int_const 224"
											},
											"value": "224"
										},
										"src": "3408:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_26959946667150639794667015087019630673637144422540572481103610249216_by_1",
											"typeString": "int_const 2695...(60 digits omitted)...9216"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 95,
									"mutability": "constant",
									"name": "_BITPOS_NEXT_INITIALIZED",
									"nameLocation": "3522:24:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "3497:55:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 93,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3497:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323235",
										"id": 94,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3549:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_225_by_1",
											"typeString": "int_const 225"
										},
										"value": "225"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 100,
									"mutability": "constant",
									"name": "_BITMASK_NEXT_INITIALIZED",
									"nameLocation": "3654:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "3629:61:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 96,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3629:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										},
										"id": 99,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "31",
											"id": 97,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3682:1:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"nodeType": "BinaryOperation",
										"operator": "<<",
										"rightExpression": {
											"hexValue": "323235",
											"id": 98,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3687:3:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_225_by_1",
												"typeString": "int_const 225"
											},
											"value": "225"
										},
										"src": "3682:8:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_53919893334301279589334030174039261347274288845081144962207220498432_by_1",
											"typeString": "int_const 5391...(60 digits omitted)...8432"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 103,
									"mutability": "constant",
									"name": "_BITPOS_EXTRA_DATA",
									"nameLocation": "3782:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "3757:49:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 101,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3757:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "323332",
										"id": 102,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3803:3:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_232_by_1",
											"typeString": "int_const 232"
										},
										"value": "232"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 111,
									"mutability": "constant",
									"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
									"nameLocation": "3924:30:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "3899:72:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 104,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "3899:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										},
										"id": 110,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													},
													"id": 107,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 105,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3958:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "323332",
														"id": 106,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3963:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_232_by_1",
															"typeString": "int_const 232"
														},
														"value": "232"
													},
													"src": "3958:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
														"typeString": "int_const 6901...(62 digits omitted)...9296"
													}
												}
											],
											"id": 108,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "3957:10:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799296_by_1",
												"typeString": "int_const 6901...(62 digits omitted)...9296"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 109,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3970:1:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "3957:14:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_6901746346790563787434755862277025452451108972170386555162524223799295_by_1",
											"typeString": "int_const 6901...(62 digits omitted)...9295"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 119,
									"mutability": "constant",
									"name": "_BITMASK_ADDRESS",
									"nameLocation": "4056:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "4031:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 112,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4031:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										},
										"id": 118,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"components": [
												{
													"commonType": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 113,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4076:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"hexValue": "313630",
														"id": 114,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4081:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_160_by_1",
															"typeString": "int_const 160"
														},
														"value": "160"
													},
													"src": "4076:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
														"typeString": "int_const 1461...(41 digits omitted)...2976"
													}
												}
											],
											"id": 116,
											"isConstant": false,
											"isInlineArray": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "TupleExpression",
											"src": "4075:10:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542976_by_1",
												"typeString": "int_const 1461...(41 digits omitted)...2976"
											}
										},
										"nodeType": "BinaryOperation",
										"operator": "-",
										"rightExpression": {
											"hexValue": "31",
											"id": 117,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "4088:1:2",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1_by_1",
												"typeString": "int_const 1"
											},
											"value": "1"
										},
										"src": "4075:14:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1461501637330902918203684832716283019655932542975_by_1",
											"typeString": "int_const 1461...(41 digits omitted)...2975"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 122,
									"mutability": "constant",
									"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
									"nameLocation": "4397:32:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "4372:64:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 120,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4372:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "35303030",
										"id": 121,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4432:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_5000_by_1",
											"typeString": "int_const 5000"
										},
										"value": "5000"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 125,
									"mutability": "constant",
									"name": "_TRANSFER_EVENT_SIGNATURE",
									"nameLocation": "4583:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "4558:127:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 123,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4558:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307864646632353261643162653263383962363963326230363866633337386461613935326261376631363363346131313632386635356134646635323362336566",
										"id": 124,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4619:66:2",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_100389287136786176327247604509743168900146139575972864366142685224231313322991_by_1",
											"typeString": "int_const 1003...(70 digits omitted)...2991"
										},
										"value": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 127,
									"mutability": "mutable",
									"name": "_currentIndex",
									"nameLocation": "4928:13:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "4912:29:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 126,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4912:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 129,
									"mutability": "mutable",
									"name": "_burnCounter",
									"nameLocation": "5000:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "4984:28:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 128,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "4984:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 131,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "5052:5:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "5037:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 130,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5037:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 133,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "5099:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "5084:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 132,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "5084:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 137,
									"mutability": "mutable",
									"name": "_packedOwnerships",
									"nameLocation": "5526:17:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "5490:53:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 136,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 134,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5498:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "5490:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 135,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5509:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 141,
									"mutability": "mutable",
									"name": "_packedAddressData",
									"nameLocation": "5785:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "5749:54:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 140,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 138,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5757:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5749:27:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 139,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5768:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 146,
									"mutability": "mutable",
									"name": "_tokenApprovals",
									"nameLocation": "5905:15:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "5860:60:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$59_storage_$",
										"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
									},
									"typeName": {
										"id": 145,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 142,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5868:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "5860:36:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$59_storage_$",
											"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 144,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 143,
												"name": "TokenApprovalRef",
												"nameLocations": [
													"5879:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 59,
												"src": "5879:16:2"
											},
											"referencedDeclaration": 59,
											"src": "5879:16:2",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_TokenApprovalRef_$59_storage_ptr",
												"typeString": "struct ERC721A.TokenApprovalRef"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 152,
									"mutability": "mutable",
									"name": "_operatorApprovals",
									"nameLocation": "6028:18:2",
									"nodeType": "VariableDeclaration",
									"scope": 1832,
									"src": "5975:71:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(address => mapping(address => bool))"
									},
									"typeName": {
										"id": 151,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 147,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5983:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5975:44:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(address => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 150,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 148,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "6002:7:2",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "5994:24:2",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 149,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "6013:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 172,
										"nodeType": "Block",
										"src": "6292:98:2",
										"statements": [
											{
												"expression": {
													"id": 161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 159,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 131,
														"src": "6302:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 160,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 154,
														"src": "6310:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6302:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 162,
												"nodeType": "ExpressionStatement",
												"src": "6302:13:2"
											},
											{
												"expression": {
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 163,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "6325:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 164,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "6335:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "6325:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 166,
												"nodeType": "ExpressionStatement",
												"src": "6325:17:2"
											},
											{
												"expression": {
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 167,
														"name": "_currentIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 127,
														"src": "6352:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 168,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "6368:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 169,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6368:15:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6352:31:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "6352:31:2"
											}
										]
									},
									"id": 173,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "6262:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "6248:19:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 153,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6248:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "6283:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 173,
												"src": "6269:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 155,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6269:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6247:44:2"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6292:0:2"
									},
									"scope": 1832,
									"src": "6236:154:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 181,
										"nodeType": "Block",
										"src": "6781:25:2",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 179,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6798:1:2",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 178,
												"id": 180,
												"nodeType": "Return",
												"src": "6791:8:2"
											}
										]
									},
									"documentation": {
										"id": 174,
										"nodeType": "StructuredDocumentation",
										"src": "6586:125:2",
										"text": " @dev Returns the starting token ID.\n To change the starting token ID, please override this function."
									},
									"id": 182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_startTokenId",
									"nameLocation": "6725:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 175,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6738:2:2"
									},
									"returnParameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "6772:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 176,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6772:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6771:9:2"
									},
									"scope": 1832,
									"src": "6716:90:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 190,
										"nodeType": "Block",
										"src": "6944:37:2",
										"statements": [
											{
												"expression": {
													"id": 188,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 127,
													"src": "6961:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 187,
												"id": 189,
												"nodeType": "Return",
												"src": "6954:20:2"
											}
										]
									},
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "6812:63:2",
										"text": " @dev Returns the next token ID to be minted."
									},
									"id": 191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextTokenId",
									"nameLocation": "6889:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 184,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6901:2:2"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "6935:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6935:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6934:9:2"
									},
									"scope": 1832,
									"src": "6880:101:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1889
									],
									"body": {
										"id": 206,
										"nodeType": "Block",
										"src": "7254:247:2",
										"statements": [
											{
												"id": 205,
												"nodeType": "UncheckedBlock",
												"src": "7407:88:2",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 200,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 198,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 127,
																	"src": "7438:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 199,
																	"name": "_burnCounter",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 129,
																	"src": "7454:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7438:28:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 201,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 182,
																	"src": "7469:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 202,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7469:15:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7438:46:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 197,
														"id": 204,
														"nodeType": "Return",
														"src": "7431:53:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "6987:192:2",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 207,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "7193:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 194,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7227:8:2"
									},
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7204:2:2"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 207,
												"src": "7245:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7245:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7244:9:2"
									},
									"scope": 1832,
									"src": "7184:317:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 219,
										"nodeType": "Block",
										"src": "7658:226:2",
										"statements": [
											{
												"id": 218,
												"nodeType": "UncheckedBlock",
												"src": "7805:73:2",
												"statements": [
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 216,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 213,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 127,
																"src": "7836:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 214,
																	"name": "_startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 182,
																	"src": "7852:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																		"typeString": "function () view returns (uint256)"
																	}
																},
																"id": 215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7852:15:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7836:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 212,
														"id": 217,
														"nodeType": "Return",
														"src": "7829:38:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 208,
										"nodeType": "StructuredDocumentation",
										"src": "7507:82:2",
										"text": " @dev Returns the total amount of tokens minted in the contract."
									},
									"id": 220,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalMinted",
									"nameLocation": "7603:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7615:2:2"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 220,
												"src": "7649:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7649:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7648:9:2"
									},
									"scope": 1832,
									"src": "7594:290:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 228,
										"nodeType": "Block",
										"src": "8025:36:2",
										"statements": [
											{
												"expression": {
													"id": 226,
													"name": "_burnCounter",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 129,
													"src": "8042:12:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 225,
												"id": 227,
												"nodeType": "Return",
												"src": "8035:19:2"
											}
										]
									},
									"documentation": {
										"id": 221,
										"nodeType": "StructuredDocumentation",
										"src": "7890:66:2",
										"text": " @dev Returns the total number of tokens burned."
									},
									"id": 229,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_totalBurned",
									"nameLocation": "7970:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7982:2:2"
									},
									"returnParameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 229,
												"src": "8016:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8015:9:2"
									},
									"scope": 1832,
									"src": "7961:100:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1932
									],
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "8416:158:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 238,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "8430:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 241,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8447:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8439:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 239,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8439:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 242,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8439:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8430:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 249,
												"nodeType": "IfStatement",
												"src": "8426:69:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 245,
																	"name": "BalanceQueryForZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1844,
																	"src": "8459:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 246,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8486:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "8459:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 244,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "8451:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 247,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8451:44:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 248,
													"nodeType": "ExpressionStatement",
													"src": "8451:44:2"
												}
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 254,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 250,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "8512:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 252,
														"indexExpression": {
															"id": 251,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "8531:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "8512:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 253,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "8540:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8512:55:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 237,
												"id": 255,
												"nodeType": "Return",
												"src": "8505:62:2"
											}
										]
									},
									"documentation": {
										"id": 230,
										"nodeType": "StructuredDocumentation",
										"src": "8256:74:2",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "8344:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 234,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "8389:8:2"
									},
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8362:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "8354:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8354:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8353:15:2"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "8407:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8407:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8406:9:2"
									},
									"scope": 1832,
									"src": "8335:239:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 274,
										"nodeType": "Block",
										"src": "8721:106:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 269,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 265,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 141,
																		"src": "8739:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 267,
																	"indexExpression": {
																		"id": 266,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 260,
																		"src": "8758:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "8739:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 268,
																	"name": "_BITPOS_NUMBER_MINTED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 70,
																	"src": "8768:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "8739:50:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 270,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8738:52:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 271,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "8793:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8738:82:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 264,
												"id": 273,
												"nodeType": "Return",
												"src": "8731:89:2"
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "8580:66:2",
										"text": " Returns the number of tokens minted by `owner`."
									},
									"id": 275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberMinted",
									"nameLocation": "8660:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8682:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "8674:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8674:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8673:15:2"
									},
									"returnParameters": {
										"id": 264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "8712:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8712:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8711:9:2"
									},
									"scope": 1832,
									"src": "8651:176:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 292,
										"nodeType": "Block",
										"src": "8990:106:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 287,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 283,
																		"name": "_packedAddressData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 141,
																		"src": "9008:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 285,
																	"indexExpression": {
																		"id": 284,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 278,
																		"src": "9027:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "9008:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 286,
																	"name": "_BITPOS_NUMBER_BURNED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 73,
																	"src": "9037:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "9008:50:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 288,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9007:52:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 289,
														"name": "_BITMASK_ADDRESS_DATA_ENTRY",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 67,
														"src": "9062:27:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9007:82:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 282,
												"id": 291,
												"nodeType": "Return",
												"src": "9000:89:2"
											}
										]
									},
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "8833:82:2",
										"text": " Returns the number of tokens burned by or on behalf of `owner`."
									},
									"id": 293,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_numberBurned",
									"nameLocation": "8929:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8951:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "8943:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8943:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8942:15:2"
									},
									"returnParameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 293,
												"src": "8981:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8981:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8980:9:2"
									},
									"scope": 1832,
									"src": "8920:176:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "9272:72:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 303,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "9296:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 305,
																"indexExpression": {
																	"id": 304,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "9315:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9296:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 306,
																"name": "_BITPOS_AUX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 76,
																"src": "9325:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9296:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 302,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9289:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 301,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "9289:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9289:48:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 300,
												"id": 309,
												"nodeType": "Return",
												"src": "9282:55:2"
											}
										]
									},
									"documentation": {
										"id": 294,
										"nodeType": "StructuredDocumentation",
										"src": "9102:102:2",
										"text": " Returns the auxiliary data for `owner`. (e.g. number of whitelist mint slots used)."
									},
									"id": 311,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAux",
									"nameLocation": "9218:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9234:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "9226:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9226:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9225:15:2"
									},
									"returnParameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 299,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 311,
												"src": "9264:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 298,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "9264:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9263:8:2"
									},
									"scope": 1832,
									"src": "9209:135:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "9587:334:2",
										"statements": [
											{
												"assignments": [
													320
												],
												"declarations": [
													{
														"constant": false,
														"id": 320,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "9605:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "9597:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 319,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9597:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 324,
												"initialValue": {
													"baseExpression": {
														"id": 321,
														"name": "_packedAddressData",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 141,
														"src": "9614:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 323,
													"indexExpression": {
														"id": 322,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "9633:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "9614:25:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9597:42:2"
											},
											{
												"assignments": [
													326
												],
												"declarations": [
													{
														"constant": false,
														"id": 326,
														"mutability": "mutable",
														"name": "auxCasted",
														"nameLocation": "9657:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 347,
														"src": "9649:17:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 325,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9649:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 327,
												"nodeType": "VariableDeclarationStatement",
												"src": "9649:17:2"
											},
											{
												"AST": {
													"nativeSrc": "9749:40:2",
													"nodeType": "YulBlock",
													"src": "9749:40:2",
													"statements": [
														{
															"nativeSrc": "9763:16:2",
															"nodeType": "YulAssignment",
															"src": "9763:16:2",
															"value": {
																"name": "aux",
																"nativeSrc": "9776:3:2",
																"nodeType": "YulIdentifier",
																"src": "9776:3:2"
															},
															"variableNames": [
																{
																	"name": "auxCasted",
																	"nativeSrc": "9763:9:2",
																	"nodeType": "YulIdentifier",
																	"src": "9763:9:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 316,
														"isOffset": false,
														"isSlot": false,
														"src": "9776:3:2",
														"valueSize": 1
													},
													{
														"declaration": 326,
														"isOffset": false,
														"isSlot": false,
														"src": "9763:9:2",
														"valueSize": 1
													}
												],
												"id": 328,
												"nodeType": "InlineAssembly",
												"src": "9740:49:2"
											},
											{
												"expression": {
													"id": 339,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 329,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 320,
														"src": "9798:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 338,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 330,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 320,
																		"src": "9808:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 331,
																		"name": "_BITMASK_AUX_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 84,
																		"src": "9817:23:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9808:32:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 333,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9807:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 336,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 334,
																		"name": "auxCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 326,
																		"src": "9845:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 335,
																		"name": "_BITPOS_AUX",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 76,
																		"src": "9858:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "9845:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 337,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "9844:26:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9807:63:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9798:72:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 340,
												"nodeType": "ExpressionStatement",
												"src": "9798:72:2"
											},
											{
												"expression": {
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 341,
															"name": "_packedAddressData",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 141,
															"src": "9880:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 343,
														"indexExpression": {
															"id": 342,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 314,
															"src": "9899:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9880:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 344,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 320,
														"src": "9908:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9880:34:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "9880:34:2"
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "9350:171:2",
										"text": " Sets the auxiliary data for `owner`. (e.g. number of whitelist mint slots used).\n If there are multiple variables, please pack them into a uint64."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAux",
									"nameLocation": "9535:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9551:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "9543:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9543:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "aux",
												"nameLocation": "9565:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 348,
												"src": "9558:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 315,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "9558:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9542:27:2"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9587:0:2"
									},
									"scope": 1832,
									"src": "9526:395:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1897
									],
									"body": {
										"id": 369,
										"nodeType": "Block",
										"src": "10545:539:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 363,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 359,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 357,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "10857:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783031666663396137",
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10872:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_33540519_by_1",
																	"typeString": "int_const 33540519"
																},
																"value": "0x01ffc9a7"
															},
															"src": "10857:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 360,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 351,
																"src": "10933:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30783830616335386364",
																"id": 361,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10948:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2158778573_by_1",
																	"typeString": "int_const 2158778573"
																},
																"value": "0x80ac58cd"
															},
															"src": "10933:25:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "10857:101:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 366,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 364,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 351,
															"src": "11009:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30783562356531333966",
															"id": 365,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11024:10:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1532892063_by_1",
																"typeString": "int_const 1532892063"
															},
															"value": "0x5b5e139f"
														},
														"src": "11009:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "10857:177:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 356,
												"id": 368,
												"nodeType": "Return",
												"src": "10838:196:2"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "10108:341:2",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 370,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "10463:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 353,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "10521:8:2"
									},
									"parameters": {
										"id": 352,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 351,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "10488:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "10481:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 350,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "10481:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10480:20:2"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 370,
												"src": "10539:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 354,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "10539:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10538:6:2"
									},
									"scope": 1832,
									"src": "10454:630:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2012
									],
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "11407:29:2",
										"statements": [
											{
												"expression": {
													"id": 377,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 131,
													"src": "11424:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 376,
												"id": 378,
												"nodeType": "Return",
												"src": "11417:12:2"
											}
										]
									},
									"documentation": {
										"id": 371,
										"nodeType": "StructuredDocumentation",
										"src": "11275:58:2",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "11347:4:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 373,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11374:8:2"
									},
									"parameters": {
										"id": 372,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11351:2:2"
									},
									"returnParameters": {
										"id": 376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 375,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "11392:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 374,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11392:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11391:15:2"
									},
									"scope": 1832,
									"src": "11338:98:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2018
									],
									"body": {
										"id": 389,
										"nodeType": "Block",
										"src": "11578:31:2",
										"statements": [
											{
												"expression": {
													"id": 387,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 133,
													"src": "11595:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 386,
												"id": 388,
												"nodeType": "Return",
												"src": "11588:14:2"
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "11442:60:2",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 390,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "11516:6:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 383,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11545:8:2"
									},
									"parameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11522:2:2"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "11563:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 384,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11563:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11562:15:2"
									},
									"scope": 1832,
									"src": "11507:102:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2026
									],
									"body": {
										"id": 434,
										"nodeType": "Block",
										"src": "11798:234:2",
										"statements": [
											{
												"condition": {
													"id": 402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "11812:17:2",
													"subExpression": {
														"arguments": [
															{
																"id": 400,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 393,
																"src": "11821:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 399,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "11813:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 401,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11813:16:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 408,
												"nodeType": "IfStatement",
												"src": "11808:68:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 404,
																	"name": "URIQueryForNonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1868,
																	"src": "11839:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11867:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "11839:36:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 403,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "11831:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 406,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11831:45:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 407,
													"nodeType": "ExpressionStatement",
													"src": "11831:45:2"
												}
											},
											{
												"assignments": [
													410
												],
												"declarations": [
													{
														"constant": false,
														"id": 410,
														"mutability": "mutable",
														"name": "baseURI",
														"nameLocation": "11901:7:2",
														"nodeType": "VariableDeclaration",
														"scope": 434,
														"src": "11887:21:2",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string"
														},
														"typeName": {
															"id": 409,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "11887:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_string_storage_ptr",
																"typeString": "string"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 413,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 411,
														"name": "_baseURI",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 444,
														"src": "11911:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_string_memory_ptr_$",
															"typeString": "function () view returns (string memory)"
														}
													},
													"id": 412,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11911:10:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11887:34:2"
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 416,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 410,
																		"src": "11944:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 415,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11938:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 414,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "11938:5:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 417,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11938:14:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11953:6:2",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "11938:21:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11963:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "11938:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"hexValue": "",
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12023:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
															"typeString": "literal_string \"\""
														},
														"value": ""
													},
													"id": 432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "11938:87:2",
													"trueExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 425,
																		"name": "baseURI",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 410,
																		"src": "11991:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 427,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 393,
																				"src": "12010:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 426,
																			"name": "_toString",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1823,
																			"src": "12000:9:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																				"typeString": "function (uint256) pure returns (string memory)"
																			}
																		},
																		"id": 428,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "12000:18:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		},
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"expression": {
																		"id": 423,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967295,
																		"src": "11974:3:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 424,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "11978:12:2",
																	"memberName": "encodePacked",
																	"nodeType": "MemberAccess",
																	"src": "11974:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11974:45:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 422,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11967:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																"typeString": "type(string storage pointer)"
															},
															"typeName": {
																"id": 421,
																"name": "string",
																"nodeType": "ElementaryTypeName",
																"src": "11967:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 430,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11967:53:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 398,
												"id": 433,
												"nodeType": "Return",
												"src": "11931:94:2"
											}
										]
									},
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "11615:90:2",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "11719:8:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 395,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "11765:8:2"
									},
									"parameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "11736:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "11728:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11728:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11727:17:2"
									},
									"returnParameters": {
										"id": 398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 435,
												"src": "11783:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 396,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "11783:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11782:15:2"
									},
									"scope": 1832,
									"src": "11710:322:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 443,
										"nodeType": "Block",
										"src": "12343:26:2",
										"statements": [
											{
												"expression": {
													"hexValue": "",
													"id": 441,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12360:2:2",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"functionReturnParameters": 440,
												"id": 442,
												"nodeType": "Return",
												"src": "12353:9:2"
											}
										]
									},
									"documentation": {
										"id": 436,
										"nodeType": "StructuredDocumentation",
										"src": "12038:234:2",
										"text": " @dev Base URI for computing {tokenURI}. If set, the resulting URI for each\n token will be the concatenation of the `baseURI` and the `tokenId`. Empty\n by default, it can be overridden in child contracts."
									},
									"id": 444,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_baseURI",
									"nameLocation": "12286:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12294:2:2"
									},
									"returnParameters": {
										"id": 440,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 439,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 444,
												"src": "12328:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 438,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "12328:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12327:15:2"
									},
									"scope": 1832,
									"src": "12277:92:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1940
									],
									"body": {
										"id": 463,
										"nodeType": "Block",
										"src": "12780:69:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 458,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 447,
																			"src": "12832:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 457,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 609,
																		"src": "12813:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 459,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "12813:27:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 456,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12805:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 455,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "12805:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12805:36:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 454,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12797:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 453,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "12797:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12797:45:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 452,
												"id": 462,
												"nodeType": "Return",
												"src": "12790:52:2"
											}
										]
									},
									"documentation": {
										"id": 445,
										"nodeType": "StructuredDocumentation",
										"src": "12563:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 464,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "12708:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 449,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "12753:8:2"
									},
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 447,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "12724:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "12716:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12716:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12715:17:2"
									},
									"returnParameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "12771:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12771:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12770:9:2"
									},
									"scope": 1832,
									"src": "12699:150:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "13125:71:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 475,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 467,
																	"src": "13180:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 474,
																"name": "_packedOwnershipOf",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 609,
																"src": "13161:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) view returns (uint256)"
																}
															},
															"id": 476,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13161:27:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 473,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "13142:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$1883_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13142:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1883_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 472,
												"id": 478,
												"nodeType": "Return",
												"src": "13135:54:2"
											}
										]
									},
									"documentation": {
										"id": 465,
										"nodeType": "StructuredDocumentation",
										"src": "12855:172:2",
										"text": " @dev Gas spent here starts off proportional to the maximum mint batch size.\n It gradually moves to O(1) as tokens get transferred around over time."
									},
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipOf",
									"nameLocation": "13041:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "13062:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "13054:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13054:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13053:17:2"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "13102:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1883_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 470,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 469,
														"name": "TokenOwnership",
														"nameLocations": [
															"13102:14:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1883,
														"src": "13102:14:2"
													},
													"referencedDeclaration": 1883,
													"src": "13102:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1883_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13101:23:2"
									},
									"scope": 1832,
									"src": "13032:164:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "13378:68:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 490,
																"name": "_packedOwnerships",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "13414:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 492,
															"indexExpression": {
																"id": 491,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 483,
																"src": "13432:5:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "13414:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 489,
														"name": "_unpackedOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 663,
														"src": "13395:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_TokenOwnership_$1883_memory_ptr_$",
															"typeString": "function (uint256) pure returns (struct IERC721A.TokenOwnership memory)"
														}
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13395:44:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1883_memory_ptr",
														"typeString": "struct IERC721A.TokenOwnership memory"
													}
												},
												"functionReturnParameters": 488,
												"id": 494,
												"nodeType": "Return",
												"src": "13388:51:2"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "13202:80:2",
										"text": " @dev Returns the unpacked `TokenOwnership` struct at `index`."
									},
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipAt",
									"nameLocation": "13296:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "13317:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "13309:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13309:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13308:15:2"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "13355:21:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1883_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 486,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 485,
														"name": "TokenOwnership",
														"nameLocations": [
															"13355:14:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1883,
														"src": "13355:14:2"
													},
													"referencedDeclaration": 1883,
													"src": "13355:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1883_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13354:23:2"
									},
									"scope": 1832,
									"src": "13287:159:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 510,
										"nodeType": "Block",
										"src": "13710:53:2",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 504,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "13727:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 506,
														"indexExpression": {
															"id": 505,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "13745:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13727:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13755:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13727:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 503,
												"id": 509,
												"nodeType": "Return",
												"src": "13720:36:2"
											}
										]
									},
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "13452:168:2",
										"text": " @dev Returns whether the ownership slot at `index` is initialized.\n An uninitialized slot does not necessarily mean that the slot has no owner."
									},
									"id": 511,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_ownershipIsInitialized",
									"nameLocation": "13634:23:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "13666:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "13658:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 498,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13658:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13657:15:2"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 511,
												"src": "13704:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 501,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "13704:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13703:6:2"
									},
									"scope": 1832,
									"src": "13625:138:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 532,
										"nodeType": "Block",
										"src": "13935:128:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 517,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "13949:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 519,
														"indexExpression": {
															"id": 518,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 514,
															"src": "13967:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "13949:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 520,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13977:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13949:29:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 531,
												"nodeType": "IfStatement",
												"src": "13945:112:2",
												"trueBody": {
													"id": 530,
													"nodeType": "Block",
													"src": "13980:77:2",
													"statements": [
														{
															"expression": {
																"id": 528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 522,
																		"name": "_packedOwnerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "13994:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 524,
																	"indexExpression": {
																		"id": 523,
																		"name": "index",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 514,
																		"src": "14012:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "13994:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"arguments": [
																		{
																			"id": 526,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 514,
																			"src": "14040:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 525,
																		"name": "_packedOwnershipOf",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 609,
																		"src": "14021:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) view returns (uint256)"
																		}
																	},
																	"id": 527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "14021:25:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "13994:52:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 529,
															"nodeType": "ExpressionStatement",
															"src": "13994:52:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 512,
										"nodeType": "StructuredDocumentation",
										"src": "13769:97:2",
										"text": " @dev Initializes the ownership slot minted at `index` for efficiency purposes."
									},
									"id": 533,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_initializeOwnershipAt",
									"nameLocation": "13880:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "13911:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 533,
												"src": "13903:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 513,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13903:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13902:15:2"
									},
									"returnParameters": {
										"id": 516,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13935:0:2"
									},
									"scope": 1832,
									"src": "13871:192:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "14223:1895:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 541,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "14237:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 542,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14237:15:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 543,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 536,
														"src": "14256:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14237:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 602,
												"nodeType": "IfStatement",
												"src": "14233:1822:2",
												"trueBody": {
													"id": 601,
													"nodeType": "Block",
													"src": "14265:1790:2",
													"statements": [
														{
															"expression": {
																"id": 549,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 545,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 539,
																	"src": "14279:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 546,
																		"name": "_packedOwnerships",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 137,
																		"src": "14288:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 548,
																	"indexExpression": {
																		"id": 547,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 536,
																		"src": "14306:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "14288:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "14279:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 550,
															"nodeType": "ExpressionStatement",
															"src": "14279:35:2"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 553,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 551,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 539,
																	"src": "14412:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 552,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14422:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "14412:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 592,
															"nodeType": "IfStatement",
															"src": "14408:1270:2",
															"trueBody": {
																"id": 591,
																"nodeType": "Block",
																"src": "14425:1253:2",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 554,
																				"name": "tokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 536,
																				"src": "14447:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">=",
																			"rightExpression": {
																				"id": 555,
																				"name": "_currentIndex",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 127,
																				"src": "14458:13:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "14447:24:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 562,
																		"nodeType": "IfStatement",
																		"src": "14443:77:2",
																		"trueBody": {
																			"expression": {
																				"arguments": [
																					{
																						"expression": {
																							"id": 558,
																							"name": "OwnerQueryForNonexistentToken",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1853,
																							"src": "14481:29:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																								"typeString": "function () pure returns (error)"
																							}
																						},
																						"id": 559,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "14511:8:2",
																						"memberName": "selector",
																						"nodeType": "MemberAccess",
																						"src": "14481:38:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes4",
																							"typeString": "bytes4"
																						}
																					],
																					"id": 557,
																					"name": "_revert",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1831,
																					"src": "14473:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																						"typeString": "function (bytes4) pure"
																					}
																				},
																				"id": 560,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14473:47:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$__$",
																					"typeString": "tuple()"
																				}
																			},
																			"id": 561,
																			"nodeType": "ExpressionStatement",
																			"src": "14473:47:2"
																		}
																	},
																	{
																		"body": {
																			"id": 589,
																			"nodeType": "Block",
																			"src": "15076:588:2",
																			"statements": [
																				{
																					"id": 570,
																					"nodeType": "UncheckedBlock",
																					"src": "15098:96:2",
																					"statements": [
																						{
																							"expression": {
																								"id": 568,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"id": 563,
																									"name": "packed",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 539,
																									"src": "15134:6:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"baseExpression": {
																										"id": 564,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 137,
																										"src": "15143:17:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 567,
																									"indexExpression": {
																										"id": 566,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"nodeType": "UnaryOperation",
																										"operator": "--",
																										"prefix": true,
																										"src": "15161:9:2",
																										"subExpression": {
																											"id": 565,
																											"name": "tokenId",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 536,
																											"src": "15163:7:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_uint256",
																												"typeString": "uint256"
																											}
																										},
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "15143:28:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "15134:37:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 569,
																							"nodeType": "ExpressionStatement",
																							"src": "15134:37:2"
																						}
																					]
																				},
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 573,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"id": 571,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 539,
																							"src": "15219:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 572,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "15229:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "15219:11:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 575,
																					"nodeType": "IfStatement",
																					"src": "15215:25:2",
																					"trueBody": {
																						"id": 574,
																						"nodeType": "Continue",
																						"src": "15232:8:2"
																					}
																				},
																				{
																					"condition": {
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 580,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"commonType": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							},
																							"id": 578,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"leftExpression": {
																								"id": 576,
																								"name": "packed",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 539,
																								"src": "15266:6:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"nodeType": "BinaryOperation",
																							"operator": "&",
																							"rightExpression": {
																								"id": 577,
																								"name": "_BITMASK_BURNED",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 92,
																								"src": "15275:15:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"src": "15266:24:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "==",
																						"rightExpression": {
																							"hexValue": "30",
																							"id": 579,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "15294:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						},
																						"src": "15266:29:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 583,
																					"nodeType": "IfStatement",
																					"src": "15262:48:2",
																					"trueBody": {
																						"expression": {
																							"id": 581,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 539,
																							"src": "15304:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"functionReturnParameters": 540,
																						"id": 582,
																						"nodeType": "Return",
																						"src": "15297:13:2"
																					}
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"expression": {
																									"id": 585,
																									"name": "OwnerQueryForNonexistentToken",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1853,
																									"src": "15606:29:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																										"typeString": "function () pure returns (error)"
																									}
																								},
																								"id": 586,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "15636:8:2",
																								"memberName": "selector",
																								"nodeType": "MemberAccess",
																								"src": "15606:38:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes4",
																									"typeString": "bytes4"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_bytes4",
																									"typeString": "bytes4"
																								}
																							],
																							"id": 584,
																							"name": "_revert",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1831,
																							"src": "15598:7:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																								"typeString": "function (bytes4) pure"
																							}
																						},
																						"id": 587,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "15598:47:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 588,
																					"nodeType": "ExpressionStatement",
																					"src": "15598:47:2"
																				}
																			]
																		},
																		"id": 590,
																		"isSimpleCounterLoop": false,
																		"nodeType": "ForStatement",
																		"src": "15067:597:2"
																	}
																]
															}
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 597,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 593,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 539,
																		"src": "16000:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 594,
																		"name": "_BITMASK_BURNED",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 92,
																		"src": "16009:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "16000:24:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 596,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "16028:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "16000:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 600,
															"nodeType": "IfStatement",
															"src": "15996:48:2",
															"trueBody": {
																"expression": {
																	"id": 598,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 539,
																	"src": "16038:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"functionReturnParameters": 540,
																"id": 599,
																"nodeType": "Return",
																"src": "16031:13:2"
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 604,
																"name": "OwnerQueryForNonexistentToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1853,
																"src": "16072:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																	"typeString": "function () pure returns (error)"
																}
															},
															"id": 605,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "16102:8:2",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "16072:38:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 603,
														"name": "_revert",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1831,
														"src": "16064:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
															"typeString": "function (bytes4) pure"
														}
													},
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16064:47:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 607,
												"nodeType": "ExpressionStatement",
												"src": "16064:47:2"
											}
										]
									},
									"documentation": {
										"id": 534,
										"nodeType": "StructuredDocumentation",
										"src": "14069:66:2",
										"text": " Returns the packed ownership data of `tokenId`."
									},
									"id": 609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packedOwnershipOf",
									"nameLocation": "14149:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "14176:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "14168:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 535,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14168:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14167:17:2"
									},
									"returnParameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "14215:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "14207:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 538,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14207:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14206:16:2"
									},
									"scope": 1832,
									"src": "14140:1978:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 662,
										"nodeType": "Block",
										"src": "16311:262:2",
										"statements": [
											{
												"expression": {
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 618,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "16321:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1883_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 620,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16331:4:2",
														"memberName": "addr",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1876,
														"src": "16321:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 625,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 612,
																		"src": "16354:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 624,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16346:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 623,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "16346:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 626,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16346:15:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16338:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 621,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "16338:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 627,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16338:24:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "16321:41:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 629,
												"nodeType": "ExpressionStatement",
												"src": "16321:41:2"
											},
											{
												"expression": {
													"id": 639,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 630,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "16372:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1883_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 632,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16382:14:2",
														"memberName": "startTimestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1878,
														"src": "16372:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 635,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "16406:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 636,
																	"name": "_BITPOS_START_TIMESTAMP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 87,
																	"src": "16416:23:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16406:33:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16399:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint64_$",
																"typeString": "type(uint64)"
															},
															"typeName": {
																"id": 633,
																"name": "uint64",
																"nodeType": "ElementaryTypeName",
																"src": "16399:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 638,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16399:41:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "16372:68:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 640,
												"nodeType": "ExpressionStatement",
												"src": "16372:68:2"
											},
											{
												"expression": {
													"id": 649,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 641,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "16450:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1883_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 643,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16460:6:2",
														"memberName": "burned",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1880,
														"src": "16450:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 648,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 646,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 644,
																"name": "packed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 612,
																"src": "16469:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 645,
																"name": "_BITMASK_BURNED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 92,
																"src": "16478:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "16469:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16497:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "16469:29:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "16450:48:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 650,
												"nodeType": "ExpressionStatement",
												"src": "16450:48:2"
											},
											{
												"expression": {
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 651,
															"name": "ownership",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 616,
															"src": "16508:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenOwnership_$1883_memory_ptr",
																"typeString": "struct IERC721A.TokenOwnership memory"
															}
														},
														"id": 653,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "16518:9:2",
														"memberName": "extraData",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1882,
														"src": "16508:19:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 658,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 656,
																	"name": "packed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 612,
																	"src": "16537:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"id": 657,
																	"name": "_BITPOS_EXTRA_DATA",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "16547:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "16537:28:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 655,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "16530:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint24_$",
																"typeString": "type(uint24)"
															},
															"typeName": {
																"id": 654,
																"name": "uint24",
																"nodeType": "ElementaryTypeName",
																"src": "16530:6:2",
																"typeDescriptions": {}
															}
														},
														"id": 659,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16530:36:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "16508:58:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "16508:58:2"
											}
										]
									},
									"documentation": {
										"id": 610,
										"nodeType": "StructuredDocumentation",
										"src": "16124:83:2",
										"text": " @dev Returns the unpacked `TokenOwnership` struct from `packed`."
									},
									"id": 663,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_unpackedOwnership",
									"nameLocation": "16221:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "packed",
												"nameLocation": "16248:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "16240:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16240:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16239:16:2"
									},
									"returnParameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "ownership",
												"nameLocation": "16300:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 663,
												"src": "16278:31:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_TokenOwnership_$1883_memory_ptr",
													"typeString": "struct IERC721A.TokenOwnership"
												},
												"typeName": {
													"id": 615,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 614,
														"name": "TokenOwnership",
														"nameLocations": [
															"16278:14:2"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1883,
														"src": "16278:14:2"
													},
													"referencedDeclaration": 1883,
													"src": "16278:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenOwnership_$1883_storage_ptr",
														"typeString": "struct IERC721A.TokenOwnership"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16277:33:2"
									},
									"scope": 1832,
									"src": "16212:361:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 674,
										"nodeType": "Block",
										"src": "16747:347:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "16766:322:2",
													"nodeType": "YulBlock",
													"src": "16766:322:2",
													"statements": [
														{
															"nativeSrc": "16876:37:2",
															"nodeType": "YulAssignment",
															"src": "16876:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nativeSrc": "16889:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "16889:5:2"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nativeSrc": "16896:16:2",
																		"nodeType": "YulIdentifier",
																		"src": "16896:16:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "16885:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "16885:3:2"
																},
																"nativeSrc": "16885:28:2",
																"nodeType": "YulFunctionCall",
																"src": "16885:28:2"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nativeSrc": "16876:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "16876:5:2"
																}
															]
														},
														{
															"nativeSrc": "17005:73:2",
															"nodeType": "YulAssignment",
															"src": "17005:73:2",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nativeSrc": "17018:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "17018:5:2"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_BITPOS_START_TIMESTAMP",
																						"nativeSrc": "17032:23:2",
																						"nodeType": "YulIdentifier",
																						"src": "17032:23:2"
																					},
																					{
																						"arguments": [],
																						"functionName": {
																							"name": "timestamp",
																							"nativeSrc": "17057:9:2",
																							"nodeType": "YulIdentifier",
																							"src": "17057:9:2"
																						},
																						"nativeSrc": "17057:11:2",
																						"nodeType": "YulFunctionCall",
																						"src": "17057:11:2"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "17028:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "17028:3:2"
																				},
																				"nativeSrc": "17028:41:2",
																				"nodeType": "YulFunctionCall",
																				"src": "17028:41:2"
																			},
																			{
																				"name": "flags",
																				"nativeSrc": "17071:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "17071:5:2"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "17025:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "17025:2:2"
																		},
																		"nativeSrc": "17025:52:2",
																		"nodeType": "YulFunctionCall",
																		"src": "17025:52:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "17015:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "17015:2:2"
																},
																"nativeSrc": "17015:63:2",
																"nodeType": "YulFunctionCall",
																"src": "17015:63:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "17005:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "17005:6:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 119,
														"isOffset": false,
														"isSlot": false,
														"src": "16896:16:2",
														"valueSize": 1
													},
													{
														"declaration": 87,
														"isOffset": false,
														"isSlot": false,
														"src": "17032:23:2",
														"valueSize": 1
													},
													{
														"declaration": 668,
														"isOffset": false,
														"isSlot": false,
														"src": "17071:5:2",
														"valueSize": 1
													},
													{
														"declaration": 666,
														"isOffset": false,
														"isSlot": false,
														"src": "16876:5:2",
														"valueSize": 1
													},
													{
														"declaration": 666,
														"isOffset": false,
														"isSlot": false,
														"src": "16889:5:2",
														"valueSize": 1
													},
													{
														"declaration": 666,
														"isOffset": false,
														"isSlot": false,
														"src": "17018:5:2",
														"valueSize": 1
													},
													{
														"declaration": 671,
														"isOffset": false,
														"isSlot": false,
														"src": "17005:6:2",
														"valueSize": 1
													}
												],
												"id": 673,
												"nodeType": "InlineAssembly",
												"src": "16757:331:2"
											}
										]
									},
									"documentation": {
										"id": 664,
										"nodeType": "StructuredDocumentation",
										"src": "16579:67:2",
										"text": " @dev Packs ownership data into a single uint256."
									},
									"id": 675,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_packOwnershipData",
									"nameLocation": "16660:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 669,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 666,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "16687:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "16679:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 665,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16679:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 668,
												"mutability": "mutable",
												"name": "flags",
												"nameLocation": "16702:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "16694:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 667,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16694:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16678:30:2"
									},
									"returnParameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "16739:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "16731:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16731:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16730:16:2"
									},
									"scope": 1832,
									"src": "16651:443:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 684,
										"nodeType": "Block",
										"src": "17277:232:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "17361:142:2",
													"nodeType": "YulBlock",
													"src": "17361:142:2",
													"statements": [
														{
															"nativeSrc": "17437:56:2",
															"nodeType": "YulAssignment",
															"src": "17437:56:2",
															"value": {
																"arguments": [
																	{
																		"name": "_BITPOS_NEXT_INITIALIZED",
																		"nativeSrc": "17451:24:2",
																		"nodeType": "YulIdentifier",
																		"src": "17451:24:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "quantity",
																				"nativeSrc": "17480:8:2",
																				"nodeType": "YulIdentifier",
																				"src": "17480:8:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17490:1:2",
																				"nodeType": "YulLiteral",
																				"src": "17490:1:2",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "17477:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "17477:2:2"
																		},
																		"nativeSrc": "17477:15:2",
																		"nodeType": "YulFunctionCall",
																		"src": "17477:15:2"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "17447:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "17447:3:2"
																},
																"nativeSrc": "17447:46:2",
																"nodeType": "YulFunctionCall",
																"src": "17447:46:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "17437:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "17437:6:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 95,
														"isOffset": false,
														"isSlot": false,
														"src": "17451:24:2",
														"valueSize": 1
													},
													{
														"declaration": 678,
														"isOffset": false,
														"isSlot": false,
														"src": "17480:8:2",
														"valueSize": 1
													},
													{
														"declaration": 681,
														"isOffset": false,
														"isSlot": false,
														"src": "17437:6:2",
														"valueSize": 1
													}
												],
												"id": 683,
												"nodeType": "InlineAssembly",
												"src": "17352:151:2"
											}
										]
									},
									"documentation": {
										"id": 676,
										"nodeType": "StructuredDocumentation",
										"src": "17100:86:2",
										"text": " @dev Returns the `nextInitialized` flag set if `quantity` equals 1."
									},
									"id": 685,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextInitializedFlag",
									"nameLocation": "17200:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 678,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "17229:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "17221:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 677,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17221:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17220:18:2"
									},
									"returnParameters": {
										"id": 682,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "17269:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "17261:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17261:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17260:16:2"
									},
									"scope": 1832,
									"src": "17191:318:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1980
									],
									"body": {
										"id": 700,
										"nodeType": "Block",
										"src": "18007:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 695,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 688,
															"src": "18026:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 696,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 690,
															"src": "18030:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "18039:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 694,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1495,
															1545
														],
														"referencedDeclaration": 1545,
														"src": "18017:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18017:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "18017:27:2"
											}
										]
									},
									"documentation": {
										"id": 686,
										"nodeType": "StructuredDocumentation",
										"src": "17702:222:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account. See {ERC721A-_approve}.\n Requirements:\n - The caller must own the token or be an approved operator."
									},
									"functionSelector": "095ea7b3",
									"id": 701,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "17938:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 692,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "17998:8:2"
									},
									"parameters": {
										"id": 691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 688,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "17954:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "17946:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 687,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17946:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 690,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "17966:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "17958:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17958:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17945:29:2"
									},
									"returnParameters": {
										"id": 693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18007:0:2"
									},
									"scope": 1832,
									"src": "17929:122:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1996
									],
									"body": {
										"id": 725,
										"nodeType": "Block",
										"src": "18286:138:2",
										"statements": [
											{
												"condition": {
													"id": 713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "18300:17:2",
													"subExpression": {
														"arguments": [
															{
																"id": 711,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 704,
																"src": "18309:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 710,
															"name": "_exists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 813,
															"src": "18301:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (uint256) view returns (bool)"
															}
														},
														"id": 712,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18301:16:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 719,
												"nodeType": "IfStatement",
												"src": "18296:73:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 715,
																	"name": "ApprovalQueryForNonexistentToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1841,
																	"src": "18327:32:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "18360:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "18327:41:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 714,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "18319:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18319:50:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 718,
													"nodeType": "ExpressionStatement",
													"src": "18319:50:2"
												}
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 720,
															"name": "_tokenApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "18387:15:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$59_storage_$",
																"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
															}
														},
														"id": 722,
														"indexExpression": {
															"id": 721,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "18403:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "18387:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$59_storage",
															"typeString": "struct ERC721A.TokenApprovalRef storage ref"
														}
													},
													"id": 723,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "18412:5:2",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 58,
													"src": "18387:30:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 709,
												"id": 724,
												"nodeType": "Return",
												"src": "18380:37:2"
											}
										]
									},
									"documentation": {
										"id": 702,
										"nodeType": "StructuredDocumentation",
										"src": "18057:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 726,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "18210:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 706,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "18259:8:2"
									},
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "18230:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "18222:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "18222:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18221:17:2"
									},
									"returnParameters": {
										"id": 709,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 708,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 726,
												"src": "18277:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 707,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18277:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18276:9:2"
									},
									"scope": 1832,
									"src": "18201:223:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1988
									],
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "18835:147:2",
										"statements": [
											{
												"expression": {
													"id": 742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 735,
																"name": "_operatorApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 152,
																"src": "18845:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(address => mapping(address => bool))"
																}
															},
															"id": 739,
															"indexExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 736,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1813,
																	"src": "18864:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 737,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18864:19:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "18845:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 740,
														"indexExpression": {
															"id": 738,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "18885:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "18845:49:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 741,
														"name": "approved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 731,
														"src": "18897:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "18845:60:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 743,
												"nodeType": "ExpressionStatement",
												"src": "18845:60:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 745,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1813,
																"src": "18935:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 746,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "18935:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 747,
															"name": "operator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 729,
															"src": "18956:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 748,
															"name": "approved",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 731,
															"src": "18966:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 744,
														"name": "ApprovalForAll",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1924,
														"src": "18920:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bool_$returns$__$",
															"typeString": "function (address,address,bool)"
														}
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "18920:55:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 750,
												"nodeType": "EmitStatement",
												"src": "18915:60:2"
											}
										]
									},
									"documentation": {
										"id": 727,
										"nodeType": "StructuredDocumentation",
										"src": "18430:316:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "18760:17:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 733,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "18826:8:2"
									},
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 729,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "18786:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "18778:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 728,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "18778:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "18801:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "18796:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 730,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "18796:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18777:33:2"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18835:0:2"
									},
									"scope": 1832,
									"src": "18751:231:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										2006
									],
									"body": {
										"id": 769,
										"nodeType": "Block",
										"src": "19235:59:2",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 763,
															"name": "_operatorApprovals",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "19252:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$",
																"typeString": "mapping(address => mapping(address => bool))"
															}
														},
														"id": 765,
														"indexExpression": {
															"id": 764,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "19271:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "19252:25:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 767,
													"indexExpression": {
														"id": 766,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 757,
														"src": "19278:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19252:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 762,
												"id": 768,
												"nodeType": "Return",
												"src": "19245:42:2"
											}
										]
									},
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "18988:139:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "19141:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 759,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "19211:8:2"
									},
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "19166:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "19158:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19158:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "19181:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "19173:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19173:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19157:33:2"
									},
									"returnParameters": {
										"id": 762,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 770,
												"src": "19229:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 760,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19229:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19228:6:2"
									},
									"scope": 1832,
									"src": "19132:162:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 812,
										"nodeType": "Block",
										"src": "19621:282:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 781,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 778,
															"name": "_startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 182,
															"src": "19635:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																"typeString": "function () view returns (uint256)"
															}
														},
														"id": 779,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19635:15:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"id": 780,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "19654:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "19635:26:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 811,
												"nodeType": "IfStatement",
												"src": "19631:266:2",
												"trueBody": {
													"id": 810,
													"nodeType": "Block",
													"src": "19663:234:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 782,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 773,
																	"src": "19681:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 783,
																	"name": "_currentIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 127,
																	"src": "19691:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "19681:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 809,
															"nodeType": "IfStatement",
															"src": "19677:210:2",
															"trueBody": {
																"id": 808,
																"nodeType": "Block",
																"src": "19706:181:2",
																"statements": [
																	{
																		"assignments": [
																			786
																		],
																		"declarations": [
																			{
																				"constant": false,
																				"id": 786,
																				"mutability": "mutable",
																				"name": "packed",
																				"nameLocation": "19732:6:2",
																				"nodeType": "VariableDeclaration",
																				"scope": 808,
																				"src": "19724:14:2",
																				"stateVariable": false,
																				"storageLocation": "default",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"typeName": {
																					"id": 785,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "19724:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"visibility": "internal"
																			}
																		],
																		"id": 787,
																		"nodeType": "VariableDeclarationStatement",
																		"src": "19724:14:2"
																	},
																	{
																		"body": {
																			"expression": {
																				"id": 797,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "UnaryOperation",
																				"operator": "--",
																				"prefix": true,
																				"src": "19807:9:2",
																				"subExpression": {
																					"id": 796,
																					"name": "tokenId",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 773,
																					"src": "19809:7:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"id": 798,
																			"nodeType": "ExpressionStatement",
																			"src": "19807:9:2"
																		},
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"id": 792,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 788,
																							"name": "packed",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 786,
																							"src": "19764:6:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"baseExpression": {
																								"id": 789,
																								"name": "_packedOwnerships",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 137,
																								"src": "19773:17:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																									"typeString": "mapping(uint256 => uint256)"
																								}
																							},
																							"id": 791,
																							"indexExpression": {
																								"id": 790,
																								"name": "tokenId",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 773,
																								"src": "19791:7:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "19773:26:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "19764:35:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 793,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "19763:37:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 794,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "19804:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "19763:42:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 799,
																		"nodeType": "WhileStatement",
																		"src": "19756:60:2"
																	},
																	{
																		"expression": {
																			"id": 806,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"id": 800,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 776,
																				"src": "19834:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 805,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 803,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 801,
																						"name": "packed",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 786,
																						"src": "19843:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "&",
																					"rightExpression": {
																						"id": 802,
																						"name": "_BITMASK_BURNED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 92,
																						"src": "19852:15:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "19843:24:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"hexValue": "30",
																					"id": 804,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "19871:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				},
																				"src": "19843:29:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "19834:38:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 807,
																		"nodeType": "ExpressionStatement",
																		"src": "19834:38:2"
																	}
																]
															}
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 771,
										"nodeType": "StructuredDocumentation",
										"src": "19300:238:2",
										"text": " @dev Returns whether `tokenId` exists.\n Tokens can be managed by their owner or approved accounts via {approve} or {setApprovalForAll}.\n Tokens start existing when they are minted. See {_mint}."
									},
									"id": 813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_exists",
									"nameLocation": "19552:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 774,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 773,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "19568:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "19560:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19560:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19559:17:2"
									},
									"returnParameters": {
										"id": 777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "19613:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "19608:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 775,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19608:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19607:13:2"
									},
									"scope": 1832,
									"src": "19543:360:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "20165:488:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "20184:463:2",
													"nodeType": "YulBlock",
													"src": "20184:463:2",
													"statements": [
														{
															"nativeSrc": "20294:37:2",
															"nodeType": "YulAssignment",
															"src": "20294:37:2",
															"value": {
																"arguments": [
																	{
																		"name": "owner",
																		"nativeSrc": "20307:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "20307:5:2"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nativeSrc": "20314:16:2",
																		"nodeType": "YulIdentifier",
																		"src": "20314:16:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "20303:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "20303:3:2"
																},
																"nativeSrc": "20303:28:2",
																"nodeType": "YulFunctionCall",
																"src": "20303:28:2"
															},
															"variableNames": [
																{
																	"name": "owner",
																	"nativeSrc": "20294:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "20294:5:2"
																}
															]
														},
														{
															"nativeSrc": "20444:45:2",
															"nodeType": "YulAssignment",
															"src": "20444:45:2",
															"value": {
																"arguments": [
																	{
																		"name": "msgSender",
																		"nativeSrc": "20461:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "20461:9:2"
																	},
																	{
																		"name": "_BITMASK_ADDRESS",
																		"nativeSrc": "20472:16:2",
																		"nodeType": "YulIdentifier",
																		"src": "20472:16:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "20457:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "20457:3:2"
																},
																"nativeSrc": "20457:32:2",
																"nodeType": "YulFunctionCall",
																"src": "20457:32:2"
															},
															"variableNames": [
																{
																	"name": "msgSender",
																	"nativeSrc": "20444:9:2",
																	"nodeType": "YulIdentifier",
																	"src": "20444:9:2"
																}
															]
														},
														{
															"nativeSrc": "20571:66:2",
															"nodeType": "YulAssignment",
															"src": "20571:66:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nativeSrc": "20587:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "20587:9:2"
																			},
																			{
																				"name": "owner",
																				"nativeSrc": "20598:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "20598:5:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "20584:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "20584:2:2"
																		},
																		"nativeSrc": "20584:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "20584:20:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "msgSender",
																				"nativeSrc": "20609:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "20609:9:2"
																			},
																			{
																				"name": "approvedAddress",
																				"nativeSrc": "20620:15:2",
																				"nodeType": "YulIdentifier",
																				"src": "20620:15:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "20606:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "20606:2:2"
																		},
																		"nativeSrc": "20606:30:2",
																		"nodeType": "YulFunctionCall",
																		"src": "20606:30:2"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "20581:2:2",
																	"nodeType": "YulIdentifier",
																	"src": "20581:2:2"
																},
																"nativeSrc": "20581:56:2",
																"nodeType": "YulFunctionCall",
																"src": "20581:56:2"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "20571:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "20571:6:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 119,
														"isOffset": false,
														"isSlot": false,
														"src": "20314:16:2",
														"valueSize": 1
													},
													{
														"declaration": 119,
														"isOffset": false,
														"isSlot": false,
														"src": "20472:16:2",
														"valueSize": 1
													},
													{
														"declaration": 816,
														"isOffset": false,
														"isSlot": false,
														"src": "20620:15:2",
														"valueSize": 1
													},
													{
														"declaration": 820,
														"isOffset": false,
														"isSlot": false,
														"src": "20444:9:2",
														"valueSize": 1
													},
													{
														"declaration": 820,
														"isOffset": false,
														"isSlot": false,
														"src": "20461:9:2",
														"valueSize": 1
													},
													{
														"declaration": 820,
														"isOffset": false,
														"isSlot": false,
														"src": "20587:9:2",
														"valueSize": 1
													},
													{
														"declaration": 820,
														"isOffset": false,
														"isSlot": false,
														"src": "20609:9:2",
														"valueSize": 1
													},
													{
														"declaration": 818,
														"isOffset": false,
														"isSlot": false,
														"src": "20294:5:2",
														"valueSize": 1
													},
													{
														"declaration": 818,
														"isOffset": false,
														"isSlot": false,
														"src": "20307:5:2",
														"valueSize": 1
													},
													{
														"declaration": 818,
														"isOffset": false,
														"isSlot": false,
														"src": "20598:5:2",
														"valueSize": 1
													},
													{
														"declaration": 823,
														"isOffset": false,
														"isSlot": false,
														"src": "20571:6:2",
														"valueSize": 1
													}
												],
												"id": 825,
												"nodeType": "InlineAssembly",
												"src": "20175:472:2"
											}
										]
									},
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "19909:93:2",
										"text": " @dev Returns whether `msgSender` is equal to `approvedAddress` or `owner`."
									},
									"id": 827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isSenderApprovedOrOwner",
									"nameLocation": "20016:24:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "20058:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "20050:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20050:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 818,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "20091:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "20083:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 817,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20083:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "msgSender",
												"nameLocation": "20114:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "20106:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20106:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20040:89:2"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "20157:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "20152:11:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 822,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20152:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20151:13:2"
									},
									"scope": 1832,
									"src": "20007:646:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 845,
										"nodeType": "Block",
										"src": "20918:317:2",
										"statements": [
											{
												"assignments": [
													839
												],
												"declarations": [
													{
														"constant": false,
														"id": 839,
														"mutability": "mutable",
														"name": "tokenApproval",
														"nameLocation": "20953:13:2",
														"nodeType": "VariableDeclaration",
														"scope": 845,
														"src": "20928:38:2",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_TokenApprovalRef_$59_storage_ptr",
															"typeString": "struct ERC721A.TokenApprovalRef"
														},
														"typeName": {
															"id": 838,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 837,
																"name": "TokenApprovalRef",
																"nameLocations": [
																	"20928:16:2"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 59,
																"src": "20928:16:2"
															},
															"referencedDeclaration": 59,
															"src": "20928:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$59_storage_ptr",
																"typeString": "struct ERC721A.TokenApprovalRef"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 843,
												"initialValue": {
													"baseExpression": {
														"id": 840,
														"name": "_tokenApprovals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "20969:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$59_storage_$",
															"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
														}
													},
													"id": 842,
													"indexExpression": {
														"id": 841,
														"name": "tokenId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "20985:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "20969:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_TokenApprovalRef_$59_storage",
														"typeString": "struct ERC721A.TokenApprovalRef storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "20928:65:2"
											},
											{
												"AST": {
													"nativeSrc": "21106:123:2",
													"nodeType": "YulBlock",
													"src": "21106:123:2",
													"statements": [
														{
															"nativeSrc": "21120:41:2",
															"nodeType": "YulAssignment",
															"src": "21120:41:2",
															"value": {
																"name": "tokenApproval.slot",
																"nativeSrc": "21143:18:2",
																"nodeType": "YulIdentifier",
																"src": "21143:18:2"
															},
															"variableNames": [
																{
																	"name": "approvedAddressSlot",
																	"nativeSrc": "21120:19:2",
																	"nodeType": "YulIdentifier",
																	"src": "21120:19:2"
																}
															]
														},
														{
															"nativeSrc": "21174:45:2",
															"nodeType": "YulAssignment",
															"src": "21174:45:2",
															"value": {
																"arguments": [
																	{
																		"name": "approvedAddressSlot",
																		"nativeSrc": "21199:19:2",
																		"nodeType": "YulIdentifier",
																		"src": "21199:19:2"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "21193:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "21193:5:2"
																},
																"nativeSrc": "21193:26:2",
																"nodeType": "YulFunctionCall",
																"src": "21193:26:2"
															},
															"variableNames": [
																{
																	"name": "approvedAddress",
																	"nativeSrc": "21174:15:2",
																	"nodeType": "YulIdentifier",
																	"src": "21174:15:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 835,
														"isOffset": false,
														"isSlot": false,
														"src": "21174:15:2",
														"valueSize": 1
													},
													{
														"declaration": 833,
														"isOffset": false,
														"isSlot": false,
														"src": "21120:19:2",
														"valueSize": 1
													},
													{
														"declaration": 833,
														"isOffset": false,
														"isSlot": false,
														"src": "21199:19:2",
														"valueSize": 1
													},
													{
														"declaration": 839,
														"isOffset": false,
														"isSlot": true,
														"src": "21143:18:2",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 844,
												"nodeType": "InlineAssembly",
												"src": "21097:132:2"
											}
										]
									},
									"documentation": {
										"id": 828,
										"nodeType": "StructuredDocumentation",
										"src": "20659:97:2",
										"text": " @dev Returns the storage slot and value for the approved address of `tokenId`."
									},
									"id": 846,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getApprovedSlotAndAddress",
									"nameLocation": "20770:26:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "20805:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "20797:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20797:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20796:17:2"
									},
									"returnParameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "approvedAddressSlot",
												"nameLocation": "20868:19:2",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "20860:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20860:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 835,
												"mutability": "mutable",
												"name": "approvedAddress",
												"nameLocation": "20897:15:2",
												"nodeType": "VariableDeclaration",
												"scope": 846,
												"src": "20889:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 834,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20889:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20859:54:2"
									},
									"scope": 1832,
									"src": "20761:474:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"baseFunctions": [
										1972
									],
									"body": {
										"id": 1018,
										"nodeType": "Block",
										"src": "21963:3320:2",
										"statements": [
											{
												"assignments": [
													858
												],
												"declarations": [
													{
														"constant": false,
														"id": 858,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "21981:19:2",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "21973:27:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 857,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "21973:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 862,
												"initialValue": {
													"arguments": [
														{
															"id": 860,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "22022:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 859,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "22003:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22003:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "21973:57:2"
											},
											{
												"expression": {
													"id": 879,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 863,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 849,
														"src": "22132:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 876,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"id": 872,
																							"name": "from",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 849,
																							"src": "22171:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 871,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "22163:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_uint160_$",
																							"typeString": "type(uint160)"
																						},
																						"typeName": {
																							"id": 870,
																							"name": "uint160",
																							"nodeType": "ElementaryTypeName",
																							"src": "22163:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 873,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "22163:13:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint160",
																						"typeString": "uint160"
																					}
																				],
																				"id": 869,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "22155:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint256_$",
																					"typeString": "type(uint256)"
																				},
																				"typeName": {
																					"id": 868,
																					"name": "uint256",
																					"nodeType": "ElementaryTypeName",
																					"src": "22155:7:2",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 874,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "22155:22:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"id": 875,
																			"name": "_BITMASK_ADDRESS",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 119,
																			"src": "22180:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "22155:41:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 867,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "22147:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 866,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "22147:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22147:50:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 865,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22139:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 864,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "22139:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 878,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22139:59:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "22132:66:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 880,
												"nodeType": "ExpressionStatement",
												"src": "22132:66:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 885,
																		"name": "prevOwnershipPacked",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 858,
																		"src": "22229:19:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 884,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "22221:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 883,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "22221:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22221:28:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 882,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22213:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 881,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "22213:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 887,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22213:37:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 888,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 849,
														"src": "22254:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "22213:45:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 895,
												"nodeType": "IfStatement",
												"src": "22209:95:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 891,
																	"name": "TransferFromIncorrectOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1859,
																	"src": "22268:26:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "22295:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "22268:35:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 890,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "22260:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 893,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22260:44:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 894,
													"nodeType": "ExpressionStatement",
													"src": "22260:44:2"
												}
											},
											{
												"assignments": [
													897,
													899
												],
												"declarations": [
													{
														"constant": false,
														"id": 897,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "22324:19:2",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "22316:27:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 896,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "22316:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 899,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "22353:15:2",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "22345:23:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 898,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "22345:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 903,
												"initialValue": {
													"arguments": [
														{
															"id": 901,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "22399:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 900,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "22372:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22372:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "22315:92:2"
											},
											{
												"condition": {
													"id": 910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "22503:69:2",
													"subExpression": {
														"arguments": [
															{
																"id": 905,
																"name": "approvedAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 899,
																"src": "22529:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 906,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 849,
																"src": "22546:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 907,
																	"name": "_msgSenderERC721A",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1813,
																	"src": "22552:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 908,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22552:19:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 904,
															"name": "_isSenderApprovedOrOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "22504:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																"typeString": "function (address,address,address) pure returns (bool)"
															}
														},
														"id": 909,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22504:68:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 923,
												"nodeType": "IfStatement",
												"src": "22499:188:2",
												"trueBody": {
													"condition": {
														"id": 916,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "22590:44:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 912,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 849,
																	"src": "22608:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 913,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1813,
																		"src": "22614:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 914,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "22614:19:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 911,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "22591:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 915,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22591:43:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 922,
													"nodeType": "IfStatement",
													"src": "22586:101:2",
													"trueBody": {
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 918,
																		"name": "TransferCallerNotOwnerNorApproved",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1856,
																		"src": "22644:33:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																			"typeString": "function () pure returns (error)"
																		}
																	},
																	"id": 919,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "22678:8:2",
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"src": "22644:42:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																],
																"id": 917,
																"name": "_revert",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1831,
																"src": "22636:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																	"typeString": "function (bytes4) pure"
																}
															},
															"id": 920,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22636:51:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 921,
														"nodeType": "ExpressionStatement",
														"src": "22636:51:2"
													}
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 925,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "22720:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 926,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "22726:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 927,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "22730:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 928,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "22739:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 924,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "22698:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 929,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22698:43:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 930,
												"nodeType": "ExpressionStatement",
												"src": "22698:43:2"
											},
											{
												"AST": {
													"nativeSrc": "22813:181:2",
													"nodeType": "YulBlock",
													"src": "22813:181:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "22846:138:2",
																"nodeType": "YulBlock",
																"src": "22846:138:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nativeSrc": "22947:19:2",
																					"nodeType": "YulIdentifier",
																					"src": "22947:19:2"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "22968:1:2",
																					"nodeType": "YulLiteral",
																					"src": "22968:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nativeSrc": "22940:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "22940:6:2"
																			},
																			"nativeSrc": "22940:30:2",
																			"nodeType": "YulFunctionCall",
																			"src": "22940:30:2"
																		},
																		"nativeSrc": "22940:30:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "22940:30:2"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nativeSrc": "22830:15:2",
																"nodeType": "YulIdentifier",
																"src": "22830:15:2"
															},
															"nativeSrc": "22827:157:2",
															"nodeType": "YulIf",
															"src": "22827:157:2"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 899,
														"isOffset": false,
														"isSlot": false,
														"src": "22830:15:2",
														"valueSize": 1
													},
													{
														"declaration": 897,
														"isOffset": false,
														"isSlot": false,
														"src": "22947:19:2",
														"valueSize": 1
													}
												],
												"id": 931,
												"nodeType": "InlineAssembly",
												"src": "22804:190:2"
											},
											{
												"id": 988,
												"nodeType": "UncheckedBlock",
												"src": "23261:1361:2",
												"statements": [
													{
														"expression": {
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "--",
															"prefix": true,
															"src": "23354:26:2",
															"subExpression": {
																"baseExpression": {
																	"id": 932,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "23356:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 934,
																"indexExpression": {
																	"id": 933,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 849,
																	"src": "23375:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "23356:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 936,
														"nodeType": "ExpressionStatement",
														"src": "23354:26:2"
													},
													{
														"expression": {
															"id": 940,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": true,
															"src": "23422:24:2",
															"subExpression": {
																"baseExpression": {
																	"id": 937,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "23424:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 939,
																"indexExpression": {
																	"id": 938,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 851,
																	"src": "23443:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "23424:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 941,
														"nodeType": "ExpressionStatement",
														"src": "23422:24:2"
													},
													{
														"expression": {
															"id": 955,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 942,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 137,
																	"src": "23710:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 944,
																"indexExpression": {
																	"id": 943,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 853,
																	"src": "23728:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "23710:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 946,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 851,
																		"src": "23775:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 953,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 947,
																			"name": "_BITMASK_NEXT_INITIALIZED",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 100,
																			"src": "23795:25:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 949,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 849,
																					"src": "23838:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 950,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 851,
																					"src": "23844:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 951,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 858,
																					"src": "23848:19:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 948,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1803,
																				"src": "23823:14:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 952,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "23823:45:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "23795:73:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 945,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "23739:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 954,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23739:143:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "23710:172:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 956,
														"nodeType": "ExpressionStatement",
														"src": "23710:172:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 959,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 957,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 858,
																	"src": "23999:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 958,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 100,
																	"src": "24021:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "23999:47:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 960,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24050:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "23999:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 987,
														"nodeType": "IfStatement",
														"src": "23995:617:2",
														"trueBody": {
															"id": 986,
															"nodeType": "Block",
															"src": "24053:559:2",
															"statements": [
																{
																	"assignments": [
																		963
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 963,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "24079:11:2",
																			"nodeType": "VariableDeclaration",
																			"scope": 986,
																			"src": "24071:19:2",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 962,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "24071:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 967,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 966,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 964,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 853,
																			"src": "24093:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 965,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24103:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "24093:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "24071:33:2"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 972,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 968,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 137,
																				"src": "24224:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 970,
																			"indexExpression": {
																				"id": 969,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 963,
																				"src": "24242:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "24224:30:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 971,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "24258:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "24224:35:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 985,
																	"nodeType": "IfStatement",
																	"src": "24220:378:2",
																	"trueBody": {
																		"id": 984,
																		"nodeType": "Block",
																		"src": "24261:337:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 975,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 973,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 963,
																						"src": "24345:11:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 974,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 127,
																						"src": "24360:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "24345:28:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 983,
																				"nodeType": "IfStatement",
																				"src": "24341:239:2",
																				"trueBody": {
																					"id": 982,
																					"nodeType": "Block",
																					"src": "24375:205:2",
																					"statements": [
																						{
																							"expression": {
																								"id": 980,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 976,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 137,
																										"src": "24505:17:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 978,
																									"indexExpression": {
																										"id": 977,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 963,
																										"src": "24523:11:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "24505:30:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 979,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 858,
																									"src": "24538:19:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "24505:52:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 981,
																							"nodeType": "ExpressionStatement",
																							"src": "24505:52:2"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"assignments": [
													990
												],
												"declarations": [
													{
														"constant": false,
														"id": 990,
														"mutability": "mutable",
														"name": "toMasked",
														"nameLocation": "24729:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "24721:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 989,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "24721:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1000,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 999,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 995,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 851,
																		"src": "24756:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 994,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "24748:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 993,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "24748:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 996,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24748:11:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint160",
																	"typeString": "uint160"
																}
															],
															"id": 992,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24740:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 991,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "24740:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 997,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24740:20:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&",
													"rightExpression": {
														"id": 998,
														"name": "_BITMASK_ADDRESS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 119,
														"src": "24763:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24740:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "24721:58:2"
											},
											{
												"AST": {
													"nativeSrc": "24798:358:2",
													"nodeType": "YulBlock",
													"src": "24798:358:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "24876:1:2",
																		"nodeType": "YulLiteral",
																		"src": "24876:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "24932:1:2",
																		"nodeType": "YulLiteral",
																		"src": "24932:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "_TRANSFER_EVENT_SIGNATURE",
																		"nativeSrc": "24986:25:2",
																		"nodeType": "YulIdentifier",
																		"src": "24986:25:2"
																	},
																	{
																		"name": "from",
																		"nativeSrc": "25043:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "25043:4:2"
																	},
																	{
																		"name": "toMasked",
																		"nativeSrc": "25076:8:2",
																		"nodeType": "YulIdentifier",
																		"src": "25076:8:2"
																	},
																	{
																		"name": "tokenId",
																		"nativeSrc": "25111:7:2",
																		"nodeType": "YulIdentifier",
																		"src": "25111:7:2"
																	}
																],
																"functionName": {
																	"name": "log4",
																	"nativeSrc": "24854:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "24854:4:2"
																},
																"nativeSrc": "24854:292:2",
																"nodeType": "YulFunctionCall",
																"src": "24854:292:2"
															},
															"nativeSrc": "24854:292:2",
															"nodeType": "YulExpressionStatement",
															"src": "24854:292:2"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 125,
														"isOffset": false,
														"isSlot": false,
														"src": "24986:25:2",
														"valueSize": 1
													},
													{
														"declaration": 849,
														"isOffset": false,
														"isSlot": false,
														"src": "25043:4:2",
														"valueSize": 1
													},
													{
														"declaration": 990,
														"isOffset": false,
														"isSlot": false,
														"src": "25076:8:2",
														"valueSize": 1
													},
													{
														"declaration": 853,
														"isOffset": false,
														"isSlot": false,
														"src": "25111:7:2",
														"valueSize": 1
													}
												],
												"id": 1001,
												"nodeType": "InlineAssembly",
												"src": "24789:367:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1004,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1002,
														"name": "toMasked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 990,
														"src": "25169:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1003,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "25181:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "25169:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1010,
												"nodeType": "IfStatement",
												"src": "25165:58:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1006,
																	"name": "TransferToZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1865,
																	"src": "25192:21:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1007,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "25214:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "25192:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1005,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "25184:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1008,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25184:39:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1009,
													"nodeType": "ExpressionStatement",
													"src": "25184:39:2"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1012,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 849,
															"src": "25255:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1013,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 851,
															"src": "25261:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1014,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 853,
															"src": "25265:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25274:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1011,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "25234:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25234:42:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1017,
												"nodeType": "ExpressionStatement",
												"src": "25234:42:2"
											}
										]
									},
									"documentation": {
										"id": 847,
										"nodeType": "StructuredDocumentation",
										"src": "21428:403:2",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1019,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "21845:12:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 855,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "21954:8:2"
									},
									"parameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "21875:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "21867:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 848,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21867:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "21897:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "21889:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 850,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21889:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "21917:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1019,
												"src": "21909:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 852,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21909:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21857:73:2"
									},
									"returnParameters": {
										"id": 856,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "21963:0:2"
									},
									"scope": 1832,
									"src": "21836:3447:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1962
									],
									"body": {
										"id": 1037,
										"nodeType": "Block",
										"src": "25505:56:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1031,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1022,
															"src": "25532:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1032,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1024,
															"src": "25538:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1033,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1026,
															"src": "25542:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1034,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25551:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1030,
														"name": "safeTransferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1038,
															1078
														],
														"referencedDeclaration": 1078,
														"src": "25515:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,address,uint256,bytes memory)"
														}
													},
													"id": 1035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25515:39:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1036,
												"nodeType": "ExpressionStatement",
												"src": "25515:39:2"
											}
										]
									},
									"documentation": {
										"id": 1020,
										"nodeType": "StructuredDocumentation",
										"src": "25289:80:2",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 1038,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "25383:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1028,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "25496:8:2"
									},
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "25417:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "25409:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25409:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "25439:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "25431:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1023,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25431:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "25459:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1038,
												"src": "25451:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25451:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25399:73:2"
									},
									"returnParameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25505:0:2"
									},
									"scope": 1832,
									"src": "25374:187:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1952
									],
									"body": {
										"id": 1077,
										"nodeType": "Block",
										"src": "26301:246:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1052,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1041,
															"src": "26324:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1053,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1043,
															"src": "26330:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1054,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1045,
															"src": "26334:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1051,
														"name": "transferFrom",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "26311:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1055,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "26311:31:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1056,
												"nodeType": "ExpressionStatement",
												"src": "26311:31:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1057,
																"name": "to",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1043,
																"src": "26356:2:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1058,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "26359:4:2",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "26356:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1059,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "26364:6:2",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "26356:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"hexValue": "30",
														"id": 1060,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "26374:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "26356:19:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1076,
												"nodeType": "IfStatement",
												"src": "26352:189:2",
												"trueBody": {
													"condition": {
														"id": 1068,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "26393:57:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 1063,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1041,
																	"src": "26425:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1064,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1043,
																	"src": "26431:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1065,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1045,
																	"src": "26435:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1066,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1047,
																	"src": "26444:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																],
																"id": 1062,
																"name": "_checkContractOnERC721Received",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1160,
																"src": "26394:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																}
															},
															"id": 1067,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "26394:56:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1075,
													"nodeType": "IfStatement",
													"src": "26389:152:2",
													"trueBody": {
														"id": 1074,
														"nodeType": "Block",
														"src": "26452:89:2",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1070,
																				"name": "TransferToNonERC721ReceiverImplementer",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1862,
																				"src": "26478:38:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																					"typeString": "function () pure returns (error)"
																				}
																			},
																			"id": 1071,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "26517:8:2",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "26478:47:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		],
																		"id": 1069,
																		"name": "_revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1831,
																		"src": "26470:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																			"typeString": "function (bytes4) pure"
																		}
																	},
																	"id": 1072,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "26470:56:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1073,
																"nodeType": "ExpressionStatement",
																"src": "26470:56:2"
															}
														]
													}
												}
											}
										]
									},
									"documentation": {
										"id": 1039,
										"nodeType": "StructuredDocumentation",
										"src": "25567:570:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1078,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "26151:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1049,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "26292:8:2"
									},
									"parameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1041,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "26185:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "26177:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1040,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26177:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1043,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "26207:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "26199:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1042,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26199:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1045,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "26227:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "26219:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26219:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "26257:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1078,
												"src": "26244:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1046,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "26244:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26167:101:2"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26301:0:2"
									},
									"scope": 1832,
									"src": "26142:405:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1090,
										"nodeType": "Block",
										"src": "27343:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1079,
										"nodeType": "StructuredDocumentation",
										"src": "26553:633:2",
										"text": " @dev Hook that is called before a set of serially-ordered token IDs\n are about to be transferred. This includes minting.\n And also called before burning one token.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1091,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfers",
									"nameLocation": "27200:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "27239:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "27231:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1080,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27231:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1083,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "27261:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "27253:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1082,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "27253:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1085,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "27281:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "27273:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1084,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27273:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "27311:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "27303:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1086,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "27303:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27221:104:2"
									},
									"returnParameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "27343:0:2"
									},
									"scope": 1832,
									"src": "27191:154:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1103,
										"nodeType": "Block",
										"src": "28143:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1092,
										"nodeType": "StructuredDocumentation",
										"src": "27351:636:2",
										"text": " @dev Hook that is called after a set of serially-ordered token IDs\n have been transferred. This includes minting.\n And also called after one token has been burned.\n `startTokenId` - the first token ID to be transferred.\n `quantity` - the amount to be transferred.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` has been\n transferred to `to`.\n - When `from` is zero, `tokenId` has been minted for `to`.\n - When `to` is zero, `tokenId` has been burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_afterTokenTransfers",
									"nameLocation": "28001:20:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "28039:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "28031:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1093,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28031:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "28061:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "28053:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28053:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "startTokenId",
												"nameLocation": "28081:12:2",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "28073:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1097,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28073:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1100,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "28111:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1104,
												"src": "28103:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1099,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28103:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28021:104:2"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "28143:0:2"
									},
									"scope": 1832,
									"src": "27992:153:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1159,
										"nodeType": "Block",
										"src": "28737:509:2",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 1139,
															"nodeType": "Block",
															"src": "28886:96:2",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		},
																		"id": 1137,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1131,
																			"name": "retval",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1129,
																			"src": "28907:6:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"expression": {
																				"expression": {
																					"arguments": [
																						{
																							"id": 1133,
																							"name": "to",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1109,
																							"src": "28942:2:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						],
																						"id": 1132,
																						"name": "ERC721A__IERC721Receiver",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 53,
																						"src": "28917:24:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$53_$",
																							"typeString": "type(contract ERC721A__IERC721Receiver)"
																						}
																					},
																					"id": 1134,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "28917:28:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$53",
																						"typeString": "contract ERC721A__IERC721Receiver"
																					}
																				},
																				"id": 1135,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "28946:16:2",
																				"memberName": "onERC721Received",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 52,
																				"src": "28917:45:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
																					"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
																				}
																			},
																			"id": 1136,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "28963:8:2",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "28917:54:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		},
																		"src": "28907:64:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"functionReturnParameters": 1117,
																	"id": 1138,
																	"nodeType": "Return",
																	"src": "28900:71:2"
																}
															]
														},
														"errorName": "",
														"id": 1140,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1130,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1129,
																	"mutability": "mutable",
																	"name": "retval",
																	"nameLocation": "28869:6:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1140,
																	"src": "28862:13:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	"typeName": {
																		"id": 1128,
																		"name": "bytes4",
																		"nodeType": "ElementaryTypeName",
																		"src": "28862:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "28848:37:2"
														},
														"src": "28840:142:2"
													},
													{
														"block": {
															"id": 1156,
															"nodeType": "Block",
															"src": "29011:229:2",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1147,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 1144,
																				"name": "reason",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1142,
																				"src": "29029:6:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 1145,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "29036:6:2",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "29029:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1146,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "29046:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "29029:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1154,
																	"nodeType": "IfStatement",
																	"src": "29025:113:2",
																	"trueBody": {
																		"id": 1153,
																		"nodeType": "Block",
																		"src": "29049:89:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"expression": {
																								"id": 1149,
																								"name": "TransferToNonERC721ReceiverImplementer",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1862,
																								"src": "29075:38:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																									"typeString": "function () pure returns (error)"
																								}
																							},
																							"id": 1150,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "29114:8:2",
																							"memberName": "selector",
																							"nodeType": "MemberAccess",
																							"src": "29075:47:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes4",
																								"typeString": "bytes4"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes4",
																								"typeString": "bytes4"
																							}
																						],
																						"id": 1148,
																						"name": "_revert",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1831,
																						"src": "29067:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																							"typeString": "function (bytes4) pure"
																						}
																					},
																					"id": 1151,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "29067:56:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 1152,
																				"nodeType": "ExpressionStatement",
																				"src": "29067:56:2"
																			}
																		]
																	}
																},
																{
																	"AST": {
																		"nativeSrc": "29160:70:2",
																		"nodeType": "YulBlock",
																		"src": "29160:70:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "29189:2:2",
																									"nodeType": "YulLiteral",
																									"src": "29189:2:2",
																									"type": "",
																									"value": "32"
																								},
																								{
																									"name": "reason",
																									"nativeSrc": "29193:6:2",
																									"nodeType": "YulIdentifier",
																									"src": "29193:6:2"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "29185:3:2",
																								"nodeType": "YulIdentifier",
																								"src": "29185:3:2"
																							},
																							"nativeSrc": "29185:15:2",
																							"nodeType": "YulFunctionCall",
																							"src": "29185:15:2"
																						},
																						{
																							"arguments": [
																								{
																									"name": "reason",
																									"nativeSrc": "29208:6:2",
																									"nodeType": "YulIdentifier",
																									"src": "29208:6:2"
																								}
																							],
																							"functionName": {
																								"name": "mload",
																								"nativeSrc": "29202:5:2",
																								"nodeType": "YulIdentifier",
																								"src": "29202:5:2"
																							},
																							"nativeSrc": "29202:13:2",
																							"nodeType": "YulFunctionCall",
																							"src": "29202:13:2"
																						}
																					],
																					"functionName": {
																						"name": "revert",
																						"nativeSrc": "29178:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "29178:6:2"
																					},
																					"nativeSrc": "29178:38:2",
																					"nodeType": "YulFunctionCall",
																					"src": "29178:38:2"
																				},
																				"nativeSrc": "29178:38:2",
																				"nodeType": "YulExpressionStatement",
																				"src": "29178:38:2"
																			}
																		]
																	},
																	"evmVersion": "istanbul",
																	"externalReferences": [
																		{
																			"declaration": 1142,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "29193:6:2",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1142,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "29208:6:2",
																			"valueSize": 1
																		}
																	],
																	"id": 1155,
																	"nodeType": "InlineAssembly",
																	"src": "29151:79:2"
																}
															]
														},
														"errorName": "",
														"id": 1157,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 1143,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 1142,
																	"mutability": "mutable",
																	"name": "reason",
																	"nameLocation": "29003:6:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 1157,
																	"src": "28990:19:2",
																	"stateVariable": false,
																	"storageLocation": "memory",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes"
																	},
																	"typeName": {
																		"id": 1141,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "28990:5:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_storage_ptr",
																			"typeString": "bytes"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "28989:21:2"
														},
														"src": "28983:257:2"
													}
												],
												"externalCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1122,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1813,
																"src": "28797:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28797:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1124,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1107,
															"src": "28818:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1125,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1111,
															"src": "28824:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1126,
															"name": "_data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1113,
															"src": "28833:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1119,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1109,
																	"src": "28776:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1118,
																"name": "ERC721A__IERC721Receiver",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 53,
																"src": "28751:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ERC721A__IERC721Receiver_$53_$",
																	"typeString": "type(contract ERC721A__IERC721Receiver)"
																}
															},
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "28751:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ERC721A__IERC721Receiver_$53",
																"typeString": "contract ERC721A__IERC721Receiver"
															}
														},
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "28780:16:2",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 52,
														"src": "28751:45:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 1127,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "28751:88:2",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"id": 1158,
												"nodeType": "TryStatement",
												"src": "28747:493:2"
											}
										]
									},
									"documentation": {
										"id": 1105,
										"nodeType": "StructuredDocumentation",
										"src": "28151:417:2",
										"text": " @dev Private function to invoke {IERC721Receiver-onERC721Received} on a target contract.\n `from` - Previous owner of the given token ID.\n `to` - Target address that will receive the token.\n `tokenId` - Token ID to be transferred.\n `_data` - Optional data to send along with the call.\n Returns whether the call correctly returned the expected magic value."
									},
									"id": 1160,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkContractOnERC721Received",
									"nameLocation": "28582:30:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "28630:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "28622:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28622:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1109,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "28652:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "28644:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "28644:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "28672:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "28664:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "28664:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "28702:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "28689:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1112,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "28689:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28612:101:2"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1160,
												"src": "28731:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1115,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "28731:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28730:6:2"
									},
									"scope": 1832,
									"src": "28573:673:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1278,
										"nodeType": "Block",
										"src": "29754:2189:2",
										"statements": [
											{
												"assignments": [
													1169
												],
												"declarations": [
													{
														"constant": false,
														"id": 1169,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "29772:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 1278,
														"src": "29764:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1168,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "29764:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1171,
												"initialValue": {
													"id": 1170,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 127,
													"src": "29787:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "29764:36:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1172,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "29814:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1173,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "29826:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "29814:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1180,
												"nodeType": "IfStatement",
												"src": "29810:53:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1176,
																	"name": "MintZeroQuantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1850,
																	"src": "29837:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "29854:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "29837:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1175,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "29829:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1178,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29829:34:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1179,
													"nodeType": "ExpressionStatement",
													"src": "29829:34:2"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1184,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "29904:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1183,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "29896:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1182,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "29896:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "29896:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1186,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "29908:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1187,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "29912:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1188,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "29926:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1181,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "29874:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "29874:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1190,
												"nodeType": "ExpressionStatement",
												"src": "29874:61:2"
											},
											{
												"id": 1267,
												"nodeType": "UncheckedBlock",
												"src": "30118:1749:2",
												"statements": [
													{
														"expression": {
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1191,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 137,
																	"src": "30363:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1193,
																"indexExpression": {
																	"id": 1192,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1169,
																	"src": "30381:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "30363:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1195,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1163,
																		"src": "30433:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1197,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1165,
																					"src": "30474:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1196,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 685,
																				"src": "30453:20:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1198,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "30453:30:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1202,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "30509:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1201,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "30501:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1200,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "30501:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1203,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "30501:10:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1204,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1163,
																					"src": "30513:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1205,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "30517:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1199,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1803,
																				"src": "30486:14:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "30486:33:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "30453:66:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1194,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "30397:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30397:136:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30363:170:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1210,
														"nodeType": "ExpressionStatement",
														"src": "30363:170:2"
													},
													{
														"expression": {
															"id": 1223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1211,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "30744:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1213,
																"indexExpression": {
																	"id": 1212,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1163,
																	"src": "30763:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "30744:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1214,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1165,
																	"src": "30770:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1220,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1217,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1215,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "30783:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1216,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 70,
																							"src": "30788:21:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "30783:26:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1218,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "30782:28:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1219,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "30813:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "30782:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1221,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "30781:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "30770:45:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30744:71:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1224,
														"nodeType": "ExpressionStatement",
														"src": "30744:71:2"
													},
													{
														"assignments": [
															1226
														],
														"declarations": [
															{
																"constant": false,
																"id": 1226,
																"mutability": "mutable",
																"name": "toMasked",
																"nameLocation": "30931:8:2",
																"nodeType": "VariableDeclaration",
																"scope": 1267,
																"src": "30923:16:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1225,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "30923:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1236,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1231,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1163,
																				"src": "30958:2:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1230,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "30950:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_uint160_$",
																				"typeString": "type(uint160)"
																			},
																			"typeName": {
																				"id": 1229,
																				"name": "uint160",
																				"nodeType": "ElementaryTypeName",
																				"src": "30950:7:2",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1232,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "30950:11:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint160",
																			"typeString": "uint160"
																		}
																	],
																	"id": 1228,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "30942:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 1227,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "30942:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 1233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30942:20:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"id": 1234,
																"name": "_BITMASK_ADDRESS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 119,
																"src": "30965:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "30942:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "30923:58:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1239,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1237,
																"name": "toMasked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1226,
																"src": "31000:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1238,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "31012:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "31000:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1245,
														"nodeType": "IfStatement",
														"src": "30996:54:2",
														"trueBody": {
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 1241,
																			"name": "MintToZeroAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1847,
																			"src": "31023:17:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 1242,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "31041:8:2",
																		"memberName": "selector",
																		"nodeType": "MemberAccess",
																		"src": "31023:26:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes4",
																			"typeString": "bytes4"
																		}
																	],
																	"id": 1240,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1831,
																	"src": "31015:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																		"typeString": "function (bytes4) pure"
																	}
																},
																"id": 1243,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31015:35:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1244,
															"nodeType": "ExpressionStatement",
															"src": "31015:35:2"
														}
													},
													{
														"assignments": [
															1247
														],
														"declarations": [
															{
																"constant": false,
																"id": 1247,
																"mutability": "mutable",
																"name": "end",
																"nameLocation": "31073:3:2",
																"nodeType": "VariableDeclaration",
																"scope": 1267,
																"src": "31065:11:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1246,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "31065:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1251,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1248,
																"name": "startTokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1169,
																"src": "31079:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1249,
																"name": "quantity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1165,
																"src": "31094:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31079:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "31065:37:2"
													},
													{
														"assignments": [
															1253
														],
														"declarations": [
															{
																"constant": false,
																"id": 1253,
																"mutability": "mutable",
																"name": "tokenId",
																"nameLocation": "31124:7:2",
																"nodeType": "VariableDeclaration",
																"scope": 1267,
																"src": "31116:15:2",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1252,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "31116:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1255,
														"initialValue": {
															"id": 1254,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "31134:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "31116:30:2"
													},
													{
														"body": {
															"id": 1257,
															"nodeType": "Block",
															"src": "31164:633:2",
															"statements": [
																{
																	"AST": {
																		"nativeSrc": "31191:441:2",
																		"nodeType": "YulBlock",
																		"src": "31191:441:2",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "31293:1:2",
																							"nodeType": "YulLiteral",
																							"src": "31293:1:2",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "31357:1:2",
																							"nodeType": "YulLiteral",
																							"src": "31357:1:2",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "_TRANSFER_EVENT_SIGNATURE",
																							"nativeSrc": "31419:25:2",
																							"nodeType": "YulIdentifier",
																							"src": "31419:25:2"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "31484:1:2",
																							"nodeType": "YulLiteral",
																							"src": "31484:1:2",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "toMasked",
																							"nativeSrc": "31528:8:2",
																							"nodeType": "YulIdentifier",
																							"src": "31528:8:2"
																						},
																						{
																							"name": "tokenId",
																							"nativeSrc": "31571:7:2",
																							"nodeType": "YulIdentifier",
																							"src": "31571:7:2"
																						}
																					],
																					"functionName": {
																						"name": "log4",
																						"nativeSrc": "31263:4:2",
																						"nodeType": "YulIdentifier",
																						"src": "31263:4:2"
																					},
																					"nativeSrc": "31263:351:2",
																					"nodeType": "YulFunctionCall",
																					"src": "31263:351:2"
																				},
																				"nativeSrc": "31263:351:2",
																				"nodeType": "YulExpressionStatement",
																				"src": "31263:351:2"
																			}
																		]
																	},
																	"evmVersion": "istanbul",
																	"externalReferences": [
																		{
																			"declaration": 125,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "31419:25:2",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1226,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "31528:8:2",
																			"valueSize": 1
																		},
																		{
																			"declaration": 1253,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "31571:7:2",
																			"valueSize": 1
																		}
																	],
																	"id": 1256,
																	"nodeType": "InlineAssembly",
																	"src": "31182:450:2"
																}
															]
														},
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "++",
																"prefix": true,
																"src": "31805:9:2",
																"subExpression": {
																	"id": 1258,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1253,
																	"src": "31807:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1260,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1247,
																"src": "31818:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31805:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1262,
														"nodeType": "DoWhileStatement",
														"src": "31161:662:2"
													},
													{
														"expression": {
															"id": 1265,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1263,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 127,
																"src": "31837:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"id": 1264,
																"name": "end",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1247,
																"src": "31853:3:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "31837:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1266,
														"nodeType": "ExpressionStatement",
														"src": "31837:19:2"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1271,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "31905:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "31897:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1269,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "31897:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1272,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "31897:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1273,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1163,
															"src": "31909:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1274,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1169,
															"src": "31913:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1275,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1165,
															"src": "31927:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1268,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "31876:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "31876:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1277,
												"nodeType": "ExpressionStatement",
												"src": "31876:60:2"
											}
										]
									},
									"documentation": {
										"id": 1161,
										"nodeType": "StructuredDocumentation",
										"src": "29437:250:2",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {Transfer} event for each mint."
									},
									"id": 1279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "29701:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1163,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "29715:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "29707:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1162,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "29707:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "29727:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "29719:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "29719:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29706:30:2"
									},
									"returnParameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "29754:0:2"
									},
									"scope": 1832,
									"src": "29692:2251:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1396,
										"nodeType": "Block",
										"src": "32852:1401:2",
										"statements": [
											{
												"assignments": [
													1288
												],
												"declarations": [
													{
														"constant": false,
														"id": 1288,
														"mutability": "mutable",
														"name": "startTokenId",
														"nameLocation": "32870:12:2",
														"nodeType": "VariableDeclaration",
														"scope": 1396,
														"src": "32862:20:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1287,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "32862:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1290,
												"initialValue": {
													"id": 1289,
													"name": "_currentIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 127,
													"src": "32885:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "32862:36:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1291,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1282,
														"src": "32912:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "32926:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1293,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32918:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1292,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "32918:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1295,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32918:10:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "32912:16:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1302,
												"nodeType": "IfStatement",
												"src": "32908:57:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1298,
																	"name": "MintToZeroAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1847,
																	"src": "32938:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "32956:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "32938:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1297,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "32930:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1300,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32930:35:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1301,
													"nodeType": "ExpressionStatement",
													"src": "32930:35:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1303,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1284,
														"src": "32979:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1304,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "32991:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "32979:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1311,
												"nodeType": "IfStatement",
												"src": "32975:53:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1307,
																	"name": "MintZeroQuantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1850,
																	"src": "33002:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1308,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "33019:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "33002:25:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1306,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "32994:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1309,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32994:34:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1310,
													"nodeType": "ExpressionStatement",
													"src": "32994:34:2"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1312,
														"name": "quantity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1284,
														"src": "33042:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 1313,
														"name": "_MAX_MINT_ERC2309_QUANTITY_LIMIT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 122,
														"src": "33053:32:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "33042:43:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1320,
												"nodeType": "IfStatement",
												"src": "33038:98:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1316,
																	"name": "MintERC2309QuantityExceedsLimit",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1871,
																	"src": "33095:31:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "33127:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "33095:40:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1315,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "33087:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1318,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33087:49:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1319,
													"nodeType": "ExpressionStatement",
													"src": "33087:49:2"
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "33177:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "33169:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1322,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "33169:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1325,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "33169:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1326,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1282,
															"src": "33181:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1327,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1288,
															"src": "33185:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1328,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1284,
															"src": "33199:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1321,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "33147:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "33147:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1330,
												"nodeType": "ExpressionStatement",
												"src": "33147:61:2"
											},
											{
												"id": 1385,
												"nodeType": "UncheckedBlock",
												"src": "33317:860:2",
												"statements": [
													{
														"expression": {
															"id": 1343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1331,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "33537:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1333,
																"indexExpression": {
																	"id": 1332,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1282,
																	"src": "33556:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "33537:22:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1334,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1284,
																	"src": "33563:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1340,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 1337,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"leftExpression": {
																							"hexValue": "31",
																							"id": 1335,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "33576:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_1_by_1",
																								"typeString": "int_const 1"
																							},
																							"value": "1"
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "<<",
																						"rightExpression": {
																							"id": 1336,
																							"name": "_BITPOS_NUMBER_MINTED",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 70,
																							"src": "33581:21:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "33576:26:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 1338,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "33575:28:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "|",
																			"rightExpression": {
																				"hexValue": "31",
																				"id": 1339,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "33606:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"src": "33575:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1341,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "33574:34:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "33563:45:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "33537:71:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1344,
														"nodeType": "ExpressionStatement",
														"src": "33537:71:2"
													},
													{
														"expression": {
															"id": 1363,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1345,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 137,
																	"src": "33844:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1347,
																"indexExpression": {
																	"id": 1346,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1288,
																	"src": "33862:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "33844:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1349,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1282,
																		"src": "33914:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1361,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 1351,
																					"name": "quantity",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1284,
																					"src": "33955:8:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1350,
																				"name": "_nextInitializedFlag",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 685,
																				"src": "33934:20:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) pure returns (uint256)"
																				}
																			},
																			"id": 1352,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "33934:30:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1356,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "33990:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1355,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "33982:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1354,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "33982:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1357,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "33982:10:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1358,
																					"name": "to",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1282,
																					"src": "33994:2:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"hexValue": "30",
																					"id": 1359,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "33998:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 1353,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1803,
																				"src": "33967:14:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1360,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "33967:33:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "33934:66:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1348,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "33878:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1362,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33878:136:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "33844:170:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1364,
														"nodeType": "ExpressionStatement",
														"src": "33844:170:2"
													},
													{
														"eventCall": {
															"arguments": [
																{
																	"id": 1366,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1288,
																	"src": "34054:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1371,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1369,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1367,
																			"name": "startTokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1288,
																			"src": "34068:12:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"id": 1368,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1284,
																			"src": "34083:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "34068:23:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 1370,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34094:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "34068:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"arguments": [
																		{
																			"hexValue": "30",
																			"id": 1374,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "34105:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 1373,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "34097:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1372,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "34097:7:2",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1375,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34097:10:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 1376,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1282,
																	"src": "34109:2:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1365,
																"name": "ConsecutiveTransfer",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2037,
																"src": "34034:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_address_$returns$__$",
																	"typeString": "function (uint256,uint256,address,address)"
																}
															},
															"id": 1377,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34034:78:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 1378,
														"nodeType": "EmitStatement",
														"src": "34029:83:2"
													},
													{
														"expression": {
															"id": 1383,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1379,
																"name": "_currentIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 127,
																"src": "34127:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1382,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1380,
																	"name": "startTokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1288,
																	"src": "34143:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1381,
																	"name": "quantity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1284,
																	"src": "34158:8:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "34143:23:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "34127:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1384,
														"nodeType": "ExpressionStatement",
														"src": "34127:39:2"
													}
												]
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1389,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "34215:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1388,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "34207:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1387,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "34207:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "34207:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1391,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1282,
															"src": "34219:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1392,
															"name": "startTokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1288,
															"src": "34223:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1393,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1284,
															"src": "34237:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1386,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "34186:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34186:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1395,
												"nodeType": "ExpressionStatement",
												"src": "34186:60:2"
											}
										]
									},
									"documentation": {
										"id": 1280,
										"nodeType": "StructuredDocumentation",
										"src": "31949:829:2",
										"text": " @dev Mints `quantity` tokens and transfers them to `to`.\n This function is intended for efficient minting only during contract creation.\n It emits only one {ConsecutiveTransfer} as defined in\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309),\n instead of a sequence of {Transfer} event(s).\n Calling this function outside of contract creation WILL make your contract\n non-compliant with the ERC721 standard.\n For full ERC721 compliance, substituting ERC721 {Transfer} event(s) with the ERC2309\n {ConsecutiveTransfer} event is only permissible during contract creation.\n Requirements:\n - `to` cannot be the zero address.\n - `quantity` must be greater than 0.\n Emits a {ConsecutiveTransfer} event."
									},
									"id": 1397,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintERC2309",
									"nameLocation": "32792:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "32813:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "32805:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1281,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "32805:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "32825:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1397,
												"src": "32817:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "32817:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32804:30:2"
									},
									"returnParameters": {
										"id": 1286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "32852:0:2"
									},
									"scope": 1832,
									"src": "32783:1470:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1464,
										"nodeType": "Block",
										"src": "34768:572:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1408,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1400,
															"src": "34784:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1409,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1402,
															"src": "34788:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1407,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1279,
														"src": "34778:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34778:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1411,
												"nodeType": "ExpressionStatement",
												"src": "34778:19:2"
											},
											{
												"id": 1463,
												"nodeType": "UncheckedBlock",
												"src": "34808:526:2",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1416,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 1412,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1400,
																		"src": "34836:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 1413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "34839:4:2",
																	"memberName": "code",
																	"nodeType": "MemberAccess",
																	"src": "34836:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																"id": 1414,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "34844:6:2",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "34836:14:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 1415,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "34854:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "34836:19:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1462,
														"nodeType": "IfStatement",
														"src": "34832:492:2",
														"trueBody": {
															"id": 1461,
															"nodeType": "Block",
															"src": "34857:467:2",
															"statements": [
																{
																	"assignments": [
																		1418
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1418,
																			"mutability": "mutable",
																			"name": "end",
																			"nameLocation": "34883:3:2",
																			"nodeType": "VariableDeclaration",
																			"scope": 1461,
																			"src": "34875:11:2",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1417,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "34875:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1420,
																	"initialValue": {
																		"id": 1419,
																		"name": "_currentIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 127,
																		"src": "34889:13:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "34875:27:2"
																},
																{
																	"assignments": [
																		1422
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1422,
																			"mutability": "mutable",
																			"name": "index",
																			"nameLocation": "34928:5:2",
																			"nodeType": "VariableDeclaration",
																			"scope": 1461,
																			"src": "34920:13:2",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1421,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "34920:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1426,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1425,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1423,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1418,
																			"src": "34936:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1424,
																			"name": "quantity",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1402,
																			"src": "34942:8:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "34936:14:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "34920:30:2"
																},
																{
																	"body": {
																		"id": 1445,
																		"nodeType": "Block",
																		"src": "34971:214:2",
																		"statements": [
																			{
																				"condition": {
																					"id": 1437,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "!",
																					"prefix": true,
																					"src": "34997:63:2",
																					"subExpression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"hexValue": "30",
																										"id": 1430,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "35037:1:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										},
																										"value": "0"
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_rational_0_by_1",
																											"typeString": "int_const 0"
																										}
																									],
																									"id": 1429,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "35029:7:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_address_$",
																										"typeString": "type(address)"
																									},
																									"typeName": {
																										"id": 1428,
																										"name": "address",
																										"nodeType": "ElementaryTypeName",
																										"src": "35029:7:2",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 1431,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "35029:10:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1432,
																								"name": "to",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1400,
																								"src": "35041:2:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							},
																							{
																								"id": 1434,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"nodeType": "UnaryOperation",
																								"operator": "++",
																								"prefix": false,
																								"src": "35045:7:2",
																								"subExpression": {
																									"id": 1433,
																									"name": "index",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1422,
																									"src": "35045:5:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"id": 1435,
																								"name": "_data",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 1404,
																								"src": "35054:5:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								},
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_bytes_memory_ptr",
																									"typeString": "bytes memory"
																								}
																							],
																							"id": 1427,
																							"name": "_checkContractOnERC721Received",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1160,
																							"src": "34998:30:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																								"typeString": "function (address,address,uint256,bytes memory) returns (bool)"
																							}
																						},
																						"id": 1436,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "34998:62:2",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1444,
																				"nodeType": "IfStatement",
																				"src": "34993:174:2",
																				"trueBody": {
																					"id": 1443,
																					"nodeType": "Block",
																					"src": "35062:105:2",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"expression": {
																											"id": 1439,
																											"name": "TransferToNonERC721ReceiverImplementer",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 1862,
																											"src": "35096:38:2",
																											"typeDescriptions": {
																												"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																												"typeString": "function () pure returns (error)"
																											}
																										},
																										"id": 1440,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "35135:8:2",
																										"memberName": "selector",
																										"nodeType": "MemberAccess",
																										"src": "35096:47:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes4",
																											"typeString": "bytes4"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes4",
																											"typeString": "bytes4"
																										}
																									],
																									"id": 1438,
																									"name": "_revert",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1831,
																									"src": "35088:7:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																										"typeString": "function (bytes4) pure"
																									}
																								},
																								"id": 1441,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "functionCall",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "35088:56:2",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_tuple$__$",
																									"typeString": "tuple()"
																								}
																							},
																							"id": 1442,
																							"nodeType": "ExpressionStatement",
																							"src": "35088:56:2"
																						}
																					]
																				}
																			}
																		]
																	},
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1448,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1446,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1422,
																			"src": "35193:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"id": 1447,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1418,
																			"src": "35201:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "35193:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1449,
																	"nodeType": "DoWhileStatement",
																	"src": "34968:238:2"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1450,
																			"name": "_currentIndex",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 127,
																			"src": "35269:13:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 1451,
																			"name": "end",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1418,
																			"src": "35286:3:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "35269:20:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1460,
																	"nodeType": "IfStatement",
																	"src": "35265:44:2",
																	"trueBody": {
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1456,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "35306:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1455,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "35299:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bytes4_$",
																							"typeString": "type(bytes4)"
																						},
																						"typeName": {
																							"id": 1454,
																							"name": "bytes4",
																							"nodeType": "ElementaryTypeName",
																							"src": "35299:6:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1457,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "35299:9:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes4",
																						"typeString": "bytes4"
																					}
																				],
																				"id": 1453,
																				"name": "_revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1831,
																				"src": "35291:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																					"typeString": "function (bytes4) pure"
																				}
																			},
																			"id": 1458,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "35291:18:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1459,
																		"nodeType": "ExpressionStatement",
																		"src": "35291:18:2"
																	}
																}
															]
														}
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1398,
										"nodeType": "StructuredDocumentation",
										"src": "34259:388:2",
										"text": " @dev Safely mints `quantity` tokens and transfers them to `to`.\n Requirements:\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called for each safe transfer.\n - `quantity` must be greater than 0.\n See {_mint}.\n Emits a {Transfer} event for each mint."
									},
									"id": 1465,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "34661:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1400,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "34688:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "34680:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "34680:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "34708:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "34700:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1401,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34700:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1404,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "34739:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "34726:18:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1403,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "34726:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34670:80:2"
									},
									"returnParameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "34768:0:2"
									},
									"scope": 1832,
									"src": "34652:688:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1479,
										"nodeType": "Block",
										"src": "35485:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1474,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "35505:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1475,
															"name": "quantity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1470,
															"src": "35509:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "",
															"id": 1476,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35519:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"id": 1473,
														"name": "_safeMint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1465,
															1480
														],
														"referencedDeclaration": 1465,
														"src": "35495:9:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,uint256,bytes memory)"
														}
													},
													"id": 1477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35495:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1478,
												"nodeType": "ExpressionStatement",
												"src": "35495:27:2"
											}
										]
									},
									"documentation": {
										"id": 1466,
										"nodeType": "StructuredDocumentation",
										"src": "35346:68:2",
										"text": " @dev Equivalent to `_safeMint(to, quantity, '')`."
									},
									"id": 1480,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_safeMint",
									"nameLocation": "35428:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1471,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "35446:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "35438:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35438:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1470,
												"mutability": "mutable",
												"name": "quantity",
												"nameLocation": "35458:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 1480,
												"src": "35450:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1469,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35450:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35437:30:2"
									},
									"returnParameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35485:0:2"
									},
									"scope": 1832,
									"src": "35419:110:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1494,
										"nodeType": "Block",
										"src": "35861:45:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1489,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1483,
															"src": "35880:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1490,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1485,
															"src": "35884:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1491,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "35893:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1488,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1495,
															1545
														],
														"referencedDeclaration": 1545,
														"src": "35871:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,uint256,bool)"
														}
													},
													"id": 1492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "35871:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1493,
												"nodeType": "ExpressionStatement",
												"src": "35871:28:2"
											}
										]
									},
									"documentation": {
										"id": 1481,
										"nodeType": "StructuredDocumentation",
										"src": "35723:69:2",
										"text": " @dev Equivalent to `_approve(to, tokenId, false)`."
									},
									"id": 1495,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "35806:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "35823:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "35815:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "35815:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "35835:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1495,
												"src": "35827:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1484,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "35827:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "35814:29:2"
									},
									"returnParameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "35861:0:2"
									},
									"scope": 1832,
									"src": "35797:109:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1544,
										"nodeType": "Block",
										"src": "36423:346:2",
										"statements": [
											{
												"assignments": [
													1506
												],
												"declarations": [
													{
														"constant": false,
														"id": 1506,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "36441:5:2",
														"nodeType": "VariableDeclaration",
														"scope": 1544,
														"src": "36433:13:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1505,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "36433:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1510,
												"initialValue": {
													"arguments": [
														{
															"id": 1508,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1500,
															"src": "36457:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1507,
														"name": "ownerOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 464,
														"src": "36449:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
															"typeString": "function (uint256) view returns (address)"
														}
													},
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36449:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "36433:32:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1511,
														"name": "approvalCheck",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1502,
														"src": "36480:13:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 1515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1512,
																"name": "_msgSenderERC721A",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1813,
																"src": "36497:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36497:19:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 1514,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1506,
															"src": "36520:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "36497:28:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "36480:45:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1530,
												"nodeType": "IfStatement",
												"src": "36476:198:2",
												"trueBody": {
													"condition": {
														"id": 1522,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "36543:45:2",
														"subExpression": {
															"arguments": [
																{
																	"id": 1518,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1506,
																	"src": "36561:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1519,
																		"name": "_msgSenderERC721A",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1813,
																		"src": "36568:17:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1520,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "36568:19:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1517,
																"name": "isApprovedForAll",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 770,
																"src": "36544:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address,address) view returns (bool)"
																}
															},
															"id": 1521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "36544:44:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"id": 1529,
													"nodeType": "IfStatement",
													"src": "36539:135:2",
													"trueBody": {
														"id": 1528,
														"nodeType": "Block",
														"src": "36590:84:2",
														"statements": [
															{
																"expression": {
																	"arguments": [
																		{
																			"expression": {
																				"id": 1524,
																				"name": "ApprovalCallerNotOwnerNorApproved",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1838,
																				"src": "36616:33:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																					"typeString": "function () pure returns (error)"
																				}
																			},
																			"id": 1525,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "36650:8:2",
																			"memberName": "selector",
																			"nodeType": "MemberAccess",
																			"src": "36616:42:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes4",
																				"typeString": "bytes4"
																			}
																		],
																		"id": 1523,
																		"name": "_revert",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1831,
																		"src": "36608:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																			"typeString": "function (bytes4) pure"
																		}
																	},
																	"id": 1526,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "36608:51:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$__$",
																		"typeString": "tuple()"
																	}
																},
																"id": 1527,
																"nodeType": "ExpressionStatement",
																"src": "36608:51:2"
															}
														]
													}
												}
											},
											{
												"expression": {
													"id": 1536,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 1531,
																"name": "_tokenApprovals",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 146,
																"src": "36684:15:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_TokenApprovalRef_$59_storage_$",
																	"typeString": "mapping(uint256 => struct ERC721A.TokenApprovalRef storage ref)"
																}
															},
															"id": 1533,
															"indexExpression": {
																"id": 1532,
																"name": "tokenId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1500,
																"src": "36700:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "36684:24:2",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_TokenApprovalRef_$59_storage",
																"typeString": "struct ERC721A.TokenApprovalRef storage ref"
															}
														},
														"id": 1534,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "36709:5:2",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 58,
														"src": "36684:30:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1535,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1498,
														"src": "36717:2:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "36684:35:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1537,
												"nodeType": "ExpressionStatement",
												"src": "36684:35:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1539,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1506,
															"src": "36743:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1540,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1498,
															"src": "36750:2:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1541,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1500,
															"src": "36754:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1538,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1915,
														"src": "36734:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1542,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "36734:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1543,
												"nodeType": "EmitStatement",
												"src": "36729:33:2"
											}
										]
									},
									"documentation": {
										"id": 1496,
										"nodeType": "StructuredDocumentation",
										"src": "35912:392:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"id": 1545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "36318:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1498,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "36344:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "36336:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1497,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "36336:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1500,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "36364:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "36356:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "36356:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1502,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "36386:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 1545,
												"src": "36381:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1501,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "36381:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "36326:79:2"
									},
									"returnParameters": {
										"id": 1504,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "36423:0:2"
									},
									"scope": 1832,
									"src": "36309:460:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1556,
										"nodeType": "Block",
										"src": "37076:38:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1552,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1548,
															"src": "37092:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "66616c7365",
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "37101:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "false"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 1551,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1557,
															1711
														],
														"referencedDeclaration": 1711,
														"src": "37086:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (uint256,bool)"
														}
													},
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37086:21:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1555,
												"nodeType": "ExpressionStatement",
												"src": "37086:21:2"
											}
										]
									},
									"documentation": {
										"id": 1546,
										"nodeType": "StructuredDocumentation",
										"src": "36960:62:2",
										"text": " @dev Equivalent to `_burn(tokenId, false)`."
									},
									"id": 1557,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "37036:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1548,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "37050:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1557,
												"src": "37042:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1547,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37042:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37041:17:2"
									},
									"returnParameters": {
										"id": 1550,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37076:0:2"
									},
									"scope": 1832,
									"src": "37027:87:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1710,
										"nodeType": "Block",
										"src": "37400:2955:2",
										"statements": [
											{
												"assignments": [
													1566
												],
												"declarations": [
													{
														"constant": false,
														"id": 1566,
														"mutability": "mutable",
														"name": "prevOwnershipPacked",
														"nameLocation": "37418:19:2",
														"nodeType": "VariableDeclaration",
														"scope": 1710,
														"src": "37410:27:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1565,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "37410:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1570,
												"initialValue": {
													"arguments": [
														{
															"id": 1568,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1560,
															"src": "37459:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1567,
														"name": "_packedOwnershipOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 609,
														"src": "37440:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) view returns (uint256)"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37440:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37410:57:2"
											},
											{
												"assignments": [
													1572
												],
												"declarations": [
													{
														"constant": false,
														"id": 1572,
														"mutability": "mutable",
														"name": "from",
														"nameLocation": "37486:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 1710,
														"src": "37478:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1571,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "37478:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1580,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 1577,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1566,
																	"src": "37509:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1576,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "37501:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint160_$",
																	"typeString": "type(uint160)"
																},
																"typeName": {
																	"id": 1575,
																	"name": "uint160",
																	"nodeType": "ElementaryTypeName",
																	"src": "37501:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "37501:28:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint160",
																"typeString": "uint160"
															}
														],
														"id": 1574,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "37493:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1573,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "37493:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 1579,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37493:37:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37478:52:2"
											},
											{
												"assignments": [
													1582,
													1584
												],
												"declarations": [
													{
														"constant": false,
														"id": 1582,
														"mutability": "mutable",
														"name": "approvedAddressSlot",
														"nameLocation": "37550:19:2",
														"nodeType": "VariableDeclaration",
														"scope": 1710,
														"src": "37542:27:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1581,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "37542:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1584,
														"mutability": "mutable",
														"name": "approvedAddress",
														"nameLocation": "37579:15:2",
														"nodeType": "VariableDeclaration",
														"scope": 1710,
														"src": "37571:23:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1583,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "37571:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1588,
												"initialValue": {
													"arguments": [
														{
															"id": 1586,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1560,
															"src": "37625:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1585,
														"name": "_getApprovedSlotAndAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 846,
														"src": "37598:26:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$_t_address_$",
															"typeString": "function (uint256) view returns (uint256,address)"
														}
													},
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37598:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$",
														"typeString": "tuple(uint256,address)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "37541:92:2"
											},
											{
												"condition": {
													"id": 1589,
													"name": "approvalCheck",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1562,
													"src": "37648:13:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1611,
												"nodeType": "IfStatement",
												"src": "37644:321:2",
												"trueBody": {
													"id": 1610,
													"nodeType": "Block",
													"src": "37663:302:2",
													"statements": [
														{
															"condition": {
																"id": 1596,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "!",
																"prefix": true,
																"src": "37766:69:2",
																"subExpression": {
																	"arguments": [
																		{
																			"id": 1591,
																			"name": "approvedAddress",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1584,
																			"src": "37792:15:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 1592,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1572,
																			"src": "37809:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 1593,
																				"name": "_msgSenderERC721A",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1813,
																				"src": "37815:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																					"typeString": "function () view returns (address)"
																				}
																			},
																			"id": 1594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "37815:19:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			},
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1590,
																		"name": "_isSenderApprovedOrOwner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 827,
																		"src": "37767:24:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_address_$returns$_t_bool_$",
																			"typeString": "function (address,address,address) pure returns (bool)"
																		}
																	},
																	"id": 1595,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "37767:68:2",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1609,
															"nodeType": "IfStatement",
															"src": "37762:192:2",
															"trueBody": {
																"condition": {
																	"id": 1602,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "37857:44:2",
																	"subExpression": {
																		"arguments": [
																			{
																				"id": 1598,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1572,
																				"src": "37875:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"arguments": [],
																				"expression": {
																					"argumentTypes": [],
																					"id": 1599,
																					"name": "_msgSenderERC721A",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1813,
																					"src": "37881:17:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																						"typeString": "function () view returns (address)"
																					}
																				},
																				"id": 1600,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "37881:19:2",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 1597,
																			"name": "isApprovedForAll",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 770,
																			"src": "37858:16:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
																				"typeString": "function (address,address) view returns (bool)"
																			}
																		},
																		"id": 1601,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "37858:43:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"id": 1608,
																"nodeType": "IfStatement",
																"src": "37853:101:2",
																"trueBody": {
																	"expression": {
																		"arguments": [
																			{
																				"expression": {
																					"id": 1604,
																					"name": "TransferCallerNotOwnerNorApproved",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1856,
																					"src": "37911:33:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																						"typeString": "function () pure returns (error)"
																					}
																				},
																				"id": 1605,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "37945:8:2",
																				"memberName": "selector",
																				"nodeType": "MemberAccess",
																				"src": "37911:42:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes4",
																					"typeString": "bytes4"
																				}
																			],
																			"id": 1603,
																			"name": "_revert",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1831,
																			"src": "37903:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																				"typeString": "function (bytes4) pure"
																			}
																		},
																		"id": 1606,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "37903:51:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 1607,
																	"nodeType": "ExpressionStatement",
																	"src": "37903:51:2"
																}
															}
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1613,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1572,
															"src": "37997:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1616,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "38011:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1615,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "38003:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1614,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "38003:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1617,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "38003:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1618,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1560,
															"src": "38015:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1619,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "38024:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1612,
														"name": "_beforeTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1091,
														"src": "37975:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "37975:51:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1621,
												"nodeType": "ExpressionStatement",
												"src": "37975:51:2"
											},
											{
												"AST": {
													"nativeSrc": "38098:181:2",
													"nodeType": "YulBlock",
													"src": "38098:181:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "38131:138:2",
																"nodeType": "YulBlock",
																"src": "38131:138:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "approvedAddressSlot",
																					"nativeSrc": "38232:19:2",
																					"nodeType": "YulIdentifier",
																					"src": "38232:19:2"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "38253:1:2",
																					"nodeType": "YulLiteral",
																					"src": "38253:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "sstore",
																				"nativeSrc": "38225:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "38225:6:2"
																			},
																			"nativeSrc": "38225:30:2",
																			"nodeType": "YulFunctionCall",
																			"src": "38225:30:2"
																		},
																		"nativeSrc": "38225:30:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "38225:30:2"
																	}
																]
															},
															"condition": {
																"name": "approvedAddress",
																"nativeSrc": "38115:15:2",
																"nodeType": "YulIdentifier",
																"src": "38115:15:2"
															},
															"nativeSrc": "38112:157:2",
															"nodeType": "YulIf",
															"src": "38112:157:2"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1584,
														"isOffset": false,
														"isSlot": false,
														"src": "38115:15:2",
														"valueSize": 1
													},
													{
														"declaration": 1582,
														"isOffset": false,
														"isSlot": false,
														"src": "38232:19:2",
														"valueSize": 1
													}
												],
												"id": 1622,
												"nodeType": "InlineAssembly",
												"src": "38089:190:2"
											},
											{
												"id": 1686,
												"nodeType": "UncheckedBlock",
												"src": "38546:1545:2",
												"statements": [
													{
														"expression": {
															"id": 1632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1623,
																	"name": "_packedAddressData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 141,
																	"src": "38858:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1625,
																"indexExpression": {
																	"id": 1624,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1572,
																	"src": "38877:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "38858:24:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "+=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1631,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1628,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "31",
																				"id": 1626,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "38887:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_1_by_1",
																					"typeString": "int_const 1"
																				},
																				"value": "1"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "<<",
																			"rightExpression": {
																				"id": 1627,
																				"name": "_BITPOS_NUMBER_BURNED",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 73,
																				"src": "38892:21:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "38887:26:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1629,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "38886:28:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1630,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "38917:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "38886:32:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "38858:60:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1633,
														"nodeType": "ExpressionStatement",
														"src": "38858:60:2"
													},
													{
														"expression": {
															"id": 1653,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"baseExpression": {
																	"id": 1634,
																	"name": "_packedOwnerships",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 137,
																	"src": "39149:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																		"typeString": "mapping(uint256 => uint256)"
																	}
																},
																"id": 1636,
																"indexExpression": {
																	"id": 1635,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1560,
																	"src": "39167:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": true,
																"nodeType": "IndexAccess",
																"src": "39149:26:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"arguments": [
																	{
																		"id": 1638,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1572,
																		"src": "39214:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"components": [
																				{
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1641,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1639,
																						"name": "_BITMASK_BURNED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 92,
																						"src": "39237:15:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "|",
																					"rightExpression": {
																						"id": 1640,
																						"name": "_BITMASK_NEXT_INITIALIZED",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 100,
																						"src": "39255:25:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "39237:43:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"id": 1642,
																			"isConstant": false,
																			"isInlineArray": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "TupleExpression",
																			"src": "39236:45:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "|",
																		"rightExpression": {
																			"arguments": [
																				{
																					"id": 1644,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1572,
																					"src": "39299:4:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"arguments": [
																						{
																							"hexValue": "30",
																							"id": 1647,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "39313:1:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							},
																							"value": "0"
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_rational_0_by_1",
																								"typeString": "int_const 0"
																							}
																						],
																						"id": 1646,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "39305:7:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1645,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "39305:7:2",
																							"typeDescriptions": {}
																						}
																					},
																					"id": 1648,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "39305:10:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 1649,
																					"name": "prevOwnershipPacked",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1566,
																					"src": "39317:19:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 1643,
																				"name": "_nextExtraData",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1803,
																				"src": "39284:14:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (address,address,uint256) view returns (uint256)"
																				}
																			},
																			"id": 1650,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "39284:53:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "39236:101:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1637,
																	"name": "_packOwnershipData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 675,
																	"src": "39178:18:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (address,uint256) view returns (uint256)"
																	}
																},
																"id": 1652,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "39178:173:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "39149:202:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1654,
														"nodeType": "ExpressionStatement",
														"src": "39149:202:2"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1655,
																	"name": "prevOwnershipPacked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1566,
																	"src": "39468:19:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1656,
																	"name": "_BITMASK_NEXT_INITIALIZED",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 100,
																	"src": "39490:25:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "39468:47:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1658,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "39519:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "39468:52:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1685,
														"nodeType": "IfStatement",
														"src": "39464:617:2",
														"trueBody": {
															"id": 1684,
															"nodeType": "Block",
															"src": "39522:559:2",
															"statements": [
																{
																	"assignments": [
																		1661
																	],
																	"declarations": [
																		{
																			"constant": false,
																			"id": 1661,
																			"mutability": "mutable",
																			"name": "nextTokenId",
																			"nameLocation": "39548:11:2",
																			"nodeType": "VariableDeclaration",
																			"scope": 1684,
																			"src": "39540:19:2",
																			"stateVariable": false,
																			"storageLocation": "default",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"typeName": {
																				"id": 1660,
																				"name": "uint256",
																				"nodeType": "ElementaryTypeName",
																				"src": "39540:7:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"visibility": "internal"
																		}
																	],
																	"id": 1665,
																	"initialValue": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1662,
																			"name": "tokenId",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1560,
																			"src": "39562:7:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1663,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "39572:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "39562:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "VariableDeclarationStatement",
																	"src": "39540:33:2"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1670,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 1666,
																				"name": "_packedOwnerships",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 137,
																				"src": "39693:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																					"typeString": "mapping(uint256 => uint256)"
																				}
																			},
																			"id": 1668,
																			"indexExpression": {
																				"id": 1667,
																				"name": "nextTokenId",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1661,
																				"src": "39711:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "39693:30:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1669,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "39727:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "39693:35:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 1683,
																	"nodeType": "IfStatement",
																	"src": "39689:378:2",
																	"trueBody": {
																		"id": 1682,
																		"nodeType": "Block",
																		"src": "39730:337:2",
																		"statements": [
																			{
																				"condition": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1673,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1671,
																						"name": "nextTokenId",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1661,
																						"src": "39814:11:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "!=",
																					"rightExpression": {
																						"id": 1672,
																						"name": "_currentIndex",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 127,
																						"src": "39829:13:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "39814:28:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bool",
																						"typeString": "bool"
																					}
																				},
																				"id": 1681,
																				"nodeType": "IfStatement",
																				"src": "39810:239:2",
																				"trueBody": {
																					"id": 1680,
																					"nodeType": "Block",
																					"src": "39844:205:2",
																					"statements": [
																						{
																							"expression": {
																								"id": 1678,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftHandSide": {
																									"baseExpression": {
																										"id": 1674,
																										"name": "_packedOwnerships",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 137,
																										"src": "39974:17:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																											"typeString": "mapping(uint256 => uint256)"
																										}
																									},
																									"id": 1676,
																									"indexExpression": {
																										"id": 1675,
																										"name": "nextTokenId",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1661,
																										"src": "39992:11:2",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": true,
																									"nodeType": "IndexAccess",
																									"src": "39974:30:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "Assignment",
																								"operator": "=",
																								"rightHandSide": {
																									"id": 1677,
																									"name": "prevOwnershipPacked",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1566,
																									"src": "40007:19:2",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"src": "39974:52:2",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"id": 1679,
																							"nodeType": "ExpressionStatement",
																							"src": "39974:52:2"
																						}
																					]
																				}
																			}
																		]
																	}
																}
															]
														}
													}
												]
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1688,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1572,
															"src": "40115:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "40129:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1690,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "40121:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1689,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "40121:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1692,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "40121:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1693,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1560,
															"src": "40133:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1687,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1906,
														"src": "40106:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40106:35:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1695,
												"nodeType": "EmitStatement",
												"src": "40101:40:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1697,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1572,
															"src": "40172:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 1700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "40186:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "40178:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1698,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "40178:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 1701,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "40178:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1702,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1560,
															"src": "40190:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 1703,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "40199:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 1696,
														"name": "_afterTokenTransfers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1104,
														"src": "40151:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 1704,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "40151:50:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1705,
												"nodeType": "ExpressionStatement",
												"src": "40151:50:2"
											},
											{
												"id": 1709,
												"nodeType": "UncheckedBlock",
												"src": "40300:49:2",
												"statements": [
													{
														"expression": {
															"id": 1707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "++",
															"prefix": false,
															"src": "40324:14:2",
															"subExpression": {
																"id": 1706,
																"name": "_burnCounter",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 129,
																"src": "40324:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1708,
														"nodeType": "ExpressionStatement",
														"src": "40324:14:2"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1558,
										"nodeType": "StructuredDocumentation",
										"src": "37120:206:2",
										"text": " @dev Destroys `tokenId`.\n The approval is cleared when the token is burned.\n Requirements:\n - `tokenId` must exist.\n Emits a {Transfer} event."
									},
									"id": 1711,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "37340:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1560,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "37354:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "37346:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "37346:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1562,
												"mutability": "mutable",
												"name": "approvalCheck",
												"nameLocation": "37368:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 1711,
												"src": "37363:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1561,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "37363:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "37345:37:2"
									},
									"returnParameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "37400:0:2"
									},
									"scope": 1832,
									"src": "37331:3024:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1756,
										"nodeType": "Block",
										"src": "40713:456:2",
										"statements": [
											{
												"assignments": [
													1720
												],
												"declarations": [
													{
														"constant": false,
														"id": 1720,
														"mutability": "mutable",
														"name": "packed",
														"nameLocation": "40731:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 1756,
														"src": "40723:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1719,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "40723:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1724,
												"initialValue": {
													"baseExpression": {
														"id": 1721,
														"name": "_packedOwnerships",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "40740:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
															"typeString": "mapping(uint256 => uint256)"
														}
													},
													"id": 1723,
													"indexExpression": {
														"id": 1722,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1714,
														"src": "40758:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "40740:24:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "40723:41:2"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1727,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1725,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1720,
														"src": "40778:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1726,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "40788:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "40778:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1733,
												"nodeType": "IfStatement",
												"src": "40774:70:2",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 1729,
																	"name": "OwnershipNotInitializedForExtraData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1874,
																	"src": "40799:35:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "40835:8:2",
																"memberName": "selector",
																"nodeType": "MemberAccess",
																"src": "40799:44:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"id": 1728,
															"name": "_revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "40791:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes4_$returns$__$",
																"typeString": "function (bytes4) pure"
															}
														},
														"id": 1731,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "40791:53:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 1732,
													"nodeType": "ExpressionStatement",
													"src": "40791:53:2"
												}
											},
											{
												"assignments": [
													1735
												],
												"declarations": [
													{
														"constant": false,
														"id": 1735,
														"mutability": "mutable",
														"name": "extraDataCasted",
														"nameLocation": "40862:15:2",
														"nodeType": "VariableDeclaration",
														"scope": 1756,
														"src": "40854:23:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1734,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "40854:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1736,
												"nodeType": "VariableDeclarationStatement",
												"src": "40854:23:2"
											},
											{
												"AST": {
													"nativeSrc": "40966:52:2",
													"nodeType": "YulBlock",
													"src": "40966:52:2",
													"statements": [
														{
															"nativeSrc": "40980:28:2",
															"nodeType": "YulAssignment",
															"src": "40980:28:2",
															"value": {
																"name": "extraData",
																"nativeSrc": "40999:9:2",
																"nodeType": "YulIdentifier",
																"src": "40999:9:2"
															},
															"variableNames": [
																{
																	"name": "extraDataCasted",
																	"nativeSrc": "40980:15:2",
																	"nodeType": "YulIdentifier",
																	"src": "40980:15:2"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1716,
														"isOffset": false,
														"isSlot": false,
														"src": "40999:9:2",
														"valueSize": 1
													},
													{
														"declaration": 1735,
														"isOffset": false,
														"isSlot": false,
														"src": "40980:15:2",
														"valueSize": 1
													}
												],
												"id": 1737,
												"nodeType": "InlineAssembly",
												"src": "40957:61:2"
											},
											{
												"expression": {
													"id": 1748,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1738,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1720,
														"src": "41027:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1747,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1739,
																		"name": "packed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1720,
																		"src": "41037:6:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "&",
																	"rightExpression": {
																		"id": 1740,
																		"name": "_BITMASK_EXTRA_DATA_COMPLEMENT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 111,
																		"src": "41046:30:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "41037:39:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1742,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "41036:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "|",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1745,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1743,
																		"name": "extraDataCasted",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1735,
																		"src": "41081:15:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "<<",
																	"rightExpression": {
																		"id": 1744,
																		"name": "_BITPOS_EXTRA_DATA",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 103,
																		"src": "41100:18:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "41081:37:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1746,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "41080:39:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "41036:83:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "41027:92:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1749,
												"nodeType": "ExpressionStatement",
												"src": "41027:92:2"
											},
											{
												"expression": {
													"id": 1754,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1750,
															"name": "_packedOwnerships",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "41129:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																"typeString": "mapping(uint256 => uint256)"
															}
														},
														"id": 1752,
														"indexExpression": {
															"id": 1751,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1714,
															"src": "41147:5:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "41129:24:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1753,
														"name": "packed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1720,
														"src": "41156:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "41129:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1755,
												"nodeType": "ExpressionStatement",
												"src": "41129:33:2"
											}
										]
									},
									"documentation": {
										"id": 1712,
										"nodeType": "StructuredDocumentation",
										"src": "40549:84:2",
										"text": " @dev Directly sets the extra data for the ownership data `index`."
									},
									"id": 1757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setExtraDataAt",
									"nameLocation": "40647:15:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1717,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1714,
												"mutability": "mutable",
												"name": "index",
												"nameLocation": "40671:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "40663:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "40663:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1716,
												"mutability": "mutable",
												"name": "extraData",
												"nameLocation": "40685:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 1757,
												"src": "40678:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1715,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "40678:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "40662:33:2"
									},
									"returnParameters": {
										"id": 1718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "40713:0:2"
									},
									"scope": 1832,
									"src": "40638:531:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1769,
										"nodeType": "Block",
										"src": "41870:2:2",
										"statements": []
									},
									"documentation": {
										"id": 1758,
										"nodeType": "StructuredDocumentation",
										"src": "41175:549:2",
										"text": " @dev Called during each token transfer to set the 24bit `extraData` field.\n Intended to be overridden by the cosumer contract.\n `previousExtraData` - the value of `extraData` before transfer.\n Calling conditions:\n - When `from` and `to` are both non-zero, `from`'s `tokenId` will be\n transferred to `to`.\n - When `from` is zero, `tokenId` will be minted for `to`.\n - When `to` is zero, `tokenId` will be burned by `from`.\n - `from` and `to` are never both zero."
									},
									"id": 1770,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_extraData",
									"nameLocation": "41738:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1765,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1760,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "41766:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "41758:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41758:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "41788:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "41780:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1761,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "41780:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "previousExtraData",
												"nameLocation": "41807:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "41800:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1763,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "41800:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41748:82:2"
									},
									"returnParameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1770,
												"src": "41862:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 1766,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "41862:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "41861:8:2"
									},
									"scope": 1832,
									"src": "41729:143:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1802,
										"nodeType": "Block",
										"src": "42158:164:2",
										"statements": [
											{
												"assignments": [
													1783
												],
												"declarations": [
													{
														"constant": false,
														"id": 1783,
														"mutability": "mutable",
														"name": "extraData",
														"nameLocation": "42175:9:2",
														"nodeType": "VariableDeclaration",
														"scope": 1802,
														"src": "42168:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														},
														"typeName": {
															"id": 1782,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "42168:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1790,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1788,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1786,
																"name": "prevOwnershipPacked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1777,
																"src": "42194:19:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">>",
															"rightExpression": {
																"id": 1787,
																"name": "_BITPOS_EXTRA_DATA",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 103,
																"src": "42217:18:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "42194:41:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1785,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "42187:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 1784,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "42187:6:2",
															"typeDescriptions": {}
														}
													},
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "42187:49:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "42168:68:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 1794,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1773,
																		"src": "42272:4:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1795,
																		"name": "to",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1775,
																		"src": "42278:2:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1796,
																		"name": "extraData",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1783,
																		"src": "42282:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	],
																	"id": 1793,
																	"name": "_extraData",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1770,
																	"src": "42261:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$_t_uint24_$returns$_t_uint24_$",
																		"typeString": "function (address,address,uint24) view returns (uint24)"
																	}
																},
																"id": 1797,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "42261:31:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 1792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "42253:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 1791,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "42253:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 1798,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "42253:40:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"id": 1799,
														"name": "_BITPOS_EXTRA_DATA",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "42297:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "42253:62:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1781,
												"id": 1801,
												"nodeType": "Return",
												"src": "42246:69:2"
											}
										]
									},
									"documentation": {
										"id": 1771,
										"nodeType": "StructuredDocumentation",
										"src": "41878:135:2",
										"text": " @dev Returns the next extra data for the packed ownership data.\n The returned result is shifted into position."
									},
									"id": 1803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nextExtraData",
									"nameLocation": "42027:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1773,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "42059:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "42051:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1772,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42051:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1775,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "42081:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "42073:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42073:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1777,
												"mutability": "mutable",
												"name": "prevOwnershipPacked",
												"nameLocation": "42101:19:2",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "42093:27:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1776,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42093:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42041:85:2"
									},
									"returnParameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "42149:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1779,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42149:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42148:9:2"
									},
									"scope": 1832,
									"src": "42018:304:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1812,
										"nodeType": "Block",
										"src": "42760:34:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1809,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "42777:3:2",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1810,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "42781:6:2",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "42777:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1808,
												"id": 1811,
												"nodeType": "Return",
												"src": "42770:17:2"
											}
										]
									},
									"documentation": {
										"id": 1804,
										"nodeType": "StructuredDocumentation",
										"src": "42513:173:2",
										"text": " @dev Returns the message sender (defaults to `msg.sender`).\n If you are writing GSN compatible contracts, you need to override this function."
									},
									"id": 1813,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSenderERC721A",
									"nameLocation": "42700:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "42717:2:2"
									},
									"returnParameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1813,
												"src": "42751:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1806,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "42751:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42750:9:2"
									},
									"scope": 1832,
									"src": "42691:103:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1822,
										"nodeType": "Block",
										"src": "42975:1624:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "42994:1599:2",
													"nodeType": "YulBlock",
													"src": "42994:1599:2",
													"statements": [
														{
															"nativeSrc": "43358:31:2",
															"nodeType": "YulVariableDeclaration",
															"src": "43358:31:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "43377:4:2",
																				"nodeType": "YulLiteral",
																				"src": "43377:4:2",
																				"type": "",
																				"value": "0x40"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "43371:5:2",
																			"nodeType": "YulIdentifier",
																			"src": "43371:5:2"
																		},
																		"nativeSrc": "43371:11:2",
																		"nodeType": "YulFunctionCall",
																		"src": "43371:11:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "43384:4:2",
																		"nodeType": "YulLiteral",
																		"src": "43384:4:2",
																		"type": "",
																		"value": "0xa0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "43367:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "43367:3:2"
																},
																"nativeSrc": "43367:22:2",
																"nodeType": "YulFunctionCall",
																"src": "43367:22:2"
															},
															"variables": [
																{
																	"name": "m",
																	"nativeSrc": "43362:1:2",
																	"nodeType": "YulTypedName",
																	"src": "43362:1:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "43468:4:2",
																		"nodeType": "YulLiteral",
																		"src": "43468:4:2",
																		"type": "",
																		"value": "0x40"
																	},
																	{
																		"name": "m",
																		"nativeSrc": "43474:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "43474:1:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "43461:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "43461:6:2"
																},
																"nativeSrc": "43461:15:2",
																"nodeType": "YulFunctionCall",
																"src": "43461:15:2"
															},
															"nativeSrc": "43461:15:2",
															"nodeType": "YulExpressionStatement",
															"src": "43461:15:2"
														},
														{
															"nativeSrc": "43533:19:2",
															"nodeType": "YulAssignment",
															"src": "43533:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "m",
																		"nativeSrc": "43544:1:2",
																		"nodeType": "YulIdentifier",
																		"src": "43544:1:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "43547:4:2",
																		"nodeType": "YulLiteral",
																		"src": "43547:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "43540:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "43540:3:2"
																},
																"nativeSrc": "43540:12:2",
																"nodeType": "YulFunctionCall",
																"src": "43540:12:2"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nativeSrc": "43533:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "43533:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "43622:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "43622:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "43627:1:2",
																		"nodeType": "YulLiteral",
																		"src": "43627:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "43615:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "43615:6:2"
																},
																"nativeSrc": "43615:14:2",
																"nodeType": "YulFunctionCall",
																"src": "43615:14:2"
															},
															"nativeSrc": "43615:14:2",
															"nodeType": "YulExpressionStatement",
															"src": "43615:14:2"
														},
														{
															"nativeSrc": "43717:14:2",
															"nodeType": "YulVariableDeclaration",
															"src": "43717:14:2",
															"value": {
																"name": "str",
																"nativeSrc": "43728:3:2",
																"nodeType": "YulIdentifier",
																"src": "43728:3:2"
															},
															"variables": [
																{
																	"name": "end",
																	"nativeSrc": "43721:3:2",
																	"nodeType": "YulTypedName",
																	"src": "43721:3:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "43975:388:2",
																"nodeType": "YulBlock",
																"src": "43975:388:2",
																"statements": [
																	{
																		"nativeSrc": "43993:18:2",
																		"nodeType": "YulAssignment",
																		"src": "43993:18:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "str",
																					"nativeSrc": "44004:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "44004:3:2"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "44009:1:2",
																					"nodeType": "YulLiteral",
																					"src": "44009:1:2",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "sub",
																				"nativeSrc": "44000:3:2",
																				"nodeType": "YulIdentifier",
																				"src": "44000:3:2"
																			},
																			"nativeSrc": "44000:11:2",
																			"nodeType": "YulFunctionCall",
																			"src": "44000:11:2"
																		},
																		"variableNames": [
																			{
																				"name": "str",
																				"nativeSrc": "43993:3:2",
																				"nodeType": "YulIdentifier",
																				"src": "43993:3:2"
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "str",
																					"nativeSrc": "44154:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "44154:3:2"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "44163:2:2",
																							"nodeType": "YulLiteral",
																							"src": "44163:2:2",
																							"type": "",
																							"value": "48"
																						},
																						{
																							"arguments": [
																								{
																									"name": "temp",
																									"nativeSrc": "44171:4:2",
																									"nodeType": "YulIdentifier",
																									"src": "44171:4:2"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "44177:2:2",
																									"nodeType": "YulLiteral",
																									"src": "44177:2:2",
																									"type": "",
																									"value": "10"
																								}
																							],
																							"functionName": {
																								"name": "mod",
																								"nativeSrc": "44167:3:2",
																								"nodeType": "YulIdentifier",
																								"src": "44167:3:2"
																							},
																							"nativeSrc": "44167:13:2",
																							"nodeType": "YulFunctionCall",
																							"src": "44167:13:2"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "44159:3:2",
																						"nodeType": "YulIdentifier",
																						"src": "44159:3:2"
																					},
																					"nativeSrc": "44159:22:2",
																					"nodeType": "YulFunctionCall",
																					"src": "44159:22:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore8",
																				"nativeSrc": "44146:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "44146:7:2"
																			},
																			"nativeSrc": "44146:36:2",
																			"nodeType": "YulFunctionCall",
																			"src": "44146:36:2"
																		},
																		"nativeSrc": "44146:36:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "44146:36:2"
																	},
																	{
																		"nativeSrc": "44251:21:2",
																		"nodeType": "YulAssignment",
																		"src": "44251:21:2",
																		"value": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nativeSrc": "44263:4:2",
																					"nodeType": "YulIdentifier",
																					"src": "44263:4:2"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "44269:2:2",
																					"nodeType": "YulLiteral",
																					"src": "44269:2:2",
																					"type": "",
																					"value": "10"
																				}
																			],
																			"functionName": {
																				"name": "div",
																				"nativeSrc": "44259:3:2",
																				"nodeType": "YulIdentifier",
																				"src": "44259:3:2"
																			},
																			"nativeSrc": "44259:13:2",
																			"nodeType": "YulFunctionCall",
																			"src": "44259:13:2"
																		},
																		"variableNames": [
																			{
																				"name": "temp",
																				"nativeSrc": "44251:4:2",
																				"nodeType": "YulIdentifier",
																				"src": "44251:4:2"
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "44340:9:2",
																			"nodeType": "YulBlock",
																			"src": "44340:9:2",
																			"statements": [
																				{
																					"nativeSrc": "44342:5:2",
																					"nodeType": "YulBreak",
																					"src": "44342:5:2"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "temp",
																					"nativeSrc": "44334:4:2",
																					"nodeType": "YulIdentifier",
																					"src": "44334:4:2"
																				}
																			],
																			"functionName": {
																				"name": "iszero",
																				"nativeSrc": "44327:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "44327:6:2"
																			},
																			"nativeSrc": "44327:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "44327:12:2"
																		},
																		"nativeSrc": "44324:25:2",
																		"nodeType": "YulIf",
																		"src": "44324:25:2"
																	}
																]
															},
															"condition": {
																"kind": "number",
																"nativeSrc": "43970:1:2",
																"nodeType": "YulLiteral",
																"src": "43970:1:2",
																"type": "",
																"value": "1"
															},
															"nativeSrc": "43944:419:2",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "43972:2:2",
																"nodeType": "YulBlock",
																"src": "43972:2:2",
																"statements": []
															},
															"pre": {
																"nativeSrc": "43948:21:2",
																"nodeType": "YulBlock",
																"src": "43948:21:2",
																"statements": [
																	{
																		"nativeSrc": "43950:17:2",
																		"nodeType": "YulVariableDeclaration",
																		"src": "43950:17:2",
																		"value": {
																			"name": "value",
																			"nativeSrc": "43962:5:2",
																			"nodeType": "YulIdentifier",
																			"src": "43962:5:2"
																		},
																		"variables": [
																			{
																				"name": "temp",
																				"nativeSrc": "43954:4:2",
																				"nodeType": "YulTypedName",
																				"src": "43954:4:2",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "43944:419:2"
														},
														{
															"nativeSrc": "44377:27:2",
															"nodeType": "YulVariableDeclaration",
															"src": "44377:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "end",
																		"nativeSrc": "44395:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "44395:3:2"
																	},
																	{
																		"name": "str",
																		"nativeSrc": "44400:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "44400:3:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "44391:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "44391:3:2"
																},
																"nativeSrc": "44391:13:2",
																"nodeType": "YulFunctionCall",
																"src": "44391:13:2"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "44381:6:2",
																	"nodeType": "YulTypedName",
																	"src": "44381:6:2",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "44497:21:2",
															"nodeType": "YulAssignment",
															"src": "44497:21:2",
															"value": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "44508:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "44508:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "44513:4:2",
																		"nodeType": "YulLiteral",
																		"src": "44513:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "44504:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "44504:3:2"
																},
																"nativeSrc": "44504:14:2",
																"nodeType": "YulFunctionCall",
																"src": "44504:14:2"
															},
															"variableNames": [
																{
																	"name": "str",
																	"nativeSrc": "44497:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "44497:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "str",
																		"nativeSrc": "44571:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "44571:3:2"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "44576:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "44576:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "44564:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "44564:6:2"
																},
																"nativeSrc": "44564:19:2",
																"nodeType": "YulFunctionCall",
																"src": "44564:19:2"
															},
															"nativeSrc": "44564:19:2",
															"nodeType": "YulExpressionStatement",
															"src": "44564:19:2"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1819,
														"isOffset": false,
														"isSlot": false,
														"src": "43533:3:2",
														"valueSize": 1
													},
													{
														"declaration": 1819,
														"isOffset": false,
														"isSlot": false,
														"src": "43622:3:2",
														"valueSize": 1
													},
													{
														"declaration": 1819,
														"isOffset": false,
														"isSlot": false,
														"src": "43728:3:2",
														"valueSize": 1
													},
													{
														"declaration": 1819,
														"isOffset": false,
														"isSlot": false,
														"src": "43993:3:2",
														"valueSize": 1
													},
													{
														"declaration": 1819,
														"isOffset": false,
														"isSlot": false,
														"src": "44004:3:2",
														"valueSize": 1
													},
													{
														"declaration": 1819,
														"isOffset": false,
														"isSlot": false,
														"src": "44154:3:2",
														"valueSize": 1
													},
													{
														"declaration": 1819,
														"isOffset": false,
														"isSlot": false,
														"src": "44400:3:2",
														"valueSize": 1
													},
													{
														"declaration": 1819,
														"isOffset": false,
														"isSlot": false,
														"src": "44497:3:2",
														"valueSize": 1
													},
													{
														"declaration": 1819,
														"isOffset": false,
														"isSlot": false,
														"src": "44508:3:2",
														"valueSize": 1
													},
													{
														"declaration": 1819,
														"isOffset": false,
														"isSlot": false,
														"src": "44571:3:2",
														"valueSize": 1
													},
													{
														"declaration": 1816,
														"isOffset": false,
														"isSlot": false,
														"src": "43962:5:2",
														"valueSize": 1
													}
												],
												"id": 1821,
												"nodeType": "InlineAssembly",
												"src": "42985:1608:2"
											}
										]
									},
									"documentation": {
										"id": 1814,
										"nodeType": "StructuredDocumentation",
										"src": "42800:86:2",
										"text": " @dev Converts a uint256 to its ASCII string decimal representation."
									},
									"id": 1823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_toString",
									"nameLocation": "42900:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1816,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "42918:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "42910:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1815,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "42910:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42909:15:2"
									},
									"returnParameters": {
										"id": 1820,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1819,
												"mutability": "mutable",
												"name": "str",
												"nameLocation": "42970:3:2",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "42956:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1818,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "42956:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "42955:19:2"
									},
									"scope": 1832,
									"src": "42891:1708:2",
									"stateMutability": "pure",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1830,
										"nodeType": "Block",
										"src": "44714:107:2",
										"statements": [
											{
												"AST": {
													"nativeSrc": "44733:82:2",
													"nodeType": "YulBlock",
													"src": "44733:82:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "44754:4:2",
																		"nodeType": "YulLiteral",
																		"src": "44754:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"name": "errorSelector",
																		"nativeSrc": "44760:13:2",
																		"nodeType": "YulIdentifier",
																		"src": "44760:13:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "44747:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "44747:6:2"
																},
																"nativeSrc": "44747:27:2",
																"nodeType": "YulFunctionCall",
																"src": "44747:27:2"
															},
															"nativeSrc": "44747:27:2",
															"nodeType": "YulExpressionStatement",
															"src": "44747:27:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "44794:4:2",
																		"nodeType": "YulLiteral",
																		"src": "44794:4:2",
																		"type": "",
																		"value": "0x00"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "44800:4:2",
																		"nodeType": "YulLiteral",
																		"src": "44800:4:2",
																		"type": "",
																		"value": "0x04"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "44787:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "44787:6:2"
																},
																"nativeSrc": "44787:18:2",
																"nodeType": "YulFunctionCall",
																"src": "44787:18:2"
															},
															"nativeSrc": "44787:18:2",
															"nodeType": "YulExpressionStatement",
															"src": "44787:18:2"
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 1826,
														"isOffset": false,
														"isSlot": false,
														"src": "44760:13:2",
														"valueSize": 1
													}
												],
												"id": 1829,
												"nodeType": "InlineAssembly",
												"src": "44724:91:2"
											}
										]
									},
									"documentation": {
										"id": 1824,
										"nodeType": "StructuredDocumentation",
										"src": "44605:51:2",
										"text": " @dev For more efficient reverts."
									},
									"id": 1831,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "44670:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "errorSelector",
												"nameLocation": "44685:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 1831,
												"src": "44678:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1825,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "44678:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "44677:22:2"
									},
									"returnParameters": {
										"id": 1828,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "44714:0:2"
									},
									"scope": 1832,
									"src": "44661:160:2",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1833,
							"src": "2185:42638:2",
							"usedErrors": [
								1838,
								1841,
								1844,
								1847,
								1850,
								1853,
								1856,
								1859,
								1862,
								1865,
								1868,
								1871,
								1874
							],
							"usedEvents": [
								1906,
								1915,
								1924,
								2037
							]
						}
					],
					"src": "1374:43450:2"
				},
				"id": 2
			},
			"Azuki-ERC721A-ERC721ABurnable(copy)(copy)/IERC721A.sol": {
				"ast": {
					"absolutePath": "Azuki-ERC721A-ERC721ABurnable(copy)(copy)/IERC721A.sol",
					"exportedSymbols": {
						"IERC721A": [
							2038
						]
					},
					"id": 2039,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1834,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "1374:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721A",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1835,
								"nodeType": "StructuredDocumentation",
								"src": "1399:37:3",
								"text": " @dev Interface of ERC721A."
							},
							"fullyImplemented": false,
							"id": 2038,
							"linearizedBaseContracts": [
								2038
							],
							"name": "IERC721A",
							"nameLocation": "1447:8:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1836,
										"nodeType": "StructuredDocumentation",
										"src": "1462:76:3",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "cfb3b942",
									"id": 1838,
									"name": "ApprovalCallerNotOwnerNorApproved",
									"nameLocation": "1549:33:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1837,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1582:2:3"
									},
									"src": "1543:42:3"
								},
								{
									"documentation": {
										"id": 1839,
										"nodeType": "StructuredDocumentation",
										"src": "1591:44:3",
										"text": " The token does not exist."
									},
									"errorSelector": "cf4700e4",
									"id": 1841,
									"name": "ApprovalQueryForNonexistentToken",
									"nameLocation": "1646:32:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1678:2:3"
									},
									"src": "1640:41:3"
								},
								{
									"documentation": {
										"id": 1842,
										"nodeType": "StructuredDocumentation",
										"src": "1687:65:3",
										"text": " Cannot query the balance for the zero address."
									},
									"errorSelector": "8f4eb604",
									"id": 1844,
									"name": "BalanceQueryForZeroAddress",
									"nameLocation": "1763:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1789:2:3"
									},
									"src": "1757:35:3"
								},
								{
									"documentation": {
										"id": 1845,
										"nodeType": "StructuredDocumentation",
										"src": "1798:51:3",
										"text": " Cannot mint to the zero address."
									},
									"errorSelector": "2e076300",
									"id": 1847,
									"name": "MintToZeroAddress",
									"nameLocation": "1860:17:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1846,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1877:2:3"
									},
									"src": "1854:26:3"
								},
								{
									"documentation": {
										"id": 1848,
										"nodeType": "StructuredDocumentation",
										"src": "1886:72:3",
										"text": " The quantity of tokens minted must be more than zero."
									},
									"errorSelector": "b562e8dd",
									"id": 1850,
									"name": "MintZeroQuantity",
									"nameLocation": "1969:16:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1849,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1985:2:3"
									},
									"src": "1963:25:3"
								},
								{
									"documentation": {
										"id": 1851,
										"nodeType": "StructuredDocumentation",
										"src": "1994:44:3",
										"text": " The token does not exist."
									},
									"errorSelector": "df2d9b42",
									"id": 1853,
									"name": "OwnerQueryForNonexistentToken",
									"nameLocation": "2049:29:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2078:2:3"
									},
									"src": "2043:38:3"
								},
								{
									"documentation": {
										"id": 1854,
										"nodeType": "StructuredDocumentation",
										"src": "2087:76:3",
										"text": " The caller must own the token or be an approved operator."
									},
									"errorSelector": "59c896be",
									"id": 1856,
									"name": "TransferCallerNotOwnerNorApproved",
									"nameLocation": "2174:33:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1855,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2207:2:3"
									},
									"src": "2168:42:3"
								},
								{
									"documentation": {
										"id": 1857,
										"nodeType": "StructuredDocumentation",
										"src": "2216:53:3",
										"text": " The token must be owned by `from`."
									},
									"errorSelector": "a1148100",
									"id": 1859,
									"name": "TransferFromIncorrectOwner",
									"nameLocation": "2280:26:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2306:2:3"
									},
									"src": "2274:35:3"
								},
								{
									"documentation": {
										"id": 1860,
										"nodeType": "StructuredDocumentation",
										"src": "2315:116:3",
										"text": " Cannot safely transfer to a contract that does not implement the\n ERC721Receiver interface."
									},
									"errorSelector": "d1a57ed6",
									"id": 1862,
									"name": "TransferToNonERC721ReceiverImplementer",
									"nameLocation": "2442:38:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2480:2:3"
									},
									"src": "2436:47:3"
								},
								{
									"documentation": {
										"id": 1863,
										"nodeType": "StructuredDocumentation",
										"src": "2489:55:3",
										"text": " Cannot transfer to the zero address."
									},
									"errorSelector": "ea553b34",
									"id": 1865,
									"name": "TransferToZeroAddress",
									"nameLocation": "2555:21:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1864,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2576:2:3"
									},
									"src": "2549:30:3"
								},
								{
									"documentation": {
										"id": 1866,
										"nodeType": "StructuredDocumentation",
										"src": "2585:44:3",
										"text": " The token does not exist."
									},
									"errorSelector": "a14c4b50",
									"id": 1868,
									"name": "URIQueryForNonexistentToken",
									"nameLocation": "2640:27:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:2:3"
									},
									"src": "2634:36:3"
								},
								{
									"documentation": {
										"id": 1869,
										"nodeType": "StructuredDocumentation",
										"src": "2676:79:3",
										"text": " The `quantity` minted with ERC2309 exceeds the safety limit."
									},
									"errorSelector": "3db1f9af",
									"id": 1871,
									"name": "MintERC2309QuantityExceedsLimit",
									"nameLocation": "2766:31:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1870,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2797:2:3"
									},
									"src": "2760:40:3"
								},
								{
									"documentation": {
										"id": 1872,
										"nodeType": "StructuredDocumentation",
										"src": "2806:83:3",
										"text": " The `extraData` cannot be set on an unintialized ownership slot."
									},
									"errorSelector": "00d58153",
									"id": 1874,
									"name": "OwnershipNotInitializedForExtraData",
									"nameLocation": "2900:35:3",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1873,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2935:2:3"
									},
									"src": "2894:44:3"
								},
								{
									"canonicalName": "IERC721A.TokenOwnership",
									"id": 1883,
									"members": [
										{
											"constant": false,
											"id": 1876,
											"mutability": "mutable",
											"name": "addr",
											"nameLocation": "3202:4:3",
											"nodeType": "VariableDeclaration",
											"scope": 1883,
											"src": "3194:12:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1875,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3194:7:3",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1878,
											"mutability": "mutable",
											"name": "startTimestamp",
											"nameLocation": "3307:14:3",
											"nodeType": "VariableDeclaration",
											"scope": 1883,
											"src": "3300:21:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 1877,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "3300:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1880,
											"mutability": "mutable",
											"name": "burned",
											"nameLocation": "3382:6:3",
											"nodeType": "VariableDeclaration",
											"scope": 1883,
											"src": "3377:11:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1879,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "3377:4:3",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1882,
											"mutability": "mutable",
											"name": "extraData",
											"nameLocation": "3493:9:3",
											"nodeType": "VariableDeclaration",
											"scope": 1883,
											"src": "3486:16:3",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 1881,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "3486:6:3",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "TokenOwnership",
									"nameLocation": "3132:14:3",
									"nodeType": "StructDefinition",
									"scope": 2038,
									"src": "3125:384:3",
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 1884,
										"nodeType": "StructuredDocumentation",
										"src": "3700:192:3",
										"text": " @dev Returns the total number of tokens in existence.\n Burned tokens will reduce the count.\n To get the total number of tokens minted, please see {_totalMinted}."
									},
									"functionSelector": "18160ddd",
									"id": 1889,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3906:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3917:2:3"
									},
									"returnParameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1889,
												"src": "3943:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3943:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3942:9:3"
									},
									"scope": 2038,
									"src": "3897:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1890,
										"nodeType": "StructuredDocumentation",
										"src": "4139:341:3",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n [EIP section](https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified)\n to learn more about how these ids are created.\n This function call must use less than 30000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1897,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "4494:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "4519:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "4512:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1891,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "4512:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4511:20:3"
									},
									"returnParameters": {
										"id": 1896,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1897,
												"src": "4555:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1894,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4555:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4554:6:3"
									},
									"scope": 2038,
									"src": "4485:76:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1898,
										"nodeType": "StructuredDocumentation",
										"src": "4748:88:3",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1906,
									"name": "Transfer",
									"nameLocation": "4847:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4872:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1906,
												"src": "4856:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1899,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4856:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1902,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4894:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1906,
												"src": "4878:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4878:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1904,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4914:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1906,
												"src": "4898:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4898:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4855:67:3"
									},
									"src": "4841:82:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1907,
										"nodeType": "StructuredDocumentation",
										"src": "4929:94:3",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1915,
									"name": "Approval",
									"nameLocation": "5034:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1914,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1909,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5059:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "5043:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5043:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1911,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "5082:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "5066:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1910,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5066:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1913,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5108:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1915,
												"src": "5092:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1912,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5092:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5042:74:3"
									},
									"src": "5028:89:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1916,
										"nodeType": "StructuredDocumentation",
										"src": "5123:124:3",
										"text": " @dev Emitted when `owner` enables or disables\n (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1924,
									"name": "ApprovalForAll",
									"nameLocation": "5258:14:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1918,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5289:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "5273:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1917,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5273:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1920,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5312:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "5296:24:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1919,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5296:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1922,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "5327:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "5322:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1921,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5322:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5272:64:3"
									},
									"src": "5252:85:3"
								},
								{
									"documentation": {
										"id": 1925,
										"nodeType": "StructuredDocumentation",
										"src": "5343:74:3",
										"text": " @dev Returns the number of tokens in `owner`'s account."
									},
									"functionSelector": "70a08231",
									"id": 1932,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "5431:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1928,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1927,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5449:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "5441:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1926,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5441:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5440:15:3"
									},
									"returnParameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "5487:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "5479:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5479:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5478:17:3"
									},
									"scope": 2038,
									"src": "5422:74:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1933,
										"nodeType": "StructuredDocumentation",
										"src": "5502:131:3",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1940,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "5647:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1935,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5663:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1940,
												"src": "5655:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5655:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5654:17:3"
									},
									"returnParameters": {
										"id": 1939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1938,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5703:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 1940,
												"src": "5695:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5695:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5694:15:3"
									},
									"scope": 2038,
									"src": "5638:72:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1941,
										"nodeType": "StructuredDocumentation",
										"src": "5716:711:3",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`,\n checking first that contract recipients are aware of the ERC721 protocol\n to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move\n this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement\n {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1952,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "6441:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1943,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6475:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "6467:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6467:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1945,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6497:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "6489:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6489:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1947,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6517:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "6509:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6509:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6549:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1952,
												"src": "6534:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1948,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6534:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6457:102:3"
									},
									"returnParameters": {
										"id": 1951,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6576:0:3"
									},
									"scope": 2038,
									"src": "6432:145:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1953,
										"nodeType": "StructuredDocumentation",
										"src": "6583:80:3",
										"text": " @dev Equivalent to `safeTransferFrom(from, to, tokenId, '')`."
									},
									"functionSelector": "42842e0e",
									"id": 1962,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "6677:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1960,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1955,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6711:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "6703:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6703:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1957,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6733:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "6725:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1956,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6725:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1959,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6753:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1962,
												"src": "6745:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1958,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6745:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6693:73:3"
									},
									"returnParameters": {
										"id": 1961,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6783:0:3"
									},
									"scope": 2038,
									"src": "6668:116:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1963,
										"nodeType": "StructuredDocumentation",
										"src": "6790:512:3",
										"text": " @dev Transfers `tokenId` from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom}\n whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token\n by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1972,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "7316:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1965,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "7346:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "7338:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7338:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1967,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7368:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "7360:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7360:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1969,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7388:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1972,
												"src": "7380:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7380:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7328:73:3"
									},
									"returnParameters": {
										"id": 1971,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7418:0:3"
									},
									"scope": 2038,
									"src": "7307:112:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1973,
										"nodeType": "StructuredDocumentation",
										"src": "7425:459:3",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the\n zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1980,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "7898:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1978,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "7914:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "7906:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1974,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7906:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1977,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "7926:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "7918:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1976,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7918:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7905:29:3"
									},
									"returnParameters": {
										"id": 1979,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7951:0:3"
									},
									"scope": 2038,
									"src": "7889:63:3",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1981,
										"nodeType": "StructuredDocumentation",
										"src": "7958:316:3",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom}\n for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1988,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "8288:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8314:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "8306:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1982,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8306:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1985,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "8329:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 1988,
												"src": "8324:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1984,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8324:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8305:34:3"
									},
									"returnParameters": {
										"id": 1987,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8348:0:3"
									},
									"scope": 2038,
									"src": "8279:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1989,
										"nodeType": "StructuredDocumentation",
										"src": "8355:139:3",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1996,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "8508:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1991,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8528:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "8520:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8520:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8519:17:3"
									},
									"returnParameters": {
										"id": 1995,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1994,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8568:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 1996,
												"src": "8560:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1993,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8560:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8559:18:3"
									},
									"scope": 2038,
									"src": "8499:79:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1997,
										"nodeType": "StructuredDocumentation",
										"src": "8584:139:3",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 2006,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "8737:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8762:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "8754:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8754:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2001,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "8777:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "8769:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2000,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8769:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8753:33:3"
									},
									"returnParameters": {
										"id": 2005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2004,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2006,
												"src": "8810:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2003,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8810:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8809:6:3"
									},
									"scope": 2038,
									"src": "8728:88:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2007,
										"nodeType": "StructuredDocumentation",
										"src": "9007:58:3",
										"text": " @dev Returns the token collection name."
									},
									"functionSelector": "06fdde03",
									"id": 2012,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "9079:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2008,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9083:2:3"
									},
									"returnParameters": {
										"id": 2011,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2010,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "9109:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2009,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9109:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9108:15:3"
									},
									"scope": 2038,
									"src": "9070:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2013,
										"nodeType": "StructuredDocumentation",
										"src": "9130:60:3",
										"text": " @dev Returns the token collection symbol."
									},
									"functionSelector": "95d89b41",
									"id": 2018,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "9204:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2014,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9210:2:3"
									},
									"returnParameters": {
										"id": 2017,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2016,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2018,
												"src": "9236:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2015,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9236:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9235:15:3"
									},
									"scope": 2038,
									"src": "9195:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 2019,
										"nodeType": "StructuredDocumentation",
										"src": "9257:90:3",
										"text": " @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."
									},
									"functionSelector": "c87b56dd",
									"id": 2026,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "tokenURI",
									"nameLocation": "9361:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2021,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "9378:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 2026,
												"src": "9370:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2020,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9370:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9369:17:3"
									},
									"returnParameters": {
										"id": 2025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2024,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2026,
												"src": "9410:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2023,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "9410:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9409:15:3"
									},
									"scope": 2038,
									"src": "9352:73:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 2027,
										"nodeType": "StructuredDocumentation",
										"src": "9612:267:3",
										"text": " @dev Emitted when tokens in `fromTokenId` to `toTokenId`\n (inclusive) is transferred from `from` to `to`, as defined in the\n [ERC2309](https://eips.ethereum.org/EIPS/eip-2309) standard.\n See {_mintERC2309} for more details."
									},
									"eventSelector": "deaa91b6123d068f5821d0fb0678463d1a8a6079fe8af5de3ce5e896dcf9133d",
									"id": 2037,
									"name": "ConsecutiveTransfer",
									"nameLocation": "9890:19:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2029,
												"indexed": true,
												"mutability": "mutable",
												"name": "fromTokenId",
												"nameLocation": "9926:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "9910:27:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2028,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9910:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2031,
												"indexed": false,
												"mutability": "mutable",
												"name": "toTokenId",
												"nameLocation": "9947:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "9939:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2030,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9939:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2033,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "9974:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "9958:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2032,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9958:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2035,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "9996:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 2037,
												"src": "9980:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2034,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9980:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9909:90:3"
									},
									"src": "9884:116:3"
								}
							],
							"scope": 2039,
							"src": "1437:8565:3",
							"usedErrors": [
								1838,
								1841,
								1844,
								1847,
								1850,
								1853,
								1856,
								1859,
								1862,
								1865,
								1868,
								1871,
								1874
							],
							"usedEvents": [
								1906,
								1915,
								1924,
								2037
							]
						}
					],
					"src": "1374:8629:3"
				},
				"id": 3
			}
		}
	}
}