{
	"id": "42fe994c75f3d0c36591c074fa201722",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.4",
	"solcLongVersion": "0.8.4+commit.c7e474f2",
	"input": {
		"language": "Solidity",
		"sources": {
			"token-staking(copy)(copy)/contracts/Staking.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/token-staking?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\npragma solidity 0.8.4;\n\nimport \"token-staking/@openzeppelin/contracts/token/ERC20/IERC20.sol\";\n\n/// @notice Wording below needs to properly represent the legal terms so has to be reviewed\n/// @notice Comments have been written by the development team and may not represent the actual terms of the contract correctly\n\n/// @title Oiler Staking\n/// @author oiler.network\n/// @dev that staking contract is fully dependent on the provided reward token and the underlying LP token.\n/**\n * @notice Staking contract assumes there is a Staking Program going on until a specified Staking Program End Date.\n * And there is an amount of Oiler tokens that is gonna be given away to incentivise participation in the Staking Program (called StakingFund).\n * \n * During this Program - users commit to lock tokens for some period of time, earning RewardPoints (if they don't unlock prematurely).\n * RewardPoints multiplier grows linearly with the locking period length (see the formula in calculateStakingRewardPoints() function)\n * \n * After the end of the Staking Program - the amount of RewardPoints earned by each user is relatively compared to the total RewardPoints\n * earned by all staking participants - and the OIL tokens from StakingFund are divided among them accordingly, by their RewardPoints proportions.\n */\ncontract Staking {\n\n  /**\n   * @dev Saving gas by using lower-bit variables to fit the Stake struct into 256bits\n   *\n   * LP Tokens are calculated by this formula:\n   * LP Tokens = sqrt(tokenAmount * e18 * usdcAmount * e6) =\n   *           = sqrt(100 000 000 * usdcAmount * e24) =          // here 100 000 000 is totalSupply of OIL\n   *           = sqrt(usdcAmount * e32) =\n   *           = sqrt(usdcAmount) * e16\n   * \n   * Thus the maximum amount of USDC we can use to not overflow the maximum amount of uint72 (4722 e18) will be:\n   *             sqrt(usdcAmount) * e16 < 4722 * e18\n   *             sqrt(usdcAmount) < 472 200\n   *             usdcAmount < 222 972 840 000\n   * Which is over two hundred trillion dollars - the amount highly improbable at our Uniswap pool as for today\n   *\n   * tokenAmount is limited by LP tokens amount (4722e18 LPs for hundreds of trillions of dollars)   (Range: [0 - 4722 e18]          - uint72 (max 4722 e18))\n   * lockingPeriodInBlocks is limited by Staking Program duration (around 700000 blocks)             (Range: [1 - 700000]            - uint24 (max 16 777 215))\n   * startBlock is in a typical range of Mainnet, Testnets, local networks blocks range              (Range: [0 - 100 000 000]       - uint32 (max 4 294 967 295))\n   * \n   * expectedStakingRewardPoints is limited by:\n   * LP tokens amount * lockingPeriodInBlocks * lockingPeriodInBlocks\n   * which is:\n   * uint72 * uint24 * uint24 = which gives us max uint120, but we use uint128 anyway                (Range: [0 - 1.33 e36]           - uint128 (max 340 e36))\n   */\n    struct Stake {\n        uint72 tokenAmount;                   // Amount of tokens locked in a stake                                                             \n        uint24 lockingPeriodInBlocks;         // Arbitrary lock period that will give you a reward                                    \n        uint32 startBlock;                    // Start of the locking                                                                            \n        uint128 expectedStakingRewardPoints;  // The amount of RewardPoints the stake will earn if not unlocked prematurely    \n    }\n    \n    /// @notice Active stakes for each user\n    mapping (address => Stake) public stakes;\n\n    /// @notice \"Reward points\" each user earned (would be relative to totalRewardPoints to get the percentage)\n    mapping (address => uint256) public rewardPointsEarned;\n    \n    /// @notice Total \"reward points\" all users earned\n    uint256 public totalRewardPoints;\n    /// @notice Block when Staking Program ends          \n    uint256 immutable public stakingProgramEndsBlock;\n    /// @notice Amount of Staking Bonus Fund (500 000 OIL), Oiler funds must be here, approved and ready to be transferredFrom\n    uint256 immutable public stakingFundAmount;\n    \n    /// @notice Uniswap pool that we accept LP tokens from\n    IERC20 public poolToken;\n    /// @notice Oiler token that will be given as a reward\n    IERC20 immutable public oilerToken;\n    \n    /// @notice The amount of OIL tokens earned, granted to be released during vesting period \n    mapping (address => uint256) public grantedTokens;\n    /// @notice The amount of OIL tokens that were already released during vesting period\n    mapping (address => uint256) public releasedTokens;\n    \n    /// @dev In blocks - should be around 100 days\n    uint256 immutable public vestingDuration;\n\n    /// @dev Check if poolToken was initialized\n    modifier poolTokenSet() {\n        require(address(poolToken) != address(0x0), \"poolToken not set\");\n        _;\n    }\n\n    /// @dev Owner is used only in setPoolToken()\n    address immutable public owner;\n\n    /// @dev Used only in setPoolToken()\n    modifier onlyOwner() {\n        require(msg.sender == owner, \"Can only be called by owner\");\n        _;\n    }\n\n    /**\n     * @dev before deploying the stakingFundAddress must have set allowances on behalf of that contract. The address can be predicted basing on the CREATE or CREATE2 opcode.\n     * @param oilerToken_ - address of the token in which rewards will be payed off.\n     * @param stakingDurationInBlocks_ - Number of blocks after which staking will end.\n     * @param stakingFundAmount_ - Amount of tokens to be payed of as rewards.\n     * @param vestingDuration_ - Number of blocks after which OIL tokens earned by staking will be released (duration of Vesting period).\n     * @param owner_ - Owner of the contract (is used to initialize poolToken after it's available).\n     */\n    constructor(address oilerToken_, uint256 stakingDurationInBlocks_, uint256 stakingFundAmount_, uint256 vestingDuration_, address owner_) {\n        require(owner_ != address(0x0), \"Owner address cannot be zero\");\n        owner = owner_;\n\n        require(oilerToken_ != address(0x0), \"oilerToken address cannot be zero\");\n        oilerToken = IERC20(oilerToken_);\n        \n        stakingProgramEndsBlock = block.number + stakingDurationInBlocks_;\n        vestingDuration = vestingDuration_;\n\n        \n        stakingFundAmount = stakingFundAmount_;\n    }\n\n    /// @notice Initialize poolToken when OIL<>USDC Uniswap pool is available\n    function setPoolToken(address poolToken_, address stakingFundAddress_) public onlyOwner {\n        require(address(poolToken) == address(0x0), \"poolToken was already set\");\n        require(poolToken_ != address(0x0), \"poolToken address cannot be zero\");\n        poolToken = IERC20(poolToken_);\n        // Transfer the Staking Bonus Funds from stakingFundAddress here\n        require(IERC20(oilerToken).balanceOf(stakingFundAddress_) >= stakingFundAmount, \"StakingFund doesn't have enough OIL balance\");\n        require(IERC20(oilerToken).allowance(stakingFundAddress_, address(this)) >= stakingFundAmount, \"StakingFund doesn't have enough allowance\");\n        require(IERC20(oilerToken).transferFrom(stakingFundAddress_, address(this), stakingFundAmount), \"TransferFrom of OIL from StakingFund failed\");\n    }\n\n    /**\n     * @notice Calculates the RewardPoints user will earn for a given tokenAmount locked for a given period\n     * @dev If any parameter is zero - it will fail, thus we save gas on \"requires\" by not checking in other places\n     * @param tokenAmount_ - Amount of tokens to be stake.\n     * @param lockingPeriodInBlocks_ - Lock duration defined in blocks.\n     */\n    function calculateStakingRewardPoints(uint72 tokenAmount_, uint24 lockingPeriodInBlocks_) public pure returns (uint128) {\n        //\n        //                         /                                   \\\n        //  stakingRewardPoints = ( tokenAmount * lockingPeriodInBlocks )  *  lockingPeriodInBlocks\n        //                         \\                                   /\n        //\n\n        uint256 stakingRewardPoints = uint256(tokenAmount_) * uint256(lockingPeriodInBlocks_) * uint256(lockingPeriodInBlocks_);\n        require(stakingRewardPoints > 0, \"Neither tokenAmount nor lockingPeriod couldn't be 0\");\n        return uint128(stakingRewardPoints);\n    }\n\n    /**\n     * @notice Lock the LP tokens for a specified period of Blocks.\n     * @notice Can only be called before Staking Program ends.\n     * @notice And the locking period can't last longer than the end of Staking Program block.\n     * @param tokenAmount_ - Amount of LP tokens to be locked.\n     * @param lockingPeriodInBlocks_ - locking period duration defined in blocks.\n     */\n    function lockTokens(uint72 tokenAmount_, uint24 lockingPeriodInBlocks_) public poolTokenSet {\n        // Here we don't check lockingPeriodInBlocks_ for being non-zero, cause its happening in calculateStakingRewardPoints() calculation\n        require(block.number <= stakingProgramEndsBlock - lockingPeriodInBlocks_, \"Your lock period exceeds Staking Program duration\");\n        require(stakes[msg.sender].tokenAmount == 0, \"Already staking\");\n\n        // This is a locking reward - will be earned only after the full lock period is over - otherwise not applicable\n        uint128 expectedStakingRewardPoints = calculateStakingRewardPoints(tokenAmount_, lockingPeriodInBlocks_);\n\n        Stake memory stake = Stake(tokenAmount_, lockingPeriodInBlocks_, uint32(block.number), expectedStakingRewardPoints);\n        stakes[msg.sender] = stake;\n        \n        // We add the rewards initially during locking of tokens, and subtract them later if unlocking is made prematurely\n        // That prevents us from waiting for all users to unlock to distribute the rewards after Staking Program Ends\n        totalRewardPoints += expectedStakingRewardPoints;\n        rewardPointsEarned[msg.sender] += expectedStakingRewardPoints;\n        \n        // We transfer LP tokens from user to this contract, \"locking\" them\n        // We don't check for allowances or balance cause it's done within the transferFrom() and would only raise gas costs\n        require(poolToken.transferFrom(msg.sender, address(this), tokenAmount_), \"TransferFrom of poolTokens failed\");\n\n        emit StakeLocked(msg.sender, tokenAmount_, lockingPeriodInBlocks_, expectedStakingRewardPoints);\n    }\n\n    /**\n     * @notice Unlock the tokens and get the reward\n     * @notice This can be called at any time, even after Staking Program end block\n     */\n    function unlockTokens() public poolTokenSet {\n        Stake memory stake = stakes[msg.sender];\n\n        uint256 stakeAmount = stake.tokenAmount;\n\n        require(stakeAmount != 0, \"You don't have a stake to unlock\");\n\n        require(block.number > stake.startBlock, \"You can't withdraw the stake in the same block it was locked\");\n\n        // Check if the unlock is called prematurely - and subtract the reward if it is the case\n        _punishEarlyWithdrawal(stake);\n\n        // Zero the Stake - to protect from double-unlocking and to be able to stake again\n        delete stakes[msg.sender];\n\n        require(poolToken.transfer(msg.sender, stakeAmount), \"Pool token transfer failed\");\n    }\n    \n    /**\n     * @notice If the unlock is called prematurely - we subtract the bonus\n     */\n    function _punishEarlyWithdrawal(Stake memory stake_) internal {\n        // As any of the locking periods can't be longer than Staking Program end block - this will automatically mean that if called after Staking Program end - all stakes locking periods are over\n        // So no rewards can be manipulated after Staking Program ends\n        if (block.number < (stake_.startBlock + stake_.lockingPeriodInBlocks)) { // lt - cause you can only withdraw at or after startBlock + lockPeriod\n            rewardPointsEarned[msg.sender] -= stake_.expectedStakingRewardPoints;\n            totalRewardPoints -= stake_.expectedStakingRewardPoints;\n            emit StakeUnlockedPrematurely(msg.sender, stake_.tokenAmount, stake_.lockingPeriodInBlocks, block.number - stake_.startBlock);\n        } else {\n            emit StakeUnlocked(msg.sender, stake_.tokenAmount, stake_.lockingPeriodInBlocks, stake_.expectedStakingRewardPoints);\n        }\n    }\n    \n    /** \n     * @notice This can only be called after the Staking Program ended\n     * @dev Which means that all stakes lock periods are already over, and totalRewardPoints value isn't changing anymore - so we can now calculate the percentages of rewards\n     */\n    function getRewards() public {\n        require(block.number > stakingProgramEndsBlock, \"You can only get Rewards after Staking Program ends\");\n        require(stakes[msg.sender].tokenAmount == 0, \"You still have a stake locked - please unlock first, don't leave free money here\");\n        require(rewardPointsEarned[msg.sender] > 0, \"You don't have any rewardPoints\");\n        \n        // The amount earned is calculated as:\n        //\n        //                                  user RewardPoints earned during Staking Program\n        // amountEarned = stakingFund * -------------------------------------------------------\n        //                                 total RewardPoints earned by everyone participated\n        //\n        // Division always rounds towards zero in solidity.\n        // And because of this rounding somebody always misses the fractional part of their earnings and gets only integer amount.\n        // Thus the worst thing that can happen is amountEarned becomes 0, and we check for that in _grantTokens()\n        uint256 amountEarned = stakingFundAmount * rewardPointsEarned[msg.sender] / totalRewardPoints;\n        rewardPointsEarned[msg.sender] = 0; // Zero rewardPoints of a user - so this function can be called only once per user\n\n        _grantTokens(msg.sender, amountEarned); // Grant OIL reward earned by user for future vesting during the Vesting period\n    }\n    \n    //////////////////////////////////////////////////////\n    //\n    //     VESTING PART\n    //\n    //////////////////////////////////////////////////////\n    \n\n    /**\n     * @param recipient_ - Recipient of granted tokens\n     * @param amountEarned_ - Amount of tokens earned to be granted\n     */\n    function _grantTokens(address recipient_, uint256 amountEarned_) internal {\n        require(amountEarned_ > 0, \"You didn't earn any integer amount of wei\");\n        require(recipient_ != address(0), \"TokenVesting: beneficiary is the zero address\");\n        grantedTokens[recipient_] = amountEarned_;\n        emit RewardGranted(recipient_, amountEarned_);\n    }\n    \n    /// @notice Releases granted tokens\n    function release() public {\n        uint256 releasable = _releasableAmount(msg.sender);\n        require(releasable > 0, \"Vesting release: no tokens are due\");\n\n        releasedTokens[msg.sender] += releasable;\n        require(oilerToken.transfer(msg.sender, releasable), \"Reward oilers transfer failed\");\n\n        emit grantedTokensReleased(msg.sender, releasable);\n    }\n    \n    /// @notice Releasable amount is what is available at a given time minus what was already withdrawn\n    function _releasableAmount(address recipient_) internal view returns (uint256) {\n        return _vestedAmount(recipient_) - releasedTokens[recipient_];\n    }\n    \n    /**\n     * @notice The output of this function gradually changes from [0.. to ..grantedAmount] while the vesting is going\n     * @param recipient_ - vested tokens recipient\n     * @return vested amount\n     */\n    function _vestedAmount(address recipient_) internal view returns (uint256) {\n        if (block.number >= stakingProgramEndsBlock + vestingDuration) {\n            // Return the full granted amount if Vesting Period is over\n            return grantedTokens[recipient_];\n        } else {\n            // Return the proportional amount if Vesting Period is still going\n            return grantedTokens[recipient_] * (block.number - stakingProgramEndsBlock) / vestingDuration;\n        }\n    }\n    \n    event StakeLocked(address recipient, uint256 tokenAmount, uint256 lockingPeriodInBlocks, uint256 expectedStakingRewardPoints);\n    event StakeUnlockedPrematurely(address recipient, uint256 tokenAmount, uint256 lockingPeriodInBlocks, uint256 actualLockingPeriodInBlocks);\n    event StakeUnlocked(address recipient, uint256 tokenAmount, uint256 lockingPeriodInBlocks, uint256 rewardPoints);\n    event RewardGranted(address recipient, uint256 amountEarned);\n    event grantedTokensReleased(address recipient, uint256 amount);\n}"
			},
			"token-staking/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/token-staking?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 5000000
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "istanbul"
		}
	},
	"output": {
		"contracts": {
			"token-staking(copy)(copy)/contracts/Staking.sol": {
				"Staking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "oilerToken_",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "stakingDurationInBlocks_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stakingFundAmount_",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "vestingDuration_",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner_",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amountEarned",
									"type": "uint256"
								}
							],
							"name": "RewardGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lockingPeriodInBlocks",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "expectedStakingRewardPoints",
									"type": "uint256"
								}
							],
							"name": "StakeLocked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lockingPeriodInBlocks",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "rewardPoints",
									"type": "uint256"
								}
							],
							"name": "StakeUnlocked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "lockingPeriodInBlocks",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "actualLockingPeriodInBlocks",
									"type": "uint256"
								}
							],
							"name": "StakeUnlockedPrematurely",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "grantedTokensReleased",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint72",
									"name": "tokenAmount_",
									"type": "uint72"
								},
								{
									"internalType": "uint24",
									"name": "lockingPeriodInBlocks_",
									"type": "uint24"
								}
							],
							"name": "calculateStakingRewardPoints",
							"outputs": [
								{
									"internalType": "uint128",
									"name": "",
									"type": "uint128"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "grantedTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint72",
									"name": "tokenAmount_",
									"type": "uint72"
								},
								{
									"internalType": "uint24",
									"name": "lockingPeriodInBlocks_",
									"type": "uint24"
								}
							],
							"name": "lockTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "oilerToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "poolToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "release",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "releasedTokens",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "rewardPointsEarned",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "poolToken_",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "stakingFundAddress_",
									"type": "address"
								}
							],
							"name": "setPoolToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakes",
							"outputs": [
								{
									"internalType": "uint72",
									"name": "tokenAmount",
									"type": "uint72"
								},
								{
									"internalType": "uint24",
									"name": "lockingPeriodInBlocks",
									"type": "uint24"
								},
								{
									"internalType": "uint32",
									"name": "startBlock",
									"type": "uint32"
								},
								{
									"internalType": "uint128",
									"name": "expectedStakingRewardPoints",
									"type": "uint128"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingFundAmount",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingProgramEndsBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalRewardPoints",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unlockTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "vestingDuration",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"calculateStakingRewardPoints(uint72,uint24)": {
								"details": "If any parameter is zero - it will fail, thus we save gas on \"requires\" by not checking in other places",
								"params": {
									"lockingPeriodInBlocks_": "- Lock duration defined in blocks.",
									"tokenAmount_": "- Amount of tokens to be stake."
								}
							},
							"constructor": {
								"details": "before deploying the stakingFundAddress must have set allowances on behalf of that contract. The address can be predicted basing on the CREATE or CREATE2 opcode.",
								"params": {
									"oilerToken_": "- address of the token in which rewards will be payed off.",
									"owner_": "- Owner of the contract (is used to initialize poolToken after it's available).",
									"stakingDurationInBlocks_": "- Number of blocks after which staking will end.",
									"stakingFundAmount_": "- Amount of tokens to be payed of as rewards.",
									"vestingDuration_": "- Number of blocks after which OIL tokens earned by staking will be released (duration of Vesting period)."
								}
							},
							"getRewards()": {
								"details": "Which means that all stakes lock periods are already over, and totalRewardPoints value isn't changing anymore - so we can now calculate the percentages of rewards"
							},
							"lockTokens(uint72,uint24)": {
								"params": {
									"lockingPeriodInBlocks_": "- locking period duration defined in blocks.",
									"tokenAmount_": "- Amount of LP tokens to be locked."
								}
							}
						},
						"stateVariables": {
							"owner": {
								"details": "Owner is used only in setPoolToken()"
							},
							"vestingDuration": {
								"details": "In blocks - should be around 100 days"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":2612:17827  contract Staking {... */\n  mstore(0x40, 0x0120)\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7116:7669  constructor(address oilerToken_, uint256 stakingDurationInBlocks_, uint256 stakingFundAmount_, uint256 vestingDuration_, address owner_) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7271:7293  owner_ != address(0x0) */\n  dup2\n  and\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7263:7326  require(owner_ != address(0x0), \"Owner address cannot be zero\") */\n  tag_6\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":891:893   */\n  0x20\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7263:7326  require(owner_ != address(0x0), \"Owner address cannot be zero\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":873:894   */\n  mstore\n    /* \"#utility.yul\":930:932   */\n  0x1c\n    /* \"#utility.yul\":910:928   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":903:933   */\n  mstore\n    /* \"#utility.yul\":969:999   */\n  0x4f776e657220616464726573732063616e6e6f74206265207a65726f00000000\n    /* \"#utility.yul\":949:967   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":942:1000   */\n  mstore\n    /* \"#utility.yul\":1017:1035   */\n  0x64\n  add\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7263:7326  require(owner_ != address(0x0), \"Owner address cannot be zero\") */\ntag_7:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_6:\n  not(sub(shl(0x60, 0x01), 0x01))\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7336:7350  owner = owner_ */\n  0x60\n  dup3\n  swap1\n  shl\n  and\n  0x0100\n  mstore\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7369:7396  oilerToken_ != address(0x0) */\n  dup6\n  and\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7361:7434  require(oilerToken_ != address(0x0), \"oilerToken address cannot be zero\") */\n  tag_9\n  jumpi\n  mload(0x40)\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n    /* \"#utility.yul\":1248:1250   */\n  0x20\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7361:7434  require(oilerToken_ != address(0x0), \"oilerToken address cannot be zero\") */\n  0x04\n  dup3\n  add\n    /* \"#utility.yul\":1230:1251   */\n  mstore\n    /* \"#utility.yul\":1287:1289   */\n  0x21\n    /* \"#utility.yul\":1267:1285   */\n  0x24\n  dup3\n  add\n    /* \"#utility.yul\":1260:1290   */\n  mstore\n    /* \"#utility.yul\":1326:1360   */\n  0x6f696c6572546f6b656e20616464726573732063616e6e6f74206265207a6572\n    /* \"#utility.yul\":1306:1324   */\n  0x44\n  dup3\n  add\n    /* \"#utility.yul\":1299:1361   */\n  mstore\n  shl(0xf8, 0x6f)\n    /* \"#utility.yul\":1377:1395   */\n  0x64\n  dup3\n  add\n    /* \"#utility.yul\":1370:1401   */\n  mstore\n    /* \"#utility.yul\":1418:1437   */\n  0x84\n  add\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7361:7434  require(oilerToken_ != address(0x0), \"oilerToken address cannot be zero\") */\n  tag_7\n    /* \"#utility.yul\":1220:1443   */\n  jump\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7361:7434  require(oilerToken_ != address(0x0), \"oilerToken address cannot be zero\") */\ntag_9:\n  not(sub(shl(0x60, 0x01), 0x01))\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7444:7476  oilerToken = IERC20(oilerToken_) */\n  0x60\n  dup7\n  swap1\n  shl\n  and\n  0xc0\n  mstore\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7521:7560  block.number + stakingDurationInBlocks_ */\n  tag_12\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7536:7560  stakingDurationInBlocks_ */\n  dup5\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7521:7533  block.number */\n  number\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7521:7560  block.number + stakingDurationInBlocks_ */\n  tag_13\n  jump\t// in\ntag_12:\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7495:7560  stakingProgramEndsBlock = block.number + stakingDurationInBlocks_ */\n  0x80\n  mstore\n  pop\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7570:7604  vestingDuration = vestingDuration_ */\n  0xe0\n  mstore\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7624:7662  stakingFundAmount = stakingFundAmount_ */\n  0xa0\n  mstore\n  pop\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":2612:17827  contract Staking {... */\n  tag_15\n  swap1\n  pop\n  jump\n    /* \"#utility.yul\":14:191   */\ntag_16:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:117   */\n  tag_18\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  dup1\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:117   */\ntag_18:\n    /* \"#utility.yul\":74:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:684   */\ntag_3:\n    /* \"#utility.yul\":302:308   */\n  0x00\n    /* \"#utility.yul\":310:316   */\n  dup1\n    /* \"#utility.yul\":318:324   */\n  0x00\n    /* \"#utility.yul\":326:332   */\n  dup1\n    /* \"#utility.yul\":334:340   */\n  0x00\n    /* \"#utility.yul\":387:390   */\n  0xa0\n    /* \"#utility.yul\":375:384   */\n  dup7\n    /* \"#utility.yul\":366:373   */\n  dup9\n    /* \"#utility.yul\":362:385   */\n  sub\n    /* \"#utility.yul\":358:391   */\n  slt\n    /* \"#utility.yul\":355:357   */\n  iszero\n  tag_20\n  jumpi\n    /* \"#utility.yul\":409:415   */\n  dup1\n    /* \"#utility.yul\":401:407   */\n  dup2\n    /* \"#utility.yul\":394:416   */\n  revert\n    /* \"#utility.yul\":355:357   */\ntag_20:\n    /* \"#utility.yul\":437:477   */\n  tag_21\n    /* \"#utility.yul\":467:476   */\n  dup7\n    /* \"#utility.yul\":437:477   */\n  tag_16\n  jump\t// in\ntag_21:\n    /* \"#utility.yul\":427:477   */\n  swap5\n  pop\n    /* \"#utility.yul\":517:519   */\n  0x20\n    /* \"#utility.yul\":506:515   */\n  dup7\n    /* \"#utility.yul\":502:520   */\n  add\n    /* \"#utility.yul\":496:521   */\n  mload\n    /* \"#utility.yul\":486:521   */\n  swap4\n  pop\n    /* \"#utility.yul\":561:563   */\n  0x40\n    /* \"#utility.yul\":550:559   */\n  dup7\n    /* \"#utility.yul\":546:564   */\n  add\n    /* \"#utility.yul\":540:565   */\n  mload\n    /* \"#utility.yul\":530:565   */\n  swap3\n  pop\n    /* \"#utility.yul\":605:607   */\n  0x60\n    /* \"#utility.yul\":594:603   */\n  dup7\n    /* \"#utility.yul\":590:608   */\n  add\n    /* \"#utility.yul\":584:609   */\n  mload\n    /* \"#utility.yul\":574:609   */\n  swap2\n  pop\n    /* \"#utility.yul\":628:678   */\n  tag_22\n    /* \"#utility.yul\":673:676   */\n  0x80\n    /* \"#utility.yul\":662:671   */\n  dup8\n    /* \"#utility.yul\":658:677   */\n  add\n    /* \"#utility.yul\":628:678   */\n  tag_16\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":618:678   */\n  swap1\n  pop\n    /* \"#utility.yul\":345:684   */\n  swap3\n  swap6\n  pop\n  swap3\n  swap6\n  swap1\n  swap4\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1448:1677   */\ntag_13:\n    /* \"#utility.yul\":1488:1491   */\n  0x00\n    /* \"#utility.yul\":1519:1520   */\n  dup3\n    /* \"#utility.yul\":1515:1521   */\n  not\n    /* \"#utility.yul\":1512:1513   */\n  dup3\n    /* \"#utility.yul\":1509:1522   */\n  gt\n    /* \"#utility.yul\":1506:1508   */\n  iszero\n  tag_26\n  jumpi\n  shl(0xe0, 0x4e487b71)\n    /* \"#utility.yul\":1545:1578   */\n  dup2\n  mstore\n    /* \"#utility.yul\":1601:1605   */\n  0x11\n    /* \"#utility.yul\":1598:1599   */\n  0x04\n    /* \"#utility.yul\":1591:1606   */\n  mstore\n    /* \"#utility.yul\":1631:1635   */\n  0x24\n    /* \"#utility.yul\":1552:1555   */\n  dup2\n    /* \"#utility.yul\":1619:1636   */\n  revert\n    /* \"#utility.yul\":1506:1508   */\ntag_26:\n  pop\n    /* \"#utility.yul\":1662:1671   */\n  add\n  swap1\n    /* \"#utility.yul\":1496:1677   */\n  jump\t// out\ntag_15:\n    /* \"token-staking(copy)(copy)/contracts/Staking.sol\":2612:17827  contract Staking {... */\n  mload(0x80)\n  mload(0xa0)\n  shr(0x60, mload(0xc0))\n  mload(0xe0)\n  shr(0x60, mload(0x0100))\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x57014f1e5f1d53e43fa40624186159531d6372d1ab8f40ec7882845ca66de31d\")\n  0x00\n  assignImmutable(\"0xbbd48b257be1b8216d144ef9be5734f8d11697959c9e0f7768bec89db74a63a3\")\n  0x00\n  assignImmutable(\"0x880de8116b3dfac28e9ff528a9fef1d1e0a51449c1addce011ffec1f302992b6\")\n  0x00\n  assignImmutable(\"0x8b953cbb84328003779eb1ef176ef07f7dd0ae3d4a8e408de53d15a36466c86e\")\n  0x00\n  assignImmutable(\"0x7749cc8014201da2069c21d93ba99c584b6f62d393fde534ed47eac227e31561\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":2612:17827  contract Staking {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x86d1a69f\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xc959360b\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xe0e4a722\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xe0e4a722\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xf6ffab88\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf968f493\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      dup1\n      0xc959360b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xcbdf382c\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_21:\n      dup1\n      0x86d1a69f\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xbc0925ae\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc2e8caf6\n      eq\n      tag_14\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_20:\n      dup1\n      0x52946b04\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x52946b04\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x70ff852b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x798633b9\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x81e9207d\n      eq\n      tag_10\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      dup1\n      0x0572b0cc\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x1514617e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x16934fc4\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x378592c8\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13821:15220  function getRewards() public {... */\n    tag_3:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      stop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":5976:6016  uint256 immutable public vestingDuration */\n    tag_4:\n      tag_26\n      immutable(\"0xbbd48b257be1b8216d144ef9be5734f8d11697959c9e0f7768bec89db74a63a3\")\n      dup2\n      jump\n    tag_26:\n      mload(0x40)\n        /* \"#utility.yul\":13239:13264   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":13227:13229   */\n      0x20\n        /* \"#utility.yul\":13212:13230   */\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":5976:6016  uint256 immutable public vestingDuration */\n    tag_28:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":4823:4863  mapping (address => Stake) public stakes */\n    tag_5:\n      tag_30\n      tag_31\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_31:\n      0x00\n      0x20\n      dup2\n      swap1\n      mstore\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      0xffffffffffffffffff\n      dup2\n      and\n      swap1\n      0x01000000000000000000\n      dup2\n      div\n      0xffffff\n      and\n      swap1\n      0x01000000000000000000000000\n      dup2\n      div\n      0xffffffff\n      and\n      swap1\n      0x0100000000000000000000000000000000\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n      dup5\n      jump\n    tag_30:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":13530:13550   */\n      0xffffffffffffffffff\n        /* \"#utility.yul\":13518:13551   */\n      swap1\n      swap6\n      and\n        /* \"#utility.yul\":13500:13552   */\n      dup6\n      mstore\n        /* \"#utility.yul\":13600:13608   */\n      0xffffff\n        /* \"#utility.yul\":13588:13609   */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":13583:13585   */\n      0x20\n        /* \"#utility.yul\":13568:13586   */\n      dup6\n      add\n        /* \"#utility.yul\":13561:13610   */\n      mstore\n        /* \"#utility.yul\":13658:13668   */\n      0xffffffff\n        /* \"#utility.yul\":13646:13669   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":13626:13644   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":13619:13670   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":13718:13752   */\n      0xffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13706:13753   */\n      and\n        /* \"#utility.yul\":13701:13703   */\n      0x60\n        /* \"#utility.yul\":13686:13704   */\n      dup3\n      add\n        /* \"#utility.yul\":13679:13754   */\n      mstore\n        /* \"#utility.yul\":13487:13490   */\n      0x80\n        /* \"#utility.yul\":13472:13491   */\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":4823:4863  mapping (address => Stake) public stakes */\n      tag_28\n        /* \"#utility.yul\":13454:13760   */\n      jump\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9998:11657  function lockTokens(uint72 tokenAmount_, uint24 lockingPeriodInBlocks_) public poolTokenSet {... */\n    tag_6:\n      tag_24\n      tag_37\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_37:\n      tag_39\n      jump\t// in\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":5379:5421  uint256 immutable public stakingFundAmount */\n    tag_7:\n      tag_26\n      immutable(\"0x8b953cbb84328003779eb1ef176ef07f7dd0ae3d4a8e408de53d15a36466c86e\")\n      dup2\n      jump\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":5864:5914  mapping (address => uint256) public releasedTokens */\n    tag_8:\n      tag_26\n      tag_44\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_44:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8938:9605  function calculateStakingRewardPoints(uint72 tokenAmount_, uint24 lockingPeriodInBlocks_) public pure returns (uint128) {... */\n    tag_9:\n      tag_47\n      tag_48\n      calldatasize\n      0x04\n      tag_38\n      jump\t// in\n    tag_48:\n      tag_49\n      jump\t// in\n    tag_47:\n      mload(0x40)\n        /* \"#utility.yul\":13046:13080   */\n      0xffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":13034:13081   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":13016:13082   */\n      dup2\n      mstore\n        /* \"#utility.yul\":13004:13006   */\n      0x20\n        /* \"#utility.yul\":12989:13007   */\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8938:9605  function calculateStakingRewardPoints(uint72 tokenAmount_, uint24 lockingPeriodInBlocks_) public pure returns (uint128) {... */\n      tag_28\n        /* \"#utility.yul\":12971:13088   */\n      jump\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":5579:5613  IERC20 immutable public oilerToken */\n    tag_10:\n      tag_52\n      immutable(\"0x880de8116b3dfac28e9ff528a9fef1d1e0a51449c1addce011ffec1f302992b6\")\n      dup2\n      jump\n    tag_52:\n      mload(0x40)\n        /* \"#utility.yul\":1859:1901   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1847:1902   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1829:1903   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1817:1819   */\n      0x20\n        /* \"#utility.yul\":1802:1820   */\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":5579:5613  IERC20 immutable public oilerToken */\n      tag_28\n        /* \"#utility.yul\":1784:1909   */\n      jump\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15941:16312  function release() public {... */\n    tag_11:\n      tag_24\n      tag_57\n      jump\t// in\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6243:6273  address immutable public owner */\n    tag_12:\n      tag_52\n      immutable(\"0x57014f1e5f1d53e43fa40624186159531d6372d1ab8f40ec7882845ca66de31d\")\n      dup2\n      jump\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":5198:5246  uint256 immutable public stakingProgramEndsBlock */\n    tag_13:\n      tag_26\n      immutable(\"0x7749cc8014201da2069c21d93ba99c584b6f62d393fde534ed47eac227e31561\")\n      dup2\n      jump\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":5102:5134  uint256 public totalRewardPoints */\n    tag_14:\n      tag_26\n      sload(0x02)\n      dup2\n      jump\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":4982:5036  mapping (address => uint256) public rewardPointsEarned */\n    tag_15:\n      tag_26\n      tag_69\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_69:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":5491:5514  IERC20 public poolToken */\n    tag_16:\n      sload(0x03)\n      tag_52\n      swap1\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":5719:5768  mapping (address => uint256) public grantedTokens */\n    tag_17:\n      tag_26\n      tag_76\n      calldatasize\n      0x04\n      tag_32\n      jump\t// in\n    tag_76:\n      mstore(0x20, 0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7753:8561  function setPoolToken(address poolToken_, address stakingFundAddress_) public onlyOwner {... */\n    tag_18:\n      tag_24\n      tag_80\n      calldatasize\n      0x04\n      tag_81\n      jump\t// in\n    tag_80:\n      tag_82\n      jump\t// in\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11815:12509  function unlockTokens() public poolTokenSet {... */\n    tag_19:\n      tag_24\n      tag_84\n      jump\t// in\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13821:15220  function getRewards() public {... */\n    tag_25:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13883:13906  stakingProgramEndsBlock */\n      immutable(\"0x7749cc8014201da2069c21d93ba99c584b6f62d393fde534ed47eac227e31561\")\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13868:13880  block.number */\n      number\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13868:13906  block.number > stakingProgramEndsBlock */\n      gt\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13860:13962  require(block.number > stakingProgramEndsBlock, \"You can only get Rewards after Staking Program ends\") */\n      tag_86\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":11526:11528   */\n      0x20\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13860:13962  require(block.number > stakingProgramEndsBlock, \"You can only get Rewards after Staking Program ends\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11508:11529   */\n      mstore\n        /* \"#utility.yul\":11565:11567   */\n      0x33\n        /* \"#utility.yul\":11545:11563   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11538:11568   */\n      mstore\n        /* \"#utility.yul\":11604:11638   */\n      0x596f752063616e206f6e6c792067657420526577617264732061667465722053\n        /* \"#utility.yul\":11584:11602   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11577:11639   */\n      mstore\n        /* \"#utility.yul\":11675:11696   */\n      0x74616b696e672050726f6772616d20656e647300000000000000000000000000\n        /* \"#utility.yul\":11655:11673   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":11648:11697   */\n      mstore\n        /* \"#utility.yul\":11714:11733   */\n      0x84\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13860:13962  require(block.number > stakingProgramEndsBlock, \"You can only get Rewards after Staking Program ends\") */\n    tag_87:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_86:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13987:13997  msg.sender */\n      caller\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13980:13986  stakes */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13980:13998  stakes[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13980:14010  stakes[msg.sender].tokenAmount */\n      sload\n      0xffffffffffffffffff\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13980:14015  stakes[msg.sender].tokenAmount == 0 */\n      iszero\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13972:14100  require(stakes[msg.sender].tokenAmount == 0, \"You still have a stake locked - please unlock first, don't leave free money here\") */\n      tag_89\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":6368:6370   */\n      0x20\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13972:14100  require(stakes[msg.sender].tokenAmount == 0, \"You still have a stake locked - please unlock first, don't leave free money here\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6350:6371   */\n      mstore\n        /* \"#utility.yul\":6407:6409   */\n      0x50\n        /* \"#utility.yul\":6387:6405   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6380:6410   */\n      mstore\n        /* \"#utility.yul\":6446:6480   */\n      0x596f75207374696c6c20686176652061207374616b65206c6f636b6564202d20\n        /* \"#utility.yul\":6426:6444   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6419:6481   */\n      mstore\n        /* \"#utility.yul\":6517:6551   */\n      0x706c6561736520756e6c6f636b2066697273742c20646f6e2774206c65617665\n        /* \"#utility.yul\":6497:6515   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":6490:6552   */\n      mstore\n        /* \"#utility.yul\":6589:6607   */\n      0x2066726565206d6f6e6579206865726500000000000000000000000000000000\n        /* \"#utility.yul\":6568:6587   */\n      0x84\n      dup3\n      add\n        /* \"#utility.yul\":6561:6608   */\n      mstore\n        /* \"#utility.yul\":6625:6644   */\n      0xa4\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13972:14100  require(stakes[msg.sender].tokenAmount == 0, \"You still have a stake locked - please unlock first, don't leave free money here\") */\n      tag_87\n        /* \"#utility.yul\":6340:6650   */\n      jump\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13972:14100  require(stakes[msg.sender].tokenAmount == 0, \"You still have a stake locked - please unlock first, don't leave free money here\") */\n    tag_89:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14137:14147  msg.sender */\n      caller\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14151:14152  0 */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14118:14148  rewardPointsEarned[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14118:14136  rewardPointsEarned */\n      0x01\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14118:14148  rewardPointsEarned[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14110:14188  require(rewardPointsEarned[msg.sender] > 0, \"You don't have any rewardPoints\") */\n      tag_92\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":12358:12360   */\n      0x20\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14110:14188  require(rewardPointsEarned[msg.sender] > 0, \"You don't have any rewardPoints\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12340:12361   */\n      mstore\n        /* \"#utility.yul\":12397:12399   */\n      0x1f\n        /* \"#utility.yul\":12377:12395   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12370:12400   */\n      mstore\n        /* \"#utility.yul\":12436:12469   */\n      0x596f7520646f6e2774206861766520616e7920726577617264506f696e747300\n        /* \"#utility.yul\":12416:12434   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12409:12470   */\n      mstore\n        /* \"#utility.yul\":12487:12505   */\n      0x64\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14110:14188  require(rewardPointsEarned[msg.sender] > 0, \"You don't have any rewardPoints\") */\n      tag_87\n        /* \"#utility.yul\":12330:12511   */\n      jump\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14110:14188  require(rewardPointsEarned[msg.sender] > 0, \"You don't have any rewardPoints\") */\n    tag_92:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14940:14957  totalRewardPoints */\n      sload(0x02)\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14926:14936  msg.sender */\n      caller\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14864:14884  uint256 amountEarned */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14907:14937  rewardPointsEarned[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14907:14925  rewardPointsEarned */\n      0x01\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14907:14937  rewardPointsEarned[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14864:14884  uint256 amountEarned */\n      swap1\n      swap2\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14940:14957  totalRewardPoints */\n      swap1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14887:14937  stakingFundAmount * rewardPointsEarned[msg.sender] */\n      tag_95\n      swap1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14887:14904  stakingFundAmount */\n      immutable(\"0x8b953cbb84328003779eb1ef176ef07f7dd0ae3d4a8e408de53d15a36466c86e\")\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14887:14937  stakingFundAmount * rewardPointsEarned[msg.sender] */\n      tag_96\n      jump\t// in\n    tag_95:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14887:14957  stakingFundAmount * rewardPointsEarned[msg.sender] / totalRewardPoints */\n      tag_97\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n    tag_97:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14986:14996  msg.sender */\n      caller\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15000:15001  0 */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14967:14997  rewardPointsEarned[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14967:14985  rewardPointsEarned */\n      0x01\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14967:14997  rewardPointsEarned[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14967:15001  rewardPointsEarned[msg.sender] = 0 */\n      sstore\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14864:14957  uint256 amountEarned = stakingFundAmount * rewardPointsEarned[msg.sender] / totalRewardPoints */\n      swap1\n      swap2\n      pop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15095:15133  _grantTokens(msg.sender, amountEarned) */\n      tag_99\n      swap1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":14864:14957  uint256 amountEarned = stakingFundAmount * rewardPointsEarned[msg.sender] / totalRewardPoints */\n      dup3\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15095:15107  _grantTokens */\n      tag_100\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15095:15133  _grantTokens(msg.sender, amountEarned) */\n      jump\t// in\n    tag_99:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13821:15220  function getRewards() public {... */\n      pop\n      jump\t// out\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9998:11657  function lockTokens(uint72 tokenAmount_, uint24 lockingPeriodInBlocks_) public poolTokenSet {... */\n    tag_39:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6121:6130  poolToken */\n      sload(0x03)\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6113:6147  address(poolToken) != address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6121:6130  poolToken */\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6105:6169  require(address(poolToken) != address(0x0), \"poolToken not set\") */\n      tag_102\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":10422:10424   */\n      0x20\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6105:6169  require(address(poolToken) != address(0x0), \"poolToken not set\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10404:10425   */\n      mstore\n        /* \"#utility.yul\":10461:10463   */\n      0x11\n        /* \"#utility.yul\":10441:10459   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10434:10464   */\n      mstore\n        /* \"#utility.yul\":10500:10519   */\n      0x706f6f6c546f6b656e206e6f7420736574000000000000000000000000000000\n        /* \"#utility.yul\":10480:10498   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10473:10520   */\n      mstore\n        /* \"#utility.yul\":10537:10555   */\n      0x64\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6105:6169  require(address(poolToken) != address(0x0), \"poolToken not set\") */\n      tag_87\n        /* \"#utility.yul\":10394:10561   */\n      jump\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6105:6169  require(address(poolToken) != address(0x0), \"poolToken not set\") */\n    tag_102:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10264:10312  stakingProgramEndsBlock - lockingPeriodInBlocks_ */\n      tag_106\n      0xffffff\n      dup3\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10264:10287  stakingProgramEndsBlock */\n      immutable(\"0x7749cc8014201da2069c21d93ba99c584b6f62d393fde534ed47eac227e31561\")\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10264:10312  stakingProgramEndsBlock - lockingPeriodInBlocks_ */\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10248:10260  block.number */\n      number\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10248:10312  block.number <= stakingProgramEndsBlock - lockingPeriodInBlocks_ */\n      gt\n      iszero\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10240:10366  require(block.number <= stakingProgramEndsBlock - lockingPeriodInBlocks_, \"Your lock period exceeds Staking Program duration\") */\n      tag_108\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":7218:7220   */\n      0x20\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10240:10366  require(block.number <= stakingProgramEndsBlock - lockingPeriodInBlocks_, \"Your lock period exceeds Staking Program duration\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7200:7221   */\n      mstore\n        /* \"#utility.yul\":7257:7259   */\n      0x31\n        /* \"#utility.yul\":7237:7255   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7230:7260   */\n      mstore\n        /* \"#utility.yul\":7296:7330   */\n      0x596f7572206c6f636b20706572696f642065786365656473205374616b696e67\n        /* \"#utility.yul\":7276:7294   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7269:7331   */\n      mstore\n        /* \"#utility.yul\":7367:7386   */\n      0x2050726f6772616d206475726174696f6e000000000000000000000000000000\n        /* \"#utility.yul\":7347:7365   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":7340:7387   */\n      mstore\n        /* \"#utility.yul\":7404:7423   */\n      0x84\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10240:10366  require(block.number <= stakingProgramEndsBlock - lockingPeriodInBlocks_, \"Your lock period exceeds Staking Program duration\") */\n      tag_87\n        /* \"#utility.yul\":7190:7429   */\n      jump\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10240:10366  require(block.number <= stakingProgramEndsBlock - lockingPeriodInBlocks_, \"Your lock period exceeds Staking Program duration\") */\n    tag_108:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10391:10401  msg.sender */\n      caller\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10384:10390  stakes */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10384:10402  stakes[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10384:10414  stakes[msg.sender].tokenAmount */\n      sload\n      0xffffffffffffffffff\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10384:10419  stakes[msg.sender].tokenAmount == 0 */\n      iszero\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10376:10439  require(stakes[msg.sender].tokenAmount == 0, \"Already staking\") */\n      tag_111\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":7636:7638   */\n      0x20\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10376:10439  require(stakes[msg.sender].tokenAmount == 0, \"Already staking\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7618:7639   */\n      mstore\n        /* \"#utility.yul\":7675:7677   */\n      0x0f\n        /* \"#utility.yul\":7655:7673   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7648:7678   */\n      mstore\n        /* \"#utility.yul\":7714:7731   */\n      0x416c7265616479207374616b696e670000000000000000000000000000000000\n        /* \"#utility.yul\":7694:7712   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7687:7732   */\n      mstore\n        /* \"#utility.yul\":7749:7767   */\n      0x64\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10376:10439  require(stakes[msg.sender].tokenAmount == 0, \"Already staking\") */\n      tag_87\n        /* \"#utility.yul\":7608:7773   */\n      jump\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10376:10439  require(stakes[msg.sender].tokenAmount == 0, \"Already staking\") */\n    tag_111:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10570:10605  uint128 expectedStakingRewardPoints */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10608:10674  calculateStakingRewardPoints(tokenAmount_, lockingPeriodInBlocks_) */\n      tag_114\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10637:10649  tokenAmount_ */\n      dup4\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10651:10673  lockingPeriodInBlocks_ */\n      dup4\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10608:10636  calculateStakingRewardPoints */\n      tag_49\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10608:10674  calculateStakingRewardPoints(tokenAmount_, lockingPeriodInBlocks_) */\n      jump\t// in\n    tag_114:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10706:10800  Stake(tokenAmount_, lockingPeriodInBlocks_, uint32(block.number), expectedStakingRewardPoints) */\n      0x40\n      dup1\n      mload\n      0x80\n      dup2\n      add\n      dup3\n      mstore\n      0xffffffffffffffffff\n      dup7\n      dup2\n      and\n      dup3\n      mstore\n      0xffffff\n      dup7\n      dup2\n      and\n      0x20\n      dup1\n      dup6\n      add\n      swap2\n      dup3\n      mstore\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10757:10769  block.number */\n      number\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10706:10800  Stake(tokenAmount_, lockingPeriodInBlocks_, uint32(block.number), expectedStakingRewardPoints) */\n      0xffffffff\n      swap1\n      dup2\n      and\n      dup7\n      dup9\n      add\n      swap1\n      dup2\n      mstore\n      0xffffffffffffffffffffffffffffffff\n      dup10\n      dup2\n      and\n      0x60\n      dup10\n      add\n      dup2\n      dup2\n      mstore\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10817:10827  msg.sender */\n      caller\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10810:10828  stakes[msg.sender] */\n      swap1\n      dup2\n      mstore\n      swap6\n      dup7\n      swap1\n      mstore\n      swap10\n      dup6\n      keccak256\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10810:10836  stakes[msg.sender] = stake */\n      dup10\n      mload\n      dup2\n      sload\n      swap8\n      mload\n      swap5\n      mload\n      swap12\n      mload\n      swap10\n      and\n      0xffffffffffffffffffffffffffffffffffffffff000000000000000000000000\n      swap1\n      swap8\n      and\n      swap7\n      swap1\n      swap7\n      or\n      0x01000000000000000000\n      swap4\n      swap1\n      swap8\n      and\n      swap3\n      swap1\n      swap3\n      mul\n      swap6\n      swap1\n      swap6\n      or\n      0xffffffffffffffffffffffff\n      and\n      0x01000000000000000000000000\n      swap9\n      swap1\n      swap3\n      and\n      swap8\n      swap1\n      swap8\n      mul\n      dup5\n      and\n      or\n      0x0100000000000000000000000000000000\n      swap5\n      swap1\n      swap4\n      and\n      swap4\n      swap1\n      swap4\n      mul\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11096:11113  totalRewardPoints */\n      0x02\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11096:11144  totalRewardPoints += expectedStakingRewardPoints */\n      dup1\n      sload\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10706:10800  Stake(tokenAmount_, lockingPeriodInBlocks_, uint32(block.number), expectedStakingRewardPoints) */\n      swap5\n      swap6\n      pop\n      swap2\n      swap4\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11096:11144  totalRewardPoints += expectedStakingRewardPoints */\n      tag_115\n      swap1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":10706:10800  Stake(tokenAmount_, lockingPeriodInBlocks_, uint32(block.number), expectedStakingRewardPoints) */\n      dup5\n      swap1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11096:11144  totalRewardPoints += expectedStakingRewardPoints */\n      tag_116\n      jump\t// in\n    tag_115:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11173:11183  msg.sender */\n      caller\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11154:11184  rewardPointsEarned[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11154:11172  rewardPointsEarned */\n      0x01\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11154:11184  rewardPointsEarned[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11154:11215  rewardPointsEarned[msg.sender] += expectedStakingRewardPoints */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffff\n      dup6\n      and\n      swap3\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11154:11184  rewardPointsEarned[msg.sender] */\n      swap1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11154:11215  rewardPointsEarned[msg.sender] += expectedStakingRewardPoints */\n      tag_117\n      swap1\n      dup5\n      swap1\n      tag_116\n      jump\t// in\n    tag_117:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11443:11452  poolToken */\n      sload(0x03)\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11443:11506  poolToken.transferFrom(msg.sender, address(this), tokenAmount_) */\n      mload(0x40)\n      0x23b872dd00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11466:11476  msg.sender */\n      caller\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11443:11506  poolToken.transferFrom(msg.sender, address(this), tokenAmount_) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2911:2945   */\n      mstore\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11486:11490  this */\n      address\n        /* \"#utility.yul\":2961:2979   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":2954:2997   */\n      mstore\n        /* \"#utility.yul\":3045:3065   */\n      0xffffffffffffffffff\n        /* \"#utility.yul\":3033:3066   */\n      dup7\n      and\n        /* \"#utility.yul\":3013:3031   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3006:3067   */\n      mstore\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11443:11452  poolToken */\n      0xffffffffffffffffffffffffffffffffffffffff\n      swap1\n      swap2\n      and\n      swap1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11443:11465  poolToken.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":2823:2841   */\n      0x64\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11443:11506  poolToken.transferFrom(msg.sender, address(this), tokenAmount_) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_122\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_122:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_123\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_123:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11435:11544  require(poolToken.transferFrom(msg.sender, address(this), tokenAmount_), \"TransferFrom of poolTokens failed\") */\n      tag_125\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":10768:10770   */\n      0x20\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11435:11544  require(poolToken.transferFrom(msg.sender, address(this), tokenAmount_), \"TransferFrom of poolTokens failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10750:10771   */\n      mstore\n        /* \"#utility.yul\":10807:10809   */\n      0x21\n        /* \"#utility.yul\":10787:10805   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10780:10810   */\n      mstore\n        /* \"#utility.yul\":10846:10880   */\n      0x5472616e7366657246726f6d206f6620706f6f6c546f6b656e73206661696c65\n        /* \"#utility.yul\":10826:10844   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10819:10881   */\n      mstore\n        /* \"#utility.yul\":10917:10920   */\n      0x6400000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10897:10915   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10890:10921   */\n      mstore\n        /* \"#utility.yul\":10938:10957   */\n      0x84\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11435:11544  require(poolToken.transferFrom(msg.sender, address(this), tokenAmount_), \"TransferFrom of poolTokens failed\") */\n      tag_87\n        /* \"#utility.yul\":10740:10963   */\n      jump\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11435:11544  require(poolToken.transferFrom(msg.sender, address(this), tokenAmount_), \"TransferFrom of poolTokens failed\") */\n    tag_125:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11560:11650  StakeLocked(msg.sender, tokenAmount_, lockingPeriodInBlocks_, expectedStakingRewardPoints) */\n      0x40\n      dup1\n      mload\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11572:11582  msg.sender */\n      caller\n        /* \"#utility.yul\":3609:3683   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3731:3751   */\n      0xffffffffffffffffff\n        /* \"#utility.yul\":3719:3752   */\n      dup7\n      and\n        /* \"#utility.yul\":3714:3716   */\n      0x20\n        /* \"#utility.yul\":3699:3717   */\n      dup3\n      add\n        /* \"#utility.yul\":3692:3753   */\n      mstore\n        /* \"#utility.yul\":3801:3809   */\n      0xffffff\n        /* \"#utility.yul\":3789:3810   */\n      dup6\n      and\n        /* \"#utility.yul\":3769:3787   */\n      dup2\n      dup4\n      add\n        /* \"#utility.yul\":3762:3811   */\n      mstore\n        /* \"#utility.yul\":3859:3893   */\n      0xffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3847:3894   */\n      dup5\n      and\n        /* \"#utility.yul\":3842:3844   */\n      0x60\n        /* \"#utility.yul\":3827:3845   */\n      dup3\n      add\n        /* \"#utility.yul\":3820:3895   */\n      mstore\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11560:11650  StakeLocked(msg.sender, tokenAmount_, lockingPeriodInBlocks_, expectedStakingRewardPoints) */\n      swap1\n      mload\n      0xe7dbea143058f90be7a1644e539342c25ddc5379868fe922bab596de99debf41\n      swap2\n      dup2\n      swap1\n      sub\n        /* \"#utility.yul\":3596:3599   */\n      0x80\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11560:11650  StakeLocked(msg.sender, tokenAmount_, lockingPeriodInBlocks_, expectedStakingRewardPoints) */\n      add\n      swap1\n      log1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6179:6180  _ */\n      pop\n      pop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9998:11657  function lockTokens(uint72 tokenAmount_, uint24 lockingPeriodInBlocks_) public poolTokenSet {... */\n      pop\n      pop\n      jump\t// out\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8938:9605  function calculateStakingRewardPoints(uint72 tokenAmount_, uint24 lockingPeriodInBlocks_) public pure returns (uint128) {... */\n    tag_49:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9049:9056  uint128 */\n      0x00\n      dup1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9425:9456  uint256(lockingPeriodInBlocks_) */\n      0xffffff\n      dup4\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9367:9422  uint256(tokenAmount_) * uint256(lockingPeriodInBlocks_) */\n      tag_131\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9425:9456  uint256(lockingPeriodInBlocks_) */\n      dup2\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9367:9388  uint256(tokenAmount_) */\n      0xffffffffffffffffff\n      dup8\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9367:9422  uint256(tokenAmount_) * uint256(lockingPeriodInBlocks_) */\n      tag_96\n      jump\t// in\n    tag_131:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9367:9456  uint256(tokenAmount_) * uint256(lockingPeriodInBlocks_) * uint256(lockingPeriodInBlocks_) */\n      tag_132\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_132:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9337:9456  uint256 stakingRewardPoints = uint256(tokenAmount_) * uint256(lockingPeriodInBlocks_) * uint256(lockingPeriodInBlocks_) */\n      swap1\n      pop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9496:9497  0 */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9474:9493  stakingRewardPoints */\n      dup2\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9474:9497  stakingRewardPoints > 0 */\n      gt\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9466:9553  require(stakingRewardPoints > 0, \"Neither tokenAmount nor lockingPeriod couldn't be 0\") */\n      tag_133\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":8390:8392   */\n      0x20\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9466:9553  require(stakingRewardPoints > 0, \"Neither tokenAmount nor lockingPeriod couldn't be 0\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8372:8393   */\n      mstore\n        /* \"#utility.yul\":8429:8431   */\n      0x33\n        /* \"#utility.yul\":8409:8427   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8402:8432   */\n      mstore\n        /* \"#utility.yul\":8468:8502   */\n      0x4e65697468657220746f6b656e416d6f756e74206e6f72206c6f636b696e6750\n        /* \"#utility.yul\":8448:8466   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8441:8503   */\n      mstore\n        /* \"#utility.yul\":8539:8560   */\n      0x6572696f6420636f756c646e2774206265203000000000000000000000000000\n        /* \"#utility.yul\":8519:8537   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8512:8561   */\n      mstore\n        /* \"#utility.yul\":8578:8597   */\n      0x84\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9466:9553  require(stakingRewardPoints > 0, \"Neither tokenAmount nor lockingPeriod couldn't be 0\") */\n      tag_87\n        /* \"#utility.yul\":8362:8603   */\n      jump\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9466:9553  require(stakingRewardPoints > 0, \"Neither tokenAmount nor lockingPeriod couldn't be 0\") */\n    tag_133:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":9578:9597  stakingRewardPoints */\n      swap4\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8938:9605  function calculateStakingRewardPoints(uint72 tokenAmount_, uint24 lockingPeriodInBlocks_) public pure returns (uint128) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15941:16312  function release() public {... */\n    tag_57:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15977:15995  uint256 releasable */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15998:16027  _releasableAmount(msg.sender) */\n      tag_137\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16016:16026  msg.sender */\n      caller\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15998:16015  _releasableAmount */\n      tag_138\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15998:16027  _releasableAmount(msg.sender) */\n      jump\t// in\n    tag_137:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15977:16027  uint256 releasable = _releasableAmount(msg.sender) */\n      swap1\n      pop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16058:16059  0 */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16045:16055  releasable */\n      dup2\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16045:16059  releasable > 0 */\n      gt\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16037:16098  require(releasable > 0, \"Vesting release: no tokens are due\") */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5196:5198   */\n      0x20\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16037:16098  require(releasable > 0, \"Vesting release: no tokens are due\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5178:5199   */\n      mstore\n        /* \"#utility.yul\":5235:5237   */\n      0x22\n        /* \"#utility.yul\":5215:5233   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5208:5238   */\n      mstore\n        /* \"#utility.yul\":5274:5308   */\n      0x56657374696e672072656c656173653a206e6f20746f6b656e73206172652064\n        /* \"#utility.yul\":5254:5272   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5247:5309   */\n      mstore\n        /* \"#utility.yul\":5345:5349   */\n      0x7565000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5325:5343   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5318:5350   */\n      mstore\n        /* \"#utility.yul\":5367:5386   */\n      0x84\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16037:16098  require(releasable > 0, \"Vesting release: no tokens are due\") */\n      tag_87\n        /* \"#utility.yul\":5168:5392   */\n      jump\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16037:16098  require(releasable > 0, \"Vesting release: no tokens are due\") */\n    tag_139:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16124:16134  msg.sender */\n      caller\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16109:16135  releasedTokens[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16109:16123  releasedTokens */\n      0x05\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16109:16135  releasedTokens[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16109:16149  releasedTokens[msg.sender] += releasable */\n      dup1\n      sload\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16139:16149  releasable */\n      dup4\n      swap3\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16109:16135  releasedTokens[msg.sender] */\n      swap1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16109:16149  releasedTokens[msg.sender] += releasable */\n      tag_142\n      swap1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16139:16149  releasable */\n      dup5\n      swap1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16109:16149  releasedTokens[msg.sender] += releasable */\n      tag_116\n      jump\t// in\n    tag_142:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16167:16210  oilerToken.transfer(msg.sender, releasable) */\n      mload(0x40)\n      0xa9059cbb00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16187:16197  msg.sender */\n      caller\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16167:16210  oilerToken.transfer(msg.sender, releasable) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3252:3326   */\n      mstore\n        /* \"#utility.yul\":3342:3360   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":3335:3369   */\n      dup3\n      swap1\n      mstore\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16167:16177  oilerToken */\n      immutable(\"0x880de8116b3dfac28e9ff528a9fef1d1e0a51449c1addce011ffec1f302992b6\")\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16167:16186  oilerToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":3225:3243   */\n      0x44\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16167:16210  oilerToken.transfer(msg.sender, releasable) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_145\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_145:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_147\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_147:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_148\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_148:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16159:16244  require(oilerToken.transfer(msg.sender, releasable), \"Reward oilers transfer failed\") */\n      tag_149\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":4838:4840   */\n      0x20\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16159:16244  require(oilerToken.transfer(msg.sender, releasable), \"Reward oilers transfer failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4820:4841   */\n      mstore\n        /* \"#utility.yul\":4877:4879   */\n      0x1d\n        /* \"#utility.yul\":4857:4875   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4850:4880   */\n      mstore\n        /* \"#utility.yul\":4916:4947   */\n      0x526577617264206f696c657273207472616e73666572206661696c6564000000\n        /* \"#utility.yul\":4896:4914   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4889:4948   */\n      mstore\n        /* \"#utility.yul\":4965:4983   */\n      0x64\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16159:16244  require(oilerToken.transfer(msg.sender, releasable), \"Reward oilers transfer failed\") */\n      tag_87\n        /* \"#utility.yul\":4810:4989   */\n      jump\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16159:16244  require(oilerToken.transfer(msg.sender, releasable), \"Reward oilers transfer failed\") */\n    tag_149:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16260:16305  grantedTokensReleased(msg.sender, releasable) */\n      0x40\n      dup1\n      mload\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16282:16292  msg.sender */\n      caller\n        /* \"#utility.yul\":3252:3326   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3357:3359   */\n      0x20\n        /* \"#utility.yul\":3342:3360   */\n      dup2\n      add\n        /* \"#utility.yul\":3335:3369   */\n      dup4\n      swap1\n      mstore\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16260:16305  grantedTokensReleased(msg.sender, releasable) */\n      0x769d4212c4fbfaa012a896b49e0f3bb14d32dd0d60ce1a13d357ee6b69db77c2\n      swap2\n        /* \"#utility.yul\":3225:3243   */\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16260:16305  grantedTokensReleased(msg.sender, releasable) */\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15941:16312  function release() public {... */\n      pop\n      jump\t// out\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7753:8561  function setPoolToken(address poolToken_, address stakingFundAddress_) public onlyOwner {... */\n    tag_82:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6360:6370  msg.sender */\n      caller\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6360:6379  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6374:6379  owner */\n      immutable(\"0x57014f1e5f1d53e43fa40624186159531d6372d1ab8f40ec7882845ca66de31d\")\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6360:6379  msg.sender == owner */\n      and\n      eq\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6352:6411  require(msg.sender == owner, \"Can only be called by owner\") */\n      tag_154\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":11170:11172   */\n      0x20\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6352:6411  require(msg.sender == owner, \"Can only be called by owner\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11152:11173   */\n      mstore\n        /* \"#utility.yul\":11209:11211   */\n      0x1b\n        /* \"#utility.yul\":11189:11207   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11182:11212   */\n      mstore\n        /* \"#utility.yul\":11248:11277   */\n      0x43616e206f6e6c792062652063616c6c6564206279206f776e65720000000000\n        /* \"#utility.yul\":11228:11246   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11221:11278   */\n      mstore\n        /* \"#utility.yul\":11295:11313   */\n      0x64\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6352:6411  require(msg.sender == owner, \"Can only be called by owner\") */\n      tag_87\n        /* \"#utility.yul\":11142:11319   */\n      jump\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6352:6411  require(msg.sender == owner, \"Can only be called by owner\") */\n    tag_154:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7867:7876  poolToken */\n      sload(0x03)\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7859:7893  address(poolToken) == address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7867:7876  poolToken */\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7859:7893  address(poolToken) == address(0x0) */\n      iszero\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7851:7923  require(address(poolToken) == address(0x0), \"poolToken was already set\") */\n      tag_158\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":12718:12720   */\n      0x20\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7851:7923  require(address(poolToken) == address(0x0), \"poolToken was already set\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12700:12721   */\n      mstore\n        /* \"#utility.yul\":12757:12759   */\n      0x19\n        /* \"#utility.yul\":12737:12755   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12730:12760   */\n      mstore\n        /* \"#utility.yul\":12796:12823   */\n      0x706f6f6c546f6b656e2077617320616c72656164792073657400000000000000\n        /* \"#utility.yul\":12776:12794   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12769:12824   */\n      mstore\n        /* \"#utility.yul\":12841:12859   */\n      0x64\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7851:7923  require(address(poolToken) == address(0x0), \"poolToken was already set\") */\n      tag_87\n        /* \"#utility.yul\":12690:12865   */\n      jump\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7851:7923  require(address(poolToken) == address(0x0), \"poolToken was already set\") */\n    tag_158:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7941:7967  poolToken_ != address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7933:8004  require(poolToken_ != address(0x0), \"poolToken address cannot be zero\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":9649:9651   */\n      0x20\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7933:8004  require(poolToken_ != address(0x0), \"poolToken address cannot be zero\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9631:9652   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":9668:9686   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9661:9691   */\n      mstore\n        /* \"#utility.yul\":9727:9761   */\n      0x706f6f6c546f6b656e20616464726573732063616e6e6f74206265207a65726f\n        /* \"#utility.yul\":9707:9725   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9700:9762   */\n      mstore\n        /* \"#utility.yul\":9779:9797   */\n      0x64\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7933:8004  require(poolToken_ != address(0x0), \"poolToken address cannot be zero\") */\n      tag_87\n        /* \"#utility.yul\":9621:9803   */\n      jump\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7933:8004  require(poolToken_ != address(0x0), \"poolToken address cannot be zero\") */\n    tag_161:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8014:8023  poolToken */\n      0x03\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8014:8044  poolToken = IERC20(poolToken_) */\n      dup1\n      sload\n      0xffffffffffffffffffffffff0000000000000000000000000000000000000000\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      dup2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8135:8184  IERC20(oilerToken).balanceOf(stakingFundAddress_) */\n      mload(0x40)\n      0x70a0823100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":1847:1902   */\n      dup3\n      dup3\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8135:8184  IERC20(oilerToken).balanceOf(stakingFundAddress_) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":1829:1903   */\n      mstore\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8188:8205  stakingFundAmount */\n      immutable(\"0x8b953cbb84328003779eb1ef176ef07f7dd0ae3d4a8e408de53d15a36466c86e\")\n      swap2\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8142:8152  oilerToken */\n      immutable(\"0x880de8116b3dfac28e9ff528a9fef1d1e0a51449c1addce011ffec1f302992b6\")\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8135:8163  IERC20(oilerToken).balanceOf */\n      and\n      swap1\n      0x70a08231\n      swap1\n        /* \"#utility.yul\":1802:1820   */\n      0x24\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8135:8184  IERC20(oilerToken).balanceOf(stakingFundAddress_) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_167\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_167:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_168\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8135:8205  IERC20(oilerToken).balanceOf(stakingFundAddress_) >= stakingFundAmount */\n      lt\n      iszero\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8127:8253  require(IERC20(oilerToken).balanceOf(stakingFundAddress_) >= stakingFundAmount, \"StakingFund doesn't have enough OIL balance\") */\n      tag_170\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":10010:10012   */\n      0x20\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8127:8253  require(IERC20(oilerToken).balanceOf(stakingFundAddress_) >= stakingFundAmount, \"StakingFund doesn't have enough OIL balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9992:10013   */\n      mstore\n        /* \"#utility.yul\":10049:10051   */\n      0x2b\n        /* \"#utility.yul\":10029:10047   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10022:10052   */\n      mstore\n        /* \"#utility.yul\":10088:10122   */\n      0x5374616b696e6746756e6420646f65736e2774206861766520656e6f75676820\n        /* \"#utility.yul\":10068:10086   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10061:10123   */\n      mstore\n        /* \"#utility.yul\":10159:10172   */\n      0x4f494c2062616c616e6365000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10139:10157   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":10132:10173   */\n      mstore\n        /* \"#utility.yul\":10190:10209   */\n      0x84\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8127:8253  require(IERC20(oilerToken).balanceOf(stakingFundAddress_) >= stakingFundAmount, \"StakingFund doesn't have enough OIL balance\") */\n      tag_87\n        /* \"#utility.yul\":9982:10215   */\n      jump\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8127:8253  require(IERC20(oilerToken).balanceOf(stakingFundAddress_) >= stakingFundAmount, \"StakingFund doesn't have enough OIL balance\") */\n    tag_170:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8271:8335  IERC20(oilerToken).allowance(stakingFundAddress_, address(this)) */\n      mload(0x40)\n      0xdd62ed3e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8271:8299  IERC20(oilerToken).allowance */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2167:2182   */\n      dup3\n      dup2\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8271:8335  IERC20(oilerToken).allowance(stakingFundAddress_, address(this)) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":2149:2183   */\n      mstore\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8329:8333  this */\n      address\n        /* \"#utility.yul\":2199:2217   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":2192:2235   */\n      mstore\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8339:8356  stakingFundAmount */\n      immutable(\"0x8b953cbb84328003779eb1ef176ef07f7dd0ae3d4a8e408de53d15a36466c86e\")\n      swap2\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8278:8288  oilerToken */\n      immutable(\"0x880de8116b3dfac28e9ff528a9fef1d1e0a51449c1addce011ffec1f302992b6\")\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8271:8299  IERC20(oilerToken).allowance */\n      swap1\n      swap2\n      and\n      swap1\n      0xdd62ed3e\n      swap1\n        /* \"#utility.yul\":2061:2079   */\n      0x44\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8271:8335  IERC20(oilerToken).allowance(stakingFundAddress_, address(this)) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_175\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_175:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_177\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_177:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_178\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_178:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8271:8356  IERC20(oilerToken).allowance(stakingFundAddress_, address(this)) >= stakingFundAmount */\n      lt\n      iszero\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8263:8402  require(IERC20(oilerToken).allowance(stakingFundAddress_, address(this)) >= stakingFundAmount, \"StakingFund doesn't have enough allowance\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":9239:9241   */\n      0x20\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8263:8402  require(IERC20(oilerToken).allowance(stakingFundAddress_, address(this)) >= stakingFundAmount, \"StakingFund doesn't have enough allowance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9221:9242   */\n      mstore\n        /* \"#utility.yul\":9278:9280   */\n      0x29\n        /* \"#utility.yul\":9258:9276   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9251:9281   */\n      mstore\n        /* \"#utility.yul\":9317:9351   */\n      0x5374616b696e6746756e6420646f65736e2774206861766520656e6f75676820\n        /* \"#utility.yul\":9297:9315   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9290:9352   */\n      mstore\n        /* \"#utility.yul\":9388:9399   */\n      0x616c6c6f77616e63650000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9368:9386   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":9361:9400   */\n      mstore\n        /* \"#utility.yul\":9417:9436   */\n      0x84\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8263:8402  require(IERC20(oilerToken).allowance(stakingFundAddress_, address(this)) >= stakingFundAmount, \"StakingFund doesn't have enough allowance\") */\n      tag_87\n        /* \"#utility.yul\":9211:9442   */\n      jump\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8263:8402  require(IERC20(oilerToken).allowance(stakingFundAddress_, address(this)) >= stakingFundAmount, \"StakingFund doesn't have enough allowance\") */\n    tag_179:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8420:8506  IERC20(oilerToken).transferFrom(stakingFundAddress_, address(this), stakingFundAmount) */\n      mload(0x40)\n      0x23b872dd00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8420:8451  IERC20(oilerToken).transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":2527:2542   */\n      dup3\n      dup2\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8420:8506  IERC20(oilerToken).transferFrom(stakingFundAddress_, address(this), stakingFundAmount) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":2509:2543   */\n      mstore\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8481:8485  this */\n      address\n        /* \"#utility.yul\":2559:2577   */\n      0x24\n      dup4\n      add\n        /* \"#utility.yul\":2552:2595   */\n      mstore\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8488:8505  stakingFundAmount */\n      immutable(\"0x8b953cbb84328003779eb1ef176ef07f7dd0ae3d4a8e408de53d15a36466c86e\")\n        /* \"#utility.yul\":2611:2629   */\n      0x44\n      dup4\n      add\n        /* \"#utility.yul\":2604:2638   */\n      mstore\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8427:8437  oilerToken */\n      immutable(\"0x880de8116b3dfac28e9ff528a9fef1d1e0a51449c1addce011ffec1f302992b6\")\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8420:8451  IERC20(oilerToken).transferFrom */\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":2421:2439   */\n      0x64\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8420:8506  IERC20(oilerToken).transferFrom(stakingFundAddress_, address(this), stakingFundAmount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_184\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_184:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_186\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_186:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_187\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_187:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8412:8554  require(IERC20(oilerToken).transferFrom(stakingFundAddress_, address(this), stakingFundAmount), \"TransferFrom of OIL from StakingFund failed\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":11946:11948   */\n      0x20\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8412:8554  require(IERC20(oilerToken).transferFrom(stakingFundAddress_, address(this), stakingFundAmount), \"TransferFrom of OIL from StakingFund failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11928:11949   */\n      mstore\n        /* \"#utility.yul\":11985:11987   */\n      0x2b\n        /* \"#utility.yul\":11965:11983   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11958:11988   */\n      mstore\n        /* \"#utility.yul\":12024:12058   */\n      0x5472616e7366657246726f6d206f66204f494c2066726f6d205374616b696e67\n        /* \"#utility.yul\":12004:12022   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11997:12059   */\n      mstore\n        /* \"#utility.yul\":12095:12108   */\n      0x46756e64206661696c6564000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12075:12093   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":12068:12109   */\n      mstore\n        /* \"#utility.yul\":12126:12145   */\n      0x84\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8412:8554  require(IERC20(oilerToken).transferFrom(stakingFundAddress_, address(this), stakingFundAmount), \"TransferFrom of OIL from StakingFund failed\") */\n      tag_87\n        /* \"#utility.yul\":11918:12151   */\n      jump\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":8412:8554  require(IERC20(oilerToken).transferFrom(stakingFundAddress_, address(this), stakingFundAmount), \"TransferFrom of OIL from StakingFund failed\") */\n    tag_188:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":7753:8561  function setPoolToken(address poolToken_, address stakingFundAddress_) public onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11815:12509  function unlockTokens() public poolTokenSet {... */\n    tag_84:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6121:6130  poolToken */\n      sload(0x03)\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6113:6147  address(poolToken) != address(0x0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6121:6130  poolToken */\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6105:6169  require(address(poolToken) != address(0x0), \"poolToken not set\") */\n      tag_192\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":10422:10424   */\n      0x20\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6105:6169  require(address(poolToken) != address(0x0), \"poolToken not set\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10404:10425   */\n      mstore\n        /* \"#utility.yul\":10461:10463   */\n      0x11\n        /* \"#utility.yul\":10441:10459   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10434:10464   */\n      mstore\n        /* \"#utility.yul\":10500:10519   */\n      0x706f6f6c546f6b656e206e6f7420736574000000000000000000000000000000\n        /* \"#utility.yul\":10480:10498   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10473:10520   */\n      mstore\n        /* \"#utility.yul\":10537:10555   */\n      0x64\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6105:6169  require(address(poolToken) != address(0x0), \"poolToken not set\") */\n      tag_87\n        /* \"#utility.yul\":10394:10561   */\n      jump\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":6105:6169  require(address(poolToken) != address(0x0), \"poolToken not set\") */\n    tag_192:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11897:11907  msg.sender */\n      caller\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11869:11887  Stake memory stake */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11890:11908  stakes[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11869:11908  Stake memory stake = stakes[msg.sender] */\n      dup3\n      mload\n      0x80\n      dup2\n      add\n      dup5\n      mstore\n      swap1\n      sload\n      0xffffffffffffffffff\n      dup2\n      and\n      dup1\n      dup4\n      mstore\n      0x01000000000000000000\n      dup3\n      div\n      0xffffff\n      and\n      swap4\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x01000000000000000000000000\n      dup2\n      div\n      0xffffffff\n      and\n      swap4\n      dup3\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x0100000000000000000000000000000000\n      swap1\n      swap3\n      div\n      0xffffffffffffffffffffffffffffffff\n      and\n      0x60\n      dup4\n      add\n      mstore\n      dup1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11969:12030  require(stakeAmount != 0, \"You don't have a stake to unlock\") */\n      tag_195\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":6857:6859   */\n      0x20\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11969:12030  require(stakeAmount != 0, \"You don't have a stake to unlock\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6839:6860   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":6876:6894   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6869:6899   */\n      mstore\n        /* \"#utility.yul\":6935:6969   */\n      0x596f7520646f6e277420686176652061207374616b6520746f20756e6c6f636b\n        /* \"#utility.yul\":6915:6933   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6908:6970   */\n      mstore\n        /* \"#utility.yul\":6987:7005   */\n      0x64\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11969:12030  require(stakeAmount != 0, \"You don't have a stake to unlock\") */\n      tag_87\n        /* \"#utility.yul\":6829:7011   */\n      jump\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":11969:12030  require(stakeAmount != 0, \"You don't have a stake to unlock\") */\n    tag_195:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12064:12069  stake */\n      dup2\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12064:12080  stake.startBlock */\n      0x40\n      add\n      mload\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12049:12080  block.number > stake.startBlock */\n      0xffffffff\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12049:12061  block.number */\n      number\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12049:12080  block.number > stake.startBlock */\n      gt\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12041:12145  require(block.number > stake.startBlock, \"You can't withdraw the stake in the same block it was locked\") */\n      tag_198\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":8810:8812   */\n      0x20\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12041:12145  require(block.number > stake.startBlock, \"You can't withdraw the stake in the same block it was locked\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8792:8813   */\n      mstore\n        /* \"#utility.yul\":8849:8851   */\n      0x3c\n        /* \"#utility.yul\":8829:8847   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8822:8852   */\n      mstore\n        /* \"#utility.yul\":8888:8922   */\n      0x596f752063616e277420776974686472617720746865207374616b6520696e20\n        /* \"#utility.yul\":8868:8886   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8861:8923   */\n      mstore\n        /* \"#utility.yul\":8959:8989   */\n      0x7468652073616d6520626c6f636b20697420776173206c6f636b656400000000\n        /* \"#utility.yul\":8939:8957   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8932:8990   */\n      mstore\n        /* \"#utility.yul\":9007:9026   */\n      0x84\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12041:12145  require(block.number > stake.startBlock, \"You can't withdraw the stake in the same block it was locked\") */\n      tag_87\n        /* \"#utility.yul\":8782:9032   */\n      jump\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12041:12145  require(block.number > stake.startBlock, \"You can't withdraw the stake in the same block it was locked\") */\n    tag_198:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12253:12282  _punishEarlyWithdrawal(stake) */\n      tag_201\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12276:12281  stake */\n      dup3\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12253:12275  _punishEarlyWithdrawal */\n      tag_202\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12253:12282  _punishEarlyWithdrawal(stake) */\n      jump\t// in\n    tag_201:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12398:12408  msg.sender */\n      caller\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12391:12397  stakes */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12391:12409  stakes[msg.sender] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12384:12409  delete stakes[msg.sender] */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12428:12437  poolToken */\n      sload(0x03)\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12428:12471  poolToken.transfer(msg.sender, stakeAmount) */\n      swap1\n      mload\n      0xa9059cbb00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":3252:3326   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":3342:3360   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3335:3369   */\n      dup4\n      swap1\n      mstore\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12391:12409  stakes[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12428:12437  poolToken */\n      and\n      swap1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12428:12446  poolToken.transfer */\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":3225:3243   */\n      0x44\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12428:12471  poolToken.transfer(msg.sender, stakeAmount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_204\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_204:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_206\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_206:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_207\n      swap2\n      swap1\n      tag_124\n      jump\t// in\n    tag_207:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12420:12502  require(poolToken.transfer(msg.sender, stakeAmount), \"Pool token transfer failed\") */\n      tag_188\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":6013:6015   */\n      0x20\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12420:12502  require(poolToken.transfer(msg.sender, stakeAmount), \"Pool token transfer failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5995:6016   */\n      mstore\n        /* \"#utility.yul\":6052:6054   */\n      0x1a\n        /* \"#utility.yul\":6032:6050   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6025:6055   */\n      mstore\n        /* \"#utility.yul\":6091:6119   */\n      0x506f6f6c20746f6b656e207472616e73666572206661696c6564000000000000\n        /* \"#utility.yul\":6071:6089   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6064:6120   */\n      mstore\n        /* \"#utility.yul\":6137:6155   */\n      0x64\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12420:12502  require(poolToken.transfer(msg.sender, stakeAmount), \"Pool token transfer failed\") */\n      tag_87\n        /* \"#utility.yul\":5985:6161   */\n      jump\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15531:15891  function _grantTokens(address recipient_, uint256 amountEarned_) internal {... */\n    tag_100:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15639:15640  0 */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15623:15636  amountEarned_ */\n      dup2\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15623:15640  amountEarned_ > 0 */\n      gt\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15615:15686  require(amountEarned_ > 0, \"You didn't earn any integer amount of wei\") */\n      tag_212\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":7980:7982   */\n      0x20\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15615:15686  require(amountEarned_ > 0, \"You didn't earn any integer amount of wei\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7962:7983   */\n      mstore\n        /* \"#utility.yul\":8019:8021   */\n      0x29\n        /* \"#utility.yul\":7999:8017   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7992:8022   */\n      mstore\n        /* \"#utility.yul\":8058:8092   */\n      0x596f75206469646e2774206561726e20616e7920696e746567657220616d6f75\n        /* \"#utility.yul\":8038:8056   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8031:8093   */\n      mstore\n        /* \"#utility.yul\":8129:8140   */\n      0x6e74206f66207765690000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8109:8127   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":8102:8141   */\n      mstore\n        /* \"#utility.yul\":8158:8177   */\n      0x84\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15615:15686  require(amountEarned_ > 0, \"You didn't earn any integer amount of wei\") */\n      tag_87\n        /* \"#utility.yul\":7952:8183   */\n      jump\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15615:15686  require(amountEarned_ > 0, \"You didn't earn any integer amount of wei\") */\n    tag_212:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15704:15728  recipient_ != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15696:15778  require(recipient_ != address(0), \"TokenVesting: beneficiary is the zero address\") */\n      tag_215\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n        /* \"#utility.yul\":5599:5601   */\n      0x20\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15696:15778  require(recipient_ != address(0), \"TokenVesting: beneficiary is the zero address\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":5581:5602   */\n      mstore\n        /* \"#utility.yul\":5638:5640   */\n      0x2d\n        /* \"#utility.yul\":5618:5636   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":5611:5641   */\n      mstore\n        /* \"#utility.yul\":5677:5711   */\n      0x546f6b656e56657374696e673a2062656e656669636961727920697320746865\n        /* \"#utility.yul\":5657:5675   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":5650:5712   */\n      mstore\n        /* \"#utility.yul\":5748:5763   */\n      0x207a65726f206164647265737300000000000000000000000000000000000000\n        /* \"#utility.yul\":5728:5746   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":5721:5764   */\n      mstore\n        /* \"#utility.yul\":5781:5800   */\n      0x84\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15696:15778  require(recipient_ != address(0), \"TokenVesting: beneficiary is the zero address\") */\n      tag_87\n        /* \"#utility.yul\":5571:5806   */\n      jump\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15696:15778  require(recipient_ != address(0), \"TokenVesting: beneficiary is the zero address\") */\n    tag_215:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15788:15813  grantedTokens[recipient_] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup3\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15788:15801  grantedTokens */\n      0x04\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15788:15813  grantedTokens[recipient_] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15788:15829  grantedTokens[recipient_] = amountEarned_ */\n      dup5\n      swap1\n      sstore\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15844:15884  RewardGranted(recipient_, amountEarned_) */\n      dup2\n      mload\n        /* \"#utility.yul\":3252:3326   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":3342:3360   */\n      dup3\n      add\n        /* \"#utility.yul\":3335:3369   */\n      dup4\n      swap1\n      mstore\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15844:15884  RewardGranted(recipient_, amountEarned_) */\n      0x6e1afd29522b0aaf986597bcc53f5fb4daae2af7cfd41d00c384ab1bdf912b23\n      swap2\n        /* \"#utility.yul\":3225:3243   */\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15844:15884  RewardGranted(recipient_, amountEarned_) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":15531:15891  function _grantTokens(address recipient_, uint256 amountEarned_) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16426:16583  function _releasableAmount(address recipient_) internal view returns (uint256) {... */\n    tag_138:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16550:16576  releasedTokens[recipient_] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup2\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16496:16503  uint256 */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16550:16576  releasedTokens[recipient_] */\n      swap1\n      dup2\n      mstore\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16550:16564  releasedTokens */\n      0x05\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16550:16576  releasedTokens[recipient_] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16522:16547  _vestedAmount(recipient_) */\n      tag_220\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16565:16575  recipient_ */\n      dup4\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16522:16535  _vestedAmount */\n      tag_221\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16522:16547  _vestedAmount(recipient_) */\n      jump\t// in\n    tag_220:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16522:16576  _vestedAmount(recipient_) - releasedTokens[recipient_] */\n      tag_222\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_222:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16515:16576  return _vestedAmount(recipient_) - releasedTokens[recipient_] */\n      swap3\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16426:16583  function _releasableAmount(address recipient_) internal view returns (uint256) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12610:13548  function _punishEarlyWithdrawal(Stake memory stake_) internal {... */\n    tag_202:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12991:12997  stake_ */\n      dup1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12991:13019  stake_.lockingPeriodInBlocks */\n      0x20\n      add\n      mload\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12971:13019  stake_.startBlock + stake_.lockingPeriodInBlocks */\n      0xffffff\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12971:12977  stake_ */\n      dup2\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12971:12988  stake_.startBlock */\n      0x40\n      add\n      mload\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12971:13019  stake_.startBlock + stake_.lockingPeriodInBlocks */\n      tag_224\n      swap2\n      swap1\n      tag_225\n      jump\t// in\n    tag_224:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12955:13020  block.number < (stake_.startBlock + stake_.lockingPeriodInBlocks) */\n      0xffffffff\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12955:12967  block.number */\n      number\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12955:13020  block.number < (stake_.startBlock + stake_.lockingPeriodInBlocks) */\n      lt\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12951:13542  if (block.number < (stake_.startBlock + stake_.lockingPeriodInBlocks)) { // lt - cause you can only withdraw at or after startBlock + lockPeriod... */\n      iszero\n      tag_226\n      jumpi\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13142:13176  stake_.expectedStakingRewardPoints */\n      0x60\n      dup2\n      add\n      mload\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13127:13137  msg.sender */\n      caller\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13108:13138  rewardPointsEarned[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13108:13126  rewardPointsEarned */\n      0x01\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13108:13138  rewardPointsEarned[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13108:13176  rewardPointsEarned[msg.sender] -= stake_.expectedStakingRewardPoints */\n      dup1\n      sload\n      0xffffffffffffffffffffffffffffffff\n      swap1\n      swap4\n      and\n      swap3\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13108:13138  rewardPointsEarned[msg.sender] */\n      swap1\n      swap2\n      swap1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13108:13176  rewardPointsEarned[msg.sender] -= stake_.expectedStakingRewardPoints */\n      tag_227\n      swap1\n      dup5\n      swap1\n      tag_107\n      jump\t// in\n    tag_227:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13211:13217  stake_ */\n      dup1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13211:13245  stake_.expectedStakingRewardPoints */\n      0x60\n      add\n      mload\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13190:13245  totalRewardPoints -= stake_.expectedStakingRewardPoints */\n      0xffffffffffffffffffffffffffffffff\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13190:13207  totalRewardPoints */\n      0x02\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13190:13245  totalRewardPoints -= stake_.expectedStakingRewardPoints */\n      dup3\n      dup3\n      sload\n      tag_228\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_228:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13301:13319  stake_.tokenAmount */\n      dup1\n      mload\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13321:13349  stake_.lockingPeriodInBlocks */\n      0x20\n      dup3\n      add\n      mload\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13366:13383  stake_.startBlock */\n      0x40\n      dup4\n      add\n      mload\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13264:13384  StakeUnlockedPrematurely(msg.sender, stake_.tokenAmount, stake_.lockingPeriodInBlocks, block.number - stake_.startBlock) */\n      0x6c6f3c7d8c87976393011cc962da12841024bc1d62d2de21716a6306ab314ef3\n      swap3\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13289:13299  msg.sender */\n      caller\n      swap3\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13301:13319  stake_.tokenAmount */\n      swap1\n      swap2\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13351:13383  block.number - stake_.startBlock */\n      tag_229\n      swap1\n      0xffffffff\n      and\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13351:13363  block.number */\n      number\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13351:13383  block.number - stake_.startBlock */\n      tag_107\n      jump\t// in\n    tag_229:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13264:13384  StakeUnlockedPrematurely(msg.sender, stake_.tokenAmount, stake_.lockingPeriodInBlocks, block.number - stake_.startBlock) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4165:4207   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":4153:4208   */\n      swap1\n      swap6\n      and\n        /* \"#utility.yul\":4135:4209   */\n      dup6\n      mstore\n        /* \"#utility.yul\":4257:4277   */\n      0xffffffffffffffffff\n        /* \"#utility.yul\":4245:4278   */\n      swap1\n      swap4\n      and\n        /* \"#utility.yul\":4240:4242   */\n      0x20\n        /* \"#utility.yul\":4225:4243   */\n      dup6\n      add\n        /* \"#utility.yul\":4218:4279   */\n      mstore\n        /* \"#utility.yul\":4327:4335   */\n      0xffffff\n        /* \"#utility.yul\":4315:4336   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":4295:4313   */\n      swap2\n      dup4\n      add\n        /* \"#utility.yul\":4288:4337   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4368:4370   */\n      0x60\n        /* \"#utility.yul\":4353:4371   */\n      dup3\n      add\n        /* \"#utility.yul\":4346:4380   */\n      mstore\n        /* \"#utility.yul\":4122:4125   */\n      0x80\n        /* \"#utility.yul\":4107:4126   */\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13264:13384  StakeUnlockedPrematurely(msg.sender, stake_.tokenAmount, stake_.lockingPeriodInBlocks, block.number - stake_.startBlock) */\n      tag_152\n        /* \"#utility.yul\":4089:4386   */\n      jump\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":12951:13542  if (block.number < (stake_.startBlock + stake_.lockingPeriodInBlocks)) { // lt - cause you can only withdraw at or after startBlock + lockPeriod... */\n    tag_226:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13446:13464  stake_.tokenAmount */\n      dup1\n      mload\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13466:13494  stake_.lockingPeriodInBlocks */\n      0x20\n      dup1\n      dup4\n      add\n      mload\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13496:13530  stake_.expectedStakingRewardPoints */\n      0x60\n      dup1\n      dup6\n      add\n      mload\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13420:13531  StakeUnlocked(msg.sender, stake_.tokenAmount, stake_.lockingPeriodInBlocks, stake_.expectedStakingRewardPoints) */\n      0x40\n      dup1\n      mload\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13434:13444  msg.sender */\n      caller\n        /* \"#utility.yul\":3609:3683   */\n      dup2\n      mstore\n        /* \"#utility.yul\":3731:3751   */\n      0xffffffffffffffffff\n        /* \"#utility.yul\":3719:3752   */\n      swap1\n      swap7\n      and\n        /* \"#utility.yul\":3699:3717   */\n      swap5\n      dup7\n      add\n        /* \"#utility.yul\":3692:3753   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":3801:3809   */\n      0xffffff\n        /* \"#utility.yul\":3789:3810   */\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":3769:3787   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":3762:3811   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":3859:3893   */\n      0xffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3847:3894   */\n      and\n        /* \"#utility.yul\":3827:3845   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":3820:3895   */\n      mstore\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13420:13531  StakeUnlocked(msg.sender, stake_.tokenAmount, stake_.lockingPeriodInBlocks, stake_.expectedStakingRewardPoints) */\n      0x391930ab48e95a9040c849cc86e1b2f63c711a1f59d6e324ce775dc9a0051056\n      swap1\n        /* \"#utility.yul\":3596:3599   */\n      0x80\n        /* \"#utility.yul\":3581:3600   */\n      add\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":13420:13531  StakeUnlocked(msg.sender, stake_.tokenAmount, stake_.lockingPeriodInBlocks, stake_.expectedStakingRewardPoints) */\n      tag_152\n        /* \"#utility.yul\":3563:3901   */\n      jump\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16807:17293  function _vestedAmount(address recipient_) internal view returns (uint256) {... */\n    tag_221:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16873:16880  uint256 */\n      0x00\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16912:16953  stakingProgramEndsBlock + vestingDuration */\n      tag_235\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16938:16953  vestingDuration */\n      immutable(\"0xbbd48b257be1b8216d144ef9be5734f8d11697959c9e0f7768bec89db74a63a3\")\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16912:16935  stakingProgramEndsBlock */\n      immutable(\"0x7749cc8014201da2069c21d93ba99c584b6f62d393fde534ed47eac227e31561\")\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16912:16953  stakingProgramEndsBlock + vestingDuration */\n      tag_116\n      jump\t// in\n    tag_235:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16896:16908  block.number */\n      number\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16896:16953  block.number >= stakingProgramEndsBlock + vestingDuration */\n      lt\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16892:17287  if (block.number >= stakingProgramEndsBlock + vestingDuration) {... */\n      tag_236\n      jumpi\n      pop\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":17048:17073  grantedTokens[recipient_] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":17048:17061  grantedTokens */\n      0x04\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":17048:17073  grantedTokens[recipient_] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16807:17293  function _vestedAmount(address recipient_) internal view returns (uint256) {... */\n      jump\t// out\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16892:17287  if (block.number >= stakingProgramEndsBlock + vestingDuration) {... */\n    tag_236:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":17261:17276  vestingDuration */\n      immutable(\"0xbbd48b257be1b8216d144ef9be5734f8d11697959c9e0f7768bec89db74a63a3\")\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":17219:17257  block.number - stakingProgramEndsBlock */\n      tag_238\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":17234:17257  stakingProgramEndsBlock */\n      immutable(\"0x7749cc8014201da2069c21d93ba99c584b6f62d393fde534ed47eac227e31561\")\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":17219:17231  block.number */\n      number\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":17219:17257  block.number - stakingProgramEndsBlock */\n      tag_107\n      jump\t// in\n    tag_238:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":17190:17215  grantedTokens[recipient_] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":17190:17203  grantedTokens */\n      0x04\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":17190:17215  grantedTokens[recipient_] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":17190:17258  grantedTokens[recipient_] * (block.number - stakingProgramEndsBlock) */\n      tag_239\n      swap2\n      swap1\n      tag_96\n      jump\t// in\n    tag_239:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":17190:17276  grantedTokens[recipient_] * (block.number - stakingProgramEndsBlock) / vestingDuration */\n      tag_222\n      swap2\n      swap1\n      tag_98\n      jump\t// in\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16892:17287  if (block.number >= stakingProgramEndsBlock + vestingDuration) {... */\n    tag_237:\n        /* \"token-staking(copy)(copy)/contracts/Staking.sol\":16807:17293  function _vestedAmount(address recipient_) internal view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:210   */\n    tag_242:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n        /* \"#utility.yul\":142:184   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":131:185   */\n      dup2\n      and\n        /* \"#utility.yul\":121:186   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:113   */\n      tag_237\n      jumpi\n        /* \"#utility.yul\":200:201   */\n      0x00\n        /* \"#utility.yul\":197:198   */\n      dup1\n        /* \"#utility.yul\":190:202   */\n      revert\n        /* \"#utility.yul\":215:411   */\n    tag_32:\n        /* \"#utility.yul\":274:280   */\n      0x00\n        /* \"#utility.yul\":327:329   */\n      0x20\n        /* \"#utility.yul\":315:324   */\n      dup3\n        /* \"#utility.yul\":306:313   */\n      dup5\n        /* \"#utility.yul\":302:325   */\n      sub\n        /* \"#utility.yul\":298:330   */\n      slt\n        /* \"#utility.yul\":295:297   */\n      iszero\n      tag_246\n      jumpi\n        /* \"#utility.yul\":348:354   */\n      dup1\n        /* \"#utility.yul\":340:346   */\n      dup2\n        /* \"#utility.yul\":333:355   */\n      revert\n        /* \"#utility.yul\":295:297   */\n    tag_246:\n        /* \"#utility.yul\":376:405   */\n      tag_133\n        /* \"#utility.yul\":395:404   */\n      dup3\n        /* \"#utility.yul\":376:405   */\n      tag_242\n      jump\t// in\n        /* \"#utility.yul\":416:686   */\n    tag_81:\n        /* \"#utility.yul\":484:490   */\n      0x00\n        /* \"#utility.yul\":492:498   */\n      dup1\n        /* \"#utility.yul\":545:547   */\n      0x40\n        /* \"#utility.yul\":533:542   */\n      dup4\n        /* \"#utility.yul\":524:531   */\n      dup6\n        /* \"#utility.yul\":520:543   */\n      sub\n        /* \"#utility.yul\":516:548   */\n      slt\n        /* \"#utility.yul\":513:515   */\n      iszero\n      tag_249\n      jumpi\n        /* \"#utility.yul\":566:572   */\n      dup1\n        /* \"#utility.yul\":558:564   */\n      dup2\n        /* \"#utility.yul\":551:573   */\n      revert\n        /* \"#utility.yul\":513:515   */\n    tag_249:\n        /* \"#utility.yul\":594:623   */\n      tag_250\n        /* \"#utility.yul\":613:622   */\n      dup4\n        /* \"#utility.yul\":594:623   */\n      tag_242\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":584:623   */\n      swap2\n      pop\n        /* \"#utility.yul\":642:680   */\n      tag_251\n        /* \"#utility.yul\":676:678   */\n      0x20\n        /* \"#utility.yul\":665:674   */\n      dup5\n        /* \"#utility.yul\":661:679   */\n      add\n        /* \"#utility.yul\":642:680   */\n      tag_242\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":632:680   */\n      swap1\n      pop\n        /* \"#utility.yul\":503:686   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":691:988   */\n    tag_124:\n        /* \"#utility.yul\":758:764   */\n      0x00\n        /* \"#utility.yul\":811:813   */\n      0x20\n        /* \"#utility.yul\":799:808   */\n      dup3\n        /* \"#utility.yul\":790:797   */\n      dup5\n        /* \"#utility.yul\":786:809   */\n      sub\n        /* \"#utility.yul\":782:814   */\n      slt\n        /* \"#utility.yul\":779:781   */\n      iszero\n      tag_253\n      jumpi\n        /* \"#utility.yul\":832:838   */\n      dup1\n        /* \"#utility.yul\":824:830   */\n      dup2\n        /* \"#utility.yul\":817:839   */\n      revert\n        /* \"#utility.yul\":779:781   */\n    tag_253:\n        /* \"#utility.yul\":869:878   */\n      dup2\n        /* \"#utility.yul\":863:879   */\n      mload\n        /* \"#utility.yul\":922:927   */\n      dup1\n        /* \"#utility.yul\":915:928   */\n      iszero\n        /* \"#utility.yul\":908:929   */\n      iszero\n        /* \"#utility.yul\":901:906   */\n      dup2\n        /* \"#utility.yul\":898:930   */\n      eq\n        /* \"#utility.yul\":888:890   */\n      tag_133\n      jumpi\n        /* \"#utility.yul\":949:955   */\n      dup2\n        /* \"#utility.yul\":941:947   */\n      dup3\n        /* \"#utility.yul\":934:956   */\n      revert\n        /* \"#utility.yul\":993:1187   */\n    tag_169:\n        /* \"#utility.yul\":1063:1069   */\n      0x00\n        /* \"#utility.yul\":1116:1118   */\n      0x20\n        /* \"#utility.yul\":1104:1113   */\n      dup3\n        /* \"#utility.yul\":1095:1102   */\n      dup5\n        /* \"#utility.yul\":1091:1114   */\n      sub\n        /* \"#utility.yul\":1087:1119   */\n      slt\n        /* \"#utility.yul\":1084:1086   */\n      iszero\n      tag_256\n      jumpi\n        /* \"#utility.yul\":1137:1143   */\n      dup1\n        /* \"#utility.yul\":1129:1135   */\n      dup2\n        /* \"#utility.yul\":1122:1144   */\n      revert\n        /* \"#utility.yul\":1084:1086   */\n    tag_256:\n      pop\n        /* \"#utility.yul\":1165:1181   */\n      mload\n      swap2\n        /* \"#utility.yul\":1074:1187   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1192:1678   */\n    tag_38:\n        /* \"#utility.yul\":1258:1264   */\n      0x00\n        /* \"#utility.yul\":1266:1272   */\n      dup1\n        /* \"#utility.yul\":1319:1321   */\n      0x40\n        /* \"#utility.yul\":1307:1316   */\n      dup4\n        /* \"#utility.yul\":1298:1305   */\n      dup6\n        /* \"#utility.yul\":1294:1317   */\n      sub\n        /* \"#utility.yul\":1290:1322   */\n      slt\n        /* \"#utility.yul\":1287:1289   */\n      iszero\n      tag_258\n      jumpi\n        /* \"#utility.yul\":1340:1346   */\n      dup2\n        /* \"#utility.yul\":1332:1338   */\n      dup3\n        /* \"#utility.yul\":1325:1347   */\n      revert\n        /* \"#utility.yul\":1287:1289   */\n    tag_258:\n        /* \"#utility.yul\":1384:1393   */\n      dup3\n        /* \"#utility.yul\":1371:1394   */\n      calldataload\n        /* \"#utility.yul\":1434:1454   */\n      0xffffffffffffffffff\n        /* \"#utility.yul\":1427:1432   */\n      dup2\n        /* \"#utility.yul\":1423:1455   */\n      and\n        /* \"#utility.yul\":1416:1421   */\n      dup2\n        /* \"#utility.yul\":1413:1456   */\n      eq\n        /* \"#utility.yul\":1403:1405   */\n      tag_259\n      jumpi\n        /* \"#utility.yul\":1475:1481   */\n      dup3\n        /* \"#utility.yul\":1467:1473   */\n      dup4\n        /* \"#utility.yul\":1460:1482   */\n      revert\n        /* \"#utility.yul\":1403:1405   */\n    tag_259:\n        /* \"#utility.yul\":1503:1508   */\n      swap2\n      pop\n        /* \"#utility.yul\":1560:1562   */\n      0x20\n        /* \"#utility.yul\":1545:1563   */\n      dup4\n      add\n        /* \"#utility.yul\":1532:1564   */\n      calldataload\n        /* \"#utility.yul\":1608:1616   */\n      0xffffff\n        /* \"#utility.yul\":1595:1617   */\n      dup2\n      and\n        /* \"#utility.yul\":1583:1618   */\n      dup2\n      eq\n        /* \"#utility.yul\":1573:1575   */\n      tag_260\n      jumpi\n        /* \"#utility.yul\":1637:1643   */\n      dup2\n        /* \"#utility.yul\":1629:1635   */\n      dup3\n        /* \"#utility.yul\":1622:1644   */\n      revert\n        /* \"#utility.yul\":1573:1575   */\n    tag_260:\n        /* \"#utility.yul\":1665:1672   */\n      dup1\n        /* \"#utility.yul\":1655:1672   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":1277:1678   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13765:13893   */\n    tag_116:\n        /* \"#utility.yul\":13805:13808   */\n      0x00\n        /* \"#utility.yul\":13836:13837   */\n      dup3\n        /* \"#utility.yul\":13832:13838   */\n      not\n        /* \"#utility.yul\":13829:13830   */\n      dup3\n        /* \"#utility.yul\":13826:13839   */\n      gt\n        /* \"#utility.yul\":13823:13825   */\n      iszero\n      tag_295\n      jumpi\n        /* \"#utility.yul\":13842:13860   */\n      tag_295\n      tag_296\n      jump\t// in\n    tag_295:\n      pop\n        /* \"#utility.yul\":13878:13887   */\n      add\n      swap1\n        /* \"#utility.yul\":13813:13893   */\n      jump\t// out\n        /* \"#utility.yul\":13898:14126   */\n    tag_225:\n        /* \"#utility.yul\":13937:13940   */\n      0x00\n        /* \"#utility.yul\":13965:13975   */\n      0xffffffff\n        /* \"#utility.yul\":14002:14004   */\n      dup1\n        /* \"#utility.yul\":13999:14000   */\n      dup4\n        /* \"#utility.yul\":13995:14005   */\n      and\n        /* \"#utility.yul\":14032:14034   */\n      dup2\n        /* \"#utility.yul\":14029:14030   */\n      dup6\n        /* \"#utility.yul\":14025:14035   */\n      and\n        /* \"#utility.yul\":14063:14066   */\n      dup1\n        /* \"#utility.yul\":14059:14061   */\n      dup4\n        /* \"#utility.yul\":14055:14067   */\n      sub\n        /* \"#utility.yul\":14050:14053   */\n      dup3\n        /* \"#utility.yul\":14047:14068   */\n      gt\n        /* \"#utility.yul\":14044:14046   */\n      iszero\n      tag_299\n      jumpi\n        /* \"#utility.yul\":14071:14089   */\n      tag_299\n      tag_296\n      jump\t// in\n    tag_299:\n        /* \"#utility.yul\":14107:14120   */\n      add\n      swap5\n        /* \"#utility.yul\":13945:14126   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14131:14405   */\n    tag_98:\n        /* \"#utility.yul\":14171:14172   */\n      0x00\n        /* \"#utility.yul\":14197:14198   */\n      dup3\n        /* \"#utility.yul\":14187:14189   */\n      tag_301\n      jumpi\n        /* \"#utility.yul\":14232:14309   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14229:14230   */\n      dup2\n        /* \"#utility.yul\":14222:14310   */\n      mstore\n        /* \"#utility.yul\":14333:14337   */\n      0x12\n        /* \"#utility.yul\":14330:14331   */\n      0x04\n        /* \"#utility.yul\":14323:14338   */\n      mstore\n        /* \"#utility.yul\":14361:14365   */\n      0x24\n        /* \"#utility.yul\":14358:14359   */\n      dup2\n        /* \"#utility.yul\":14351:14366   */\n      revert\n        /* \"#utility.yul\":14187:14189   */\n    tag_301:\n      pop\n        /* \"#utility.yul\":14390:14399   */\n      div\n      swap1\n        /* \"#utility.yul\":14177:14405   */\n      jump\t// out\n        /* \"#utility.yul\":14410:14638   */\n    tag_96:\n        /* \"#utility.yul\":14450:14457   */\n      0x00\n        /* \"#utility.yul\":14576:14577   */\n      dup2\n        /* \"#utility.yul\":14508:14574   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":14504:14578   */\n      div\n        /* \"#utility.yul\":14501:14502   */\n      dup4\n        /* \"#utility.yul\":14498:14579   */\n      gt\n        /* \"#utility.yul\":14493:14494   */\n      dup3\n        /* \"#utility.yul\":14486:14495   */\n      iszero\n        /* \"#utility.yul\":14479:14496   */\n      iszero\n        /* \"#utility.yul\":14475:14580   */\n      and\n        /* \"#utility.yul\":14472:14474   */\n      iszero\n      tag_304\n      jumpi\n        /* \"#utility.yul\":14583:14601   */\n      tag_304\n      tag_296\n      jump\t// in\n    tag_304:\n      pop\n        /* \"#utility.yul\":14623:14632   */\n      mul\n      swap1\n        /* \"#utility.yul\":14462:14638   */\n      jump\t// out\n        /* \"#utility.yul\":14643:14768   */\n    tag_107:\n        /* \"#utility.yul\":14683:14687   */\n      0x00\n        /* \"#utility.yul\":14711:14712   */\n      dup3\n        /* \"#utility.yul\":14708:14709   */\n      dup3\n        /* \"#utility.yul\":14705:14713   */\n      lt\n        /* \"#utility.yul\":14702:14704   */\n      iszero\n      tag_307\n      jumpi\n        /* \"#utility.yul\":14716:14734   */\n      tag_307\n      tag_296\n      jump\t// in\n    tag_307:\n      pop\n        /* \"#utility.yul\":14753:14762   */\n      sub\n      swap1\n        /* \"#utility.yul\":14692:14768   */\n      jump\t// out\n        /* \"#utility.yul\":14773:14957   */\n    tag_296:\n        /* \"#utility.yul\":14825:14902   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14822:14823   */\n      0x00\n        /* \"#utility.yul\":14815:14903   */\n      mstore\n        /* \"#utility.yul\":14922:14926   */\n      0x11\n        /* \"#utility.yul\":14919:14920   */\n      0x04\n        /* \"#utility.yul\":14912:14927   */\n      mstore\n        /* \"#utility.yul\":14946:14950   */\n      0x24\n        /* \"#utility.yul\":14943:14944   */\n      0x00\n        /* \"#utility.yul\":14936:14951   */\n      revert\n\n    auxdata: 0xa2646970667358221220b213dd3def8354c85124c77cb7c25d47bd8a5643391e9b3c6ac44ce1c6270fe564736f6c63430008040033\n}\n",
						"bytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1679:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "74:117:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "84:22:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "93:13:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "169:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "178:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "181:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:2"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "154:3:2",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "159:1:2",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:2"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:2"
																							},
																							{
																								"kind": "number",
																								"nodeType": "YulLiteral",
																								"src": "163:1:2",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:2"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "118:50:2"
															},
															"nodeType": "YulIf",
															"src": "115:2:2"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "53:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:2",
														"type": ""
													}
												],
												"src": "14:177:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "345:339:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "392:26:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "401:6:2"
																				},
																				{
																					"name": "value4",
																					"nodeType": "YulIdentifier",
																					"src": "409:6:2"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "394:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "394:22:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "394:22:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "366:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "375:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "362:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "362:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "387:3:2",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "358:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "358:33:2"
															},
															"nodeType": "YulIf",
															"src": "355:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "427:50:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "467:9:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "437:29:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "437:40:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "427:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "486:35:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "506:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "517:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "502:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "502:18:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "496:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "496:25:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "486:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "530:35:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "550:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "561:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "546:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "546:18:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "540:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "540:25:2"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nodeType": "YulIdentifier",
																	"src": "530:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "574:35:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "594:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "605:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "590:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "590:18:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "584:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "584:25:2"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nodeType": "YulIdentifier",
																	"src": "574:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "618:60:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "662:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "673:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "658:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "658:19:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nodeType": "YulIdentifier",
																	"src": "628:29:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "628:50:2"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nodeType": "YulIdentifier",
																	"src": "618:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "279:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "290:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "302:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "310:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "318:6:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "326:6:2",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "334:6:2",
														"type": ""
													}
												],
												"src": "196:488:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "863:178:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "880:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "891:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "873:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "873:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "873:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "914:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "925:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "910:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "910:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "930:2:2",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "903:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "903:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "903:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "953:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "964:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "949:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "949:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "969:30:2",
																		"type": "",
																		"value": "Owner address cannot be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "942:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "942:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "942:58:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1009:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1021:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1032:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1017:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1017:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1009:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_83f15613d50744e36233662068435f875a75fdb9868ea86636d56800cc9f79af__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "840:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "854:4:2",
														"type": ""
													}
												],
												"src": "689:352:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1220:223:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1237:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1248:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1230:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1230:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1230:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1271:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1282:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1267:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1267:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1287:2:2",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1260:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1260:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1260:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1310:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1321:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1306:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1306:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1326:34:2",
																		"type": "",
																		"value": "oilerToken address cannot be zer"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1299:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1299:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1299:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1381:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1392:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1377:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1377:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "1397:3:2",
																		"type": "",
																		"value": "o"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1370:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1370:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1370:31:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1410:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1422:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1433:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1418:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1418:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1410:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_a9e37c7970c290c2b0169155873f1318b42e2d4175bc114412df2e2ee1b730cb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1197:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1211:4:2",
														"type": ""
													}
												],
												"src": "1046:397:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1496:181:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1531:115:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sum",
																					"nodeType": "YulIdentifier",
																					"src": "1552:3:2"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1561:3:2",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nodeType": "YulLiteral",
																							"src": "1566:10:2",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nodeType": "YulIdentifier",
																						"src": "1557:3:2"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1557:20:2"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1545:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1545:33:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1545:33:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1598:1:2",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1601:4:2",
																					"type": "",
																					"value": "0x11"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "1591:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1591:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1591:15:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "sum",
																					"nodeType": "YulIdentifier",
																					"src": "1626:3:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1631:4:2",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1619:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1619:17:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1619:17:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1512:1:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1519:1:2"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "1515:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1515:6:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1509:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1509:13:2"
															},
															"nodeType": "YulIf",
															"src": "1506:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1655:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1666:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1669:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1662:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1662:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1655:3:2"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1479:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1482:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "1488:3:2",
														"type": ""
													}
												],
												"src": "1448:229:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256t_uint256t_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(value4, value4) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := mload(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := abi_decode_address_fromMemory(add(headStart, 128))\n    }\n    function abi_encode_tuple_t_stringliteral_83f15613d50744e36233662068435f875a75fdb9868ea86636d56800cc9f79af__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Owner address cannot be zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a9e37c7970c290c2b0169155873f1318b42e2d4175bc114412df2e2ee1b730cb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"oilerToken address cannot be zer\")\n        mstore(add(headStart, 96), \"o\")\n        tail := add(headStart, 128)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6101206040523480156200001257600080fd5b506040516200206c3803806200206c833981016040819052620000359162000154565b6001600160a01b038116620000915760405162461bcd60e51b815260206004820152601c60248201527f4f776e657220616464726573732063616e6e6f74206265207a65726f0000000060448201526064015b60405180910390fd5b6001600160601b0319606082901b16610100526001600160a01b038516620001065760405162461bcd60e51b815260206004820152602160248201527f6f696c6572546f6b656e20616464726573732063616e6e6f74206265207a65726044820152606f60f81b606482015260840162000088565b6001600160601b0319606086901b1660c052620001248443620001a8565b6080525060e05260a05250620001cd9050565b80516001600160a01b03811681146200014f57600080fd5b919050565b600080600080600060a086880312156200016c578081fd5b620001778662000137565b94506020860151935060408601519250606086015191506200019c6080870162000137565b90509295509295909350565b60008219821115620001c857634e487b7160e01b81526011600452602481fd5b500190565b60805160a05160c05160601c60e0516101005160601c611deb62000281600039600081816103150152610e0401526000818161012f01528181611ac70152611b3d0152600081816102c101528181610cb80152818161101f01528181611194015261130f015260008181610246015281816105f601528181610ffd0152818161117201526112e901526000818161033c015281816103e4015281816106ce01528181611ae80152611b610152611deb6000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c806386d1a69f116100b2578063c959360b11610081578063e0e4a72211610066578063e0e4a722146103a7578063f6ffab88146103c7578063f968f493146103da57600080fd5b8063c959360b14610367578063cbdf382c1461038757600080fd5b806386d1a69f146103085780638da5cb5b14610310578063bc0925ae14610337578063c2e8caf61461035e57600080fd5b806352946b04116100ee57806352946b041461024157806370ff852b14610268578063798633b91461028857806381e9207d146102bc57600080fd5b80630572b0cc146101205780631514617e1461012a57806316934fc414610164578063378592c81461022e575b600080fd5b6101286103e2565b005b6101517f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b6101e1610172366004611be9565b60006020819052908152604090205468ffffffffffffffffff8116906901000000000000000000810462ffffff16906c01000000000000000000000000810463ffffffff169070010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1684565b6040805168ffffffffffffffffff909516855262ffffff909316602085015263ffffffff909116918301919091526fffffffffffffffffffffffffffffffff16606082015260800161015b565b61012861023c366004611c6d565b610644565b6101517f000000000000000000000000000000000000000000000000000000000000000081565b610151610276366004611be9565b60056020526000908152604090205481565b61029b610296366004611c6d565b610b01565b6040516fffffffffffffffffffffffffffffffff909116815260200161015b565b6102e37f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161015b565b610128610bc2565b6102e37f000000000000000000000000000000000000000000000000000000000000000081565b6101517f000000000000000000000000000000000000000000000000000000000000000081565b61015160025481565b610151610375366004611be9565b60016020526000908152604090205481565b6003546102e39073ffffffffffffffffffffffffffffffffffffffff1681565b6101516103b5366004611be9565b60046020526000908152604090205481565b6101286103d5366004611c03565b610dec565b61012861141b565b7f00000000000000000000000000000000000000000000000000000000000000004311610496576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f596f752063616e206f6e6c79206765742052657761726473206166746572205360448201527f74616b696e672050726f6772616d20656e64730000000000000000000000000060648201526084015b60405180910390fd5b3360009081526020819052604090205468ffffffffffffffffff1615610564576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152605060248201527f596f75207374696c6c20686176652061207374616b65206c6f636b6564202d2060448201527f706c6561736520756e6c6f636b2066697273742c20646f6e2774206c6561766560648201527f2066726565206d6f6e6579206865726500000000000000000000000000000000608482015260a40161048d565b336000908152600160205260409020546105da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f596f7520646f6e2774206861766520616e7920726577617264506f696e747300604482015260640161048d565b6002543360009081526001602052604081205490919061061a907f0000000000000000000000000000000000000000000000000000000000000000611d32565b6106249190611cf9565b336000818152600160205260408120559091506106419082611752565b50565b60035473ffffffffffffffffffffffffffffffffffffffff166106c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f706f6f6c546f6b656e206e6f7420736574000000000000000000000000000000604482015260640161048d565b6106f262ffffff82167f0000000000000000000000000000000000000000000000000000000000000000611d6f565b431115610781576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f596f7572206c6f636b20706572696f642065786365656473205374616b696e6760448201527f2050726f6772616d206475726174696f6e000000000000000000000000000000606482015260840161048d565b3360009081526020819052604090205468ffffffffffffffffff1615610803576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f416c7265616479207374616b696e670000000000000000000000000000000000604482015260640161048d565b600061080f8383610b01565b6040805160808101825268ffffffffffffffffff868116825262ffffff86811660208085019182524363ffffffff9081168688019081526fffffffffffffffffffffffffffffffff898116606089018181523360009081529586905299852089518154975194519b5199167fffffffffffffffffffffffffffffffffffffffff0000000000000000000000009097169690961769010000000000000000009390971692909202959095176bffffffffffffffffffffffff166c0100000000000000000000000098909216979097028416177001000000000000000000000000000000009490931693909302919091179055600280549495509193610914908490611cb9565b909155505033600090815260016020526040812080546fffffffffffffffffffffffffffffffff8516929061094a908490611cb9565b90915550506003546040517f23b872dd00000000000000000000000000000000000000000000000000000000815233600482015230602482015268ffffffffffffffffff8616604482015273ffffffffffffffffffffffffffffffffffffffff909116906323b872dd90606401602060405180830381600087803b1580156109d157600080fd5b505af11580156109e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a099190611c35565b610a95576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f5472616e7366657246726f6d206f6620706f6f6c546f6b656e73206661696c6560448201527f6400000000000000000000000000000000000000000000000000000000000000606482015260840161048d565b6040805133815268ffffffffffffffffff8616602082015262ffffff8516818301526fffffffffffffffffffffffffffffffff8416606082015290517fe7dbea143058f90be7a1644e539342c25ddc5379868fe922bab596de99debf419181900360800190a150505050565b60008062ffffff8316610b1f8168ffffffffffffffffff8716611d32565b610b299190611d32565b905060008111610bbb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f4e65697468657220746f6b656e416d6f756e74206e6f72206c6f636b696e675060448201527f6572696f6420636f756c646e2774206265203000000000000000000000000000606482015260840161048d565b9392505050565b6000610bcd336118ea565b905060008111610c5f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f56657374696e672072656c656173653a206e6f20746f6b656e7320617265206460448201527f7565000000000000000000000000000000000000000000000000000000000000606482015260840161048d565b3360009081526005602052604081208054839290610c7e908490611cb9565b90915550506040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018290527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063a9059cbb90604401602060405180830381600087803b158015610d1157600080fd5b505af1158015610d25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d499190611c35565b610daf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f526577617264206f696c657273207472616e73666572206661696c6564000000604482015260640161048d565b60408051338152602081018390527f769d4212c4fbfaa012a896b49e0f3bb14d32dd0d60ce1a13d357ee6b69db77c291015b60405180910390a150565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610e8b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f43616e206f6e6c792062652063616c6c6564206279206f776e65720000000000604482015260640161048d565b60035473ffffffffffffffffffffffffffffffffffffffff1615610f0b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f706f6f6c546f6b656e2077617320616c72656164792073657400000000000000604482015260640161048d565b73ffffffffffffffffffffffffffffffffffffffff8216610f88576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f706f6f6c546f6b656e20616464726573732063616e6e6f74206265207a65726f604482015260640161048d565b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff848116919091179091556040517f70a0823100000000000000000000000000000000000000000000000000000000815282821660048201527f0000000000000000000000000000000000000000000000000000000000000000917f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b15801561106157600080fd5b505afa158015611075573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110999190611c55565b1015611127576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f5374616b696e6746756e6420646f65736e2774206861766520656e6f7567682060448201527f4f494c2062616c616e6365000000000000000000000000000000000000000000606482015260840161048d565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301523060248301527f0000000000000000000000000000000000000000000000000000000000000000917f00000000000000000000000000000000000000000000000000000000000000009091169063dd62ed3e9060440160206040518083038186803b1580156111d857600080fd5b505afa1580156111ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112109190611c55565b101561129e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f5374616b696e6746756e6420646f65736e2774206861766520656e6f7567682060448201527f616c6c6f77616e63650000000000000000000000000000000000000000000000606482015260840161048d565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301523060248301527f000000000000000000000000000000000000000000000000000000000000000060448301527f000000000000000000000000000000000000000000000000000000000000000016906323b872dd90606401602060405180830381600087803b15801561135357600080fd5b505af1158015611367573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061138b9190611c35565b611417576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f5472616e7366657246726f6d206f66204f494c2066726f6d205374616b696e6760448201527f46756e64206661696c6564000000000000000000000000000000000000000000606482015260840161048d565b5050565b60035473ffffffffffffffffffffffffffffffffffffffff1661149a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f706f6f6c546f6b656e206e6f7420736574000000000000000000000000000000604482015260640161048d565b33600090815260208181526040918290208251608081018452905468ffffffffffffffffff81168083526901000000000000000000820462ffffff16938301939093526c01000000000000000000000000810463ffffffff16938201939093527001000000000000000000000000000000009092046fffffffffffffffffffffffffffffffff1660608301528061158d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f596f7520646f6e277420686176652061207374616b6520746f20756e6c6f636b604482015260640161048d565b816040015163ffffffff164311611626576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603c60248201527f596f752063616e277420776974686472617720746865207374616b6520696e2060448201527f7468652073616d6520626c6f636b20697420776173206c6f636b656400000000606482015260840161048d565b61162f82611929565b336000818152602081905260408082209190915560035490517fa9059cbb00000000000000000000000000000000000000000000000000000000815260048101929092526024820183905273ffffffffffffffffffffffffffffffffffffffff169063a9059cbb90604401602060405180830381600087803b1580156116b457600080fd5b505af11580156116c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ec9190611c35565b611417576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f506f6f6c20746f6b656e207472616e73666572206661696c6564000000000000604482015260640161048d565b600081116117e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f596f75206469646e2774206561726e20616e7920696e746567657220616d6f7560448201527f6e74206f66207765690000000000000000000000000000000000000000000000606482015260840161048d565b73ffffffffffffffffffffffffffffffffffffffff8216611885576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f546f6b656e56657374696e673a2062656e65666963696172792069732074686560448201527f207a65726f206164647265737300000000000000000000000000000000000000606482015260840161048d565b73ffffffffffffffffffffffffffffffffffffffff8216600081815260046020908152604091829020849055815192835282018390527f6e1afd29522b0aaf986597bcc53f5fb4daae2af7cfd41d00c384ab1bdf912b23910160405180910390a15050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526005602052604081205461191983611ac0565b6119239190611d6f565b92915050565b806020015162ffffff1681604001516119429190611cd1565b63ffffffff16431015611a4957606081015133600090815260016020526040812080546fffffffffffffffffffffffffffffffff90931692909190611988908490611d6f565b9250508190555080606001516fffffffffffffffffffffffffffffffff16600260008282546119b79190611d6f565b90915550508051602082015160408301517f6c6f3c7d8c87976393011cc962da12841024bc1d62d2de21716a6306ab314ef392339290916119fe9063ffffffff1643611d6f565b6040805173ffffffffffffffffffffffffffffffffffffffff909516855268ffffffffffffffffff909316602085015262ffffff909116918301919091526060820152608001610de1565b80516020808301516060808501516040805133815268ffffffffffffffffff9096169486019490945262ffffff909216928401929092526fffffffffffffffffffffffffffffffff16908201527f391930ab48e95a9040c849cc86e1b2f63c711a1f59d6e324ce775dc9a005105690608001610de1565b6000611b0c7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611cb9565b4310611b3b575073ffffffffffffffffffffffffffffffffffffffff1660009081526004602052604090205490565b7f0000000000000000000000000000000000000000000000000000000000000000611b867f000000000000000000000000000000000000000000000000000000000000000043611d6f565b73ffffffffffffffffffffffffffffffffffffffff8416600090815260046020526040902054611bb69190611d32565b6119239190611cf9565b919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611bc057600080fd5b600060208284031215611bfa578081fd5b610bbb82611bc5565b60008060408385031215611c15578081fd5b611c1e83611bc5565b9150611c2c60208401611bc5565b90509250929050565b600060208284031215611c46578081fd5b81518015158114610bbb578182fd5b600060208284031215611c66578081fd5b5051919050565b60008060408385031215611c7f578182fd5b823568ffffffffffffffffff81168114611c97578283fd5b9150602083013562ffffff81168114611cae578182fd5b809150509250929050565b60008219821115611ccc57611ccc611d86565b500190565b600063ffffffff808316818516808303821115611cf057611cf0611d86565b01949350505050565b600082611d2d577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611d6a57611d6a611d86565b500290565b600082821015611d8157611d81611d86565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220b213dd3def8354c85124c77cb7c25d47bd8a5643391e9b3c6ac44ce1c6270fe564736f6c63430008040033",
							"opcodes": "PUSH2 0x120 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x206C CODESIZE SUB DUP1 PUSH3 0x206C DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x35 SWAP2 PUSH3 0x154 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x91 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E657220616464726573732063616E6E6F74206265207A65726F00000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP3 SWAP1 SHL AND PUSH2 0x100 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH3 0x106 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x6F696C6572546F6B656E20616464726573732063616E6E6F74206265207A6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x6F PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH3 0x88 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP7 SWAP1 SHL AND PUSH1 0xC0 MSTORE PUSH3 0x124 DUP5 NUMBER PUSH3 0x1A8 JUMP JUMPDEST PUSH1 0x80 MSTORE POP PUSH1 0xE0 MSTORE PUSH1 0xA0 MSTORE POP PUSH3 0x1CD SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x14F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH3 0x16C JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH3 0x177 DUP7 PUSH3 0x137 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD MLOAD SWAP4 POP PUSH1 0x40 DUP7 ADD MLOAD SWAP3 POP PUSH1 0x60 DUP7 ADD MLOAD SWAP2 POP PUSH3 0x19C PUSH1 0x80 DUP8 ADD PUSH3 0x137 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x1C8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH1 0xC0 MLOAD PUSH1 0x60 SHR PUSH1 0xE0 MLOAD PUSH2 0x100 MLOAD PUSH1 0x60 SHR PUSH2 0x1DEB PUSH3 0x281 PUSH1 0x0 CODECOPY PUSH1 0x0 DUP2 DUP2 PUSH2 0x315 ADD MSTORE PUSH2 0xE04 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x12F ADD MSTORE DUP2 DUP2 PUSH2 0x1AC7 ADD MSTORE PUSH2 0x1B3D ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x2C1 ADD MSTORE DUP2 DUP2 PUSH2 0xCB8 ADD MSTORE DUP2 DUP2 PUSH2 0x101F ADD MSTORE DUP2 DUP2 PUSH2 0x1194 ADD MSTORE PUSH2 0x130F ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x246 ADD MSTORE DUP2 DUP2 PUSH2 0x5F6 ADD MSTORE DUP2 DUP2 PUSH2 0xFFD ADD MSTORE DUP2 DUP2 PUSH2 0x1172 ADD MSTORE PUSH2 0x12E9 ADD MSTORE PUSH1 0x0 DUP2 DUP2 PUSH2 0x33C ADD MSTORE DUP2 DUP2 PUSH2 0x3E4 ADD MSTORE DUP2 DUP2 PUSH2 0x6CE ADD MSTORE DUP2 DUP2 PUSH2 0x1AE8 ADD MSTORE PUSH2 0x1B61 ADD MSTORE PUSH2 0x1DEB PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x86D1A69F GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0xC959360B GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xE0E4A722 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xE0E4A722 EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0xF6FFAB88 EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0xF968F493 EQ PUSH2 0x3DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC959360B EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0xCBDF382C EQ PUSH2 0x387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0xBC0925AE EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0xC2E8CAF6 EQ PUSH2 0x35E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x52946B04 GT PUSH2 0xEE JUMPI DUP1 PUSH4 0x52946B04 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x70FF852B EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x798633B9 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x81E9207D EQ PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x572B0CC EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x1514617E EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x378592C8 EQ PUSH2 0x22E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x128 PUSH2 0x3E2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x151 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E1 PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BE9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH9 0xFFFFFFFFFFFFFFFFFF DUP2 AND SWAP1 PUSH10 0x1000000000000000000 DUP2 DIV PUSH3 0xFFFFFF AND SWAP1 PUSH13 0x1000000000000000000000000 DUP2 DIV PUSH4 0xFFFFFFFF AND SWAP1 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH9 0xFFFFFFFFFFFFFFFFFF SWAP1 SWAP6 AND DUP6 MSTORE PUSH3 0xFFFFFF SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x15B JUMP JUMPDEST PUSH2 0x128 PUSH2 0x23C CALLDATASIZE PUSH1 0x4 PUSH2 0x1C6D JUMP JUMPDEST PUSH2 0x644 JUMP JUMPDEST PUSH2 0x151 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x151 PUSH2 0x276 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BE9 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x29B PUSH2 0x296 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C6D JUMP JUMPDEST PUSH2 0xB01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15B JUMP JUMPDEST PUSH2 0x2E3 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15B JUMP JUMPDEST PUSH2 0x128 PUSH2 0xBC2 JUMP JUMPDEST PUSH2 0x2E3 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x151 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x151 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x151 PUSH2 0x375 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BE9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x2E3 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x151 PUSH2 0x3B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BE9 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x128 PUSH2 0x3D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C03 JUMP JUMPDEST PUSH2 0xDEC JUMP JUMPDEST PUSH2 0x128 PUSH2 0x141B JUMP JUMPDEST PUSH32 0x0 NUMBER GT PUSH2 0x496 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E206F6E6C792067657420526577617264732061667465722053 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74616B696E672050726F6772616D20656E647300000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH9 0xFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0x564 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x50 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75207374696C6C20686176652061207374616B65206C6F636B6564202D20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x706C6561736520756E6C6F636B2066697273742C20646F6E2774206C65617665 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x2066726565206D6F6E6579206865726500000000000000000000000000000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x48D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206861766520616E7920726577617264506F696E747300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48D JUMP JUMPDEST PUSH1 0x2 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x61A SWAP1 PUSH32 0x0 PUSH2 0x1D32 JUMP JUMPDEST PUSH2 0x624 SWAP2 SWAP1 PUSH2 0x1CF9 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE SWAP1 SWAP2 POP PUSH2 0x641 SWAP1 DUP3 PUSH2 0x1752 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x706F6F6C546F6B656E206E6F7420736574000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48D JUMP JUMPDEST PUSH2 0x6F2 PUSH3 0xFFFFFF DUP3 AND PUSH32 0x0 PUSH2 0x1D6F JUMP JUMPDEST NUMBER GT ISZERO PUSH2 0x781 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7572206C6F636B20706572696F642065786365656473205374616B696E67 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2050726F6772616D206475726174696F6E000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH9 0xFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0x803 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C7265616479207374616B696E670000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x80F DUP4 DUP4 PUSH2 0xB01 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH9 0xFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND DUP3 MSTORE PUSH3 0xFFFFFF DUP7 DUP2 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 DUP3 MSTORE NUMBER PUSH4 0xFFFFFFFF SWAP1 DUP2 AND DUP7 DUP9 ADD SWAP1 DUP2 MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 DUP2 AND PUSH1 0x60 DUP10 ADD DUP2 DUP2 MSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP6 DUP7 SWAP1 MSTORE SWAP10 DUP6 KECCAK256 DUP10 MLOAD DUP2 SLOAD SWAP8 MLOAD SWAP5 MLOAD SWAP12 MLOAD SWAP10 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 SWAP1 SWAP8 AND SWAP7 SWAP1 SWAP7 OR PUSH10 0x1000000000000000000 SWAP4 SWAP1 SWAP8 AND SWAP3 SWAP1 SWAP3 MUL SWAP6 SWAP1 SWAP6 OR PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 SWAP9 SWAP1 SWAP3 AND SWAP8 SWAP1 SWAP8 MUL DUP5 AND OR PUSH17 0x100000000000000000000000000000000 SWAP5 SWAP1 SWAP4 AND SWAP4 SWAP1 SWAP4 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP5 SWAP6 POP SWAP2 SWAP4 PUSH2 0x914 SWAP1 DUP5 SWAP1 PUSH2 0x1CB9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP3 SWAP1 PUSH2 0x94A SWAP1 DUP5 SWAP1 PUSH2 0x1CB9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0xFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA09 SWAP2 SWAP1 PUSH2 0x1C35 JUMP JUMPDEST PUSH2 0xA95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657246726F6D206F6620706F6F6C546F6B656E73206661696C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH9 0xFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0xFFFFFF DUP6 AND DUP2 DUP4 ADD MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x60 DUP3 ADD MSTORE SWAP1 MLOAD PUSH32 0xE7DBEA143058F90BE7A1644E539342C25DDC5379868FE922BAB596DE99DEBF41 SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0xFFFFFF DUP4 AND PUSH2 0xB1F DUP2 PUSH9 0xFFFFFFFFFFFFFFFFFF DUP8 AND PUSH2 0x1D32 JUMP JUMPDEST PUSH2 0xB29 SWAP2 SWAP1 PUSH2 0x1D32 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xBBB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E65697468657220746F6B656E416D6F756E74206E6F72206C6F636B696E6750 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6572696F6420636F756C646E2774206265203000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBCD CALLER PUSH2 0x18EA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xC5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56657374696E672072656C656173653A206E6F20746F6B656E73206172652064 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xC7E SWAP1 DUP5 SWAP1 PUSH2 0x1CB9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD25 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD49 SWAP2 SWAP1 PUSH2 0x1C35 JUMP JUMPDEST PUSH2 0xDAF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526577617264206F696C657273207472616E73666572206661696C6564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x769D4212C4FBFAA012A896B49E0F3BB14D32DD0D60CE1A13D357EE6B69DB77C2 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0xE8B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C792062652063616C6C6564206279206F776E65720000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48D JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0xF0B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x706F6F6C546F6B656E2077617320616C72656164792073657400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0xF88 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x706F6F6C546F6B656E20616464726573732063616E6E6F74206265207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48D JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP3 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1061 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1075 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1099 SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST LT ISZERO PUSH2 0x1127 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E6746756E6420646F65736E2774206861766520656E6F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4F494C2062616C616E6365000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDD62ED3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0x0 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1210 SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST LT ISZERO PUSH2 0x129E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E6746756E6420646F65736E2774206861766520656E6F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C6C6F77616E63650000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0x0 PUSH1 0x44 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1353 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1367 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x138B SWAP2 SWAP1 PUSH2 0x1C35 JUMP JUMPDEST PUSH2 0x1417 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657246726F6D206F66204F494C2066726F6D205374616B696E67 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x46756E64206661696C6564000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x149A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x706F6F6C546F6B656E206E6F7420736574000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE SWAP1 SLOAD PUSH9 0xFFFFFFFFFFFFFFFFFF DUP2 AND DUP1 DUP4 MSTORE PUSH10 0x1000000000000000000 DUP3 DIV PUSH3 0xFFFFFF AND SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH13 0x1000000000000000000000000 DUP2 DIV PUSH4 0xFFFFFFFF AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH17 0x100000000000000000000000000000000 SWAP1 SWAP3 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 DUP4 ADD MSTORE DUP1 PUSH2 0x158D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E277420686176652061207374616B6520746F20756E6C6F636B PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48D JUMP JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND NUMBER GT PUSH2 0x1626 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E277420776974686472617720746865207374616B6520696E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7468652073616D6520626C6F636B20697420776173206C6F636B656400000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48D JUMP JUMPDEST PUSH2 0x162F DUP3 PUSH2 0x1929 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16EC SWAP2 SWAP1 PUSH2 0x1C35 JUMP JUMPDEST PUSH2 0x1417 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C20746F6B656E207472616E73666572206661696C6564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48D JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x17E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206469646E2774206561726E20616E7920696E746567657220616D6F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E74206F66207765690000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x1885 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E56657374696E673A2062656E656669636961727920697320746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F206164647265737300000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x6E1AFD29522B0AAF986597BCC53F5FB4DAAE2AF7CFD41D00C384AB1BDF912B23 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1919 DUP4 PUSH2 0x1AC0 JUMP JUMPDEST PUSH2 0x1923 SWAP2 SWAP1 PUSH2 0x1D6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD PUSH3 0xFFFFFF AND DUP2 PUSH1 0x40 ADD MLOAD PUSH2 0x1942 SWAP2 SWAP1 PUSH2 0x1CD1 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND NUMBER LT ISZERO PUSH2 0x1A49 JUMPI PUSH1 0x60 DUP2 ADD MLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x1988 SWAP1 DUP5 SWAP1 PUSH2 0x1D6F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x60 ADD MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x19B7 SWAP2 SWAP1 PUSH2 0x1D6F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH32 0x6C6F3C7D8C87976393011CC962DA12841024BC1D62D2DE21716A6306AB314EF3 SWAP3 CALLER SWAP3 SWAP1 SWAP2 PUSH2 0x19FE SWAP1 PUSH4 0xFFFFFFFF AND NUMBER PUSH2 0x1D6F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP6 AND DUP6 MSTORE PUSH9 0xFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH3 0xFFFFFF SWAP1 SWAP2 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0xDE1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x60 DUP1 DUP6 ADD MLOAD PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH9 0xFFFFFFFFFFFFFFFFFF SWAP1 SWAP7 AND SWAP5 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH3 0xFFFFFF SWAP1 SWAP3 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP3 ADD MSTORE PUSH32 0x391930AB48E95A9040C849CC86E1B2F63C711A1F59D6E324CE775DC9A0051056 SWAP1 PUSH1 0x80 ADD PUSH2 0xDE1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B0C PUSH32 0x0 PUSH32 0x0 PUSH2 0x1CB9 JUMP JUMPDEST NUMBER LT PUSH2 0x1B3B JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x1B86 PUSH32 0x0 NUMBER PUSH2 0x1D6F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1BB6 SWAP2 SWAP1 PUSH2 0x1D32 JUMP JUMPDEST PUSH2 0x1923 SWAP2 SWAP1 PUSH2 0x1CF9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1BC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BFA JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xBBB DUP3 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C15 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1C1E DUP4 PUSH2 0x1BC5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C2C PUSH1 0x20 DUP5 ADD PUSH2 0x1BC5 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C46 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xBBB JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C66 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C7F JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH9 0xFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1C97 JUMPI DUP3 DUP4 REVERT JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1CAE JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1CCC JUMPI PUSH2 0x1CCC PUSH2 0x1D86 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x1CF0 JUMPI PUSH2 0x1CF0 PUSH2 0x1D86 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1D2D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1D6A JUMPI PUSH2 0x1D6A PUSH2 0x1D86 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1D81 JUMPI PUSH2 0x1D81 PUSH2 0x1D86 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 SGT 0xDD RETURNDATASIZE 0xEF DUP4 SLOAD 0xC8 MLOAD 0x24 0xC7 PUSH29 0xB7C25D47BD8A5643391E9B3C6AC44CE1C6270FE564736F6C6343000804 STOP CALLER ",
							"sourceMap": "2612:15215:0:-:0;;;7116:553;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;7271:22:0;;7263:63;;;;-1:-1:-1;;;7263:63:0;;891:2:2;7263:63:0;;;873:21:2;930:2;910:18;;;903:30;969;949:18;;;942:58;1017:18;;7263:63:0;;;;;;;;;-1:-1:-1;;;;;;7336:14:0;;;;;;;-1:-1:-1;;;;;7369:27:0;;7361:73;;;;-1:-1:-1;;;7361:73:0;;1248:2:2;7361:73:0;;;1230:21:2;1287:2;1267:18;;;1260:30;1326:34;1306:18;;;1299:62;-1:-1:-1;;;1377:18:2;;;1370:31;1418:19;;7361:73:0;1220:223:2;7361:73:0;-1:-1:-1;;;;;;7444:32:0;;;;;;;7521:39;7536:24;7521:12;:39;:::i;:::-;7495:65;;-1:-1:-1;7570:34:0;;7624:38;;-1:-1:-1;2612:15215:0;;-1:-1:-1;2612:15215:0;14:177:2;93:13;;-1:-1:-1;;;;;135:31:2;;125:42;;115:2;;181:1;178;171:12;115:2;74:117;;;:::o;196:488::-;302:6;310;318;326;334;387:3;375:9;366:7;362:23;358:33;355:2;;;409:6;401;394:22;355:2;437:40;467:9;437:40;:::i;:::-;427:50;;517:2;506:9;502:18;496:25;486:35;;561:2;550:9;546:18;540:25;530:35;;605:2;594:9;590:18;584:25;574:35;;628:50;673:3;662:9;658:19;628:50;:::i;:::-;618:60;;345:339;;;;;;;;:::o;1448:229::-;1488:3;1519:1;1515:6;1512:1;1509:13;1506:2;;;-1:-1:-1;;;1545:33:2;;1601:4;1598:1;1591:15;1631:4;1552:3;1619:17;1506:2;-1:-1:-1;1662:9:2;;1496:181::o;:::-;2612:15215:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:14959:2",
										"statements": [
											{
												"nodeType": "YulBlock",
												"src": "6:3:2",
												"statements": []
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "63:147:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "73:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "82:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:2"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "188:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "197:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "200:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "190:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "190:12:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "190:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "142:42:2",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "131:54:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "121:65:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "114:73:2"
															},
															"nodeType": "YulIf",
															"src": "111:2:2"
														}
													]
												},
												"name": "abi_decode_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "42:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:2",
														"type": ""
													}
												],
												"src": "14:196:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "285:126:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "331:26:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "340:6:2"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "348:6:2"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "333:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "333:22:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "333:22:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "306:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "315:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "302:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "302:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "327:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "298:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "298:32:2"
															},
															"nodeType": "YulIf",
															"src": "295:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "366:39:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "395:9:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "376:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:29:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "366:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "251:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "262:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "274:6:2",
														"type": ""
													}
												],
												"src": "215:196:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "503:183:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "549:26:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "558:6:2"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "566:6:2"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "551:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "551:22:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "551:22:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "524:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "533:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "520:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "545:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "516:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "516:32:2"
															},
															"nodeType": "YulIf",
															"src": "513:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "584:39:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "613:9:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "594:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "594:29:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "584:6:2"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "632:48:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "665:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "676:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "661:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "661:18:2"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nodeType": "YulIdentifier",
																	"src": "642:18:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "642:38:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "632:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "461:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "472:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "484:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "492:6:2",
														"type": ""
													}
												],
												"src": "416:270:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "769:219:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "815:26:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "824:6:2"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "832:6:2"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "817:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "817:22:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "817:22:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "790:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "799:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "786:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "786:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "811:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "782:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "782:32:2"
															},
															"nodeType": "YulIf",
															"src": "779:2:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "850:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "869:9:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "863:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "863:16:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "854:5:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "932:26:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "941:6:2"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "949:6:2"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "934:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "934:22:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "934:22:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "901:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nodeType": "YulIdentifier",
																								"src": "922:5:2"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nodeType": "YulIdentifier",
																							"src": "915:6:2"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "915:13:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "908:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "908:21:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "898:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "898:32:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "891:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "891:40:2"
															},
															"nodeType": "YulIf",
															"src": "888:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "967:15:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "977:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "967:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "735:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "746:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "758:6:2",
														"type": ""
													}
												],
												"src": "691:297:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1074:113:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1120:26:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1129:6:2"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1137:6:2"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1122:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1122:22:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1122:22:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1095:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1104:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1091:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1091:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1116:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1087:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1087:32:2"
															},
															"nodeType": "YulIf",
															"src": "1084:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1155:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1171:9:2"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "1165:5:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1165:16:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1155:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1040:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1051:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1063:6:2",
														"type": ""
													}
												],
												"src": "993:194:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1277:401:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1323:26:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1332:6:2"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1340:6:2"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1325:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1325:22:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1325:22:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1298:7:2"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1307:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1294:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1294:23:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1319:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1290:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1290:32:2"
															},
															"nodeType": "YulIf",
															"src": "1287:2:2"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1358:36:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1384:9:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1371:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1371:23:2"
															},
															"variables": [
																{
																	"name": "value",
																	"nodeType": "YulTypedName",
																	"src": "1362:5:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1458:26:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1467:6:2"
																				},
																				{
																					"name": "value0",
																					"nodeType": "YulIdentifier",
																					"src": "1475:6:2"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1460:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1460:22:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1460:22:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1416:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1427:5:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1434:20:2",
																						"type": "",
																						"value": "0xffffffffffffffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1423:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1423:32:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1413:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1413:43:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1406:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1406:51:2"
															},
															"nodeType": "YulIf",
															"src": "1403:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1493:15:2",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1503:5:2"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nodeType": "YulIdentifier",
																	"src": "1493:6:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1517:47:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1549:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1560:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1545:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1545:18:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1532:12:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1532:32:2"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nodeType": "YulTypedName",
																	"src": "1521:7:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1620:26:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1629:6:2"
																				},
																				{
																					"name": "value1",
																					"nodeType": "YulIdentifier",
																					"src": "1637:6:2"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1622:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1622:22:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1622:22:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value_1",
																				"nodeType": "YulIdentifier",
																				"src": "1586:7:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value_1",
																						"nodeType": "YulIdentifier",
																						"src": "1599:7:2"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1608:8:2",
																						"type": "",
																						"value": "0xffffff"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nodeType": "YulIdentifier",
																					"src": "1595:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1595:22:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1583:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1583:35:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1576:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1576:43:2"
															},
															"nodeType": "YulIf",
															"src": "1573:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1655:17:2",
															"value": {
																"name": "value_1",
																"nodeType": "YulIdentifier",
																"src": "1665:7:2"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nodeType": "YulIdentifier",
																	"src": "1655:6:2"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint72t_uint24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1235:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1246:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1258:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1266:6:2",
														"type": ""
													}
												],
												"src": "1192:486:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1784:125:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1794:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1806:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1817:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1802:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1802:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "1794:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1836:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "1851:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1859:42:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "1847:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1847:55:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1829:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1829:74:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1829:74:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1753:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1764:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "1775:4:2",
														"type": ""
													}
												],
												"src": "1683:226:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2043:198:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2053:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2065:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2076:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2061:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2061:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2053:4:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2088:52:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2098:42:2",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2092:2:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2156:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2171:6:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2179:2:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2167:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2167:15:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2149:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2149:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2149:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2203:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2214:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2199:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2199:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2223:6:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2231:2:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2219:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2219:15:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2192:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2192:43:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2192:43:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2004:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2015:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2023:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2034:4:2",
														"type": ""
													}
												],
												"src": "1914:327:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2403:241:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2413:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2425:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2436:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2421:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2421:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2413:4:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2448:52:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2458:42:2",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2452:2:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2516:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2531:6:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2539:2:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2527:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2527:15:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2509:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2509:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2509:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2563:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2574:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2559:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2559:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2583:6:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2591:2:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2579:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2579:15:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2552:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2552:43:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2552:43:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2615:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2626:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2611:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2611:18:2"
																	},
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "2631:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2604:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2604:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2604:34:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2356:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2367:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2375:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2383:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2394:4:2",
														"type": ""
													}
												],
												"src": "2246:398:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2805:268:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2815:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2827:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2838:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2823:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2823:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "2815:4:2"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "2850:52:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "2860:42:2",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "2854:2:2",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2918:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "2933:6:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2941:2:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2929:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2929:15:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2911:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2911:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2911:34:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2965:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2976:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "2961:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2961:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "2985:6:2"
																			},
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "2993:2:2"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "2981:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2981:15:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2954:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2954:43:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2954:43:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3017:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3028:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3013:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3013:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "3037:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3045:20:2",
																				"type": "",
																				"value": "0xffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3033:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3033:33:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3006:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3006:61:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3006:61:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint72__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2758:9:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "2769:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "2777:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2785:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "2796:4:2",
														"type": ""
													}
												],
												"src": "2649:424:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3207:168:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3217:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3229:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3240:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3225:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3225:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3217:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3259:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3274:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3282:42:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3270:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3270:55:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3252:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3252:74:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3252:74:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3346:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3357:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3342:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3342:18:2"
																	},
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3362:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3335:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3335:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3335:34:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3168:9:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3179:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3187:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3198:4:2",
														"type": ""
													}
												],
												"src": "3078:297:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3563:338:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3573:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3585:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3596:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3581:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3581:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3573:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3616:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "3631:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3639:42:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3627:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3627:55:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3609:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3609:74:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3609:74:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3703:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3714:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3699:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3699:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "3723:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3731:20:2",
																				"type": "",
																				"value": "0xffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3719:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3719:33:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3692:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3692:61:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3692:61:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3773:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3784:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3769:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3769:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "3793:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3801:8:2",
																				"type": "",
																				"value": "0xffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3789:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3789:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3762:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3762:49:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3762:49:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3831:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3842:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3827:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3827:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "3851:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3859:34:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "3847:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3847:47:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3820:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3820:75:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3820:75:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint72_t_uint24_t_uint128__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3508:9:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "3519:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "3527:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3535:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3543:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3554:4:2",
														"type": ""
													}
												],
												"src": "3380:521:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4089:297:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4099:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4111:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4122:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4107:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4107:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4099:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4142:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4157:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4165:42:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4153:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4153:55:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4135:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4135:74:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4135:74:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4229:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4240:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4225:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4225:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "4249:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4257:20:2",
																				"type": "",
																				"value": "0xffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4245:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4245:33:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4218:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4218:61:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4218:61:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4299:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4310:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4295:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4295:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "4319:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4327:8:2",
																				"type": "",
																				"value": "0xffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4315:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4315:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4288:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4288:49:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4288:49:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4357:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4368:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4353:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4353:18:2"
																	},
																	{
																		"name": "value3",
																		"nodeType": "YulIdentifier",
																		"src": "4373:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4346:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4346:34:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4346:34:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint72_t_uint24_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4034:9:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "4045:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4053:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4061:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4069:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4080:4:2",
														"type": ""
													}
												],
												"src": "3906:480:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4506:125:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4516:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4528:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4539:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4524:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4524:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4516:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4558:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "4573:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4581:42:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "4569:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4569:55:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4551:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4551:74:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4551:74:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$786__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4475:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4486:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4497:4:2",
														"type": ""
													}
												],
												"src": "4391:240:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4810:179:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4827:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4838:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4820:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4820:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4820:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4861:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4872:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4857:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4857:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4877:2:2",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4850:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4850:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4850:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4900:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4911:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4896:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4896:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "4916:31:2",
																		"type": "",
																		"value": "Reward oilers transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4889:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4889:59:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4889:59:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4957:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4969:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4980:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4965:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4965:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4957:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1d084e2eca749984c089d1d9f64331c149c27c323008184a1491516501160a6b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4787:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4801:4:2",
														"type": ""
													}
												],
												"src": "4636:353:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5168:224:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5185:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5196:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5178:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5178:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5178:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5219:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5230:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5215:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5215:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5235:2:2",
																		"type": "",
																		"value": "34"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5208:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5208:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5208:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5258:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5269:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5254:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5254:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5274:34:2",
																		"type": "",
																		"value": "Vesting release: no tokens are d"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5247:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5247:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5247:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5329:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5340:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5325:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5325:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5345:4:2",
																		"type": "",
																		"value": "ue"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5318:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5318:32:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5318:32:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5359:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5371:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5382:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5367:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5367:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5359:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_232d7994234e21dc0a46dcff0076032352d1b7b4d58ecc76ed88eec990d90098__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5145:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5159:4:2",
														"type": ""
													}
												],
												"src": "4994:398:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5571:235:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5588:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5599:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5581:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5581:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5581:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5622:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5633:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5618:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5618:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5638:2:2",
																		"type": "",
																		"value": "45"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5611:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5611:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5611:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5661:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5672:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5657:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5657:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5677:34:2",
																		"type": "",
																		"value": "TokenVesting: beneficiary is the"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5650:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5650:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5650:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5732:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5743:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5728:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5728:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "5748:15:2",
																		"type": "",
																		"value": " zero address"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5721:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5721:43:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5721:43:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5773:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5785:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5796:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5781:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5781:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5773:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_2418688d011b8e0830741b4ef5b95d25f3075f5a8407237c54796d2479ff21e5__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5548:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5562:4:2",
														"type": ""
													}
												],
												"src": "5397:409:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5985:176:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6002:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6013:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5995:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5995:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5995:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6036:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6047:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6032:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6032:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6052:2:2",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6025:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6025:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6025:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6075:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6086:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6071:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6071:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6091:28:2",
																		"type": "",
																		"value": "Pool token transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6064:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6064:56:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6064:56:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6129:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6141:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6152:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6137:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6137:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6129:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_33a0d73ef506feaebcf4cdd68c1a9783ad6fdd5367feedb0a0d58ce8d7b1ad1a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5962:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5976:4:2",
														"type": ""
													}
												],
												"src": "5811:350:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6340:310:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6357:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6368:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6350:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6350:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6350:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6391:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6402:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6387:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6387:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6407:2:2",
																		"type": "",
																		"value": "80"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6380:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6380:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6380:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6430:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6441:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6426:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6426:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6446:34:2",
																		"type": "",
																		"value": "You still have a stake locked - "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6419:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6419:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6419:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6501:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6512:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6497:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6497:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6517:34:2",
																		"type": "",
																		"value": "please unlock first, don't leave"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6490:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6490:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6490:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6572:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6583:3:2",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6568:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6568:19:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6589:18:2",
																		"type": "",
																		"value": " free money here"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6561:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6561:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6561:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6617:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6629:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6640:3:2",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6625:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6625:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6617:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4d2c35fe1a7df903955f64419a99f644f465f2a0aa959d96b99839301c2ef508__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6317:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6331:4:2",
														"type": ""
													}
												],
												"src": "6166:484:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6829:182:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6846:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6857:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6839:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6839:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6839:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6880:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6891:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6876:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6876:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6896:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6869:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6869:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6869:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6919:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6930:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6915:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6915:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "6935:34:2",
																		"type": "",
																		"value": "You don't have a stake to unlock"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6908:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6908:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6908:62:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6979:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6991:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7002:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6987:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "6987:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6979:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_52ac77891b100190c173ca8db34c1090b0a3a5fd7fa47169c21476dd2c32bc2f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6806:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6820:4:2",
														"type": ""
													}
												],
												"src": "6655:356:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7190:239:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7207:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7218:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7200:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7200:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7200:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7241:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7252:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7237:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7237:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7257:2:2",
																		"type": "",
																		"value": "49"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7230:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7230:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7230:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7280:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7291:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7276:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7276:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7296:34:2",
																		"type": "",
																		"value": "Your lock period exceeds Staking"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7269:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7269:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7269:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7351:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7362:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7347:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7347:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7367:19:2",
																		"type": "",
																		"value": " Program duration"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7340:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7340:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7340:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7396:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7408:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7419:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7404:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7404:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7396:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5735093ee1c27da93975faba569ca18ca1f3facf35d6dfe2cae61f4fc1bf709a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7167:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7181:4:2",
														"type": ""
													}
												],
												"src": "7016:413:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7608:165:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7625:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7636:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7618:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7618:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7618:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7659:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7670:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7655:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7655:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7675:2:2",
																		"type": "",
																		"value": "15"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7648:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7648:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7648:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7698:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7709:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7694:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7694:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7714:17:2",
																		"type": "",
																		"value": "Already staking"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7687:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7687:45:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7687:45:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7741:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7753:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7764:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7749:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7749:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7741:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7585:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7599:4:2",
														"type": ""
													}
												],
												"src": "7434:339:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7952:231:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7969:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7980:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7962:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7962:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7962:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8003:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8014:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7999:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7999:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8019:2:2",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7992:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7992:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7992:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8042:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8053:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8038:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8038:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8058:34:2",
																		"type": "",
																		"value": "You didn't earn any integer amou"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8031:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8031:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8031:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8113:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8124:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8109:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8109:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8129:11:2",
																		"type": "",
																		"value": "nt of wei"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8102:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8102:39:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8102:39:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8150:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8162:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8173:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8158:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8158:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8150:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6c4dd08c63778c1a28236bdb848c48062fa51b777ba1838c68276b07c98b172b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7929:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7943:4:2",
														"type": ""
													}
												],
												"src": "7778:405:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8362:241:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8379:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8390:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8372:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8372:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8372:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8413:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8424:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8409:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8409:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8429:2:2",
																		"type": "",
																		"value": "51"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8402:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8402:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8402:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8452:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8463:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8448:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8448:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8468:34:2",
																		"type": "",
																		"value": "Neither tokenAmount nor lockingP"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8441:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8441:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8441:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8523:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8534:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8519:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8519:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8539:21:2",
																		"type": "",
																		"value": "eriod couldn't be 0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8512:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8512:49:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8512:49:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8570:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8582:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8593:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8578:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8578:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8570:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6e6a919188e639c6fec1ac974bcd532a51e7cb501fa68e5b2f08f294731a4b88__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8339:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8353:4:2",
														"type": ""
													}
												],
												"src": "8188:415:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8782:250:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8799:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8810:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8792:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8792:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8792:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8833:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8844:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8829:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8829:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8849:2:2",
																		"type": "",
																		"value": "60"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8822:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8822:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8822:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8872:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8883:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8868:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8868:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8888:34:2",
																		"type": "",
																		"value": "You can't withdraw the stake in "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8861:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8861:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8861:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8943:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8954:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8939:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8939:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8959:30:2",
																		"type": "",
																		"value": "the same block it was locked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8932:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "8932:58:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8932:58:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8999:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9011:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9022:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9007:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9007:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8999:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_79dd45e51ab165bfcf7a14b5d794e1100e4f43c66e93d82a8f33a73acdace21c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8759:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8773:4:2",
														"type": ""
													}
												],
												"src": "8608:424:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9211:231:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9228:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9239:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9221:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9221:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9221:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9262:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9273:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9258:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9258:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9278:2:2",
																		"type": "",
																		"value": "41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9251:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9251:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9251:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9301:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9312:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9297:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9297:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9317:34:2",
																		"type": "",
																		"value": "StakingFund doesn't have enough "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9290:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9290:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9290:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9372:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9383:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9368:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9368:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9388:11:2",
																		"type": "",
																		"value": "allowance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9361:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9361:39:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9361:39:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9409:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9421:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9432:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9417:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9417:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9409:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8ec3e015200e1f9e6e0943e9e536de8fd2eccd7db3e2c39533b307d29bacc8bf__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9188:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9202:4:2",
														"type": ""
													}
												],
												"src": "9037:405:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9621:182:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9638:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9649:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9631:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9631:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9631:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9672:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9683:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9668:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9668:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9688:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9661:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9661:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9661:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "9711:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9722:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9707:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9707:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9727:34:2",
																		"type": "",
																		"value": "poolToken address cannot be zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9700:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9700:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9700:62:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9771:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9783:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9794:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9779:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9779:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "9771:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_94bb83f969d01c78c03c2937a1d7cdba3c6b39448e0a8fec49f98ae3315b3426__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9598:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9612:4:2",
														"type": ""
													}
												],
												"src": "9447:356:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9982:233:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "9999:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10010:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9992:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9992:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9992:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10033:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10044:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10029:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10029:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10049:2:2",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10022:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10022:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10022:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10072:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10083:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10068:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10068:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10088:34:2",
																		"type": "",
																		"value": "StakingFund doesn't have enough "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10061:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10061:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10061:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10143:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10154:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10139:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10139:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10159:13:2",
																		"type": "",
																		"value": "OIL balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10132:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10132:41:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10132:41:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10182:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10194:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10205:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10190:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10190:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10182:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b9edd99dd8d250815668679e6c075641f1995b1ddaf15ec4c0dabacd9db8c322__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "9959:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "9973:4:2",
														"type": ""
													}
												],
												"src": "9808:407:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10394:167:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10411:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10422:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10404:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10404:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10404:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10445:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10456:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10441:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10441:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10461:2:2",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10434:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10434:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10434:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10484:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10495:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10480:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10480:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10500:19:2",
																		"type": "",
																		"value": "poolToken not set"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10473:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10473:47:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10473:47:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10529:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10541:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10552:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10537:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10537:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10529:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_baaab41cf1af04b33672a25d6c62a56d368464d86a10d2970d4d31293d0db24a__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10371:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10385:4:2",
														"type": ""
													}
												],
												"src": "10220:341:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10740:223:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10757:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10768:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10750:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10750:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10750:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10791:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10802:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10787:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10787:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10807:2:2",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10780:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10780:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10780:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10830:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10841:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10826:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10826:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10846:34:2",
																		"type": "",
																		"value": "TransferFrom of poolTokens faile"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10819:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10819:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10819:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "10901:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10912:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10897:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10897:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10917:3:2",
																		"type": "",
																		"value": "d"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10890:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10890:31:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10890:31:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "10930:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "10942:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10953:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "10938:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "10938:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "10930:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_bd8bf05e4eeff98331c5d573ce3c5c39a2f1dfd162031e09da49c962885a911b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "10717:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "10731:4:2",
														"type": ""
													}
												],
												"src": "10566:397:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11142:177:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11159:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11170:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11152:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11152:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11152:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11193:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11204:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11189:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11189:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11209:2:2",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11182:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11182:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11182:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11232:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11243:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11228:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11228:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11248:29:2",
																		"type": "",
																		"value": "Can only be called by owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11221:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11221:57:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11221:57:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11287:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11299:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11310:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11295:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11295:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11287:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c1afbdaa0ffb21f43f34bdebbd4895f3e6a5d4de4e77864bde1be59aa53542b2__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11119:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11133:4:2",
														"type": ""
													}
												],
												"src": "10968:351:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11498:241:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11515:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11526:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11508:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11508:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11508:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11549:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11560:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11545:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11545:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11565:2:2",
																		"type": "",
																		"value": "51"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11538:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11538:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11538:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11588:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11599:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11584:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11584:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11604:34:2",
																		"type": "",
																		"value": "You can only get Rewards after S"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11577:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11577:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11577:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11659:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11670:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11655:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11655:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11675:21:2",
																		"type": "",
																		"value": "taking Program ends"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11648:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11648:49:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11648:49:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "11706:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11718:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11729:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "11714:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11714:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "11706:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c3786129cca9bd92dcb42692167cb02d02ae8b030024a781b08e7dafd22bc2fb__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11475:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11489:4:2",
														"type": ""
													}
												],
												"src": "11324:415:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11918:233:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "11935:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11946:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11928:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11928:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11928:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "11969:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11980:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11965:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11965:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11985:2:2",
																		"type": "",
																		"value": "43"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11958:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11958:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11958:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12008:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12019:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12004:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12004:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12024:34:2",
																		"type": "",
																		"value": "TransferFrom of OIL from Staking"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11997:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "11997:62:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11997:62:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12079:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12090:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12075:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12075:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12095:13:2",
																		"type": "",
																		"value": "Fund failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12068:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12068:41:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12068:41:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12118:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12130:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12141:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12126:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12126:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12118:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_dce7fcdf8c70b472dd9931854d7bcc019b46831d2b96b88b381e506bbb74c94f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "11895:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "11909:4:2",
														"type": ""
													}
												],
												"src": "11744:407:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12330:181:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12347:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12358:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12340:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12340:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12340:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12381:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12392:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12377:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12377:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12397:2:2",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12370:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12370:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12370:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12420:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12431:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12416:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12416:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12436:33:2",
																		"type": "",
																		"value": "You don't have any rewardPoints"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12409:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12409:61:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12409:61:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12479:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12491:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12502:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12487:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12487:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12479:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e5134b59355dcbbe2d4e436ec1b03c78c1275f34182c99b81e54de3ae327f5fc__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12307:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12321:4:2",
														"type": ""
													}
												],
												"src": "12156:355:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12690:175:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12707:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12718:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12700:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12700:21:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12700:21:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12741:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12752:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12737:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12737:18:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12757:2:2",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12730:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12730:30:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12730:30:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "12780:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "12791:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "12776:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12776:18:2"
																	},
																	{
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "12796:27:2",
																		"type": "",
																		"value": "poolToken was already set"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "12769:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12769:55:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "12769:55:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "12833:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12845:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "12856:2:2",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12841:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12841:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12833:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f49325f1961ffe577581956fc74c87e3c797c6d9a3bf9adf95b186a86eb8bca0__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12667:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12681:4:2",
														"type": ""
													}
												],
												"src": "12516:349:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12971:117:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "12981:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "12993:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13004:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "12989:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "12989:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "12981:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13023:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "13038:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13046:34:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13034:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13034:47:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13016:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13016:66:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13016:66:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "12940:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "12951:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "12962:4:2",
														"type": ""
													}
												],
												"src": "12870:218:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13194:76:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13204:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13216:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13227:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13212:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13212:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13204:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13246:9:2"
																	},
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "13257:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13239:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13239:25:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13239:25:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13163:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13174:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13185:4:2",
														"type": ""
													}
												],
												"src": "13093:177:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13454:306:2",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "13464:27:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13476:9:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "13487:3:2",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13472:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13472:19:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "13464:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "13507:9:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nodeType": "YulIdentifier",
																				"src": "13522:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13530:20:2",
																				"type": "",
																				"value": "0xffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13518:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13518:33:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13500:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13500:52:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13500:52:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13572:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13583:2:2",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13568:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13568:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nodeType": "YulIdentifier",
																				"src": "13592:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13600:8:2",
																				"type": "",
																				"value": "0xffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13588:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13588:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13561:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13561:49:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13561:49:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13630:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13641:2:2",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13626:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13626:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value2",
																				"nodeType": "YulIdentifier",
																				"src": "13650:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13658:10:2",
																				"type": "",
																				"value": "0xffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13646:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13646:23:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13619:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13619:51:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13619:51:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "13690:9:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13701:2:2",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "13686:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13686:18:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value3",
																				"nodeType": "YulIdentifier",
																				"src": "13710:6:2"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "13718:34:2",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nodeType": "YulIdentifier",
																			"src": "13706:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13706:47:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "13679:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13679:75:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "13679:75:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint72_t_uint24_t_uint32_t_uint128__to_t_uint72_t_uint24_t_uint32_t_uint128__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "13399:9:2",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "13410:6:2",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "13418:6:2",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "13426:6:2",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "13434:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "13445:4:2",
														"type": ""
													}
												],
												"src": "13275:485:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13813:80:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "13840:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "13842:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "13842:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "13842:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13829:1:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "13836:1:2"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "13832:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "13832:6:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "13826:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13826:13:2"
															},
															"nodeType": "YulIf",
															"src": "13823:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "13871:16:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13882:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "13885:1:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "13878:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13878:9:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "13871:3:2"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13796:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13799:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "13805:3:2",
														"type": ""
													}
												],
												"src": "13765:128:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "13945:181:2",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13955:20:2",
															"value": {
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "13965:10:2",
																"type": "",
																"value": "0xffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nodeType": "YulTypedName",
																	"src": "13959:2:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "13984:21:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "13999:1:2"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "14002:2:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "13995:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "13995:10:2"
															},
															"variables": [
																{
																	"name": "x_1",
																	"nodeType": "YulTypedName",
																	"src": "13988:3:2",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "14014:21:2",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14029:1:2"
																	},
																	{
																		"name": "_1",
																		"nodeType": "YulIdentifier",
																		"src": "14032:2:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14025:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14025:10:2"
															},
															"variables": [
																{
																	"name": "y_1",
																	"nodeType": "YulTypedName",
																	"src": "14018:3:2",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14069:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14071:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14071:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14071:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x_1",
																		"nodeType": "YulIdentifier",
																		"src": "14050:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nodeType": "YulIdentifier",
																				"src": "14059:2:2"
																			},
																			{
																				"name": "y_1",
																				"nodeType": "YulIdentifier",
																				"src": "14063:3:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "14055:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14055:12:2"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "14047:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14047:21:2"
															},
															"nodeType": "YulIf",
															"src": "14044:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14100:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "x_1",
																		"nodeType": "YulIdentifier",
																		"src": "14111:3:2"
																	},
																	{
																		"name": "y_1",
																		"nodeType": "YulIdentifier",
																		"src": "14116:3:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "14107:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14107:13:2"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "14100:3:2"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "13928:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "13931:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "13937:3:2",
														"type": ""
													}
												],
												"src": "13898:228:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14177:228:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14208:168:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "14229:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14232:77:2",
																					"type": "",
																					"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14222:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14222:88:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14222:88:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14330:1:2",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14333:4:2",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nodeType": "YulIdentifier",
																				"src": "14323:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14323:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14323:15:2"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "r",
																					"nodeType": "YulIdentifier",
																					"src": "14358:1:2"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "14361:4:2",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "14351:6:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14351:15:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14351:15:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14197:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "14190:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14190:9:2"
															},
															"nodeType": "YulIf",
															"src": "14187:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14385:14:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14394:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14397:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "14390:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14390:9:2"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "14385:1:2"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14162:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14165:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "14171:1:2",
														"type": ""
													}
												],
												"src": "14131:274:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14462:176:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14581:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14583:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14583:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14583:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "14493:1:2"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nodeType": "YulIdentifier",
																					"src": "14486:6:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14486:9:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "14479:6:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14479:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "14501:1:2"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "14508:66:2",
																						"type": "",
																						"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																					},
																					{
																						"name": "x",
																						"nodeType": "YulIdentifier",
																						"src": "14576:1:2"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nodeType": "YulIdentifier",
																					"src": "14504:3:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "14504:74:2"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "14498:2:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "14498:81:2"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "14475:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14475:105:2"
															},
															"nodeType": "YulIf",
															"src": "14472:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14612:20:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14627:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14630:1:2"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nodeType": "YulIdentifier",
																	"src": "14623:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14623:9:2"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nodeType": "YulIdentifier",
																	"src": "14612:7:2"
																}
															]
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14441:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14444:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nodeType": "YulTypedName",
														"src": "14450:7:2",
														"type": ""
													}
												],
												"src": "14410:228:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14692:76:2",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "14714:22:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "14716:16:2"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "14716:18:2"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "14716:18:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14708:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14711:1:2"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "14705:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14705:8:2"
															},
															"nodeType": "YulIf",
															"src": "14702:2:2"
														},
														{
															"nodeType": "YulAssignment",
															"src": "14745:17:2",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "14757:1:2"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "14760:1:2"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "14753:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14753:9:2"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "14745:4:2"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "14674:1:2",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "14677:1:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "14683:4:2",
														"type": ""
													}
												],
												"src": "14643:125:2"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "14805:152:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14822:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14825:77:2",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14815:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14815:88:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14815:88:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14919:1:2",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14922:4:2",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "14912:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14912:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14912:15:2"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14943:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "14946:4:2",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "14936:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "14936:15:2"
															},
															"nodeType": "YulExpressionStatement",
															"src": "14936:15:2"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "14773:184:2"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffffffffffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint72t_uint24(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffffffffffffffff))) { revert(value0, value0) }\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        if iszero(eq(value_1, and(value_1, 0xffffff))) { revert(value1, value1) }\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint72__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := 0xffffffffffffffffffffffffffffffffffffffff\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, 0xffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_address_t_uint72_t_uint24_t_uint128__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffff))\n        mstore(add(headStart, 64), and(value2, 0xffffff))\n        mstore(add(headStart, 96), and(value3, 0xffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_address_t_uint72_t_uint24_t_uint256__to_t_address_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffff))\n        mstore(add(headStart, 64), and(value2, 0xffffff))\n        mstore(add(headStart, 96), value3)\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$786__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_1d084e2eca749984c089d1d9f64331c149c27c323008184a1491516501160a6b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Reward oilers transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_232d7994234e21dc0a46dcff0076032352d1b7b4d58ecc76ed88eec990d90098__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Vesting release: no tokens are d\")\n        mstore(add(headStart, 96), \"ue\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_2418688d011b8e0830741b4ef5b95d25f3075f5a8407237c54796d2479ff21e5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"TokenVesting: beneficiary is the\")\n        mstore(add(headStart, 96), \" zero address\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_33a0d73ef506feaebcf4cdd68c1a9783ad6fdd5367feedb0a0d58ce8d7b1ad1a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Pool token transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4d2c35fe1a7df903955f64419a99f644f465f2a0aa959d96b99839301c2ef508__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 80)\n        mstore(add(headStart, 64), \"You still have a stake locked - \")\n        mstore(add(headStart, 96), \"please unlock first, don't leave\")\n        mstore(add(headStart, 128), \" free money here\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_stringliteral_52ac77891b100190c173ca8db34c1090b0a3a5fd7fa47169c21476dd2c32bc2f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"You don't have a stake to unlock\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5735093ee1c27da93975faba569ca18ca1f3facf35d6dfe2cae61f4fc1bf709a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 49)\n        mstore(add(headStart, 64), \"Your lock period exceeds Staking\")\n        mstore(add(headStart, 96), \" Program duration\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Already staking\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6c4dd08c63778c1a28236bdb848c48062fa51b777ba1838c68276b07c98b172b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"You didn't earn any integer amou\")\n        mstore(add(headStart, 96), \"nt of wei\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_6e6a919188e639c6fec1ac974bcd532a51e7cb501fa68e5b2f08f294731a4b88__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"Neither tokenAmount nor lockingP\")\n        mstore(add(headStart, 96), \"eriod couldn't be 0\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_79dd45e51ab165bfcf7a14b5d794e1100e4f43c66e93d82a8f33a73acdace21c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 60)\n        mstore(add(headStart, 64), \"You can't withdraw the stake in \")\n        mstore(add(headStart, 96), \"the same block it was locked\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_8ec3e015200e1f9e6e0943e9e536de8fd2eccd7db3e2c39533b307d29bacc8bf__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"StakingFund doesn't have enough \")\n        mstore(add(headStart, 96), \"allowance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_94bb83f969d01c78c03c2937a1d7cdba3c6b39448e0a8fec49f98ae3315b3426__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"poolToken address cannot be zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b9edd99dd8d250815668679e6c075641f1995b1ddaf15ec4c0dabacd9db8c322__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"StakingFund doesn't have enough \")\n        mstore(add(headStart, 96), \"OIL balance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baaab41cf1af04b33672a25d6c62a56d368464d86a10d2970d4d31293d0db24a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"poolToken not set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bd8bf05e4eeff98331c5d573ce3c5c39a2f1dfd162031e09da49c962885a911b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"TransferFrom of poolTokens faile\")\n        mstore(add(headStart, 96), \"d\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c1afbdaa0ffb21f43f34bdebbd4895f3e6a5d4de4e77864bde1be59aa53542b2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Can only be called by owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c3786129cca9bd92dcb42692167cb02d02ae8b030024a781b08e7dafd22bc2fb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 51)\n        mstore(add(headStart, 64), \"You can only get Rewards after S\")\n        mstore(add(headStart, 96), \"taking Program ends\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_dce7fcdf8c70b472dd9931854d7bcc019b46831d2b96b88b381e506bbb74c94f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"TransferFrom of OIL from Staking\")\n        mstore(add(headStart, 96), \"Fund failed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_e5134b59355dcbbe2d4e436ec1b03c78c1275f34182c99b81e54de3ae327f5fc__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"You don't have any rewardPoints\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f49325f1961ffe577581956fc74c87e3c797c6d9a3bf9adf95b186a86eb8bca0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"poolToken was already set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint128__to_t_uint128__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint72_t_uint24_t_uint32_t_uint128__to_t_uint72_t_uint24_t_uint32_t_uint128__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, and(value0, 0xffffffffffffffffff))\n        mstore(add(headStart, 32), and(value1, 0xffffff))\n        mstore(add(headStart, 64), and(value2, 0xffffffff))\n        mstore(add(headStart, 96), and(value3, 0xffffffffffffffffffffffffffffffff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_add_t_uint32(x, y) -> sum\n    {\n        let _1 := 0xffffffff\n        let x_1 := and(x, _1)\n        let y_1 := and(y, _1)\n        if gt(x_1, sub(_1, y_1)) { panic_error_0x11() }\n        sum := add(x_1, y_1)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"29": [
									{
										"length": 32,
										"start": 828
									},
									{
										"length": 32,
										"start": 996
									},
									{
										"length": 32,
										"start": 1742
									},
									{
										"length": 32,
										"start": 6888
									},
									{
										"length": 32,
										"start": 7009
									}
								],
								"32": [
									{
										"length": 32,
										"start": 582
									},
									{
										"length": 32,
										"start": 1526
									},
									{
										"length": 32,
										"start": 4093
									},
									{
										"length": 32,
										"start": 4466
									},
									{
										"length": 32,
										"start": 4841
									}
								],
								"40": [
									{
										"length": 32,
										"start": 705
									},
									{
										"length": 32,
										"start": 3256
									},
									{
										"length": 32,
										"start": 4127
									},
									{
										"length": 32,
										"start": 4500
									},
									{
										"length": 32,
										"start": 4879
									}
								],
								"53": [
									{
										"length": 32,
										"start": 303
									},
									{
										"length": 32,
										"start": 6855
									},
									{
										"length": 32,
										"start": 6973
									}
								],
								"74": [
									{
										"length": 32,
										"start": 789
									},
									{
										"length": 32,
										"start": 3588
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061011b5760003560e01c806386d1a69f116100b2578063c959360b11610081578063e0e4a72211610066578063e0e4a722146103a7578063f6ffab88146103c7578063f968f493146103da57600080fd5b8063c959360b14610367578063cbdf382c1461038757600080fd5b806386d1a69f146103085780638da5cb5b14610310578063bc0925ae14610337578063c2e8caf61461035e57600080fd5b806352946b04116100ee57806352946b041461024157806370ff852b14610268578063798633b91461028857806381e9207d146102bc57600080fd5b80630572b0cc146101205780631514617e1461012a57806316934fc414610164578063378592c81461022e575b600080fd5b6101286103e2565b005b6101517f000000000000000000000000000000000000000000000000000000000000000081565b6040519081526020015b60405180910390f35b6101e1610172366004611be9565b60006020819052908152604090205468ffffffffffffffffff8116906901000000000000000000810462ffffff16906c01000000000000000000000000810463ffffffff169070010000000000000000000000000000000090046fffffffffffffffffffffffffffffffff1684565b6040805168ffffffffffffffffff909516855262ffffff909316602085015263ffffffff909116918301919091526fffffffffffffffffffffffffffffffff16606082015260800161015b565b61012861023c366004611c6d565b610644565b6101517f000000000000000000000000000000000000000000000000000000000000000081565b610151610276366004611be9565b60056020526000908152604090205481565b61029b610296366004611c6d565b610b01565b6040516fffffffffffffffffffffffffffffffff909116815260200161015b565b6102e37f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161015b565b610128610bc2565b6102e37f000000000000000000000000000000000000000000000000000000000000000081565b6101517f000000000000000000000000000000000000000000000000000000000000000081565b61015160025481565b610151610375366004611be9565b60016020526000908152604090205481565b6003546102e39073ffffffffffffffffffffffffffffffffffffffff1681565b6101516103b5366004611be9565b60046020526000908152604090205481565b6101286103d5366004611c03565b610dec565b61012861141b565b7f00000000000000000000000000000000000000000000000000000000000000004311610496576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f596f752063616e206f6e6c79206765742052657761726473206166746572205360448201527f74616b696e672050726f6772616d20656e64730000000000000000000000000060648201526084015b60405180910390fd5b3360009081526020819052604090205468ffffffffffffffffff1615610564576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152605060248201527f596f75207374696c6c20686176652061207374616b65206c6f636b6564202d2060448201527f706c6561736520756e6c6f636b2066697273742c20646f6e2774206c6561766560648201527f2066726565206d6f6e6579206865726500000000000000000000000000000000608482015260a40161048d565b336000908152600160205260409020546105da576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f596f7520646f6e2774206861766520616e7920726577617264506f696e747300604482015260640161048d565b6002543360009081526001602052604081205490919061061a907f0000000000000000000000000000000000000000000000000000000000000000611d32565b6106249190611cf9565b336000818152600160205260408120559091506106419082611752565b50565b60035473ffffffffffffffffffffffffffffffffffffffff166106c3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f706f6f6c546f6b656e206e6f7420736574000000000000000000000000000000604482015260640161048d565b6106f262ffffff82167f0000000000000000000000000000000000000000000000000000000000000000611d6f565b431115610781576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f596f7572206c6f636b20706572696f642065786365656473205374616b696e6760448201527f2050726f6772616d206475726174696f6e000000000000000000000000000000606482015260840161048d565b3360009081526020819052604090205468ffffffffffffffffff1615610803576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f416c7265616479207374616b696e670000000000000000000000000000000000604482015260640161048d565b600061080f8383610b01565b6040805160808101825268ffffffffffffffffff868116825262ffffff86811660208085019182524363ffffffff9081168688019081526fffffffffffffffffffffffffffffffff898116606089018181523360009081529586905299852089518154975194519b5199167fffffffffffffffffffffffffffffffffffffffff0000000000000000000000009097169690961769010000000000000000009390971692909202959095176bffffffffffffffffffffffff166c0100000000000000000000000098909216979097028416177001000000000000000000000000000000009490931693909302919091179055600280549495509193610914908490611cb9565b909155505033600090815260016020526040812080546fffffffffffffffffffffffffffffffff8516929061094a908490611cb9565b90915550506003546040517f23b872dd00000000000000000000000000000000000000000000000000000000815233600482015230602482015268ffffffffffffffffff8616604482015273ffffffffffffffffffffffffffffffffffffffff909116906323b872dd90606401602060405180830381600087803b1580156109d157600080fd5b505af11580156109e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a099190611c35565b610a95576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f5472616e7366657246726f6d206f6620706f6f6c546f6b656e73206661696c6560448201527f6400000000000000000000000000000000000000000000000000000000000000606482015260840161048d565b6040805133815268ffffffffffffffffff8616602082015262ffffff8516818301526fffffffffffffffffffffffffffffffff8416606082015290517fe7dbea143058f90be7a1644e539342c25ddc5379868fe922bab596de99debf419181900360800190a150505050565b60008062ffffff8316610b1f8168ffffffffffffffffff8716611d32565b610b299190611d32565b905060008111610bbb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603360248201527f4e65697468657220746f6b656e416d6f756e74206e6f72206c6f636b696e675060448201527f6572696f6420636f756c646e2774206265203000000000000000000000000000606482015260840161048d565b9392505050565b6000610bcd336118ea565b905060008111610c5f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f56657374696e672072656c656173653a206e6f20746f6b656e7320617265206460448201527f7565000000000000000000000000000000000000000000000000000000000000606482015260840161048d565b3360009081526005602052604081208054839290610c7e908490611cb9565b90915550506040517fa9059cbb000000000000000000000000000000000000000000000000000000008152336004820152602481018290527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff169063a9059cbb90604401602060405180830381600087803b158015610d1157600080fd5b505af1158015610d25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d499190611c35565b610daf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f526577617264206f696c657273207472616e73666572206661696c6564000000604482015260640161048d565b60408051338152602081018390527f769d4212c4fbfaa012a896b49e0f3bb14d32dd0d60ce1a13d357ee6b69db77c291015b60405180910390a150565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610e8b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601b60248201527f43616e206f6e6c792062652063616c6c6564206279206f776e65720000000000604482015260640161048d565b60035473ffffffffffffffffffffffffffffffffffffffff1615610f0b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f706f6f6c546f6b656e2077617320616c72656164792073657400000000000000604482015260640161048d565b73ffffffffffffffffffffffffffffffffffffffff8216610f88576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f706f6f6c546f6b656e20616464726573732063616e6e6f74206265207a65726f604482015260640161048d565b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff848116919091179091556040517f70a0823100000000000000000000000000000000000000000000000000000000815282821660048201527f0000000000000000000000000000000000000000000000000000000000000000917f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b15801561106157600080fd5b505afa158015611075573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110999190611c55565b1015611127576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f5374616b696e6746756e6420646f65736e2774206861766520656e6f7567682060448201527f4f494c2062616c616e6365000000000000000000000000000000000000000000606482015260840161048d565b6040517fdd62ed3e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301523060248301527f0000000000000000000000000000000000000000000000000000000000000000917f00000000000000000000000000000000000000000000000000000000000000009091169063dd62ed3e9060440160206040518083038186803b1580156111d857600080fd5b505afa1580156111ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112109190611c55565b101561129e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f5374616b696e6746756e6420646f65736e2774206861766520656e6f7567682060448201527f616c6c6f77616e63650000000000000000000000000000000000000000000000606482015260840161048d565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff82811660048301523060248301527f000000000000000000000000000000000000000000000000000000000000000060448301527f000000000000000000000000000000000000000000000000000000000000000016906323b872dd90606401602060405180830381600087803b15801561135357600080fd5b505af1158015611367573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061138b9190611c35565b611417576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f5472616e7366657246726f6d206f66204f494c2066726f6d205374616b696e6760448201527f46756e64206661696c6564000000000000000000000000000000000000000000606482015260840161048d565b5050565b60035473ffffffffffffffffffffffffffffffffffffffff1661149a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f706f6f6c546f6b656e206e6f7420736574000000000000000000000000000000604482015260640161048d565b33600090815260208181526040918290208251608081018452905468ffffffffffffffffff81168083526901000000000000000000820462ffffff16938301939093526c01000000000000000000000000810463ffffffff16938201939093527001000000000000000000000000000000009092046fffffffffffffffffffffffffffffffff1660608301528061158d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f596f7520646f6e277420686176652061207374616b6520746f20756e6c6f636b604482015260640161048d565b816040015163ffffffff164311611626576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603c60248201527f596f752063616e277420776974686472617720746865207374616b6520696e2060448201527f7468652073616d6520626c6f636b20697420776173206c6f636b656400000000606482015260840161048d565b61162f82611929565b336000818152602081905260408082209190915560035490517fa9059cbb00000000000000000000000000000000000000000000000000000000815260048101929092526024820183905273ffffffffffffffffffffffffffffffffffffffff169063a9059cbb90604401602060405180830381600087803b1580156116b457600080fd5b505af11580156116c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116ec9190611c35565b611417576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601a60248201527f506f6f6c20746f6b656e207472616e73666572206661696c6564000000000000604482015260640161048d565b600081116117e2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f596f75206469646e2774206561726e20616e7920696e746567657220616d6f7560448201527f6e74206f66207765690000000000000000000000000000000000000000000000606482015260840161048d565b73ffffffffffffffffffffffffffffffffffffffff8216611885576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f546f6b656e56657374696e673a2062656e65666963696172792069732074686560448201527f207a65726f206164647265737300000000000000000000000000000000000000606482015260840161048d565b73ffffffffffffffffffffffffffffffffffffffff8216600081815260046020908152604091829020849055815192835282018390527f6e1afd29522b0aaf986597bcc53f5fb4daae2af7cfd41d00c384ab1bdf912b23910160405180910390a15050565b73ffffffffffffffffffffffffffffffffffffffff811660009081526005602052604081205461191983611ac0565b6119239190611d6f565b92915050565b806020015162ffffff1681604001516119429190611cd1565b63ffffffff16431015611a4957606081015133600090815260016020526040812080546fffffffffffffffffffffffffffffffff90931692909190611988908490611d6f565b9250508190555080606001516fffffffffffffffffffffffffffffffff16600260008282546119b79190611d6f565b90915550508051602082015160408301517f6c6f3c7d8c87976393011cc962da12841024bc1d62d2de21716a6306ab314ef392339290916119fe9063ffffffff1643611d6f565b6040805173ffffffffffffffffffffffffffffffffffffffff909516855268ffffffffffffffffff909316602085015262ffffff909116918301919091526060820152608001610de1565b80516020808301516060808501516040805133815268ffffffffffffffffff9096169486019490945262ffffff909216928401929092526fffffffffffffffffffffffffffffffff16908201527f391930ab48e95a9040c849cc86e1b2f63c711a1f59d6e324ce775dc9a005105690608001610de1565b6000611b0c7f00000000000000000000000000000000000000000000000000000000000000007f0000000000000000000000000000000000000000000000000000000000000000611cb9565b4310611b3b575073ffffffffffffffffffffffffffffffffffffffff1660009081526004602052604090205490565b7f0000000000000000000000000000000000000000000000000000000000000000611b867f000000000000000000000000000000000000000000000000000000000000000043611d6f565b73ffffffffffffffffffffffffffffffffffffffff8416600090815260046020526040902054611bb69190611d32565b6119239190611cf9565b919050565b803573ffffffffffffffffffffffffffffffffffffffff81168114611bc057600080fd5b600060208284031215611bfa578081fd5b610bbb82611bc5565b60008060408385031215611c15578081fd5b611c1e83611bc5565b9150611c2c60208401611bc5565b90509250929050565b600060208284031215611c46578081fd5b81518015158114610bbb578182fd5b600060208284031215611c66578081fd5b5051919050565b60008060408385031215611c7f578182fd5b823568ffffffffffffffffff81168114611c97578283fd5b9150602083013562ffffff81168114611cae578182fd5b809150509250929050565b60008219821115611ccc57611ccc611d86565b500190565b600063ffffffff808316818516808303821115611cf057611cf0611d86565b01949350505050565b600082611d2d577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615611d6a57611d6a611d86565b500290565b600082821015611d8157611d81611d86565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea2646970667358221220b213dd3def8354c85124c77cb7c25d47bd8a5643391e9b3c6ac44ce1c6270fe564736f6c63430008040033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11B JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x86D1A69F GT PUSH2 0xB2 JUMPI DUP1 PUSH4 0xC959360B GT PUSH2 0x81 JUMPI DUP1 PUSH4 0xE0E4A722 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xE0E4A722 EQ PUSH2 0x3A7 JUMPI DUP1 PUSH4 0xF6FFAB88 EQ PUSH2 0x3C7 JUMPI DUP1 PUSH4 0xF968F493 EQ PUSH2 0x3DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC959360B EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0xCBDF382C EQ PUSH2 0x387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x86D1A69F EQ PUSH2 0x308 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0xBC0925AE EQ PUSH2 0x337 JUMPI DUP1 PUSH4 0xC2E8CAF6 EQ PUSH2 0x35E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x52946B04 GT PUSH2 0xEE JUMPI DUP1 PUSH4 0x52946B04 EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x70FF852B EQ PUSH2 0x268 JUMPI DUP1 PUSH4 0x798633B9 EQ PUSH2 0x288 JUMPI DUP1 PUSH4 0x81E9207D EQ PUSH2 0x2BC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x572B0CC EQ PUSH2 0x120 JUMPI DUP1 PUSH4 0x1514617E EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x164 JUMPI DUP1 PUSH4 0x378592C8 EQ PUSH2 0x22E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x128 PUSH2 0x3E2 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x151 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1E1 PUSH2 0x172 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BE9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP2 SWAP1 MSTORE SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH9 0xFFFFFFFFFFFFFFFFFF DUP2 AND SWAP1 PUSH10 0x1000000000000000000 DUP2 DIV PUSH3 0xFFFFFF AND SWAP1 PUSH13 0x1000000000000000000000000 DUP2 DIV PUSH4 0xFFFFFFFF AND SWAP1 PUSH17 0x100000000000000000000000000000000 SWAP1 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH9 0xFFFFFFFFFFFFFFFFFF SWAP1 SWAP6 AND DUP6 MSTORE PUSH3 0xFFFFFF SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH4 0xFFFFFFFF SWAP1 SWAP2 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0x15B JUMP JUMPDEST PUSH2 0x128 PUSH2 0x23C CALLDATASIZE PUSH1 0x4 PUSH2 0x1C6D JUMP JUMPDEST PUSH2 0x644 JUMP JUMPDEST PUSH2 0x151 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x151 PUSH2 0x276 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BE9 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x29B PUSH2 0x296 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C6D JUMP JUMPDEST PUSH2 0xB01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15B JUMP JUMPDEST PUSH2 0x2E3 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15B JUMP JUMPDEST PUSH2 0x128 PUSH2 0xBC2 JUMP JUMPDEST PUSH2 0x2E3 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x151 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x151 PUSH1 0x2 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x151 PUSH2 0x375 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BE9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH2 0x2E3 SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x151 PUSH2 0x3B5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1BE9 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x128 PUSH2 0x3D5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C03 JUMP JUMPDEST PUSH2 0xDEC JUMP JUMPDEST PUSH2 0x128 PUSH2 0x141B JUMP JUMPDEST PUSH32 0x0 NUMBER GT PUSH2 0x496 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E206F6E6C792067657420526577617264732061667465722053 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x74616B696E672050726F6772616D20656E647300000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH9 0xFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0x564 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x50 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75207374696C6C20686176652061207374616B65206C6F636B6564202D20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x706C6561736520756E6C6F636B2066697273742C20646F6E2774206C65617665 PUSH1 0x64 DUP3 ADD MSTORE PUSH32 0x2066726565206D6F6E6579206865726500000000000000000000000000000000 PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 ADD PUSH2 0x48D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x5DA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E2774206861766520616E7920726577617264506F696E747300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48D JUMP JUMPDEST PUSH1 0x2 SLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP1 SWAP2 SWAP1 PUSH2 0x61A SWAP1 PUSH32 0x0 PUSH2 0x1D32 JUMP JUMPDEST PUSH2 0x624 SWAP2 SWAP1 PUSH2 0x1CF9 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SSTORE SWAP1 SWAP2 POP PUSH2 0x641 SWAP1 DUP3 PUSH2 0x1752 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6C3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x706F6F6C546F6B656E206E6F7420736574000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48D JUMP JUMPDEST PUSH2 0x6F2 PUSH3 0xFFFFFF DUP3 AND PUSH32 0x0 PUSH2 0x1D6F JUMP JUMPDEST NUMBER GT ISZERO PUSH2 0x781 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x31 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7572206C6F636B20706572696F642065786365656473205374616B696E67 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x2050726F6772616D206475726174696F6E000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH9 0xFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0x803 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416C7265616479207374616B696E670000000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x80F DUP4 DUP4 PUSH2 0xB01 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE PUSH9 0xFFFFFFFFFFFFFFFFFF DUP7 DUP2 AND DUP3 MSTORE PUSH3 0xFFFFFF DUP7 DUP2 AND PUSH1 0x20 DUP1 DUP6 ADD SWAP2 DUP3 MSTORE NUMBER PUSH4 0xFFFFFFFF SWAP1 DUP2 AND DUP7 DUP9 ADD SWAP1 DUP2 MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP10 DUP2 AND PUSH1 0x60 DUP10 ADD DUP2 DUP2 MSTORE CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE SWAP6 DUP7 SWAP1 MSTORE SWAP10 DUP6 KECCAK256 DUP10 MLOAD DUP2 SLOAD SWAP8 MLOAD SWAP5 MLOAD SWAP12 MLOAD SWAP10 AND PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000 SWAP1 SWAP8 AND SWAP7 SWAP1 SWAP7 OR PUSH10 0x1000000000000000000 SWAP4 SWAP1 SWAP8 AND SWAP3 SWAP1 SWAP3 MUL SWAP6 SWAP1 SWAP6 OR PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH13 0x1000000000000000000000000 SWAP9 SWAP1 SWAP3 AND SWAP8 SWAP1 SWAP8 MUL DUP5 AND OR PUSH17 0x100000000000000000000000000000000 SWAP5 SWAP1 SWAP4 AND SWAP4 SWAP1 SWAP4 MUL SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP5 SWAP6 POP SWAP2 SWAP4 PUSH2 0x914 SWAP1 DUP5 SWAP1 PUSH2 0x1CB9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP6 AND SWAP3 SWAP1 PUSH2 0x94A SWAP1 DUP5 SWAP1 PUSH2 0x1CB9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0xFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x9E5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA09 SWAP2 SWAP1 PUSH2 0x1C35 JUMP JUMPDEST PUSH2 0xA95 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657246726F6D206F6620706F6F6C546F6B656E73206661696C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6400000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH9 0xFFFFFFFFFFFFFFFFFF DUP7 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0xFFFFFF DUP6 AND DUP2 DUP4 ADD MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x60 DUP3 ADD MSTORE SWAP1 MLOAD PUSH32 0xE7DBEA143058F90BE7A1644E539342C25DDC5379868FE922BAB596DE99DEBF41 SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG1 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH3 0xFFFFFF DUP4 AND PUSH2 0xB1F DUP2 PUSH9 0xFFFFFFFFFFFFFFFFFF DUP8 AND PUSH2 0x1D32 JUMP JUMPDEST PUSH2 0xB29 SWAP2 SWAP1 PUSH2 0x1D32 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xBBB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x33 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E65697468657220746F6B656E416D6F756E74206E6F72206C6F636B696E6750 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6572696F6420636F756C646E2774206265203000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48D JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBCD CALLER PUSH2 0x18EA JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 GT PUSH2 0xC5F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x56657374696E672072656C656173653A206E6F20746F6B656E73206172652064 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7565000000000000000000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xC7E SWAP1 DUP5 SWAP1 PUSH2 0x1CB9 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD25 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD49 SWAP2 SWAP1 PUSH2 0x1C35 JUMP JUMPDEST PUSH2 0xDAF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x526577617264206F696C657273207472616E73666572206661696C6564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48D JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH32 0x769D4212C4FBFAA012A896B49E0F3BB14D32DD0D60CE1A13D357EE6B69DB77C2 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF PUSH32 0x0 AND EQ PUSH2 0xE8B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x43616E206F6E6C792062652063616C6C6564206279206F776E65720000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48D JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND ISZERO PUSH2 0xF0B JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x706F6F6C546F6B656E2077617320616C72656164792073657400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0xF88 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x706F6F6C546F6B656E20616464726573732063616E6E6F74206265207A65726F PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48D JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000 AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x40 MLOAD PUSH32 0x70A0823100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE DUP3 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH32 0x0 SWAP2 PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1061 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1075 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1099 SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST LT ISZERO PUSH2 0x1127 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E6746756E6420646F65736E2774206861766520656E6F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x4F494C2062616C616E6365000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0xDD62ED3E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0x0 SWAP2 PUSH32 0x0 SWAP1 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x11EC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1210 SWAP2 SWAP1 PUSH2 0x1C55 JUMP JUMPDEST LT ISZERO PUSH2 0x129E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5374616B696E6746756E6420646F65736E2774206861766520656E6F75676820 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x616C6C6F77616E63650000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x23B872DD00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 DUP2 AND PUSH1 0x4 DUP4 ADD MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH32 0x0 PUSH1 0x44 DUP4 ADD MSTORE PUSH32 0x0 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1353 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1367 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x138B SWAP2 SWAP1 PUSH2 0x1C35 JUMP JUMPDEST PUSH2 0x1417 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E7366657246726F6D206F66204F494C2066726F6D205374616B696E67 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x46756E64206661696C6564000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48D JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x149A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x706F6F6C546F6B656E206E6F7420736574000000000000000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48D JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD PUSH1 0x80 DUP2 ADD DUP5 MSTORE SWAP1 SLOAD PUSH9 0xFFFFFFFFFFFFFFFFFF DUP2 AND DUP1 DUP4 MSTORE PUSH10 0x1000000000000000000 DUP3 DIV PUSH3 0xFFFFFF AND SWAP4 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH13 0x1000000000000000000000000 DUP2 DIV PUSH4 0xFFFFFFFF AND SWAP4 DUP3 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH17 0x100000000000000000000000000000000 SWAP1 SWAP3 DIV PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 DUP4 ADD MSTORE DUP1 PUSH2 0x158D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F7520646F6E277420686176652061207374616B6520746F20756E6C6F636B PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48D JUMP JUMPDEST DUP2 PUSH1 0x40 ADD MLOAD PUSH4 0xFFFFFFFF AND NUMBER GT PUSH2 0x1626 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F752063616E277420776974686472617720746865207374616B6520696E20 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x7468652073616D6520626C6F636B20697420776173206C6F636B656400000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48D JUMP JUMPDEST PUSH2 0x162F DUP3 PUSH2 0x1929 JUMP JUMPDEST CALLER PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x3 SLOAD SWAP1 MLOAD PUSH32 0xA9059CBB00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x24 DUP3 ADD DUP4 SWAP1 MSTORE PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16B4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16C8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16EC SWAP2 SWAP1 PUSH2 0x1C35 JUMP JUMPDEST PUSH2 0x1417 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506F6F6C20746F6B656E207472616E73666572206661696C6564000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x48D JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x17E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x596F75206469646E2774206561726E20616E7920696E746567657220616D6F75 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x6E74206F66207765690000000000000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH2 0x1885 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x2D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x546F6B656E56657374696E673A2062656E656669636961727920697320746865 PUSH1 0x44 DUP3 ADD MSTORE PUSH32 0x207A65726F206164647265737300000000000000000000000000000000000000 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x48D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP5 SWAP1 SSTORE DUP2 MLOAD SWAP3 DUP4 MSTORE DUP3 ADD DUP4 SWAP1 MSTORE PUSH32 0x6E1AFD29522B0AAF986597BCC53F5FB4DAAE2AF7CFD41D00C384AB1BDF912B23 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x1919 DUP4 PUSH2 0x1AC0 JUMP JUMPDEST PUSH2 0x1923 SWAP2 SWAP1 PUSH2 0x1D6F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH1 0x20 ADD MLOAD PUSH3 0xFFFFFF AND DUP2 PUSH1 0x40 ADD MLOAD PUSH2 0x1942 SWAP2 SWAP1 PUSH2 0x1CD1 JUMP JUMPDEST PUSH4 0xFFFFFFFF AND NUMBER LT ISZERO PUSH2 0x1A49 JUMPI PUSH1 0x60 DUP2 ADD MLOAD CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP2 SWAP1 PUSH2 0x1988 SWAP1 DUP5 SWAP1 PUSH2 0x1D6F JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x60 ADD MLOAD PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x19B7 SWAP2 SWAP1 PUSH2 0x1D6F JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP1 MLOAD PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP4 ADD MLOAD PUSH32 0x6C6F3C7D8C87976393011CC962DA12841024BC1D62D2DE21716A6306AB314EF3 SWAP3 CALLER SWAP3 SWAP1 SWAP2 PUSH2 0x19FE SWAP1 PUSH4 0xFFFFFFFF AND NUMBER PUSH2 0x1D6F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP1 SWAP6 AND DUP6 MSTORE PUSH9 0xFFFFFFFFFFFFFFFFFF SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH3 0xFFFFFF SWAP1 SWAP2 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD PUSH2 0xDE1 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x60 DUP1 DUP6 ADD MLOAD PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH9 0xFFFFFFFFFFFFFFFFFF SWAP1 SWAP7 AND SWAP5 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH3 0xFFFFFF SWAP1 SWAP3 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 DUP3 ADD MSTORE PUSH32 0x391930AB48E95A9040C849CC86E1B2F63C711A1F59D6E324CE775DC9A0051056 SWAP1 PUSH1 0x80 ADD PUSH2 0xDE1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1B0C PUSH32 0x0 PUSH32 0x0 PUSH2 0x1CB9 JUMP JUMPDEST NUMBER LT PUSH2 0x1B3B JUMPI POP PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH2 0x1B86 PUSH32 0x0 NUMBER PUSH2 0x1D6F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1BB6 SWAP2 SWAP1 PUSH2 0x1D32 JUMP JUMPDEST PUSH2 0x1923 SWAP2 SWAP1 PUSH2 0x1CF9 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1BC0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1BFA JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xBBB DUP3 PUSH2 0x1BC5 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C15 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1C1E DUP4 PUSH2 0x1BC5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C2C PUSH1 0x20 DUP5 ADD PUSH2 0x1BC5 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C46 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0xBBB JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C66 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1C7F JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH9 0xFFFFFFFFFFFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1C97 JUMPI DUP3 DUP4 REVERT JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x1CAE JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1CCC JUMPI PUSH2 0x1CCC PUSH2 0x1D86 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH4 0xFFFFFFFF DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x1CF0 JUMPI PUSH2 0x1CF0 PUSH2 0x1D86 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1D2D JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1D6A JUMPI PUSH2 0x1D6A PUSH2 0x1D86 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1D81 JUMPI PUSH2 0x1D81 PUSH2 0x1D86 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB2 SGT 0xDD RETURNDATASIZE 0xEF DUP4 SLOAD 0xC8 MLOAD 0x24 0xC7 PUSH29 0xB7C25D47BD8A5643391E9B3C6AC44CE1C6270FE564736F6C6343000804 STOP CALLER ",
							"sourceMap": "2612:15215:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13821:1399;;;:::i;:::-;;5976:40;;;;;;;;13239:25:2;;;13227:2;13212:18;5976:40:0;;;;;;;;4823;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13530:20:2;13518:33;;;13500:52;;13600:8;13588:21;;;13583:2;13568:18;;13561:49;13658:10;13646:23;;;13626:18;;;13619:51;;;;13718:34;13706:47;13701:2;13686:18;;13679:75;13487:3;13472:19;4823:40:0;13454:306:2;9998:1659:0;;;;;;:::i;:::-;;:::i;5379:42::-;;;;;5864:50;;;;;;:::i;:::-;;;;;;;;;;;;;;8938:667;;;;;;:::i;:::-;;:::i;:::-;;;13046:34:2;13034:47;;;13016:66;;13004:2;12989:18;8938:667:0;12971:117:2;5579:34:0;;;;;;;;1859:42:2;1847:55;;;1829:74;;1817:2;1802:18;5579:34:0;1784:125:2;15941:371:0;;;:::i;6243:30::-;;;;;5198:48;;;;;5102:32;;;;;;4982:54;;;;;;:::i;:::-;;;;;;;;;;;;;;5491:23;;;;;;;;;5719:49;;;;;;:::i;:::-;;;;;;;;;;;;;;7753:808;;;;;;:::i;:::-;;:::i;11815:694::-;;;:::i;13821:1399::-;13883:23;13868:12;:38;13860:102;;;;;;;11526:2:2;13860:102:0;;;11508:21:2;11565:2;11545:18;;;11538:30;11604:34;11584:18;;;11577:62;11675:21;11655:18;;;11648:49;11714:19;;13860:102:0;;;;;;;;;13987:10;13980:6;:18;;;;;;;;;;:30;;;:35;13972:128;;;;;;;6368:2:2;13972:128:0;;;6350:21:2;6407:2;6387:18;;;6380:30;6446:34;6426:18;;;6419:62;6517:34;6497:18;;;6490:62;6589:18;6568:19;;;6561:47;6625:19;;13972:128:0;6340:310:2;13972:128:0;14137:10;14151:1;14118:30;;;:18;:30;;;;;;14110:78;;;;;;;12358:2:2;14110:78:0;;;12340:21:2;12397:2;12377:18;;;12370:30;12436:33;12416:18;;;12409:61;12487:18;;14110:78:0;12330:181:2;14110:78:0;14940:17;;14926:10;14864:20;14907:30;;;:18;:30;;;;;;14864:20;;14940:17;14887:50;;:17;:50;:::i;:::-;:70;;;;:::i;:::-;14986:10;15000:1;14967:30;;;:18;:30;;;;;:34;14864:93;;-1:-1:-1;15095:38:0;;14864:93;15095:12;:38::i;:::-;13821:1399;:::o;9998:1659::-;6121:9;;6113:34;6121:9;6105:64;;;;;;;10422:2:2;6105:64:0;;;10404:21:2;10461:2;10441:18;;;10434:30;10500:19;10480:18;;;10473:47;10537:18;;6105:64:0;10394:167:2;6105:64:0;10264:48:::1;;::::0;::::1;:23;:48;:::i;:::-;10248:12;:64;;10240:126;;;::::0;::::1;::::0;;7218:2:2;10240:126:0::1;::::0;::::1;7200:21:2::0;7257:2;7237:18;;;7230:30;7296:34;7276:18;;;7269:62;7367:19;7347:18;;;7340:47;7404:19;;10240:126:0::1;7190:239:2::0;10240:126:0::1;10391:10;10384:6;:18:::0;;;::::1;::::0;;;;;;:30;::::1;;:35:::0;10376:63:::1;;;::::0;::::1;::::0;;7636:2:2;10376:63:0::1;::::0;::::1;7618:21:2::0;7675:2;7655:18;;;7648:30;7714:17;7694:18;;;7687:45;7749:18;;10376:63:0::1;7608:165:2::0;10376:63:0::1;10570:35;10608:66;10637:12;10651:22;10608:28;:66::i;:::-;10706:94;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;::::1;::::0;;::::1;;::::0;;::::1;::::0;;;10757:12:::1;10706:94;::::0;;::::1;::::0;;;;;;::::1;::::0;;::::1;::::0;;;;;;10817:10:::1;-1:-1:-1::0;10810:18:0;;;;;;;;;;:26;;;;;;;;;;;::::1;::::0;;;;;;;;;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;;;;;::::1;::::0;;;::::1;::::0;;;;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;11096:17:::1;:48:::0;;10706:94;;-1:-1:-1;10706:94:0;;11096:48:::1;::::0;10706:94;;11096:48:::1;:::i;:::-;::::0;;;-1:-1:-1;;11173:10:0::1;11154:30;::::0;;;:18:::1;:30;::::0;;;;:61;;::::1;::::0;::::1;::::0;:30;:61:::1;::::0;;;::::1;:::i;:::-;::::0;;;-1:-1:-1;;11443:9:0::1;::::0;:63:::1;::::0;;;;11466:10:::1;11443:63;::::0;::::1;2911:34:2::0;11486:4:0::1;2961:18:2::0;;;2954:43;3045:20;3033:33;;3013:18;;;3006:61;11443:9:0::1;::::0;;::::1;::::0;:22:::1;::::0;2823:18:2;;11443:63:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11435:109;;;::::0;::::1;::::0;;10768:2:2;11435:109:0::1;::::0;::::1;10750:21:2::0;10807:2;10787:18;;;10780:30;10846:34;10826:18;;;10819:62;10917:3;10897:18;;;10890:31;10938:19;;11435:109:0::1;10740:223:2::0;11435:109:0::1;11560:90;::::0;;11572:10:::1;3609:74:2::0;;3731:20;3719:33;;3714:2;3699:18;;3692:61;3801:8;3789:21;;3769:18;;;3762:49;3859:34;3847:47;;3842:2;3827:18;;3820:75;11560:90:0;;::::1;::::0;;;;3596:3:2;11560:90:0;;::::1;6179:1;;9998:1659:::0;;:::o;8938:667::-;9049:7;;9425:31;;;9367:55;9425:31;9367:21;;;:55;:::i;:::-;:89;;;;:::i;:::-;9337:119;;9496:1;9474:19;:23;9466:87;;;;;;;8390:2:2;9466:87:0;;;8372:21:2;8429:2;8409:18;;;8402:30;8468:34;8448:18;;;8441:62;8539:21;8519:18;;;8512:49;8578:19;;9466:87:0;8362:241:2;9466:87:0;9578:19;8938:667;-1:-1:-1;;;8938:667:0:o;15941:371::-;15977:18;15998:29;16016:10;15998:17;:29::i;:::-;15977:50;;16058:1;16045:10;:14;16037:61;;;;;;;5196:2:2;16037:61:0;;;5178:21:2;5235:2;5215:18;;;5208:30;5274:34;5254:18;;;5247:62;5345:4;5325:18;;;5318:32;5367:19;;16037:61:0;5168:224:2;16037:61:0;16124:10;16109:26;;;;:14;:26;;;;;:40;;16139:10;;16109:26;:40;;16139:10;;16109:40;:::i;:::-;;;;-1:-1:-1;;16167:43:0;;;;;16187:10;16167:43;;;3252:74:2;3342:18;;;3335:34;;;16167:10:0;:19;;;;;3225:18:2;;16167:43:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16159:85;;;;;;;4838:2:2;16159:85:0;;;4820:21:2;4877:2;4857:18;;;4850:30;4916:31;4896:18;;;4889:59;4965:18;;16159:85:0;4810:179:2;16159:85:0;16260:45;;;16282:10;3252:74:2;;3357:2;3342:18;;3335:34;;;16260:45:0;;3225:18:2;16260:45:0;;;;;;;;15941:371;:::o;7753:808::-;6360:10;:19;6374:5;6360:19;;6352:59;;;;;;;11170:2:2;6352:59:0;;;11152:21:2;11209:2;11189:18;;;11182:30;11248:29;11228:18;;;11221:57;11295:18;;6352:59:0;11142:177:2;6352:59:0;7867:9:::1;::::0;7859:34:::1;7867:9;7859:34:::0;7851:72:::1;;;::::0;::::1;::::0;;12718:2:2;7851:72:0::1;::::0;::::1;12700:21:2::0;12757:2;12737:18;;;12730:30;12796:27;12776:18;;;12769:55;12841:18;;7851:72:0::1;12690:175:2::0;7851:72:0::1;7941:26;::::0;::::1;7933:71;;;::::0;::::1;::::0;;9649:2:2;7933:71:0::1;::::0;::::1;9631:21:2::0;;;9668:18;;;9661:30;9727:34;9707:18;;;9700:62;9779:18;;7933:71:0::1;9621:182:2::0;7933:71:0::1;8014:9;:30:::0;;;::::1;;::::0;;::::1;::::0;;;::::1;::::0;;;8135:49:::1;::::0;;;;1847:55:2;;;8135:49:0::1;::::0;::::1;1829:74:2::0;8188:17:0::1;::::0;8142:10:::1;8135:28;::::0;::::1;::::0;1802:18:2;;8135:49:0::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:70;;8127:126;;;::::0;::::1;::::0;;10010:2:2;8127:126:0::1;::::0;::::1;9992:21:2::0;10049:2;10029:18;;;10022:30;10088:34;10068:18;;;10061:62;10159:13;10139:18;;;10132:41;10190:19;;8127:126:0::1;9982:233:2::0;8127:126:0::1;8271:64;::::0;;;;:28:::1;2167:15:2::0;;;8271:64:0::1;::::0;::::1;2149:34:2::0;8329:4:0::1;2199:18:2::0;;;2192:43;8339:17:0::1;::::0;8278:10:::1;8271:28:::0;;::::1;::::0;::::1;::::0;2061:18:2;;8271:64:0::1;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:85;;8263:139;;;::::0;::::1;::::0;;9239:2:2;8263:139:0::1;::::0;::::1;9221:21:2::0;9278:2;9258:18;;;9251:30;9317:34;9297:18;;;9290:62;9388:11;9368:18;;;9361:39;9417:19;;8263:139:0::1;9211:231:2::0;8263:139:0::1;8420:86;::::0;;;;:31:::1;2527:15:2::0;;;8420:86:0::1;::::0;::::1;2509:34:2::0;8481:4:0::1;2559:18:2::0;;;2552:43;8488:17:0::1;2611:18:2::0;;;2604:34;8427:10:0::1;8420:31;::::0;::::1;::::0;2421:18:2;;8420:86:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8412:142;;;::::0;::::1;::::0;;11946:2:2;8412:142:0::1;::::0;::::1;11928:21:2::0;11985:2;11965:18;;;11958:30;12024:34;12004:18;;;11997:62;12095:13;12075:18;;;12068:41;12126:19;;8412:142:0::1;11918:233:2::0;8412:142:0::1;7753:808:::0;;:::o;11815:694::-;6121:9;;6113:34;6121:9;6105:64;;;;;;;10422:2:2;6105:64:0;;;10404:21:2;10461:2;10441:18;;;10434:30;10500:19;10480:18;;;10473:47;10537:18;;6105:64:0;10394:167:2;6105:64:0;11897:10:::1;11869:18;11890::::0;;;::::1;::::0;;;;;;;;11869:39;;::::1;::::0;::::1;::::0;;;;::::1;::::0;::::1;::::0;;;;;::::1;;;::::0;;::::1;::::0;;;;;;::::1;;;::::0;;;;;;;;;;::::1;;;::::0;;;;;11969:61:::1;;;::::0;::::1;::::0;;6857:2:2;11969:61:0::1;::::0;::::1;6839:21:2::0;;;6876:18;;;6869:30;6935:34;6915:18;;;6908:62;6987:18;;11969:61:0::1;6829:182:2::0;11969:61:0::1;12064:5;:16;;;12049:31;;:12;:31;12041:104;;;::::0;::::1;::::0;;8810:2:2;12041:104:0::1;::::0;::::1;8792:21:2::0;8849:2;8829:18;;;8822:30;8888:34;8868:18;;;8861:62;8959:30;8939:18;;;8932:58;9007:19;;12041:104:0::1;8782:250:2::0;12041:104:0::1;12253:29;12276:5;12253:22;:29::i;:::-;12398:10;12391:6;:18:::0;;;::::1;::::0;;;;;;;12384:25;;;;12428:9:::1;::::0;:43;;;;;::::1;::::0;::::1;3252:74:2::0;;;;3342:18;;;3335:34;;;12391:18:0::1;12428:9;::::0;:18:::1;::::0;3225::2;;12428:43:0::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12420:82;;;::::0;::::1;::::0;;6013:2:2;12420:82:0::1;::::0;::::1;5995:21:2::0;6052:2;6032:18;;;6025:30;6091:28;6071:18;;;6064:56;6137:18;;12420:82:0::1;5985:176:2::0;15531:360:0;15639:1;15623:13;:17;15615:71;;;;;;;7980:2:2;15615:71:0;;;7962:21:2;8019:2;7999:18;;;7992:30;8058:34;8038:18;;;8031:62;8129:11;8109:18;;;8102:39;8158:19;;15615:71:0;7952:231:2;15615:71:0;15704:24;;;15696:82;;;;;;;5599:2:2;15696:82:0;;;5581:21:2;5638:2;5618:18;;;5611:30;5677:34;5657:18;;;5650:62;5748:15;5728:18;;;5721:43;5781:19;;15696:82:0;5571:235:2;15696:82:0;15788:25;;;;;;;:13;:25;;;;;;;;;:41;;;15844:40;;3252:74:2;;;3342:18;;3335:34;;;15844:40:0;;3225:18:2;15844:40:0;;;;;;;15531:360;;:::o;16426:157::-;16550:26;;;16496:7;16550:26;;;:14;:26;;;;;;16522:25;16565:10;16522:13;:25::i;:::-;:54;;;;:::i;:::-;16515:61;16426:157;-1:-1:-1;;16426:157:0:o;12610:938::-;12991:6;:28;;;12971:48;;:6;:17;;;:48;;;;:::i;:::-;12955:65;;:12;:65;12951:591;;;13142:34;;;;13127:10;13108:30;;;;:18;:30;;;;;:68;;;;;;;:30;;;:68;;;;;:::i;:::-;;;;;;;;13211:6;:34;;;13190:55;;:17;;:55;;;;;;;:::i;:::-;;;;-1:-1:-1;;13301:18:0;;13321:28;;;;13366:17;;;;13264:120;;13289:10;;13301:18;;13351:32;;;;:12;:32;:::i;:::-;13264:120;;;4165:42:2;4153:55;;;4135:74;;4257:20;4245:33;;;4240:2;4225:18;;4218:61;4327:8;4315:21;;;4295:18;;;4288:49;;;;4368:2;4353:18;;4346:34;4122:3;4107:19;13264:120:0;4089:297:2;12951:591:0;13446:18;;13466:28;;;;;13496:34;;;;;13420:111;;;13434:10;3609:74:2;;3731:20;3719:33;;;3699:18;;;3692:61;;;;3801:8;3789:21;;;3769:18;;;3762:49;;;;3859:34;3847:47;3827:18;;;3820:75;13420:111:0;;3596:3:2;3581:19;13420:111:0;3563:338:2;16807:486:0;16873:7;16912:41;16938:15;16912:23;:41;:::i;:::-;16896:12;:57;16892:395;;-1:-1:-1;17048:25:0;;;;;;:13;:25;;;;;;;16807:486::o;16892:395::-;17261:15;17219:38;17234:23;17219:12;:38;:::i;:::-;17190:25;;;;;;;:13;:25;;;;;;:68;;;;:::i;:::-;:86;;;;:::i;16892:395::-;16807:486;;;:::o;14:196:2:-;82:20;;142:42;131:54;;121:65;;111:2;;200:1;197;190:12;215:196;274:6;327:2;315:9;306:7;302:23;298:32;295:2;;;348:6;340;333:22;295:2;376:29;395:9;376:29;:::i;416:270::-;484:6;492;545:2;533:9;524:7;520:23;516:32;513:2;;;566:6;558;551:22;513:2;594:29;613:9;594:29;:::i;:::-;584:39;;642:38;676:2;665:9;661:18;642:38;:::i;:::-;632:48;;503:183;;;;;:::o;691:297::-;758:6;811:2;799:9;790:7;786:23;782:32;779:2;;;832:6;824;817:22;779:2;869:9;863:16;922:5;915:13;908:21;901:5;898:32;888:2;;949:6;941;934:22;993:194;1063:6;1116:2;1104:9;1095:7;1091:23;1087:32;1084:2;;;1137:6;1129;1122:22;1084:2;-1:-1:-1;1165:16:2;;1074:113;-1:-1:-1;1074:113:2:o;1192:486::-;1258:6;1266;1319:2;1307:9;1298:7;1294:23;1290:32;1287:2;;;1340:6;1332;1325:22;1287:2;1384:9;1371:23;1434:20;1427:5;1423:32;1416:5;1413:43;1403:2;;1475:6;1467;1460:22;1403:2;1503:5;-1:-1:-1;1560:2:2;1545:18;;1532:32;1608:8;1595:22;;1583:35;;1573:2;;1637:6;1629;1622:22;1573:2;1665:7;1655:17;;;1277:401;;;;;:::o;13765:128::-;13805:3;13836:1;13832:6;13829:1;13826:13;13823:2;;;13842:18;;:::i;:::-;-1:-1:-1;13878:9:2;;13813:80::o;13898:228::-;13937:3;13965:10;14002:2;13999:1;13995:10;14032:2;14029:1;14025:10;14063:3;14059:2;14055:12;14050:3;14047:21;14044:2;;;14071:18;;:::i;:::-;14107:13;;13945:181;-1:-1:-1;;;;13945:181:2:o;14131:274::-;14171:1;14197;14187:2;;14232:77;14229:1;14222:88;14333:4;14330:1;14323:15;14361:4;14358:1;14351:15;14187:2;-1:-1:-1;14390:9:2;;14177:228::o;14410:::-;14450:7;14576:1;14508:66;14504:74;14501:1;14498:81;14493:1;14486:9;14479:17;14475:105;14472:2;;;14583:18;;:::i;:::-;-1:-1:-1;14623:9:2;;14462:176::o;14643:125::-;14683:4;14711:1;14708;14705:8;14702:2;;;14716:18;;:::i;:::-;-1:-1:-1;14753:9:2;;14692:76::o;14773:184::-;14825:77;14822:1;14815:88;14922:4;14919:1;14912:15;14946:4;14943:1;14936:15"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1531800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"calculateStakingRewardPoints(uint72,uint24)": "infinite",
								"getRewards()": "infinite",
								"grantedTokens(address)": "1240",
								"lockTokens(uint72,uint24)": "infinite",
								"oilerToken()": "infinite",
								"owner()": "infinite",
								"poolToken()": "1080",
								"release()": "infinite",
								"releasedTokens(address)": "1241",
								"rewardPointsEarned(address)": "1241",
								"setPoolToken(address,address)": "infinite",
								"stakes(address)": "1443",
								"stakingFundAmount()": "infinite",
								"stakingProgramEndsBlock()": "infinite",
								"totalRewardPoints()": "1073",
								"unlockTokens()": "infinite",
								"vestingDuration()": "infinite"
							},
							"internal": {
								"_grantTokens(address,uint256)": "infinite",
								"_punishEarlyWithdrawal(struct Staking.Stake memory)": "infinite",
								"_releasableAmount(address)": "infinite",
								"_vestedAmount(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH",
									"source": 0,
									"value": "120"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 7116,
									"end": 7669,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7271,
									"end": 7293,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7271,
									"end": 7293,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 891,
									"end": 893,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 873,
									"end": 894,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 930,
									"end": 932,
									"name": "PUSH",
									"source": 2,
									"value": "1C"
								},
								{
									"begin": 910,
									"end": 928,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 910,
									"end": 928,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 910,
									"end": 928,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 903,
									"end": 933,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 969,
									"end": 999,
									"name": "PUSH",
									"source": 2,
									"value": "4F776E657220616464726573732063616E6E6F74206265207A65726F00000000"
								},
								{
									"begin": 949,
									"end": 967,
									"name": "PUSH",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 949,
									"end": 967,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 949,
									"end": 967,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 942,
									"end": 1000,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1017,
									"end": 1035,
									"name": "PUSH",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 1017,
									"end": 1035,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 7263,
									"end": 7326,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 7336,
									"end": 7350,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 7336,
									"end": 7350,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7336,
									"end": 7350,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7336,
									"end": 7350,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 7336,
									"end": 7350,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7336,
									"end": 7350,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 7336,
									"end": 7350,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7369,
									"end": 7396,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 7369,
									"end": 7396,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7361,
									"end": 7434,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 7361,
									"end": 7434,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7361,
									"end": 7434,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7361,
									"end": 7434,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7361,
									"end": 7434,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7361,
									"end": 7434,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1248,
									"end": 1250,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 7361,
									"end": 7434,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 7361,
									"end": 7434,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7361,
									"end": 7434,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1230,
									"end": 1251,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1287,
									"end": 1289,
									"name": "PUSH",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 1267,
									"end": 1285,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1267,
									"end": 1285,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1267,
									"end": 1285,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1260,
									"end": 1290,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1326,
									"end": 1360,
									"name": "PUSH",
									"source": 2,
									"value": "6F696C6572546F6B656E20616464726573732063616E6E6F74206265207A6572"
								},
								{
									"begin": 1306,
									"end": 1324,
									"name": "PUSH",
									"source": 2,
									"value": "44"
								},
								{
									"begin": 1306,
									"end": 1324,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1306,
									"end": 1324,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1299,
									"end": 1361,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "6F"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1377,
									"end": 1395,
									"name": "PUSH",
									"source": 2,
									"value": "64"
								},
								{
									"begin": 1377,
									"end": 1395,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1377,
									"end": 1395,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1370,
									"end": 1401,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1418,
									"end": 1437,
									"name": "PUSH",
									"source": 2,
									"value": "84"
								},
								{
									"begin": 1418,
									"end": 1437,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 7361,
									"end": 7434,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 1220,
									"end": 1443,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 7361,
									"end": 7434,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 7361,
									"end": 7434,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "60"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 7444,
									"end": 7476,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 7444,
									"end": 7476,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 7444,
									"end": 7476,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7444,
									"end": 7476,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 7444,
									"end": 7476,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7444,
									"end": 7476,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 7444,
									"end": 7476,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7521,
									"end": 7560,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 7536,
									"end": 7560,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 7521,
									"end": 7533,
									"name": "NUMBER",
									"source": 0
								},
								{
									"begin": 7521,
									"end": 7560,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 7521,
									"end": 7560,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 7521,
									"end": 7560,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 7521,
									"end": 7560,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7495,
									"end": 7560,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 7495,
									"end": 7560,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 7570,
									"end": 7604,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 7570,
									"end": 7604,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7624,
									"end": 7662,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 7624,
									"end": 7662,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 115,
									"end": 117,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 115,
									"end": 117,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 115,
									"end": 117,
									"name": "tag",
									"source": 2,
									"value": "18"
								},
								{
									"begin": 115,
									"end": 117,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 74,
									"end": 191,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 74,
									"end": 191,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 74,
									"end": 191,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 74,
									"end": 191,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 196,
									"end": 684,
									"name": "tag",
									"source": 2,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 684,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 302,
									"end": 308,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 316,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 318,
									"end": 324,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 326,
									"end": 332,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 334,
									"end": 340,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 387,
									"end": 390,
									"name": "PUSH",
									"source": 2,
									"value": "A0"
								},
								{
									"begin": 375,
									"end": 384,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 366,
									"end": 373,
									"name": "DUP9",
									"source": 2
								},
								{
									"begin": 362,
									"end": 385,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 358,
									"end": 391,
									"name": "SLT",
									"source": 2
								},
								{
									"begin": 355,
									"end": 357,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 355,
									"end": 357,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 355,
									"end": 357,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 409,
									"end": 415,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 401,
									"end": 407,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 394,
									"end": 416,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 355,
									"end": 357,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 355,
									"end": 357,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 437,
									"end": 477,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 467,
									"end": 476,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 437,
									"end": 477,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 437,
									"end": 477,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 437,
									"end": 477,
									"name": "tag",
									"source": 2,
									"value": "21"
								},
								{
									"begin": 437,
									"end": 477,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 427,
									"end": 477,
									"name": "SWAP5",
									"source": 2
								},
								{
									"begin": 427,
									"end": 477,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 517,
									"end": 519,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 506,
									"end": 515,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 502,
									"end": 520,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 496,
									"end": 521,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 486,
									"end": 521,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 486,
									"end": 521,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 561,
									"end": 563,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 550,
									"end": 559,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 546,
									"end": 564,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 540,
									"end": 565,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 530,
									"end": 565,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 530,
									"end": 565,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 605,
									"end": 607,
									"name": "PUSH",
									"source": 2,
									"value": "60"
								},
								{
									"begin": 594,
									"end": 603,
									"name": "DUP7",
									"source": 2
								},
								{
									"begin": 590,
									"end": 608,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 584,
									"end": 609,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 574,
									"end": 609,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 574,
									"end": 609,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 628,
									"end": 678,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 673,
									"end": 676,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 662,
									"end": 671,
									"name": "DUP8",
									"source": 2
								},
								{
									"begin": 658,
									"end": 677,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 628,
									"end": 678,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "16"
								},
								{
									"begin": 628,
									"end": 678,
									"name": "JUMP",
									"source": 2,
									"value": "[in]"
								},
								{
									"begin": 628,
									"end": 678,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 628,
									"end": 678,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 618,
									"end": 678,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 618,
									"end": 678,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 345,
									"end": 684,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 345,
									"end": 684,
									"name": "SWAP6",
									"source": 2
								},
								{
									"begin": 345,
									"end": 684,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 345,
									"end": 684,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 345,
									"end": 684,
									"name": "SWAP6",
									"source": 2
								},
								{
									"begin": 345,
									"end": 684,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 345,
									"end": 684,
									"name": "SWAP4",
									"source": 2
								},
								{
									"begin": 345,
									"end": 684,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 345,
									"end": 684,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 1448,
									"end": 1677,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 1448,
									"end": 1677,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1488,
									"end": 1491,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1519,
									"end": 1520,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1515,
									"end": 1521,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 1512,
									"end": 1513,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 1509,
									"end": 1522,
									"name": "GT",
									"source": 2
								},
								{
									"begin": 1506,
									"end": 1508,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1506,
									"end": 1508,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 1506,
									"end": 1508,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1545,
									"end": 1578,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1545,
									"end": 1578,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1601,
									"end": 1605,
									"name": "PUSH",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 1598,
									"end": 1599,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 1591,
									"end": 1606,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1631,
									"end": 1635,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 1552,
									"end": 1555,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1619,
									"end": 1636,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1506,
									"end": 1508,
									"name": "tag",
									"source": 2,
									"value": "26"
								},
								{
									"begin": 1506,
									"end": 1508,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1662,
									"end": 1671,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 1662,
									"end": 1671,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1496,
									"end": 1677,
									"name": "JUMP",
									"source": 2,
									"value": "[out]"
								},
								{
									"begin": 1496,
									"end": 1677,
									"name": "tag",
									"source": 2,
									"value": "15"
								},
								{
									"begin": 1496,
									"end": 1677,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH",
									"source": 0,
									"value": "A0"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH",
									"source": 0,
									"value": "C0"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH",
									"source": 0,
									"value": "60"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "74"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "53"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "32"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "ASSIGNIMMUTABLE",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2612,
									"end": 17827,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b213dd3def8354c85124c77cb7c25d47bd8a5643391e9b3c6ac44ce1c6270fe564736f6c63430008040033",
									".code": [
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "86D1A69F"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "C959360B"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "E0E4A722"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "E0E4A722"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "F6FFAB88"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "F968F493"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "C959360B"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "CBDF382C"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "86D1A69F"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "BC0925AE"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "C2E8CAF6"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "52946B04"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "52946B04"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "70FF852B"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "798633B9"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "81E9207D"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "572B0CC"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "1514617E"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "16934FC4"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "378592C8"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2612,
											"end": 17827,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 15220,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 13821,
											"end": 15220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 15220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13821,
											"end": 15220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 13821,
											"end": 15220,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13821,
											"end": 15220,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 13821,
											"end": 15220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 15220,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13239,
											"end": 13264,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13239,
											"end": 13264,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13239,
											"end": 13264,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13227,
											"end": 13229,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13212,
											"end": 13230,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5976,
											"end": 6016,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "1000000000000000000"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFF"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "1000000000000000000000000"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13530,
											"end": 13550,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13518,
											"end": 13551,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13518,
											"end": 13551,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 13518,
											"end": 13551,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13500,
											"end": 13552,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13500,
											"end": 13552,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13600,
											"end": 13608,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFF"
										},
										{
											"begin": 13588,
											"end": 13609,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13588,
											"end": 13609,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 13588,
											"end": 13609,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13583,
											"end": 13585,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13568,
											"end": 13586,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 13568,
											"end": 13586,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13561,
											"end": 13610,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13658,
											"end": 13668,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13646,
											"end": 13669,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13646,
											"end": 13669,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13646,
											"end": 13669,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13626,
											"end": 13644,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13626,
											"end": 13644,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13626,
											"end": 13644,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13619,
											"end": 13670,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13619,
											"end": 13670,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13619,
											"end": 13670,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13619,
											"end": 13670,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13718,
											"end": 13752,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13706,
											"end": 13753,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13701,
											"end": 13703,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 13686,
											"end": 13704,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13686,
											"end": 13704,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13679,
											"end": 13754,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13487,
											"end": 13490,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 13472,
											"end": 13491,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4823,
											"end": 4863,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 13454,
											"end": 13760,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5379,
											"end": 5421,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5379,
											"end": 5421,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5421,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5379,
											"end": 5421,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5379,
											"end": 5421,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5379,
											"end": 5421,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5864,
											"end": 5914,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13046,
											"end": 13080,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13034,
											"end": 13081,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13034,
											"end": 13081,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 13034,
											"end": 13081,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 13016,
											"end": 13082,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 13016,
											"end": 13082,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13004,
											"end": 13006,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12989,
											"end": 13007,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 12971,
											"end": 13088,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1859,
											"end": 1901,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1847,
											"end": 1902,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1902,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1902,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1903,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1829,
											"end": 1903,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1817,
											"end": 1819,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1802,
											"end": 1820,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5579,
											"end": 5613,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 1784,
											"end": 1909,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15941,
											"end": 16312,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 15941,
											"end": 16312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 16312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 15941,
											"end": 16312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 15941,
											"end": 16312,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 6243,
											"end": 6273,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 6243,
											"end": 6273,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6243,
											"end": 6273,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 6243,
											"end": 6273,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6243,
											"end": 6273,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6243,
											"end": 6273,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5198,
											"end": 5246,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 5198,
											"end": 5246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5198,
											"end": 5246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5198,
											"end": 5246,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 5198,
											"end": 5246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5198,
											"end": 5246,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5102,
											"end": 5134,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 5102,
											"end": 5134,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5102,
											"end": 5134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5102,
											"end": 5134,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5102,
											"end": 5134,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5102,
											"end": 5134,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5102,
											"end": 5134,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4982,
											"end": 5036,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5491,
											"end": 5514,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5719,
											"end": 5768,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11815,
											"end": 12509,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 11815,
											"end": 12509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11815,
											"end": 12509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 11815,
											"end": 12509,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 11815,
											"end": 12509,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13821,
											"end": 15220,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 13821,
											"end": 15220,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13883,
											"end": 13906,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 13868,
											"end": 13880,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 13868,
											"end": 13906,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11526,
											"end": 11528,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11508,
											"end": 11529,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11565,
											"end": 11567,
											"name": "PUSH",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 11545,
											"end": 11563,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 11545,
											"end": 11563,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11545,
											"end": 11563,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11538,
											"end": 11568,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11604,
											"end": 11638,
											"name": "PUSH",
											"source": 2,
											"value": "596F752063616E206F6E6C792067657420526577617264732061667465722053"
										},
										{
											"begin": 11584,
											"end": 11602,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 11584,
											"end": 11602,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11584,
											"end": 11602,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11577,
											"end": 11639,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11675,
											"end": 11696,
											"name": "PUSH",
											"source": 2,
											"value": "74616B696E672050726F6772616D20656E647300000000000000000000000000"
										},
										{
											"begin": 11655,
											"end": 11673,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 11655,
											"end": 11673,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11655,
											"end": 11673,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11648,
											"end": 11697,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11714,
											"end": 11733,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 11714,
											"end": 11733,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "tag",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 13860,
											"end": 13962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13987,
											"end": 13997,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 13986,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13980,
											"end": 13998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 13998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 13998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 13998,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13980,
											"end": 13998,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 13998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 13998,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 13998,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13980,
											"end": 13998,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 13998,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13980,
											"end": 14010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13980,
											"end": 14015,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13972,
											"end": 14100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 13972,
											"end": 14100,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13972,
											"end": 14100,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13972,
											"end": 14100,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13972,
											"end": 14100,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13972,
											"end": 14100,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13972,
											"end": 14100,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6368,
											"end": 6370,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 13972,
											"end": 14100,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13972,
											"end": 14100,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13972,
											"end": 14100,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6350,
											"end": 6371,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6407,
											"end": 6409,
											"name": "PUSH",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 6387,
											"end": 6405,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6387,
											"end": 6405,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6387,
											"end": 6405,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6380,
											"end": 6410,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6446,
											"end": 6480,
											"name": "PUSH",
											"source": 2,
											"value": "596F75207374696C6C20686176652061207374616B65206C6F636B6564202D20"
										},
										{
											"begin": 6426,
											"end": 6444,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 6426,
											"end": 6444,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6426,
											"end": 6444,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6419,
											"end": 6481,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6517,
											"end": 6551,
											"name": "PUSH",
											"source": 2,
											"value": "706C6561736520756E6C6F636B2066697273742C20646F6E2774206C65617665"
										},
										{
											"begin": 6497,
											"end": 6515,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 6497,
											"end": 6515,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6497,
											"end": 6515,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6490,
											"end": 6552,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6589,
											"end": 6607,
											"name": "PUSH",
											"source": 2,
											"value": "2066726565206D6F6E6579206865726500000000000000000000000000000000"
										},
										{
											"begin": 6568,
											"end": 6587,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 6568,
											"end": 6587,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6568,
											"end": 6587,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6561,
											"end": 6608,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6625,
											"end": 6644,
											"name": "PUSH",
											"source": 2,
											"value": "A4"
										},
										{
											"begin": 6625,
											"end": 6644,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13972,
											"end": 14100,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6340,
											"end": 6650,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 13972,
											"end": 14100,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 13972,
											"end": 14100,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14137,
											"end": 14147,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14151,
											"end": 14152,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14118,
											"end": 14148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14118,
											"end": 14148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14118,
											"end": 14148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14118,
											"end": 14136,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14118,
											"end": 14148,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14118,
											"end": 14148,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14118,
											"end": 14148,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14118,
											"end": 14148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14118,
											"end": 14148,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14118,
											"end": 14148,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14110,
											"end": 14188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 14110,
											"end": 14188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 14110,
											"end": 14188,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14110,
											"end": 14188,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 14110,
											"end": 14188,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14110,
											"end": 14188,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14110,
											"end": 14188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12358,
											"end": 12360,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 14110,
											"end": 14188,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 14110,
											"end": 14188,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 14110,
											"end": 14188,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12340,
											"end": 12361,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12397,
											"end": 12399,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 12377,
											"end": 12395,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 12377,
											"end": 12395,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12377,
											"end": 12395,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12370,
											"end": 12400,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12436,
											"end": 12469,
											"name": "PUSH",
											"source": 2,
											"value": "596F7520646F6E2774206861766520616E7920726577617264506F696E747300"
										},
										{
											"begin": 12416,
											"end": 12434,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 12416,
											"end": 12434,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12416,
											"end": 12434,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12409,
											"end": 12470,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12487,
											"end": 12505,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 12487,
											"end": 12505,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14110,
											"end": 14188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 12330,
											"end": 12511,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 14110,
											"end": 14188,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 14110,
											"end": 14188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14957,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 14940,
											"end": 14957,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14926,
											"end": 14936,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 14864,
											"end": 14884,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14907,
											"end": 14937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14937,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14925,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14907,
											"end": 14937,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14907,
											"end": 14937,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14937,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14907,
											"end": 14937,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14937,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14907,
											"end": 14937,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 14864,
											"end": 14884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14864,
											"end": 14884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14940,
											"end": 14957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 14887,
											"end": 14937,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14904,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 14887,
											"end": 14937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 14887,
											"end": 14937,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14887,
											"end": 14937,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 14887,
											"end": 14937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 14887,
											"end": 14957,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14887,
											"end": 14957,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 14887,
											"end": 14957,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 14887,
											"end": 14957,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 14887,
											"end": 14957,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 14986,
											"end": 14996,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15000,
											"end": 15001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 14967,
											"end": 14997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14967,
											"end": 14997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14967,
											"end": 14997,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14967,
											"end": 14985,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 14967,
											"end": 14997,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 14967,
											"end": 14997,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 14967,
											"end": 14997,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 14967,
											"end": 14997,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 14967,
											"end": 14997,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 14967,
											"end": 15001,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 14864,
											"end": 14957,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14864,
											"end": 14957,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15095,
											"end": 15133,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 15095,
											"end": 15133,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 14864,
											"end": 14957,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15095,
											"end": 15107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15095,
											"end": 15133,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15095,
											"end": 15133,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 15095,
											"end": 15133,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 15220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13821,
											"end": 15220,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6121,
											"end": 6130,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6121,
											"end": 6130,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6113,
											"end": 6147,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6121,
											"end": 6130,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10422,
											"end": 10424,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10404,
											"end": 10425,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10461,
											"end": 10463,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 10441,
											"end": 10459,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 10441,
											"end": 10459,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10441,
											"end": 10459,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10434,
											"end": 10464,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10500,
											"end": 10519,
											"name": "PUSH",
											"source": 2,
											"value": "706F6F6C546F6B656E206E6F7420736574000000000000000000000000000000"
										},
										{
											"begin": 10480,
											"end": 10498,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 10480,
											"end": 10498,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10480,
											"end": 10498,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10473,
											"end": 10520,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10537,
											"end": 10555,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 10537,
											"end": 10555,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 10394,
											"end": 10561,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10264,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 10264,
											"end": 10312,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFF"
										},
										{
											"begin": 10264,
											"end": 10312,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10264,
											"end": 10312,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10264,
											"end": 10287,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 10264,
											"end": 10312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 10264,
											"end": 10312,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10264,
											"end": 10312,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 10264,
											"end": 10312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10260,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10312,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 10248,
											"end": 10312,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 10240,
											"end": 10366,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10366,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10240,
											"end": 10366,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10366,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10240,
											"end": 10366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10366,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7218,
											"end": 7220,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10240,
											"end": 10366,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10240,
											"end": 10366,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10240,
											"end": 10366,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7200,
											"end": 7221,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7257,
											"end": 7259,
											"name": "PUSH",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 7237,
											"end": 7255,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 7237,
											"end": 7255,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7237,
											"end": 7255,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7230,
											"end": 7260,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7296,
											"end": 7330,
											"name": "PUSH",
											"source": 2,
											"value": "596F7572206C6F636B20706572696F642065786365656473205374616B696E67"
										},
										{
											"begin": 7276,
											"end": 7294,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 7276,
											"end": 7294,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7276,
											"end": 7294,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7269,
											"end": 7331,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7367,
											"end": 7386,
											"name": "PUSH",
											"source": 2,
											"value": "2050726F6772616D206475726174696F6E000000000000000000000000000000"
										},
										{
											"begin": 7347,
											"end": 7365,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 7347,
											"end": 7365,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7347,
											"end": 7365,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7340,
											"end": 7387,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7404,
											"end": 7423,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 7404,
											"end": 7423,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10240,
											"end": 10366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 7190,
											"end": 7429,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10240,
											"end": 10366,
											"name": "tag",
											"source": 0,
											"value": "108"
										},
										{
											"begin": 10240,
											"end": 10366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10391,
											"end": 10401,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10390,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10384,
											"end": 10402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10402,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10384,
											"end": 10402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10384,
											"end": 10402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10402,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10414,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10414,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10384,
											"end": 10414,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10384,
											"end": 10419,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10376,
											"end": 10439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 10376,
											"end": 10439,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10376,
											"end": 10439,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10376,
											"end": 10439,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10376,
											"end": 10439,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10376,
											"end": 10439,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10376,
											"end": 10439,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7636,
											"end": 7638,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 10376,
											"end": 10439,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10376,
											"end": 10439,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10376,
											"end": 10439,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7618,
											"end": 7639,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7675,
											"end": 7677,
											"name": "PUSH",
											"source": 2,
											"value": "F"
										},
										{
											"begin": 7655,
											"end": 7673,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 7655,
											"end": 7673,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7655,
											"end": 7673,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7648,
											"end": 7678,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7714,
											"end": 7731,
											"name": "PUSH",
											"source": 2,
											"value": "416C7265616479207374616B696E670000000000000000000000000000000000"
										},
										{
											"begin": 7694,
											"end": 7712,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 7694,
											"end": 7712,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7694,
											"end": 7712,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7687,
											"end": 7732,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 7749,
											"end": 7767,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 7749,
											"end": 7767,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10376,
											"end": 10439,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 7608,
											"end": 7773,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 10376,
											"end": 10439,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 10376,
											"end": 10439,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10570,
											"end": 10605,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10608,
											"end": 10674,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 10637,
											"end": 10649,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10651,
											"end": 10673,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10608,
											"end": 10636,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 10608,
											"end": 10674,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 10608,
											"end": 10674,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 10608,
											"end": 10674,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFF"
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10757,
											"end": 10769,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10817,
											"end": 10827,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 10810,
											"end": 10828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10828,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10828,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10828,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10828,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10828,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10828,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10828,
											"name": "SWAP10",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10828,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10828,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "DUP10",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP12",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP10",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000000000000000000"
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "PUSH",
											"source": 0,
											"value": "1000000000000000000"
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "PUSH",
											"source": 0,
											"value": "1000000000000000000000000"
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000"
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10810,
											"end": 10836,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11113,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 11096,
											"end": 11144,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11144,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 11096,
											"end": 11144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 10706,
											"end": 10800,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11144,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 11096,
											"end": 11144,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11096,
											"end": 11144,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 11096,
											"end": 11144,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11144,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11144,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 11144,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11173,
											"end": 11183,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11154,
											"end": 11184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11172,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 11154,
											"end": 11184,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11154,
											"end": 11184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11154,
											"end": 11184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11184,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11154,
											"end": 11215,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11443,
											"end": 11452,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 11443,
											"end": 11452,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11466,
											"end": 11476,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2911,
											"end": 2945,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11486,
											"end": 11490,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2961,
											"end": 2979,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2961,
											"end": 2979,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2961,
											"end": 2979,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2954,
											"end": 2997,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3045,
											"end": 3065,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3033,
											"end": 3066,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3033,
											"end": 3066,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3013,
											"end": 3031,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3013,
											"end": 3031,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3013,
											"end": 3031,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3006,
											"end": 3067,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11443,
											"end": 11452,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11443,
											"end": 11452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11452,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11452,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11465,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 11443,
											"end": 11465,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2823,
											"end": 2841,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2823,
											"end": 2841,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 11443,
											"end": 11506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 11435,
											"end": 11544,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11544,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11435,
											"end": 11544,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11544,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11435,
											"end": 11544,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11544,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10768,
											"end": 10770,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11435,
											"end": 11544,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11435,
											"end": 11544,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11435,
											"end": 11544,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10750,
											"end": 10771,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10807,
											"end": 10809,
											"name": "PUSH",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 10787,
											"end": 10805,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 10787,
											"end": 10805,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10787,
											"end": 10805,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10780,
											"end": 10810,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10846,
											"end": 10880,
											"name": "PUSH",
											"source": 2,
											"value": "5472616E7366657246726F6D206F6620706F6F6C546F6B656E73206661696C65"
										},
										{
											"begin": 10826,
											"end": 10844,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 10826,
											"end": 10844,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10826,
											"end": 10844,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10819,
											"end": 10881,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10917,
											"end": 10920,
											"name": "PUSH",
											"source": 2,
											"value": "6400000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10897,
											"end": 10915,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 10897,
											"end": 10915,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10897,
											"end": 10915,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10890,
											"end": 10921,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10938,
											"end": 10957,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 10938,
											"end": 10957,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11435,
											"end": 11544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 10740,
											"end": 10963,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11435,
											"end": 11544,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 11435,
											"end": 11544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11650,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11560,
											"end": 11650,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11650,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11572,
											"end": 11582,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3683,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3609,
											"end": 3683,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3751,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3719,
											"end": 3752,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3719,
											"end": 3752,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3714,
											"end": 3716,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3699,
											"end": 3717,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3717,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3753,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3801,
											"end": 3809,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFF"
										},
										{
											"begin": 3789,
											"end": 3810,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 3789,
											"end": 3810,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3769,
											"end": 3787,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3769,
											"end": 3787,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3769,
											"end": 3787,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3762,
											"end": 3811,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3859,
											"end": 3893,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3842,
											"end": 3844,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3895,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11560,
											"end": 11650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11650,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11650,
											"name": "PUSH",
											"source": 0,
											"value": "E7DBEA143058F90BE7A1644E539342C25DDC5379868FE922BAB596DE99DEBF41"
										},
										{
											"begin": 11560,
											"end": 11650,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11650,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3596,
											"end": 3599,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 11560,
											"end": 11650,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11560,
											"end": 11650,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6179,
											"end": 6180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9998,
											"end": 11657,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9049,
											"end": 9056,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9049,
											"end": 9056,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 9425,
											"end": 9456,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFF"
										},
										{
											"begin": 9425,
											"end": 9456,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 9425,
											"end": 9456,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9367,
											"end": 9422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 9425,
											"end": 9456,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9367,
											"end": 9388,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9367,
											"end": 9388,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 9367,
											"end": 9388,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 9367,
											"end": 9422,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 9367,
											"end": 9422,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9367,
											"end": 9422,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 9367,
											"end": 9422,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9367,
											"end": 9456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 9367,
											"end": 9456,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 9367,
											"end": 9456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9367,
											"end": 9456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 9367,
											"end": 9456,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 9367,
											"end": 9456,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 9367,
											"end": 9456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9337,
											"end": 9456,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 9337,
											"end": 9456,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 9496,
											"end": 9497,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 9474,
											"end": 9493,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9474,
											"end": 9497,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 9466,
											"end": 9553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 9466,
											"end": 9553,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 9466,
											"end": 9553,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 9466,
											"end": 9553,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 9466,
											"end": 9553,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9466,
											"end": 9553,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 9466,
											"end": 9553,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8390,
											"end": 8392,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 9466,
											"end": 9553,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 9466,
											"end": 9553,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 9466,
											"end": 9553,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8372,
											"end": 8393,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8429,
											"end": 8431,
											"name": "PUSH",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 8409,
											"end": 8427,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 8409,
											"end": 8427,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8409,
											"end": 8427,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8402,
											"end": 8432,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8468,
											"end": 8502,
											"name": "PUSH",
											"source": 2,
											"value": "4E65697468657220746F6B656E416D6F756E74206E6F72206C6F636B696E6750"
										},
										{
											"begin": 8448,
											"end": 8466,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 8448,
											"end": 8466,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8448,
											"end": 8466,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8441,
											"end": 8503,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8539,
											"end": 8560,
											"name": "PUSH",
											"source": 2,
											"value": "6572696F6420636F756C646E2774206265203000000000000000000000000000"
										},
										{
											"begin": 8519,
											"end": 8537,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 8519,
											"end": 8537,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8519,
											"end": 8537,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8512,
											"end": 8561,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8578,
											"end": 8597,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 8578,
											"end": 8597,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9466,
											"end": 9553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 8362,
											"end": 8603,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 9466,
											"end": 9553,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 9466,
											"end": 9553,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9578,
											"end": 9597,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8938,
											"end": 9605,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 15941,
											"end": 16312,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 15941,
											"end": 16312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15977,
											"end": 15995,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15998,
											"end": 16027,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 16016,
											"end": 16026,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 15998,
											"end": 16015,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 15998,
											"end": 16027,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 15998,
											"end": 16027,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 15998,
											"end": 16027,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15977,
											"end": 16027,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16058,
											"end": 16059,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16045,
											"end": 16055,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16045,
											"end": 16059,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 16037,
											"end": 16098,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16098,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16037,
											"end": 16098,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16098,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16037,
											"end": 16098,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16098,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5196,
											"end": 5198,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16037,
											"end": 16098,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16037,
											"end": 16098,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16037,
											"end": 16098,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5178,
											"end": 5199,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5235,
											"end": 5237,
											"name": "PUSH",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 5215,
											"end": 5233,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5215,
											"end": 5233,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5215,
											"end": 5233,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5208,
											"end": 5238,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5274,
											"end": 5308,
											"name": "PUSH",
											"source": 2,
											"value": "56657374696E672072656C656173653A206E6F20746F6B656E73206172652064"
										},
										{
											"begin": 5254,
											"end": 5272,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5254,
											"end": 5272,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5254,
											"end": 5272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5247,
											"end": 5309,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5345,
											"end": 5349,
											"name": "PUSH",
											"source": 2,
											"value": "7565000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5325,
											"end": 5343,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5325,
											"end": 5343,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5325,
											"end": 5343,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5318,
											"end": 5350,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5367,
											"end": 5386,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 5367,
											"end": 5386,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16098,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 5168,
											"end": 5392,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16037,
											"end": 16098,
											"name": "tag",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 16037,
											"end": 16098,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16124,
											"end": 16134,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16135,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16109,
											"end": 16135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16123,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 16109,
											"end": 16135,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16109,
											"end": 16135,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16135,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16109,
											"end": 16135,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16135,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16149,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16149,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16139,
											"end": 16149,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16139,
											"end": 16149,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 16109,
											"end": 16149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16139,
											"end": 16149,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 16139,
											"end": 16149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16149,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 16109,
											"end": 16149,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16109,
											"end": 16149,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 16109,
											"end": 16149,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16149,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16109,
											"end": 16149,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16187,
											"end": 16197,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3252,
											"end": 3326,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3342,
											"end": 3360,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3342,
											"end": 3360,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3342,
											"end": 3360,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3335,
											"end": 3369,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3335,
											"end": 3369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3335,
											"end": 3369,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16167,
											"end": 16177,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16167,
											"end": 16186,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16167,
											"end": 16186,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16186,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 16167,
											"end": 16186,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3243,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3225,
											"end": 3243,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "tag",
											"source": 0,
											"value": "145"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "tag",
											"source": 0,
											"value": "148"
										},
										{
											"begin": 16167,
											"end": 16210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16159,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 16159,
											"end": 16244,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 16159,
											"end": 16244,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16159,
											"end": 16244,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16159,
											"end": 16244,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16159,
											"end": 16244,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16159,
											"end": 16244,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4838,
											"end": 4840,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 16159,
											"end": 16244,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 16159,
											"end": 16244,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 16159,
											"end": 16244,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4820,
											"end": 4841,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4877,
											"end": 4879,
											"name": "PUSH",
											"source": 2,
											"value": "1D"
										},
										{
											"begin": 4857,
											"end": 4875,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 4857,
											"end": 4875,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4857,
											"end": 4875,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4850,
											"end": 4880,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4916,
											"end": 4947,
											"name": "PUSH",
											"source": 2,
											"value": "526577617264206F696C657273207472616E73666572206661696C6564000000"
										},
										{
											"begin": 4896,
											"end": 4914,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 4896,
											"end": 4914,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4896,
											"end": 4914,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4889,
											"end": 4948,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4965,
											"end": 4983,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 4965,
											"end": 4983,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16159,
											"end": 16244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 4810,
											"end": 4989,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16159,
											"end": 16244,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 16159,
											"end": 16244,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16260,
											"end": 16305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16260,
											"end": 16305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16260,
											"end": 16305,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16282,
											"end": 16292,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3252,
											"end": 3326,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3252,
											"end": 3326,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3357,
											"end": 3359,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3342,
											"end": 3360,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3342,
											"end": 3360,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3335,
											"end": 3369,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3335,
											"end": 3369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3335,
											"end": 3369,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 16260,
											"end": 16305,
											"name": "PUSH",
											"source": 0,
											"value": "769D4212C4FBFAA012A896B49E0F3BB14D32DD0D60CE1A13D357EE6B69DB77C2"
										},
										{
											"begin": 16260,
											"end": 16305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3243,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 16260,
											"end": 16305,
											"name": "tag",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 16260,
											"end": 16305,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16260,
											"end": 16305,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16260,
											"end": 16305,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 16260,
											"end": 16305,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 16260,
											"end": 16305,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16260,
											"end": 16305,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 16260,
											"end": 16305,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16260,
											"end": 16305,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 16312,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15941,
											"end": 16312,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6360,
											"end": 6370,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 6360,
											"end": 6379,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6374,
											"end": 6379,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6360,
											"end": 6379,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6360,
											"end": 6379,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 6352,
											"end": 6411,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6411,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6352,
											"end": 6411,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6411,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6352,
											"end": 6411,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6411,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11170,
											"end": 11172,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6352,
											"end": 6411,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6352,
											"end": 6411,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6352,
											"end": 6411,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11152,
											"end": 11173,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11209,
											"end": 11211,
											"name": "PUSH",
											"source": 2,
											"value": "1B"
										},
										{
											"begin": 11189,
											"end": 11207,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 11189,
											"end": 11207,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11189,
											"end": 11207,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11182,
											"end": 11212,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11248,
											"end": 11277,
											"name": "PUSH",
											"source": 2,
											"value": "43616E206F6E6C792062652063616C6C6564206279206F776E65720000000000"
										},
										{
											"begin": 11228,
											"end": 11246,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 11228,
											"end": 11246,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11228,
											"end": 11246,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11221,
											"end": 11278,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11295,
											"end": 11313,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 11295,
											"end": 11313,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6411,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 11142,
											"end": 11319,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6352,
											"end": 6411,
											"name": "tag",
											"source": 0,
											"value": "154"
										},
										{
											"begin": 6352,
											"end": 6411,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7867,
											"end": 7876,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 7867,
											"end": 7876,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7893,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7867,
											"end": 7876,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7859,
											"end": 7893,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12718,
											"end": 12720,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12700,
											"end": 12721,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12757,
											"end": 12759,
											"name": "PUSH",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 12737,
											"end": 12755,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 12737,
											"end": 12755,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12737,
											"end": 12755,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12730,
											"end": 12760,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12796,
											"end": 12823,
											"name": "PUSH",
											"source": 2,
											"value": "706F6F6C546F6B656E2077617320616C72656164792073657400000000000000"
										},
										{
											"begin": 12776,
											"end": 12794,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 12776,
											"end": 12794,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12776,
											"end": 12794,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12769,
											"end": 12824,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12841,
											"end": 12859,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 12841,
											"end": 12859,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 12690,
											"end": 12865,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "tag",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 7851,
											"end": 7923,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7941,
											"end": 7967,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7941,
											"end": 7967,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7941,
											"end": 7967,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 8004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 7933,
											"end": 8004,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 8004,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7933,
											"end": 8004,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 8004,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7933,
											"end": 8004,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 8004,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9649,
											"end": 9651,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 7933,
											"end": 8004,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 7933,
											"end": 8004,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7933,
											"end": 8004,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9631,
											"end": 9652,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 9631,
											"end": 9652,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 9631,
											"end": 9652,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9668,
											"end": 9686,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 9668,
											"end": 9686,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9668,
											"end": 9686,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9661,
											"end": 9691,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9727,
											"end": 9761,
											"name": "PUSH",
											"source": 2,
											"value": "706F6F6C546F6B656E20616464726573732063616E6E6F74206265207A65726F"
										},
										{
											"begin": 9707,
											"end": 9725,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 9707,
											"end": 9725,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9707,
											"end": 9725,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9700,
											"end": 9762,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 9779,
											"end": 9797,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7933,
											"end": 8004,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 9621,
											"end": 9803,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7933,
											"end": 8004,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 7933,
											"end": 8004,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8014,
											"end": 8023,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 8014,
											"end": 8044,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8014,
											"end": 8044,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8014,
											"end": 8044,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000"
										},
										{
											"begin": 8014,
											"end": 8044,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8014,
											"end": 8044,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8014,
											"end": 8044,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8014,
											"end": 8044,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8014,
											"end": 8044,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8014,
											"end": 8044,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8014,
											"end": 8044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8014,
											"end": 8044,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8014,
											"end": 8044,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8014,
											"end": 8044,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8014,
											"end": 8044,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8014,
											"end": 8044,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "PUSH",
											"source": 0,
											"value": "70A0823100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1847,
											"end": 1902,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1902,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1847,
											"end": 1902,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1829,
											"end": 1903,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8188,
											"end": 8205,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 8188,
											"end": 8205,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8142,
											"end": 8152,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8135,
											"end": 8163,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8163,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 8135,
											"end": 8163,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1802,
											"end": 1820,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1802,
											"end": 1820,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "tag",
											"source": 0,
											"value": "167"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "tag",
											"source": 0,
											"value": "168"
										},
										{
											"begin": 8135,
											"end": 8184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8205,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8135,
											"end": 8205,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8127,
											"end": 8253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 8127,
											"end": 8253,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8127,
											"end": 8253,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8127,
											"end": 8253,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8127,
											"end": 8253,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8127,
											"end": 8253,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8127,
											"end": 8253,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10010,
											"end": 10012,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8127,
											"end": 8253,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8127,
											"end": 8253,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8127,
											"end": 8253,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9992,
											"end": 10013,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10049,
											"end": 10051,
											"name": "PUSH",
											"source": 2,
											"value": "2B"
										},
										{
											"begin": 10029,
											"end": 10047,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 10029,
											"end": 10047,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10029,
											"end": 10047,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10022,
											"end": 10052,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10088,
											"end": 10122,
											"name": "PUSH",
											"source": 2,
											"value": "5374616B696E6746756E6420646F65736E2774206861766520656E6F75676820"
										},
										{
											"begin": 10068,
											"end": 10086,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 10068,
											"end": 10086,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10068,
											"end": 10086,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10061,
											"end": 10123,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10159,
											"end": 10172,
											"name": "PUSH",
											"source": 2,
											"value": "4F494C2062616C616E6365000000000000000000000000000000000000000000"
										},
										{
											"begin": 10139,
											"end": 10157,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 10139,
											"end": 10157,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10139,
											"end": 10157,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10132,
											"end": 10173,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10190,
											"end": 10209,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 10190,
											"end": 10209,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8127,
											"end": 8253,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 9982,
											"end": 10215,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8127,
											"end": 8253,
											"name": "tag",
											"source": 0,
											"value": "170"
										},
										{
											"begin": 8127,
											"end": 8253,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8299,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2167,
											"end": 2182,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2167,
											"end": 2182,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2167,
											"end": 2182,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2149,
											"end": 2183,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8329,
											"end": 8333,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2199,
											"end": 2217,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2199,
											"end": 2217,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2199,
											"end": 2217,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2192,
											"end": 2235,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8339,
											"end": 8356,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 8339,
											"end": 8356,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8278,
											"end": 8288,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8271,
											"end": 8299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8299,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8299,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8299,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 8271,
											"end": 8299,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2061,
											"end": 2079,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2061,
											"end": 2079,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "tag",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "tag",
											"source": 0,
											"value": "177"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "169"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "tag",
											"source": 0,
											"value": "178"
										},
										{
											"begin": 8271,
											"end": 8335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8356,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 8271,
											"end": 8356,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 9239,
											"end": 9241,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9221,
											"end": 9242,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9278,
											"end": 9280,
											"name": "PUSH",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 9258,
											"end": 9276,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 9258,
											"end": 9276,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9258,
											"end": 9276,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9251,
											"end": 9281,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9317,
											"end": 9351,
											"name": "PUSH",
											"source": 2,
											"value": "5374616B696E6746756E6420646F65736E2774206861766520656E6F75676820"
										},
										{
											"begin": 9297,
											"end": 9315,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 9297,
											"end": 9315,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9297,
											"end": 9315,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9290,
											"end": 9352,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9388,
											"end": 9399,
											"name": "PUSH",
											"source": 2,
											"value": "616C6C6F77616E63650000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9368,
											"end": 9386,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 9368,
											"end": 9386,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 9368,
											"end": 9386,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 9361,
											"end": 9400,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9417,
											"end": 9436,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 9417,
											"end": 9436,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 9211,
											"end": 9442,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 8263,
											"end": 8402,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8451,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2527,
											"end": 2542,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2527,
											"end": 2542,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2527,
											"end": 2542,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2509,
											"end": 2543,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8481,
											"end": 8485,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 2559,
											"end": 2577,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2559,
											"end": 2577,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2559,
											"end": 2577,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2552,
											"end": 2595,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8488,
											"end": 8505,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2611,
											"end": 2629,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2611,
											"end": 2629,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2611,
											"end": 2629,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2604,
											"end": 2638,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8427,
											"end": 8437,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8420,
											"end": 8451,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8451,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 8420,
											"end": 8451,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2421,
											"end": 2439,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2421,
											"end": 2439,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 8420,
											"end": 8506,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8412,
											"end": 8554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 8412,
											"end": 8554,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8412,
											"end": 8554,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8412,
											"end": 8554,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8412,
											"end": 8554,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8412,
											"end": 8554,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8412,
											"end": 8554,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11946,
											"end": 11948,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 8412,
											"end": 8554,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 8412,
											"end": 8554,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8412,
											"end": 8554,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11928,
											"end": 11949,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 11985,
											"end": 11987,
											"name": "PUSH",
											"source": 2,
											"value": "2B"
										},
										{
											"begin": 11965,
											"end": 11983,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 11965,
											"end": 11983,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 11965,
											"end": 11983,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11958,
											"end": 11988,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12024,
											"end": 12058,
											"name": "PUSH",
											"source": 2,
											"value": "5472616E7366657246726F6D206F66204F494C2066726F6D205374616B696E67"
										},
										{
											"begin": 12004,
											"end": 12022,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 12004,
											"end": 12022,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12004,
											"end": 12022,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11997,
											"end": 12059,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12095,
											"end": 12108,
											"name": "PUSH",
											"source": 2,
											"value": "46756E64206661696C6564000000000000000000000000000000000000000000"
										},
										{
											"begin": 12075,
											"end": 12093,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 12075,
											"end": 12093,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 12075,
											"end": 12093,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12068,
											"end": 12109,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12126,
											"end": 12145,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 12126,
											"end": 12145,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8412,
											"end": 8554,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 11918,
											"end": 12151,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 8412,
											"end": 8554,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 8412,
											"end": 8554,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7753,
											"end": 8561,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11815,
											"end": 12509,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 11815,
											"end": 12509,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6121,
											"end": 6130,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 6121,
											"end": 6130,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 6113,
											"end": 6147,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6121,
											"end": 6130,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10422,
											"end": 10424,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10404,
											"end": 10425,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10461,
											"end": 10463,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 10441,
											"end": 10459,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 10441,
											"end": 10459,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10441,
											"end": 10459,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10434,
											"end": 10464,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10500,
											"end": 10519,
											"name": "PUSH",
											"source": 2,
											"value": "706F6F6C546F6B656E206E6F7420736574000000000000000000000000000000"
										},
										{
											"begin": 10480,
											"end": 10498,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 10480,
											"end": 10498,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 10480,
											"end": 10498,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 10473,
											"end": 10520,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 10537,
											"end": 10555,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 10537,
											"end": 10555,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 10394,
											"end": 10561,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "tag",
											"source": 0,
											"value": "192"
										},
										{
											"begin": 6105,
											"end": 6169,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 11897,
											"end": 11907,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11887,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11890,
											"end": 11908,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "1000000000000000000"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFF"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "1000000000000000000000000"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "100000000000000000000000000000000"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 11869,
											"end": 11908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 11969,
											"end": 12030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 11969,
											"end": 12030,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 11969,
											"end": 12030,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 11969,
											"end": 12030,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 11969,
											"end": 12030,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11969,
											"end": 12030,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 11969,
											"end": 12030,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6857,
											"end": 6859,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 11969,
											"end": 12030,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 11969,
											"end": 12030,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 11969,
											"end": 12030,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6839,
											"end": 6860,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6839,
											"end": 6860,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6839,
											"end": 6860,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6876,
											"end": 6894,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6876,
											"end": 6894,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6876,
											"end": 6894,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6869,
											"end": 6899,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6935,
											"end": 6969,
											"name": "PUSH",
											"source": 2,
											"value": "596F7520646F6E277420686176652061207374616B6520746F20756E6C6F636B"
										},
										{
											"begin": 6915,
											"end": 6933,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 6915,
											"end": 6933,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6915,
											"end": 6933,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6908,
											"end": 6970,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6987,
											"end": 7005,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 6987,
											"end": 7005,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 11969,
											"end": 12030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 6829,
											"end": 7011,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 11969,
											"end": 12030,
											"name": "tag",
											"source": 0,
											"value": "195"
										},
										{
											"begin": 11969,
											"end": 12030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12069,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12080,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12064,
											"end": 12080,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12064,
											"end": 12080,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12049,
											"end": 12080,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12049,
											"end": 12080,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12049,
											"end": 12061,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 12049,
											"end": 12080,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 12041,
											"end": 12145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 12041,
											"end": 12145,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12041,
											"end": 12145,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12041,
											"end": 12145,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12041,
											"end": 12145,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12041,
											"end": 12145,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12041,
											"end": 12145,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8810,
											"end": 8812,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12041,
											"end": 12145,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12041,
											"end": 12145,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12041,
											"end": 12145,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8792,
											"end": 8813,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8849,
											"end": 8851,
											"name": "PUSH",
											"source": 2,
											"value": "3C"
										},
										{
											"begin": 8829,
											"end": 8847,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 8829,
											"end": 8847,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8829,
											"end": 8847,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8822,
											"end": 8852,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8888,
											"end": 8922,
											"name": "PUSH",
											"source": 2,
											"value": "596F752063616E277420776974686472617720746865207374616B6520696E20"
										},
										{
											"begin": 8868,
											"end": 8886,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 8868,
											"end": 8886,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8868,
											"end": 8886,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8861,
											"end": 8923,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8959,
											"end": 8989,
											"name": "PUSH",
											"source": 2,
											"value": "7468652073616D6520626C6F636B20697420776173206C6F636B656400000000"
										},
										{
											"begin": 8939,
											"end": 8957,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 8939,
											"end": 8957,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8939,
											"end": 8957,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8932,
											"end": 8990,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 9007,
											"end": 9026,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 9007,
											"end": 9026,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12041,
											"end": 12145,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 8782,
											"end": 9032,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12041,
											"end": 12145,
											"name": "tag",
											"source": 0,
											"value": "198"
										},
										{
											"begin": 12041,
											"end": 12145,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12253,
											"end": 12282,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 12276,
											"end": 12281,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12253,
											"end": 12275,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 12253,
											"end": 12282,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12253,
											"end": 12282,
											"name": "tag",
											"source": 0,
											"value": "201"
										},
										{
											"begin": 12253,
											"end": 12282,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12398,
											"end": 12408,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12397,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12391,
											"end": 12409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12409,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12391,
											"end": 12409,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12409,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12409,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12391,
											"end": 12409,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12409,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12391,
											"end": 12409,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12384,
											"end": 12409,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12437,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 12428,
											"end": 12437,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3252,
											"end": 3326,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3252,
											"end": 3326,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3252,
											"end": 3326,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3252,
											"end": 3326,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3342,
											"end": 3360,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 3342,
											"end": 3360,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3342,
											"end": 3360,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3335,
											"end": 3369,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3335,
											"end": 3369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3335,
											"end": 3369,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 12391,
											"end": 12409,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12428,
											"end": 12437,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12437,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12446,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 12428,
											"end": 12446,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3243,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3225,
											"end": 3243,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 12428,
											"end": 12471,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12420,
											"end": 12502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 12420,
											"end": 12502,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12420,
											"end": 12502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12420,
											"end": 12502,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12420,
											"end": 12502,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12420,
											"end": 12502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12420,
											"end": 12502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6013,
											"end": 6015,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 12420,
											"end": 12502,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 12420,
											"end": 12502,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 12420,
											"end": 12502,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5995,
											"end": 6016,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6052,
											"end": 6054,
											"name": "PUSH",
											"source": 2,
											"value": "1A"
										},
										{
											"begin": 6032,
											"end": 6050,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 6032,
											"end": 6050,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6032,
											"end": 6050,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6025,
											"end": 6055,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6091,
											"end": 6119,
											"name": "PUSH",
											"source": 2,
											"value": "506F6F6C20746F6B656E207472616E73666572206661696C6564000000000000"
										},
										{
											"begin": 6071,
											"end": 6089,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 6071,
											"end": 6089,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6071,
											"end": 6089,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6064,
											"end": 6120,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6137,
											"end": 6155,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 6137,
											"end": 6155,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 12420,
											"end": 12502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 5985,
											"end": 6161,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15531,
											"end": 15891,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 15531,
											"end": 15891,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15639,
											"end": 15640,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15623,
											"end": 15636,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15623,
											"end": 15640,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 15615,
											"end": 15686,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15686,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15615,
											"end": 15686,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15686,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15615,
											"end": 15686,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15686,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7980,
											"end": 7982,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15615,
											"end": 15686,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15615,
											"end": 15686,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15615,
											"end": 15686,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7962,
											"end": 7983,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8019,
											"end": 8021,
											"name": "PUSH",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 7999,
											"end": 8017,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 7999,
											"end": 8017,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 7999,
											"end": 8017,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 7992,
											"end": 8022,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8058,
											"end": 8092,
											"name": "PUSH",
											"source": 2,
											"value": "596F75206469646E2774206561726E20616E7920696E746567657220616D6F75"
										},
										{
											"begin": 8038,
											"end": 8056,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 8038,
											"end": 8056,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8038,
											"end": 8056,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8031,
											"end": 8093,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8129,
											"end": 8140,
											"name": "PUSH",
											"source": 2,
											"value": "6E74206F66207765690000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8109,
											"end": 8127,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 8109,
											"end": 8127,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 8109,
											"end": 8127,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 8102,
											"end": 8141,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 8158,
											"end": 8177,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 8158,
											"end": 8177,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15615,
											"end": 15686,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 7952,
											"end": 8183,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15615,
											"end": 15686,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 15615,
											"end": 15686,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15704,
											"end": 15728,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15704,
											"end": 15728,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15704,
											"end": 15728,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15696,
											"end": 15778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 15696,
											"end": 15778,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 15696,
											"end": 15778,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15696,
											"end": 15778,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15696,
											"end": 15778,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15696,
											"end": 15778,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15696,
											"end": 15778,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5599,
											"end": 5601,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 15696,
											"end": 15778,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15696,
											"end": 15778,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15696,
											"end": 15778,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5581,
											"end": 5602,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5638,
											"end": 5640,
											"name": "PUSH",
											"source": 2,
											"value": "2D"
										},
										{
											"begin": 5618,
											"end": 5636,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 5618,
											"end": 5636,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5618,
											"end": 5636,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5611,
											"end": 5641,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5677,
											"end": 5711,
											"name": "PUSH",
											"source": 2,
											"value": "546F6B656E56657374696E673A2062656E656669636961727920697320746865"
										},
										{
											"begin": 5657,
											"end": 5675,
											"name": "PUSH",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 5657,
											"end": 5675,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5657,
											"end": 5675,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5650,
											"end": 5712,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5748,
											"end": 5763,
											"name": "PUSH",
											"source": 2,
											"value": "207A65726F206164647265737300000000000000000000000000000000000000"
										},
										{
											"begin": 5728,
											"end": 5746,
											"name": "PUSH",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 5728,
											"end": 5746,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 5728,
											"end": 5746,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5721,
											"end": 5764,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5781,
											"end": 5800,
											"name": "PUSH",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 5781,
											"end": 5800,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15696,
											"end": 15778,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "87"
										},
										{
											"begin": 5571,
											"end": 5806,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 15696,
											"end": 15778,
											"name": "tag",
											"source": 0,
											"value": "215"
										},
										{
											"begin": 15696,
											"end": 15778,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 15788,
											"end": 15813,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15788,
											"end": 15813,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15788,
											"end": 15813,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 15788,
											"end": 15813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 15788,
											"end": 15813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15788,
											"end": 15813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15788,
											"end": 15813,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15788,
											"end": 15801,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 15788,
											"end": 15813,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 15788,
											"end": 15813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15788,
											"end": 15813,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15788,
											"end": 15813,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 15788,
											"end": 15813,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15788,
											"end": 15813,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15788,
											"end": 15813,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 15788,
											"end": 15813,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15788,
											"end": 15813,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 15788,
											"end": 15829,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 15788,
											"end": 15829,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15788,
											"end": 15829,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 15844,
											"end": 15884,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 15844,
											"end": 15884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3252,
											"end": 3326,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3252,
											"end": 3326,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3252,
											"end": 3326,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3342,
											"end": 3360,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3342,
											"end": 3360,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3335,
											"end": 3369,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3335,
											"end": 3369,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3335,
											"end": 3369,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 15844,
											"end": 15884,
											"name": "PUSH",
											"source": 0,
											"value": "6E1AFD29522B0AAF986597BCC53F5FB4DAAE2AF7CFD41D00C384AB1BDF912B23"
										},
										{
											"begin": 15844,
											"end": 15884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3225,
											"end": 3243,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 15844,
											"end": 15884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 15844,
											"end": 15884,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 15844,
											"end": 15884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 15844,
											"end": 15884,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 15844,
											"end": 15884,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15844,
											"end": 15884,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 15844,
											"end": 15884,
											"name": "LOG1",
											"source": 0
										},
										{
											"begin": 15531,
											"end": 15891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15531,
											"end": 15891,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 15531,
											"end": 15891,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16426,
											"end": 16583,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 16426,
											"end": 16583,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16576,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16550,
											"end": 16576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16576,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 16496,
											"end": 16503,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16550,
											"end": 16576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16564,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 16550,
											"end": 16576,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 16550,
											"end": 16576,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16576,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 16550,
											"end": 16576,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16576,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 16550,
											"end": 16576,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 16522,
											"end": 16547,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 16565,
											"end": 16575,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 16522,
											"end": 16535,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 16522,
											"end": 16547,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16522,
											"end": 16547,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 16522,
											"end": 16547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16522,
											"end": 16576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 16522,
											"end": 16576,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16522,
											"end": 16576,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16522,
											"end": 16576,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 16522,
											"end": 16576,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16522,
											"end": 16576,
											"name": "tag",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 16522,
											"end": 16576,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16515,
											"end": 16576,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 16426,
											"end": 16583,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 16426,
											"end": 16583,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12610,
											"end": 13548,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 12610,
											"end": 13548,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12991,
											"end": 12997,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 12991,
											"end": 13019,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 12991,
											"end": 13019,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12991,
											"end": 13019,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12971,
											"end": 13019,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFF"
										},
										{
											"begin": 12971,
											"end": 13019,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12971,
											"end": 12977,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 12971,
											"end": 12988,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 12971,
											"end": 12988,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 12971,
											"end": 12988,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 12971,
											"end": 13019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 12971,
											"end": 13019,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 12971,
											"end": 13019,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12971,
											"end": 13019,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "225"
										},
										{
											"begin": 12971,
											"end": 13019,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 12971,
											"end": 13019,
											"name": "tag",
											"source": 0,
											"value": "224"
										},
										{
											"begin": 12971,
											"end": 13019,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12955,
											"end": 13020,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12955,
											"end": 13020,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 12955,
											"end": 12967,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 12955,
											"end": 13020,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 12951,
											"end": 13542,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 12951,
											"end": 13542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 12951,
											"end": 13542,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13142,
											"end": 13176,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13142,
											"end": 13176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13142,
											"end": 13176,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13142,
											"end": 13176,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13127,
											"end": 13137,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13138,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13108,
											"end": 13138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13138,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13126,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13108,
											"end": 13138,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13108,
											"end": 13138,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13138,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13108,
											"end": 13138,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13138,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13138,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13138,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 13108,
											"end": 13176,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13211,
											"end": 13217,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13211,
											"end": 13245,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13211,
											"end": 13245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13211,
											"end": 13245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13190,
											"end": 13245,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13190,
											"end": 13245,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13190,
											"end": 13207,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 13190,
											"end": 13207,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13190,
											"end": 13245,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13190,
											"end": 13245,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13190,
											"end": 13245,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 13190,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 13190,
											"end": 13245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13190,
											"end": 13245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13190,
											"end": 13245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 13190,
											"end": 13245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13190,
											"end": 13245,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 13190,
											"end": 13245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13190,
											"end": 13245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13190,
											"end": 13245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13190,
											"end": 13245,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13301,
											"end": 13319,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13301,
											"end": 13319,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13321,
											"end": 13349,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13321,
											"end": 13349,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13321,
											"end": 13349,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13321,
											"end": 13349,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13366,
											"end": 13383,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13366,
											"end": 13383,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13366,
											"end": 13383,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13366,
											"end": 13383,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13264,
											"end": 13384,
											"name": "PUSH",
											"source": 0,
											"value": "6C6F3C7D8C87976393011CC962DA12841024BC1D62D2DE21716A6306AB314EF3"
										},
										{
											"begin": 13264,
											"end": 13384,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13289,
											"end": 13299,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 13289,
											"end": 13299,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13301,
											"end": 13319,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13301,
											"end": 13319,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13351,
											"end": 13383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 13351,
											"end": 13383,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13351,
											"end": 13383,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13351,
											"end": 13383,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13351,
											"end": 13363,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 13351,
											"end": 13383,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 13351,
											"end": 13383,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 13351,
											"end": 13383,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 13351,
											"end": 13383,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13264,
											"end": 13384,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13264,
											"end": 13384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13264,
											"end": 13384,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4165,
											"end": 4207,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4153,
											"end": 4208,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4153,
											"end": 4208,
											"name": "SWAP6",
											"source": 2
										},
										{
											"begin": 4153,
											"end": 4208,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4135,
											"end": 4209,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4135,
											"end": 4209,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4257,
											"end": 4277,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4245,
											"end": 4278,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4245,
											"end": 4278,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 4245,
											"end": 4278,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4240,
											"end": 4242,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 4225,
											"end": 4243,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 4225,
											"end": 4243,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4218,
											"end": 4279,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4327,
											"end": 4335,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFF"
										},
										{
											"begin": 4315,
											"end": 4336,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4315,
											"end": 4336,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4315,
											"end": 4336,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4295,
											"end": 4313,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4295,
											"end": 4313,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 4295,
											"end": 4313,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4288,
											"end": 4337,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4288,
											"end": 4337,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4288,
											"end": 4337,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4288,
											"end": 4337,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4368,
											"end": 4370,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 4353,
											"end": 4371,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4353,
											"end": 4371,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4346,
											"end": 4380,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4122,
											"end": 4125,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4107,
											"end": 4126,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13264,
											"end": 13384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 4089,
											"end": 4386,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 12951,
											"end": 13542,
											"name": "tag",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 12951,
											"end": 13542,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13446,
											"end": 13464,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13446,
											"end": 13464,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13466,
											"end": 13494,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13466,
											"end": 13494,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13466,
											"end": 13494,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13466,
											"end": 13494,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13466,
											"end": 13494,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13496,
											"end": 13530,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 13496,
											"end": 13530,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13496,
											"end": 13530,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 13496,
											"end": 13530,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13496,
											"end": 13530,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13420,
											"end": 13531,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13420,
											"end": 13531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13420,
											"end": 13531,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13434,
											"end": 13444,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3609,
											"end": 3683,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3609,
											"end": 3683,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3731,
											"end": 3751,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3719,
											"end": 3752,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3719,
											"end": 3752,
											"name": "SWAP7",
											"source": 2
										},
										{
											"begin": 3719,
											"end": 3752,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3717,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3717,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 3699,
											"end": 3717,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3753,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3753,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3753,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 3692,
											"end": 3753,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3801,
											"end": 3809,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFF"
										},
										{
											"begin": 3789,
											"end": 3810,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3789,
											"end": 3810,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3789,
											"end": 3810,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3769,
											"end": 3787,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3769,
											"end": 3787,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 3769,
											"end": 3787,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3762,
											"end": 3811,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3762,
											"end": 3811,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3762,
											"end": 3811,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3762,
											"end": 3811,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3859,
											"end": 3893,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3847,
											"end": 3894,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 3827,
											"end": 3845,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3820,
											"end": 3895,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13531,
											"name": "PUSH",
											"source": 0,
											"value": "391930AB48E95A9040C849CC86E1B2F63C711A1F59D6E324CE775DC9A0051056"
										},
										{
											"begin": 13420,
											"end": 13531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3596,
											"end": 3599,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 3581,
											"end": 3600,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13420,
											"end": 13531,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "152"
										},
										{
											"begin": 3563,
											"end": 3901,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 16807,
											"end": 17293,
											"name": "tag",
											"source": 0,
											"value": "221"
										},
										{
											"begin": 16807,
											"end": 17293,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16873,
											"end": 16880,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 16912,
											"end": 16953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 16938,
											"end": 16953,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 16912,
											"end": 16935,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 16912,
											"end": 16953,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 16912,
											"end": 16953,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16912,
											"end": 16953,
											"name": "tag",
											"source": 0,
											"value": "235"
										},
										{
											"begin": 16912,
											"end": 16953,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16896,
											"end": 16908,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 16896,
											"end": 16953,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 16892,
											"end": 17287,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 16892,
											"end": 17287,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17061,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17048,
											"end": 17073,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16807,
											"end": 17293,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 16892,
											"end": 17287,
											"name": "tag",
											"source": 0,
											"value": "236"
										},
										{
											"begin": 16892,
											"end": 17287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17261,
											"end": 17276,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 17219,
											"end": 17257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 17234,
											"end": 17257,
											"name": "PUSHIMMUTABLE",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 17219,
											"end": 17231,
											"name": "NUMBER",
											"source": 0
										},
										{
											"begin": 17219,
											"end": 17257,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 17219,
											"end": 17257,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17219,
											"end": 17257,
											"name": "tag",
											"source": 0,
											"value": "238"
										},
										{
											"begin": 17219,
											"end": 17257,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17215,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 17190,
											"end": 17215,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17215,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17215,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17190,
											"end": 17215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17215,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17203,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17190,
											"end": 17215,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 17190,
											"end": 17215,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17215,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17190,
											"end": 17215,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17215,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17215,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 17190,
											"end": 17258,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17258,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17258,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 17190,
											"end": 17258,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 17190,
											"end": 17258,
											"name": "tag",
											"source": 0,
											"value": "239"
										},
										{
											"begin": 17190,
											"end": 17258,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 17190,
											"end": 17276,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17276,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 17190,
											"end": 17276,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 17190,
											"end": 17276,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 16892,
											"end": 17287,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 16892,
											"end": 17287,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 16807,
											"end": 17293,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 16807,
											"end": 17293,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 16807,
											"end": 17293,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 16807,
											"end": 17293,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 14,
											"end": 210,
											"name": "tag",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 14,
											"end": 210,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 142,
											"end": 184,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 131,
											"end": 185,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 131,
											"end": 185,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 121,
											"end": 186,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 121,
											"end": 186,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 111,
											"end": 113,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 111,
											"end": 113,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 200,
											"end": 201,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 197,
											"end": 198,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 190,
											"end": 202,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 215,
											"end": 411,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 215,
											"end": 411,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 274,
											"end": 280,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 327,
											"end": 329,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 315,
											"end": 324,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 306,
											"end": 313,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 302,
											"end": 325,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 298,
											"end": 330,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 295,
											"end": 297,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 295,
											"end": 297,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 295,
											"end": 297,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 348,
											"end": 354,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 340,
											"end": 346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 333,
											"end": 355,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 295,
											"end": 297,
											"name": "tag",
											"source": 2,
											"value": "246"
										},
										{
											"begin": 295,
											"end": 297,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 376,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 395,
											"end": 404,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 376,
											"end": 405,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 376,
											"end": 405,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 416,
											"end": 686,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 416,
											"end": 686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 484,
											"end": 490,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 492,
											"end": 498,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 545,
											"end": 547,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 533,
											"end": 542,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 524,
											"end": 531,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 520,
											"end": 543,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 516,
											"end": 548,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 513,
											"end": 515,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 513,
											"end": 515,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 513,
											"end": 515,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 566,
											"end": 572,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 558,
											"end": 564,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 551,
											"end": 573,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 513,
											"end": 515,
											"name": "tag",
											"source": 2,
											"value": "249"
										},
										{
											"begin": 513,
											"end": 515,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 594,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 613,
											"end": 622,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 594,
											"end": 623,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 594,
											"end": 623,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 594,
											"end": 623,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 594,
											"end": 623,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 584,
											"end": 623,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 584,
											"end": 623,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 642,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 676,
											"end": 678,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 665,
											"end": 674,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 661,
											"end": 679,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 642,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "242"
										},
										{
											"begin": 642,
											"end": 680,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 642,
											"end": 680,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 642,
											"end": 680,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 632,
											"end": 680,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 632,
											"end": 680,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 503,
											"end": 686,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 503,
											"end": 686,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 503,
											"end": 686,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 503,
											"end": 686,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 503,
											"end": 686,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 503,
											"end": 686,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 691,
											"end": 988,
											"name": "tag",
											"source": 2,
											"value": "124"
										},
										{
											"begin": 691,
											"end": 988,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 758,
											"end": 764,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 811,
											"end": 813,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 799,
											"end": 808,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 790,
											"end": 797,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 786,
											"end": 809,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 782,
											"end": 814,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 779,
											"end": 781,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 779,
											"end": 781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 779,
											"end": 781,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 832,
											"end": 838,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 824,
											"end": 830,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 817,
											"end": 839,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 779,
											"end": 781,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 779,
											"end": 781,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 869,
											"end": 878,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 863,
											"end": 879,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 922,
											"end": 927,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 915,
											"end": 928,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 908,
											"end": 929,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 901,
											"end": 906,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 898,
											"end": 930,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 888,
											"end": 890,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "133"
										},
										{
											"begin": 888,
											"end": 890,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 949,
											"end": 955,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 941,
											"end": 947,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 934,
											"end": 956,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 993,
											"end": 1187,
											"name": "tag",
											"source": 2,
											"value": "169"
										},
										{
											"begin": 993,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1063,
											"end": 1069,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1116,
											"end": 1118,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1104,
											"end": 1113,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1095,
											"end": 1102,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1091,
											"end": 1114,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1087,
											"end": 1119,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1086,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1086,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 1084,
											"end": 1086,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1137,
											"end": 1143,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1129,
											"end": 1135,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1122,
											"end": 1144,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1084,
											"end": 1086,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 1084,
											"end": 1086,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1165,
											"end": 1181,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1165,
											"end": 1181,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1074,
											"end": 1187,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1074,
											"end": 1187,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1192,
											"end": 1678,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 1192,
											"end": 1678,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1258,
											"end": 1264,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1266,
											"end": 1272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1319,
											"end": 1321,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1307,
											"end": 1316,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1298,
											"end": 1305,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1294,
											"end": 1317,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1290,
											"end": 1322,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 1287,
											"end": 1289,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1287,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 1287,
											"end": 1289,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1340,
											"end": 1346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1332,
											"end": 1338,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1325,
											"end": 1347,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1287,
											"end": 1289,
											"name": "tag",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 1287,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1384,
											"end": 1393,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1371,
											"end": 1394,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1454,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1423,
											"end": 1455,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1416,
											"end": 1421,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1413,
											"end": 1456,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 1405,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 1403,
											"end": 1405,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1475,
											"end": 1481,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1467,
											"end": 1473,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1460,
											"end": 1482,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1403,
											"end": 1405,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 1403,
											"end": 1405,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1503,
											"end": 1508,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1560,
											"end": 1562,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1545,
											"end": 1563,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1545,
											"end": 1563,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1532,
											"end": 1564,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1608,
											"end": 1616,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFF"
										},
										{
											"begin": 1595,
											"end": 1617,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1595,
											"end": 1617,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1618,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1583,
											"end": 1618,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1637,
											"end": 1643,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1629,
											"end": 1635,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1622,
											"end": 1644,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 1573,
											"end": 1575,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1665,
											"end": 1672,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1655,
											"end": 1672,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1655,
											"end": 1672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1655,
											"end": 1672,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1678,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1678,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1678,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1678,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1678,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1277,
											"end": 1678,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13765,
											"end": 13893,
											"name": "tag",
											"source": 2,
											"value": "116"
										},
										{
											"begin": 13765,
											"end": 13893,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13805,
											"end": 13808,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13836,
											"end": 13837,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13832,
											"end": 13838,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 13829,
											"end": 13830,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 13826,
											"end": 13839,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 13823,
											"end": 13825,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 13823,
											"end": 13825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 13823,
											"end": 13825,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 13842,
											"end": 13860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 13842,
											"end": 13860,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 13842,
											"end": 13860,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 13842,
											"end": 13860,
											"name": "tag",
											"source": 2,
											"value": "295"
										},
										{
											"begin": 13842,
											"end": 13860,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13878,
											"end": 13887,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 13878,
											"end": 13887,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 13813,
											"end": 13893,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 13898,
											"end": 14126,
											"name": "tag",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 13898,
											"end": 14126,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 13937,
											"end": 13940,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 13965,
											"end": 13975,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14002,
											"end": 14004,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 13999,
											"end": 14000,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 13995,
											"end": 14005,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14032,
											"end": 14034,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14029,
											"end": 14030,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 14025,
											"end": 14035,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14063,
											"end": 14066,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 14059,
											"end": 14061,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14055,
											"end": 14067,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14050,
											"end": 14053,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14047,
											"end": 14068,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 14044,
											"end": 14046,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14044,
											"end": 14046,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 14044,
											"end": 14046,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14071,
											"end": 14089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 14071,
											"end": 14089,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 14071,
											"end": 14089,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14071,
											"end": 14089,
											"name": "tag",
											"source": 2,
											"value": "299"
										},
										{
											"begin": 14071,
											"end": 14089,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14107,
											"end": 14120,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14107,
											"end": 14120,
											"name": "SWAP5",
											"source": 2
										},
										{
											"begin": 13945,
											"end": 14126,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13945,
											"end": 14126,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 14131,
											"end": 14405,
											"name": "tag",
											"source": 2,
											"value": "98"
										},
										{
											"begin": 14131,
											"end": 14405,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14171,
											"end": 14172,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14197,
											"end": 14198,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14187,
											"end": 14189,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 14187,
											"end": 14189,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14232,
											"end": 14309,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14229,
											"end": 14230,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14222,
											"end": 14310,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14333,
											"end": 14337,
											"name": "PUSH",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 14330,
											"end": 14331,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14323,
											"end": 14338,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14361,
											"end": 14365,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 14358,
											"end": 14359,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14351,
											"end": 14366,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 14187,
											"end": 14189,
											"name": "tag",
											"source": 2,
											"value": "301"
										},
										{
											"begin": 14187,
											"end": 14189,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14390,
											"end": 14399,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 14390,
											"end": 14399,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14177,
											"end": 14405,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 14410,
											"end": 14638,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 14410,
											"end": 14638,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14450,
											"end": 14457,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14576,
											"end": 14577,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 14508,
											"end": 14574,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14504,
											"end": 14578,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 14501,
											"end": 14502,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 14498,
											"end": 14579,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 14493,
											"end": 14494,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14486,
											"end": 14495,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14479,
											"end": 14496,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14475,
											"end": 14580,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 14472,
											"end": 14474,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14472,
											"end": 14474,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 14472,
											"end": 14474,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14583,
											"end": 14601,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 14583,
											"end": 14601,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 14583,
											"end": 14601,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14583,
											"end": 14601,
											"name": "tag",
											"source": 2,
											"value": "304"
										},
										{
											"begin": 14583,
											"end": 14601,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14623,
											"end": 14632,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 14623,
											"end": 14632,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14462,
											"end": 14638,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 14643,
											"end": 14768,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 14643,
											"end": 14768,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14683,
											"end": 14687,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14711,
											"end": 14712,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14708,
											"end": 14709,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 14705,
											"end": 14713,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 14702,
											"end": 14704,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 14702,
											"end": 14704,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 14702,
											"end": 14704,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 14716,
											"end": 14734,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 14716,
											"end": 14734,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 14716,
											"end": 14734,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 14716,
											"end": 14734,
											"name": "tag",
											"source": 2,
											"value": "307"
										},
										{
											"begin": 14716,
											"end": 14734,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14753,
											"end": 14762,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 14753,
											"end": 14762,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 14692,
											"end": 14768,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 14773,
											"end": 14957,
											"name": "tag",
											"source": 2,
											"value": "296"
										},
										{
											"begin": 14773,
											"end": 14957,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 14825,
											"end": 14902,
											"name": "PUSH",
											"source": 2,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14822,
											"end": 14823,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14815,
											"end": 14903,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14922,
											"end": 14926,
											"name": "PUSH",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 14919,
											"end": 14920,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 14912,
											"end": 14927,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 14946,
											"end": 14950,
											"name": "PUSH",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 14943,
											"end": 14944,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 14936,
											"end": 14951,
											"name": "REVERT",
											"source": 2
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"calculateStakingRewardPoints(uint72,uint24)": "798633b9",
							"getRewards()": "0572b0cc",
							"grantedTokens(address)": "e0e4a722",
							"lockTokens(uint72,uint24)": "378592c8",
							"oilerToken()": "81e9207d",
							"owner()": "8da5cb5b",
							"poolToken()": "cbdf382c",
							"release()": "86d1a69f",
							"releasedTokens(address)": "70ff852b",
							"rewardPointsEarned(address)": "c959360b",
							"setPoolToken(address,address)": "f6ffab88",
							"stakes(address)": "16934fc4",
							"stakingFundAmount()": "52946b04",
							"stakingProgramEndsBlock()": "bc0925ae",
							"totalRewardPoints()": "c2e8caf6",
							"unlockTokens()": "f968f493",
							"vestingDuration()": "1514617e"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"oilerToken_\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"stakingDurationInBlocks_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakingFundAmount_\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vestingDuration_\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner_\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountEarned\",\"type\":\"uint256\"}],\"name\":\"RewardGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockingPeriodInBlocks\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"expectedStakingRewardPoints\",\"type\":\"uint256\"}],\"name\":\"StakeLocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockingPeriodInBlocks\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"rewardPoints\",\"type\":\"uint256\"}],\"name\":\"StakeUnlocked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lockingPeriodInBlocks\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualLockingPeriodInBlocks\",\"type\":\"uint256\"}],\"name\":\"StakeUnlockedPrematurely\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"grantedTokensReleased\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint72\",\"name\":\"tokenAmount_\",\"type\":\"uint72\"},{\"internalType\":\"uint24\",\"name\":\"lockingPeriodInBlocks_\",\"type\":\"uint24\"}],\"name\":\"calculateStakingRewardPoints\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"grantedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint72\",\"name\":\"tokenAmount_\",\"type\":\"uint72\"},{\"internalType\":\"uint24\",\"name\":\"lockingPeriodInBlocks_\",\"type\":\"uint24\"}],\"name\":\"lockTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"oilerToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"poolToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"release\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"releasedTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"rewardPointsEarned\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"poolToken_\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stakingFundAddress_\",\"type\":\"address\"}],\"name\":\"setPoolToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint72\",\"name\":\"tokenAmount\",\"type\":\"uint72\"},{\"internalType\":\"uint24\",\"name\":\"lockingPeriodInBlocks\",\"type\":\"uint24\"},{\"internalType\":\"uint32\",\"name\":\"startBlock\",\"type\":\"uint32\"},{\"internalType\":\"uint128\",\"name\":\"expectedStakingRewardPoints\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingFundAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingProgramEndsBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalRewardPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"vestingDuration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"calculateStakingRewardPoints(uint72,uint24)\":{\"details\":\"If any parameter is zero - it will fail, thus we save gas on \\\"requires\\\" by not checking in other places\",\"params\":{\"lockingPeriodInBlocks_\":\"- Lock duration defined in blocks.\",\"tokenAmount_\":\"- Amount of tokens to be stake.\"}},\"constructor\":{\"details\":\"before deploying the stakingFundAddress must have set allowances on behalf of that contract. The address can be predicted basing on the CREATE or CREATE2 opcode.\",\"params\":{\"oilerToken_\":\"- address of the token in which rewards will be payed off.\",\"owner_\":\"- Owner of the contract (is used to initialize poolToken after it's available).\",\"stakingDurationInBlocks_\":\"- Number of blocks after which staking will end.\",\"stakingFundAmount_\":\"- Amount of tokens to be payed of as rewards.\",\"vestingDuration_\":\"- Number of blocks after which OIL tokens earned by staking will be released (duration of Vesting period).\"}},\"getRewards()\":{\"details\":\"Which means that all stakes lock periods are already over, and totalRewardPoints value isn't changing anymore - so we can now calculate the percentages of rewards\"},\"lockTokens(uint72,uint24)\":{\"params\":{\"lockingPeriodInBlocks_\":\"- locking period duration defined in blocks.\",\"tokenAmount_\":\"- Amount of LP tokens to be locked.\"}}},\"stateVariables\":{\"owner\":{\"details\":\"Owner is used only in setPoolToken()\"},\"vestingDuration\":{\"details\":\"In blocks - should be around 100 days\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"calculateStakingRewardPoints(uint72,uint24)\":{\"notice\":\"Calculates the RewardPoints user will earn for a given tokenAmount locked for a given period\"},\"getRewards()\":{\"notice\":\"This can only be called after the Staking Program ended\"},\"grantedTokens(address)\":{\"notice\":\"The amount of OIL tokens earned, granted to be released during vesting period \"},\"lockTokens(uint72,uint24)\":{\"notice\":\"Lock the LP tokens for a specified period of Blocks.Can only be called before Staking Program ends.And the locking period can't last longer than the end of Staking Program block.\"},\"oilerToken()\":{\"notice\":\"Oiler token that will be given as a reward\"},\"poolToken()\":{\"notice\":\"Uniswap pool that we accept LP tokens from\"},\"release()\":{\"notice\":\"Releases granted tokens\"},\"releasedTokens(address)\":{\"notice\":\"The amount of OIL tokens that were already released during vesting period\"},\"rewardPointsEarned(address)\":{\"notice\":\"\\\"Reward points\\\" each user earned (would be relative to totalRewardPoints to get the percentage)\"},\"setPoolToken(address,address)\":{\"notice\":\"Initialize poolToken when OIL<>USDC Uniswap pool is available\"},\"stakes(address)\":{\"notice\":\"Active stakes for each user\"},\"stakingFundAmount()\":{\"notice\":\"Amount of Staking Bonus Fund (500 000 OIL), Oiler funds must be here, approved and ready to be transferredFrom\"},\"stakingProgramEndsBlock()\":{\"notice\":\"Block when Staking Program ends          \"},\"totalRewardPoints()\":{\"notice\":\"Total \\\"reward points\\\" all users earned\"},\"unlockTokens()\":{\"notice\":\"Unlock the tokens and get the rewardThis can be called at any time, even after Staking Program end block\"}},\"notice\":\"Staking contract assumes there is a Staking Program going on until a specified Staking Program End Date. And there is an amount of Oiler tokens that is gonna be given away to incentivise participation in the Staking Program (called StakingFund).  During this Program - users commit to lock tokens for some period of time, earning RewardPoints (if they don't unlock prematurely). RewardPoints multiplier grows linearly with the locking period length (see the formula in calculateStakingRewardPoints() function)  After the end of the Staking Program - the amount of RewardPoints earned by each user is relatively compared to the total RewardPoints earned by all staking participants - and the OIL tokens from StakingFund are divided among them accordingly, by their RewardPoints proportions.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"token-staking(copy)(copy)/contracts/Staking.sol\":\"Staking\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"token-staking(copy)(copy)/contracts/Staking.sol\":{\"keccak256\":\"0x26e1918e9d3de12c8b3a8c980513637175faea101226f231648d6619b0599851\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c18687c00eb66e7478f81651c42109e63da9e262318d28e33405c060f9ec874a\",\"dweb:/ipfs/QmPVj9phF5Y5nRNZM2ZPTH2TcWr4HAVh4MxkjGtZkRV6er\"]},\"token-staking/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x3138ea0baa52800b416d6c3a25ab1f366ebf5d744d0158f4b347fe5882ccbe3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd850b6d164fbdf2abcf4e6828ee1f3e17508627cbf8f487805c616f3d6816a5\",\"dweb:/ipfs/QmPNJmXfo3fUbEwZPDtA7bAYLX3bekxyuLzw5Sui2kKA64\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 18,
								"contract": "token-staking(copy)(copy)/contracts/Staking.sol:Staking",
								"label": "stakes",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_struct(Stake)12_storage)"
							},
							{
								"astId": 23,
								"contract": "token-staking(copy)(copy)/contracts/Staking.sol:Staking",
								"label": "rewardPointsEarned",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 26,
								"contract": "token-staking(copy)(copy)/contracts/Staking.sol:Staking",
								"label": "totalRewardPoints",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 36,
								"contract": "token-staking(copy)(copy)/contracts/Staking.sol:Staking",
								"label": "poolToken",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(IERC20)786"
							},
							{
								"astId": 45,
								"contract": "token-staking(copy)(copy)/contracts/Staking.sol:Staking",
								"label": "grantedTokens",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 50,
								"contract": "token-staking(copy)(copy)/contracts/Staking.sol:Staking",
								"label": "releasedTokens",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)786": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(Stake)12_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct Staking.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)12_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(Stake)12_storage": {
								"encoding": "inplace",
								"label": "struct Staking.Stake",
								"members": [
									{
										"astId": 5,
										"contract": "token-staking(copy)(copy)/contracts/Staking.sol:Staking",
										"label": "tokenAmount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint72"
									},
									{
										"astId": 7,
										"contract": "token-staking(copy)(copy)/contracts/Staking.sol:Staking",
										"label": "lockingPeriodInBlocks",
										"offset": 9,
										"slot": "0",
										"type": "t_uint24"
									},
									{
										"astId": 9,
										"contract": "token-staking(copy)(copy)/contracts/Staking.sol:Staking",
										"label": "startBlock",
										"offset": 12,
										"slot": "0",
										"type": "t_uint32"
									},
									{
										"astId": 11,
										"contract": "token-staking(copy)(copy)/contracts/Staking.sol:Staking",
										"label": "expectedStakingRewardPoints",
										"offset": 16,
										"slot": "0",
										"type": "t_uint128"
									}
								],
								"numberOfBytes": "32"
							},
							"t_uint128": {
								"encoding": "inplace",
								"label": "uint128",
								"numberOfBytes": "16"
							},
							"t_uint24": {
								"encoding": "inplace",
								"label": "uint24",
								"numberOfBytes": "3"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint32": {
								"encoding": "inplace",
								"label": "uint32",
								"numberOfBytes": "4"
							},
							"t_uint72": {
								"encoding": "inplace",
								"label": "uint72",
								"numberOfBytes": "9"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {
							"calculateStakingRewardPoints(uint72,uint24)": {
								"notice": "Calculates the RewardPoints user will earn for a given tokenAmount locked for a given period"
							},
							"getRewards()": {
								"notice": "This can only be called after the Staking Program ended"
							},
							"grantedTokens(address)": {
								"notice": "The amount of OIL tokens earned, granted to be released during vesting period "
							},
							"lockTokens(uint72,uint24)": {
								"notice": "Lock the LP tokens for a specified period of Blocks.Can only be called before Staking Program ends.And the locking period can't last longer than the end of Staking Program block."
							},
							"oilerToken()": {
								"notice": "Oiler token that will be given as a reward"
							},
							"poolToken()": {
								"notice": "Uniswap pool that we accept LP tokens from"
							},
							"release()": {
								"notice": "Releases granted tokens"
							},
							"releasedTokens(address)": {
								"notice": "The amount of OIL tokens that were already released during vesting period"
							},
							"rewardPointsEarned(address)": {
								"notice": "\"Reward points\" each user earned (would be relative to totalRewardPoints to get the percentage)"
							},
							"setPoolToken(address,address)": {
								"notice": "Initialize poolToken when OIL<>USDC Uniswap pool is available"
							},
							"stakes(address)": {
								"notice": "Active stakes for each user"
							},
							"stakingFundAmount()": {
								"notice": "Amount of Staking Bonus Fund (500 000 OIL), Oiler funds must be here, approved and ready to be transferredFrom"
							},
							"stakingProgramEndsBlock()": {
								"notice": "Block when Staking Program ends          "
							},
							"totalRewardPoints()": {
								"notice": "Total \"reward points\" all users earned"
							},
							"unlockTokens()": {
								"notice": "Unlock the tokens and get the rewardThis can be called at any time, even after Staking Program end block"
							}
						},
						"notice": "Staking contract assumes there is a Staking Program going on until a specified Staking Program End Date. And there is an amount of Oiler tokens that is gonna be given away to incentivise participation in the Staking Program (called StakingFund).  During this Program - users commit to lock tokens for some period of time, earning RewardPoints (if they don't unlock prematurely). RewardPoints multiplier grows linearly with the locking period length (see the formula in calculateStakingRewardPoints() function)  After the end of the Staking Program - the amount of RewardPoints earned by each user is relatively compared to the total RewardPoints earned by all staking participants - and the OIL tokens from StakingFund are divided among them accordingly, by their RewardPoints proportions.",
						"version": 1
					}
				}
			},
			"token-staking/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"token-staking/@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":5000000},\"remappings\":[]},\"sources\":{\"token-staking/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x3138ea0baa52800b416d6c3a25ab1f366ebf5d744d0158f4b347fe5882ccbe3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dd850b6d164fbdf2abcf4e6828ee1f3e17508627cbf8f487805c616f3d6816a5\",\"dweb:/ipfs/QmPNJmXfo3fUbEwZPDtA7bAYLX3bekxyuLzw5Sui2kKA64\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"token-staking(copy)(copy)/contracts/Staking.sol": {
				"ast": {
					"absolutePath": "token-staking(copy)(copy)/contracts/Staking.sol",
					"exportedSymbols": {
						"IERC20": [
							786
						],
						"Staking": [
							708
						]
					},
					"id": 709,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"0.8",
								".4"
							],
							"nodeType": "PragmaDirective",
							"src": "1306:22:0"
						},
						{
							"absolutePath": "token-staking/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "token-staking/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 709,
							"sourceUnit": 787,
							"src": "1330:70:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "1782:829:0",
								"text": " @notice Staking contract assumes there is a Staking Program going on until a specified Staking Program End Date.\n And there is an amount of Oiler tokens that is gonna be given away to incentivise participation in the Staking Program (called StakingFund).\n \n During this Program - users commit to lock tokens for some period of time, earning RewardPoints (if they don't unlock prematurely).\n RewardPoints multiplier grows linearly with the locking period length (see the formula in calculateStakingRewardPoints() function)\n \n After the end of the Staking Program - the amount of RewardPoints earned by each user is relatively compared to the total RewardPoints\n earned by all staking participants - and the OIL tokens from StakingFund are divided among them accordingly, by their RewardPoints proportions."
							},
							"fullyImplemented": true,
							"id": 708,
							"linearizedBaseContracts": [
								708
							],
							"name": "Staking",
							"nameLocation": "2621:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Staking.Stake",
									"id": 12,
									"members": [
										{
											"constant": false,
											"id": 5,
											"mutability": "mutable",
											"name": "tokenAmount",
											"nameLocation": "4225:11:0",
											"nodeType": "VariableDeclaration",
											"scope": 12,
											"src": "4218:18:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint72",
												"typeString": "uint72"
											},
											"typeName": {
												"id": 4,
												"name": "uint72",
												"nodeType": "ElementaryTypeName",
												"src": "4218:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint72",
													"typeString": "uint72"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 7,
											"mutability": "mutable",
											"name": "lockingPeriodInBlocks",
											"nameLocation": "4370:21:0",
											"nodeType": "VariableDeclaration",
											"scope": 12,
											"src": "4363:28:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint24",
												"typeString": "uint24"
											},
											"typeName": {
												"id": 6,
												"name": "uint24",
												"nodeType": "ElementaryTypeName",
												"src": "4363:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 9,
											"mutability": "mutable",
											"name": "startBlock",
											"nameLocation": "4505:10:0",
											"nodeType": "VariableDeclaration",
											"scope": 12,
											"src": "4498:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint32",
												"typeString": "uint32"
											},
											"typeName": {
												"id": 8,
												"name": "uint32",
												"nodeType": "ElementaryTypeName",
												"src": "4498:6:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 11,
											"mutability": "mutable",
											"name": "expectedStakingRewardPoints",
											"nameLocation": "4652:27:0",
											"nodeType": "VariableDeclaration",
											"scope": 12,
											"src": "4644:35:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint128",
												"typeString": "uint128"
											},
											"typeName": {
												"id": 10,
												"name": "uint128",
												"nodeType": "ElementaryTypeName",
												"src": "4644:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "4202:5:0",
									"nodeType": "StructDefinition",
									"scope": 708,
									"src": "4195:574:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 13,
										"nodeType": "StructuredDocumentation",
										"src": "4779:39:0",
										"text": "@notice Active stakes for each user"
									},
									"functionSelector": "16934fc4",
									"id": 18,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "4857:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 708,
									"src": "4823:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$12_storage_$",
										"typeString": "mapping(address => struct Staking.Stake)"
									},
									"typeName": {
										"id": 17,
										"keyType": {
											"id": 14,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4832:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4823:26:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$12_storage_$",
											"typeString": "mapping(address => struct Staking.Stake)"
										},
										"valueType": {
											"id": 16,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 15,
												"name": "Stake",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 12,
												"src": "4843:5:0"
											},
											"referencedDeclaration": 12,
											"src": "4843:5:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$12_storage_ptr",
												"typeString": "struct Staking.Stake"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "4870:107:0",
										"text": "@notice \"Reward points\" each user earned (would be relative to totalRewardPoints to get the percentage)"
									},
									"functionSelector": "c959360b",
									"id": 23,
									"mutability": "mutable",
									"name": "rewardPointsEarned",
									"nameLocation": "5018:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 708,
									"src": "4982:54:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 22,
										"keyType": {
											"id": 20,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "4991:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "4982:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 21,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5002:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "5047:50:0",
										"text": "@notice Total \"reward points\" all users earned"
									},
									"functionSelector": "c2e8caf6",
									"id": 26,
									"mutability": "mutable",
									"name": "totalRewardPoints",
									"nameLocation": "5117:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 708,
									"src": "5102:32:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 25,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5102:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 27,
										"nodeType": "StructuredDocumentation",
										"src": "5140:53:0",
										"text": "@notice Block when Staking Program ends          "
									},
									"functionSelector": "bc0925ae",
									"id": 29,
									"mutability": "immutable",
									"name": "stakingProgramEndsBlock",
									"nameLocation": "5223:23:0",
									"nodeType": "VariableDeclaration",
									"scope": 708,
									"src": "5198:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 28,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5198:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 30,
										"nodeType": "StructuredDocumentation",
										"src": "5252:122:0",
										"text": "@notice Amount of Staking Bonus Fund (500 000 OIL), Oiler funds must be here, approved and ready to be transferredFrom"
									},
									"functionSelector": "52946b04",
									"id": 32,
									"mutability": "immutable",
									"name": "stakingFundAmount",
									"nameLocation": "5404:17:0",
									"nodeType": "VariableDeclaration",
									"scope": 708,
									"src": "5379:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 31,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5379:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "5432:54:0",
										"text": "@notice Uniswap pool that we accept LP tokens from"
									},
									"functionSelector": "cbdf382c",
									"id": 36,
									"mutability": "mutable",
									"name": "poolToken",
									"nameLocation": "5505:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 708,
									"src": "5491:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$786",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 35,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 34,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 786,
											"src": "5491:6:0"
										},
										"referencedDeclaration": 786,
										"src": "5491:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$786",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 37,
										"nodeType": "StructuredDocumentation",
										"src": "5520:54:0",
										"text": "@notice Oiler token that will be given as a reward"
									},
									"functionSelector": "81e9207d",
									"id": 40,
									"mutability": "immutable",
									"name": "oilerToken",
									"nameLocation": "5603:10:0",
									"nodeType": "VariableDeclaration",
									"scope": 708,
									"src": "5579:34:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$786",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 39,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 38,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 786,
											"src": "5579:6:0"
										},
										"referencedDeclaration": 786,
										"src": "5579:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$786",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "5624:90:0",
										"text": "@notice The amount of OIL tokens earned, granted to be released during vesting period "
									},
									"functionSelector": "e0e4a722",
									"id": 45,
									"mutability": "mutable",
									"name": "grantedTokens",
									"nameLocation": "5755:13:0",
									"nodeType": "VariableDeclaration",
									"scope": 708,
									"src": "5719:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 44,
										"keyType": {
											"id": 42,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5728:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5719:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 43,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5739:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 46,
										"nodeType": "StructuredDocumentation",
										"src": "5774:85:0",
										"text": "@notice The amount of OIL tokens that were already released during vesting period"
									},
									"functionSelector": "70ff852b",
									"id": 50,
									"mutability": "mutable",
									"name": "releasedTokens",
									"nameLocation": "5900:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 708,
									"src": "5864:50:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 49,
										"keyType": {
											"id": 47,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "5873:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "5864:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 48,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "5884:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "5925:46:0",
										"text": "@dev In blocks - should be around 100 days"
									},
									"functionSelector": "1514617e",
									"id": 53,
									"mutability": "immutable",
									"name": "vestingDuration",
									"nameLocation": "6001:15:0",
									"nodeType": "VariableDeclaration",
									"scope": 708,
									"src": "5976:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 52,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "5976:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 70,
										"nodeType": "Block",
										"src": "6095:92:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 65,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 59,
																		"name": "poolToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 36,
																		"src": "6121:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$786",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$786",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 58,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6113:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 57,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6113:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 60,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6113:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307830",
																		"id": 63,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6143:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 62,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6135:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 61,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6135:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 64,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6135:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6113:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "706f6f6c546f6b656e206e6f7420736574",
															"id": 66,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6149:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baaab41cf1af04b33672a25d6c62a56d368464d86a10d2970d4d31293d0db24a",
																"typeString": "literal_string \"poolToken not set\""
															},
															"value": "poolToken not set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baaab41cf1af04b33672a25d6c62a56d368464d86a10d2970d4d31293d0db24a",
																"typeString": "literal_string \"poolToken not set\""
															}
														],
														"id": 56,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6105:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6105:64:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 68,
												"nodeType": "ExpressionStatement",
												"src": "6105:64:0"
											},
											{
												"id": 69,
												"nodeType": "PlaceholderStatement",
												"src": "6179:1:0"
											}
										]
									},
									"documentation": {
										"id": 54,
										"nodeType": "StructuredDocumentation",
										"src": "6023:43:0",
										"text": "@dev Check if poolToken was initialized"
									},
									"id": 71,
									"name": "poolTokenSet",
									"nameLocation": "6080:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6092:2:0"
									},
									"src": "6071:116:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 72,
										"nodeType": "StructuredDocumentation",
										"src": "6193:45:0",
										"text": "@dev Owner is used only in setPoolToken()"
									},
									"functionSelector": "8da5cb5b",
									"id": 74,
									"mutability": "immutable",
									"name": "owner",
									"nameLocation": "6268:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 708,
									"src": "6243:30:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 73,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "6243:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "6342:87:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 78,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6360:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "6360:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 80,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 74,
																"src": "6374:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6360:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e206f6e6c792062652063616c6c6564206279206f776e6572",
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6381:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c1afbdaa0ffb21f43f34bdebbd4895f3e6a5d4de4e77864bde1be59aa53542b2",
																"typeString": "literal_string \"Can only be called by owner\""
															},
															"value": "Can only be called by owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c1afbdaa0ffb21f43f34bdebbd4895f3e6a5d4de4e77864bde1be59aa53542b2",
																"typeString": "literal_string \"Can only be called by owner\""
															}
														],
														"id": 77,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6352:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6352:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "6352:59:0"
											},
											{
												"id": 85,
												"nodeType": "PlaceholderStatement",
												"src": "6421:1:0"
											}
										]
									},
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "6280:36:0",
										"text": "@dev Used only in setPoolToken()"
									},
									"id": 87,
									"name": "onlyOwner",
									"nameLocation": "6330:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6339:2:0"
									},
									"src": "6321:108:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "7253:416:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 107,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 102,
																"name": "owner_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 98,
																"src": "7271:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307830",
																		"id": 105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7289:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 104,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7281:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 103,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7281:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 106,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7281:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7271:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e657220616464726573732063616e6e6f74206265207a65726f",
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7295:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_83f15613d50744e36233662068435f875a75fdb9868ea86636d56800cc9f79af",
																"typeString": "literal_string \"Owner address cannot be zero\""
															},
															"value": "Owner address cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_83f15613d50744e36233662068435f875a75fdb9868ea86636d56800cc9f79af",
																"typeString": "literal_string \"Owner address cannot be zero\""
															}
														],
														"id": 101,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7263:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7263:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 110,
												"nodeType": "ExpressionStatement",
												"src": "7263:63:0"
											},
											{
												"expression": {
													"id": 113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 111,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 74,
														"src": "7336:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 112,
														"name": "owner_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "7344:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7336:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 114,
												"nodeType": "ExpressionStatement",
												"src": "7336:14:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 116,
																"name": "oilerToken_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "7369:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307830",
																		"id": 119,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7392:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 118,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7384:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 117,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7384:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 120,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7384:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7369:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "6f696c6572546f6b656e20616464726573732063616e6e6f74206265207a65726f",
															"id": 122,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7398:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_a9e37c7970c290c2b0169155873f1318b42e2d4175bc114412df2e2ee1b730cb",
																"typeString": "literal_string \"oilerToken address cannot be zero\""
															},
															"value": "oilerToken address cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_a9e37c7970c290c2b0169155873f1318b42e2d4175bc114412df2e2ee1b730cb",
																"typeString": "literal_string \"oilerToken address cannot be zero\""
															}
														],
														"id": 115,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7361:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7361:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "7361:73:0"
											},
											{
												"expression": {
													"id": 129,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 125,
														"name": "oilerToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "7444:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$786",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 127,
																"name": "oilerToken_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 90,
																"src": "7464:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 126,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "7457:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$786_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 128,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7457:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$786",
															"typeString": "contract IERC20"
														}
													},
													"src": "7444:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$786",
														"typeString": "contract IERC20"
													}
												},
												"id": 130,
												"nodeType": "ExpressionStatement",
												"src": "7444:32:0"
											},
											{
												"expression": {
													"id": 136,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 131,
														"name": "stakingProgramEndsBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 29,
														"src": "7495:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 132,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "7521:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 133,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "number",
															"nodeType": "MemberAccess",
															"src": "7521:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 134,
															"name": "stakingDurationInBlocks_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 92,
															"src": "7536:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "7521:39:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7495:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 137,
												"nodeType": "ExpressionStatement",
												"src": "7495:65:0"
											},
											{
												"expression": {
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 138,
														"name": "vestingDuration",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 53,
														"src": "7570:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 139,
														"name": "vestingDuration_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "7588:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7570:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 141,
												"nodeType": "ExpressionStatement",
												"src": "7570:34:0"
											},
											{
												"expression": {
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 142,
														"name": "stakingFundAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 32,
														"src": "7624:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 143,
														"name": "stakingFundAmount_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "7644:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7624:38:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "7624:38:0"
											}
										]
									},
									"documentation": {
										"id": 88,
										"nodeType": "StructuredDocumentation",
										"src": "6435:676:0",
										"text": " @dev before deploying the stakingFundAddress must have set allowances on behalf of that contract. The address can be predicted basing on the CREATE or CREATE2 opcode.\n @param oilerToken_ - address of the token in which rewards will be payed off.\n @param stakingDurationInBlocks_ - Number of blocks after which staking will end.\n @param stakingFundAmount_ - Amount of tokens to be payed of as rewards.\n @param vestingDuration_ - Number of blocks after which OIL tokens earned by staking will be released (duration of Vesting period).\n @param owner_ - Owner of the contract (is used to initialize poolToken after it's available)."
									},
									"id": 147,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "oilerToken_",
												"nameLocation": "7136:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "7128:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 89,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7128:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "stakingDurationInBlocks_",
												"nameLocation": "7157:24:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "7149:32:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7149:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "stakingFundAmount_",
												"nameLocation": "7191:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "7183:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 93,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7183:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "vestingDuration_",
												"nameLocation": "7219:16:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "7211:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7211:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 98,
												"mutability": "mutable",
												"name": "owner_",
												"nameLocation": "7245:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "7237:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 97,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7127:125:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7253:0:0"
									},
									"scope": 708,
									"src": "7116:553:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "7841:720:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 166,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 160,
																		"name": "poolToken",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 36,
																		"src": "7867:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$786",
																			"typeString": "contract IERC20"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$786",
																			"typeString": "contract IERC20"
																		}
																	],
																	"id": 159,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7859:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 158,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7859:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 161,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7859:18:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307830",
																		"id": 164,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7889:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 163,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7881:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 162,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7881:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 165,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7881:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7859:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "706f6f6c546f6b656e2077617320616c726561647920736574",
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7895:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f49325f1961ffe577581956fc74c87e3c797c6d9a3bf9adf95b186a86eb8bca0",
																"typeString": "literal_string \"poolToken was already set\""
															},
															"value": "poolToken was already set"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f49325f1961ffe577581956fc74c87e3c797c6d9a3bf9adf95b186a86eb8bca0",
																"typeString": "literal_string \"poolToken was already set\""
															}
														],
														"id": 157,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7851:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7851:72:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 169,
												"nodeType": "ExpressionStatement",
												"src": "7851:72:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 176,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 171,
																"name": "poolToken_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 150,
																"src": "7941:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "307830",
																		"id": 174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7963:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0x0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 173,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7955:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 172,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7955:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7955:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7941:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "706f6f6c546f6b656e20616464726573732063616e6e6f74206265207a65726f",
															"id": 177,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7969:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_94bb83f969d01c78c03c2937a1d7cdba3c6b39448e0a8fec49f98ae3315b3426",
																"typeString": "literal_string \"poolToken address cannot be zero\""
															},
															"value": "poolToken address cannot be zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_94bb83f969d01c78c03c2937a1d7cdba3c6b39448e0a8fec49f98ae3315b3426",
																"typeString": "literal_string \"poolToken address cannot be zero\""
															}
														],
														"id": 170,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7933:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 178,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7933:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 179,
												"nodeType": "ExpressionStatement",
												"src": "7933:71:0"
											},
											{
												"expression": {
													"id": 184,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 180,
														"name": "poolToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "8014:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$786",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 182,
																"name": "poolToken_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 150,
																"src": "8033:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 181,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 786,
															"src": "8026:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$786_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8026:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$786",
															"typeString": "contract IERC20"
														}
													},
													"src": "8014:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$786",
														"typeString": "contract IERC20"
													}
												},
												"id": 185,
												"nodeType": "ExpressionStatement",
												"src": "8014:30:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 191,
																		"name": "stakingFundAddress_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 152,
																		"src": "8164:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 188,
																				"name": "oilerToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 40,
																				"src": "8142:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$786",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$786",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 187,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 786,
																			"src": "8135:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$786_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 189,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8135:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$786",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 190,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 725,
																	"src": "8135:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 192,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8135:49:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 193,
																"name": "stakingFundAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "8188:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8135:70:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e6746756e6420646f65736e2774206861766520656e6f756768204f494c2062616c616e6365",
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8207:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b9edd99dd8d250815668679e6c075641f1995b1ddaf15ec4c0dabacd9db8c322",
																"typeString": "literal_string \"StakingFund doesn't have enough OIL balance\""
															},
															"value": "StakingFund doesn't have enough OIL balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b9edd99dd8d250815668679e6c075641f1995b1ddaf15ec4c0dabacd9db8c322",
																"typeString": "literal_string \"StakingFund doesn't have enough OIL balance\""
															}
														],
														"id": 186,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8127:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8127:126:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "8127:126:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 203,
																		"name": "stakingFundAddress_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 152,
																		"src": "8300:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"id": 206,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "8329:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Staking_$708",
																					"typeString": "contract Staking"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Staking_$708",
																					"typeString": "contract Staking"
																				}
																			],
																			"id": 205,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8321:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 204,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8321:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 207,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8321:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"arguments": [
																			{
																				"id": 200,
																				"name": "oilerToken",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 40,
																				"src": "8278:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$786",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$786",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 199,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 786,
																			"src": "8271:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$786_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8271:18:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$786",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "allowance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 745,
																	"src": "8271:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view external returns (uint256)"
																	}
																},
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8271:64:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 209,
																"name": "stakingFundAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 32,
																"src": "8339:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8271:85:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5374616b696e6746756e6420646f65736e2774206861766520656e6f75676820616c6c6f77616e6365",
															"id": 211,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8358:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8ec3e015200e1f9e6e0943e9e536de8fd2eccd7db3e2c39533b307d29bacc8bf",
																"typeString": "literal_string \"StakingFund doesn't have enough allowance\""
															},
															"value": "StakingFund doesn't have enough allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8ec3e015200e1f9e6e0943e9e536de8fd2eccd7db3e2c39533b307d29bacc8bf",
																"typeString": "literal_string \"StakingFund doesn't have enough allowance\""
															}
														],
														"id": 198,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8263:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8263:139:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "8263:139:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 219,
																	"name": "stakingFundAddress_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 152,
																	"src": "8452:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 222,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "8481:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Staking_$708",
																				"typeString": "contract Staking"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Staking_$708",
																				"typeString": "contract Staking"
																			}
																		],
																		"id": 221,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8473:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 220,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8473:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 223,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8473:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 224,
																	"name": "stakingFundAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "8488:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"arguments": [
																		{
																			"id": 216,
																			"name": "oilerToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 40,
																			"src": "8427:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$786",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$786",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 215,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 786,
																		"src": "8420:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$786_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 217,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8420:18:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$786",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 218,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 767,
																"src": "8420:31:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8420:86:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657246726f6d206f66204f494c2066726f6d205374616b696e6746756e64206661696c6564",
															"id": 226,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8508:45:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dce7fcdf8c70b472dd9931854d7bcc019b46831d2b96b88b381e506bbb74c94f",
																"typeString": "literal_string \"TransferFrom of OIL from StakingFund failed\""
															},
															"value": "TransferFrom of OIL from StakingFund failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dce7fcdf8c70b472dd9931854d7bcc019b46831d2b96b88b381e506bbb74c94f",
																"typeString": "literal_string \"TransferFrom of OIL from StakingFund failed\""
															}
														],
														"id": 214,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8412:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8412:142:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "8412:142:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "7675:73:0",
										"text": "@notice Initialize poolToken when OIL<>USDC Uniswap pool is available"
									},
									"functionSelector": "f6ffab88",
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 155,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 87,
												"src": "7831:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "7831:9:0"
										}
									],
									"name": "setPoolToken",
									"nameLocation": "7762:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 153,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "poolToken_",
												"nameLocation": "7783:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "7775:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 149,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7775:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "stakingFundAddress_",
												"nameLocation": "7803:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 230,
												"src": "7795:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7795:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7774:49:0"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7841:0:0"
									},
									"scope": 708,
									"src": "7753:808:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 269,
										"nodeType": "Block",
										"src": "9058:547:0",
										"statements": [
											{
												"assignments": [
													241
												],
												"declarations": [
													{
														"constant": false,
														"id": 241,
														"mutability": "mutable",
														"name": "stakingRewardPoints",
														"nameLocation": "9345:19:0",
														"nodeType": "VariableDeclaration",
														"scope": 269,
														"src": "9337:27:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 240,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9337:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 256,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 244,
																	"name": "tokenAmount_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 233,
																	"src": "9375:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint72",
																		"typeString": "uint72"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint72",
																		"typeString": "uint72"
																	}
																],
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9367:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 242,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9367:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 245,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9367:21:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"arguments": [
																{
																	"id": 248,
																	"name": "lockingPeriodInBlocks_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 235,
																	"src": "9399:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																],
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9391:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 246,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9391:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9391:31:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9367:55:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"arguments": [
															{
																"id": 253,
																"name": "lockingPeriodInBlocks_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "9433:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint24",
																	"typeString": "uint24"
																}
															],
															"id": 252,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9425:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 251,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "9425:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 254,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9425:31:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9367:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9337:119:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 260,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 258,
																"name": "stakingRewardPoints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 241,
																"src": "9474:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9496:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9474:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e65697468657220746f6b656e416d6f756e74206e6f72206c6f636b696e67506572696f6420636f756c646e27742062652030",
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9499:53:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6e6a919188e639c6fec1ac974bcd532a51e7cb501fa68e5b2f08f294731a4b88",
																"typeString": "literal_string \"Neither tokenAmount nor lockingPeriod couldn't be 0\""
															},
															"value": "Neither tokenAmount nor lockingPeriod couldn't be 0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6e6a919188e639c6fec1ac974bcd532a51e7cb501fa68e5b2f08f294731a4b88",
																"typeString": "literal_string \"Neither tokenAmount nor lockingPeriod couldn't be 0\""
															}
														],
														"id": 257,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9466:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 262,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9466:87:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 263,
												"nodeType": "ExpressionStatement",
												"src": "9466:87:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 266,
															"name": "stakingRewardPoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 241,
															"src": "9578:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 265,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9570:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": {
															"id": 264,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "9570:7:0",
															"typeDescriptions": {}
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9570:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 239,
												"id": 268,
												"nodeType": "Return",
												"src": "9563:35:0"
											}
										]
									},
									"documentation": {
										"id": 231,
										"nodeType": "StructuredDocumentation",
										"src": "8567:366:0",
										"text": " @notice Calculates the RewardPoints user will earn for a given tokenAmount locked for a given period\n @dev If any parameter is zero - it will fail, thus we save gas on \"requires\" by not checking in other places\n @param tokenAmount_ - Amount of tokens to be stake.\n @param lockingPeriodInBlocks_ - Lock duration defined in blocks."
									},
									"functionSelector": "798633b9",
									"id": 270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "calculateStakingRewardPoints",
									"nameLocation": "8947:28:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 236,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 233,
												"mutability": "mutable",
												"name": "tokenAmount_",
												"nameLocation": "8983:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "8976:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint72",
													"typeString": "uint72"
												},
												"typeName": {
													"id": 232,
													"name": "uint72",
													"nodeType": "ElementaryTypeName",
													"src": "8976:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "lockingPeriodInBlocks_",
												"nameLocation": "9004:22:0",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "8997:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 234,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "8997:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8975:52:0"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "9049:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 237,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "9049:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9048:9:0"
									},
									"scope": 708,
									"src": "8938:667:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 362,
										"nodeType": "Block",
										"src": "10090:1567:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 281,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "10248:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 282,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "10248:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 283,
																	"name": "stakingProgramEndsBlock",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 29,
																	"src": "10264:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 284,
																	"name": "lockingPeriodInBlocks_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 275,
																	"src": "10290:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																"src": "10264:48:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10248:64:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7572206c6f636b20706572696f642065786365656473205374616b696e672050726f6772616d206475726174696f6e",
															"id": 287,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10314:51:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5735093ee1c27da93975faba569ca18ca1f3facf35d6dfe2cae61f4fc1bf709a",
																"typeString": "literal_string \"Your lock period exceeds Staking Program duration\""
															},
															"value": "Your lock period exceeds Staking Program duration"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5735093ee1c27da93975faba569ca18ca1f3facf35d6dfe2cae61f4fc1bf709a",
																"typeString": "literal_string \"Your lock period exceeds Staking Program duration\""
															}
														],
														"id": 280,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10240:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10240:126:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 289,
												"nodeType": "ExpressionStatement",
												"src": "10240:126:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint72",
																"typeString": "uint72"
															},
															"id": 297,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 291,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 18,
																		"src": "10384:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$12_storage_$",
																			"typeString": "mapping(address => struct Staking.Stake storage ref)"
																		}
																	},
																	"id": 294,
																	"indexExpression": {
																		"expression": {
																			"id": 292,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "10391:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 293,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "10391:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "10384:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$12_storage",
																		"typeString": "struct Staking.Stake storage ref"
																	}
																},
																"id": 295,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "tokenAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5,
																"src": "10384:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint72",
																	"typeString": "uint72"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 296,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10418:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10384:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416c7265616479207374616b696e67",
															"id": 298,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10421:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe",
																"typeString": "literal_string \"Already staking\""
															},
															"value": "Already staking"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe",
																"typeString": "literal_string \"Already staking\""
															}
														],
														"id": 290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10376:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10376:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 300,
												"nodeType": "ExpressionStatement",
												"src": "10376:63:0"
											},
											{
												"assignments": [
													302
												],
												"declarations": [
													{
														"constant": false,
														"id": 302,
														"mutability": "mutable",
														"name": "expectedStakingRewardPoints",
														"nameLocation": "10578:27:0",
														"nodeType": "VariableDeclaration",
														"scope": 362,
														"src": "10570:35:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														},
														"typeName": {
															"id": 301,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "10570:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 307,
												"initialValue": {
													"arguments": [
														{
															"id": 304,
															"name": "tokenAmount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "10637:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint72",
																"typeString": "uint72"
															}
														},
														{
															"id": 305,
															"name": "lockingPeriodInBlocks_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 275,
															"src": "10651:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint72",
																"typeString": "uint72"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														],
														"id": 303,
														"name": "calculateStakingRewardPoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "10608:28:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint72_$_t_uint24_$returns$_t_uint128_$",
															"typeString": "function (uint72,uint24) pure returns (uint128)"
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10608:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10570:104:0"
											},
											{
												"assignments": [
													310
												],
												"declarations": [
													{
														"constant": false,
														"id": 310,
														"mutability": "mutable",
														"name": "stake",
														"nameLocation": "10698:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 362,
														"src": "10685:18:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$12_memory_ptr",
															"typeString": "struct Staking.Stake"
														},
														"typeName": {
															"id": 309,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 308,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 12,
																"src": "10685:5:0"
															},
															"referencedDeclaration": 12,
															"src": "10685:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$12_storage_ptr",
																"typeString": "struct Staking.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 321,
												"initialValue": {
													"arguments": [
														{
															"id": 312,
															"name": "tokenAmount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "10712:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint72",
																"typeString": "uint72"
															}
														},
														{
															"id": 313,
															"name": "lockingPeriodInBlocks_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 275,
															"src": "10726:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 316,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "10757:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 317,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "number",
																	"nodeType": "MemberAccess",
																	"src": "10757:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 315,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10750:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint32_$",
																	"typeString": "type(uint32)"
																},
																"typeName": {
																	"id": 314,
																	"name": "uint32",
																	"nodeType": "ElementaryTypeName",
																	"src": "10750:6:0",
																	"typeDescriptions": {}
																}
															},
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10750:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															}
														},
														{
															"id": 319,
															"name": "expectedStakingRewardPoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "10772:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint72",
																"typeString": "uint72"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_uint32",
																"typeString": "uint32"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"id": 311,
														"name": "Stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "10706:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_struct$_Stake_$12_storage_ptr_$",
															"typeString": "type(struct Staking.Stake storage pointer)"
														}
													},
													"id": 320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "structConstructorCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10706:94:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$12_memory_ptr",
														"typeString": "struct Staking.Stake memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10685:115:0"
											},
											{
												"expression": {
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 322,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "10810:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$12_storage_$",
																"typeString": "mapping(address => struct Staking.Stake storage ref)"
															}
														},
														"id": 325,
														"indexExpression": {
															"expression": {
																"id": 323,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "10817:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "10817:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10810:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$12_storage",
															"typeString": "struct Staking.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 326,
														"name": "stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 310,
														"src": "10831:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$12_memory_ptr",
															"typeString": "struct Staking.Stake memory"
														}
													},
													"src": "10810:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$12_storage",
														"typeString": "struct Staking.Stake storage ref"
													}
												},
												"id": 328,
												"nodeType": "ExpressionStatement",
												"src": "10810:26:0"
											},
											{
												"expression": {
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 329,
														"name": "totalRewardPoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "11096:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 330,
														"name": "expectedStakingRewardPoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "11117:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "11096:48:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "11096:48:0"
											},
											{
												"expression": {
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 333,
															"name": "rewardPointsEarned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "11154:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 336,
														"indexExpression": {
															"expression": {
																"id": 334,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11173:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11173:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "11154:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 337,
														"name": "expectedStakingRewardPoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "11188:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "11154:61:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "11154:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 343,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "11466:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 344,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "11466:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 347,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "11486:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Staking_$708",
																				"typeString": "contract Staking"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Staking_$708",
																				"typeString": "contract Staking"
																			}
																		],
																		"id": 346,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "11478:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 345,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "11478:7:0",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "11478:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 349,
																	"name": "tokenAmount_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 273,
																	"src": "11493:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint72",
																		"typeString": "uint72"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint72",
																		"typeString": "uint72"
																	}
																],
																"expression": {
																	"id": 341,
																	"name": "poolToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 36,
																	"src": "11443:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$786",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 767,
																"src": "11443:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11443:63:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e7366657246726f6d206f6620706f6f6c546f6b656e73206661696c6564",
															"id": 351,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11508:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_bd8bf05e4eeff98331c5d573ce3c5c39a2f1dfd162031e09da49c962885a911b",
																"typeString": "literal_string \"TransferFrom of poolTokens failed\""
															},
															"value": "TransferFrom of poolTokens failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_bd8bf05e4eeff98331c5d573ce3c5c39a2f1dfd162031e09da49c962885a911b",
																"typeString": "literal_string \"TransferFrom of poolTokens failed\""
															}
														],
														"id": 340,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11435:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11435:109:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "11435:109:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 355,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "11572:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "11572:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 357,
															"name": "tokenAmount_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "11584:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint72",
																"typeString": "uint72"
															}
														},
														{
															"id": 358,
															"name": "lockingPeriodInBlocks_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 275,
															"src": "11598:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															}
														},
														{
															"id": 359,
															"name": "expectedStakingRewardPoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 302,
															"src": "11622:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint72",
																"typeString": "uint72"
															},
															{
																"typeIdentifier": "t_uint24",
																"typeString": "uint24"
															},
															{
																"typeIdentifier": "t_uint128",
																"typeString": "uint128"
															}
														],
														"id": 354,
														"name": "StakeLocked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 675,
														"src": "11560:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256,uint256)"
														}
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11560:90:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 361,
												"nodeType": "EmitStatement",
												"src": "11555:95:0"
											}
										]
									},
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "9611:382:0",
										"text": " @notice Lock the LP tokens for a specified period of Blocks.\n @notice Can only be called before Staking Program ends.\n @notice And the locking period can't last longer than the end of Staking Program block.\n @param tokenAmount_ - Amount of LP tokens to be locked.\n @param lockingPeriodInBlocks_ - locking period duration defined in blocks."
									},
									"functionSelector": "378592c8",
									"id": 363,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 278,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 277,
												"name": "poolTokenSet",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 71,
												"src": "10077:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "10077:12:0"
										}
									],
									"name": "lockTokens",
									"nameLocation": "10007:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "tokenAmount_",
												"nameLocation": "10025:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "10018:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint72",
													"typeString": "uint72"
												},
												"typeName": {
													"id": 272,
													"name": "uint72",
													"nodeType": "ElementaryTypeName",
													"src": "10018:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "lockingPeriodInBlocks_",
												"nameLocation": "10046:22:0",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "10039:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 274,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "10039:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10017:52:0"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10090:0:0"
									},
									"scope": 708,
									"src": "9998:1659:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 418,
										"nodeType": "Block",
										"src": "11859:650:0",
										"statements": [
											{
												"assignments": [
													371
												],
												"declarations": [
													{
														"constant": false,
														"id": 371,
														"mutability": "mutable",
														"name": "stake",
														"nameLocation": "11882:5:0",
														"nodeType": "VariableDeclaration",
														"scope": 418,
														"src": "11869:18:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$12_memory_ptr",
															"typeString": "struct Staking.Stake"
														},
														"typeName": {
															"id": 370,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 369,
																"name": "Stake",
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 12,
																"src": "11869:5:0"
															},
															"referencedDeclaration": 12,
															"src": "11869:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$12_storage_ptr",
																"typeString": "struct Staking.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 376,
												"initialValue": {
													"baseExpression": {
														"id": 372,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "11890:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$12_storage_$",
															"typeString": "mapping(address => struct Staking.Stake storage ref)"
														}
													},
													"id": 375,
													"indexExpression": {
														"expression": {
															"id": 373,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "11897:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "11897:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11890:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$12_storage",
														"typeString": "struct Staking.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11869:39:0"
											},
											{
												"assignments": [
													378
												],
												"declarations": [
													{
														"constant": false,
														"id": 378,
														"mutability": "mutable",
														"name": "stakeAmount",
														"nameLocation": "11927:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 418,
														"src": "11919:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 377,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11919:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 381,
												"initialValue": {
													"expression": {
														"id": 379,
														"name": "stake",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 371,
														"src": "11941:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$12_memory_ptr",
															"typeString": "struct Staking.Stake memory"
														}
													},
													"id": 380,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "tokenAmount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 5,
													"src": "11941:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11919:39:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 383,
																"name": "stakeAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 378,
																"src": "11977:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30",
																"id": 384,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11992:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11977:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f6e277420686176652061207374616b6520746f20756e6c6f636b",
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11995:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_52ac77891b100190c173ca8db34c1090b0a3a5fd7fa47169c21476dd2c32bc2f",
																"typeString": "literal_string \"You don't have a stake to unlock\""
															},
															"value": "You don't have a stake to unlock"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_52ac77891b100190c173ca8db34c1090b0a3a5fd7fa47169c21476dd2c32bc2f",
																"typeString": "literal_string \"You don't have a stake to unlock\""
															}
														],
														"id": 382,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11969:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11969:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 388,
												"nodeType": "ExpressionStatement",
												"src": "11969:61:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 394,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 390,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "12049:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 391,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "12049:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"expression": {
																	"id": 392,
																	"name": "stake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 371,
																	"src": "12064:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$12_memory_ptr",
																		"typeString": "struct Staking.Stake memory"
																	}
																},
																"id": 393,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "startBlock",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 9,
																"src": "12064:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															},
															"src": "12049:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752063616e277420776974686472617720746865207374616b6520696e207468652073616d6520626c6f636b20697420776173206c6f636b6564",
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12082:62:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_79dd45e51ab165bfcf7a14b5d794e1100e4f43c66e93d82a8f33a73acdace21c",
																"typeString": "literal_string \"You can't withdraw the stake in the same block it was locked\""
															},
															"value": "You can't withdraw the stake in the same block it was locked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_79dd45e51ab165bfcf7a14b5d794e1100e4f43c66e93d82a8f33a73acdace21c",
																"typeString": "literal_string \"You can't withdraw the stake in the same block it was locked\""
															}
														],
														"id": 389,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12041:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12041:104:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 397,
												"nodeType": "ExpressionStatement",
												"src": "12041:104:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 399,
															"name": "stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "12276:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$12_memory_ptr",
																"typeString": "struct Staking.Stake memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Stake_$12_memory_ptr",
																"typeString": "struct Staking.Stake memory"
															}
														],
														"id": 398,
														"name": "_punishEarlyWithdrawal",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 477,
														"src": "12253:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Stake_$12_memory_ptr_$returns$__$",
															"typeString": "function (struct Staking.Stake memory)"
														}
													},
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12253:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 401,
												"nodeType": "ExpressionStatement",
												"src": "12253:29:0"
											},
											{
												"expression": {
													"id": 406,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "12384:25:0",
													"subExpression": {
														"baseExpression": {
															"id": 402,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "12391:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$12_storage_$",
																"typeString": "mapping(address => struct Staking.Stake storage ref)"
															}
														},
														"id": 405,
														"indexExpression": {
															"expression": {
																"id": 403,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12398:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 404,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12398:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "12391:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$12_storage",
															"typeString": "struct Staking.Stake storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 407,
												"nodeType": "ExpressionStatement",
												"src": "12384:25:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 411,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "12447:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "12447:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 413,
																	"name": "stakeAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 378,
																	"src": "12459:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 409,
																	"name": "poolToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 36,
																	"src": "12428:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$786",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 410,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 735,
																"src": "12428:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12428:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506f6f6c20746f6b656e207472616e73666572206661696c6564",
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12473:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_33a0d73ef506feaebcf4cdd68c1a9783ad6fdd5367feedb0a0d58ce8d7b1ad1a",
																"typeString": "literal_string \"Pool token transfer failed\""
															},
															"value": "Pool token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_33a0d73ef506feaebcf4cdd68c1a9783ad6fdd5367feedb0a0d58ce8d7b1ad1a",
																"typeString": "literal_string \"Pool token transfer failed\""
															}
														],
														"id": 408,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12420:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12420:82:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "12420:82:0"
											}
										]
									},
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "11663:147:0",
										"text": " @notice Unlock the tokens and get the reward\n @notice This can be called at any time, even after Staking Program end block"
									},
									"functionSelector": "f968f493",
									"id": 419,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 367,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 366,
												"name": "poolTokenSet",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 71,
												"src": "11846:12:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "11846:12:0"
										}
									],
									"name": "unlockTokens",
									"nameLocation": "11824:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11836:2:0"
									},
									"returnParameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11859:0:0"
									},
									"scope": 708,
									"src": "11815:694:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 476,
										"nodeType": "Block",
										"src": "12672:876:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 426,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "12955:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "12955:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																},
																"id": 432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 428,
																		"name": "stake_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 423,
																		"src": "12971:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$12_memory_ptr",
																			"typeString": "struct Staking.Stake memory"
																		}
																	},
																	"id": 429,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "startBlock",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 9,
																	"src": "12971:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint32",
																		"typeString": "uint32"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"expression": {
																		"id": 430,
																		"name": "stake_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 423,
																		"src": "12991:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$12_memory_ptr",
																			"typeString": "struct Staking.Stake memory"
																		}
																	},
																	"id": 431,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "lockingPeriodInBlocks",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 7,
																	"src": "12991:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint24",
																		"typeString": "uint24"
																	}
																},
																"src": "12971:48:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint32",
																	"typeString": "uint32"
																}
															}
														],
														"id": 433,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "12970:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "12955:65:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 474,
													"nodeType": "Block",
													"src": "13401:141:0",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 464,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "13434:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 465,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "13434:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 466,
																			"name": "stake_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "13446:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$12_memory_ptr",
																				"typeString": "struct Staking.Stake memory"
																			}
																		},
																		"id": 467,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tokenAmount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5,
																		"src": "13446:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint72",
																			"typeString": "uint72"
																		}
																	},
																	{
																		"expression": {
																			"id": 468,
																			"name": "stake_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "13466:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$12_memory_ptr",
																				"typeString": "struct Staking.Stake memory"
																			}
																		},
																		"id": 469,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lockingPeriodInBlocks",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 7,
																		"src": "13466:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	},
																	{
																		"expression": {
																			"id": 470,
																			"name": "stake_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "13496:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$12_memory_ptr",
																				"typeString": "struct Staking.Stake memory"
																			}
																		},
																		"id": 471,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "expectedStakingRewardPoints",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 11,
																		"src": "13496:34:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint72",
																			"typeString": "uint72"
																		},
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		},
																		{
																			"typeIdentifier": "t_uint128",
																			"typeString": "uint128"
																		}
																	],
																	"id": 463,
																	"name": "StakeUnlocked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 695,
																	"src": "13420:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256,uint256)"
																	}
																},
																"id": 472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13420:111:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 473,
															"nodeType": "EmitStatement",
															"src": "13415:116:0"
														}
													]
												},
												"id": 475,
												"nodeType": "IfStatement",
												"src": "12951:591:0",
												"trueBody": {
													"id": 462,
													"nodeType": "Block",
													"src": "13022:373:0",
													"statements": [
														{
															"expression": {
																"id": 441,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 435,
																		"name": "rewardPointsEarned",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 23,
																		"src": "13108:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 438,
																	"indexExpression": {
																		"expression": {
																			"id": 436,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "13127:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 437,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "13127:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "13108:30:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"expression": {
																		"id": 439,
																		"name": "stake_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 423,
																		"src": "13142:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$12_memory_ptr",
																			"typeString": "struct Staking.Stake memory"
																		}
																	},
																	"id": 440,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "expectedStakingRewardPoints",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 11,
																	"src": "13142:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "13108:68:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 442,
															"nodeType": "ExpressionStatement",
															"src": "13108:68:0"
														},
														{
															"expression": {
																"id": 446,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 443,
																	"name": "totalRewardPoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 26,
																	"src": "13190:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "-=",
																"rightHandSide": {
																	"expression": {
																		"id": 444,
																		"name": "stake_",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 423,
																		"src": "13211:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Stake_$12_memory_ptr",
																			"typeString": "struct Staking.Stake memory"
																		}
																	},
																	"id": 445,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "expectedStakingRewardPoints",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 11,
																	"src": "13211:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint128",
																		"typeString": "uint128"
																	}
																},
																"src": "13190:55:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 447,
															"nodeType": "ExpressionStatement",
															"src": "13190:55:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 449,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "13289:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 450,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "13289:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"expression": {
																			"id": 451,
																			"name": "stake_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "13301:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$12_memory_ptr",
																				"typeString": "struct Staking.Stake memory"
																			}
																		},
																		"id": 452,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "tokenAmount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 5,
																		"src": "13301:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint72",
																			"typeString": "uint72"
																		}
																	},
																	{
																		"expression": {
																			"id": 453,
																			"name": "stake_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 423,
																			"src": "13321:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$12_memory_ptr",
																				"typeString": "struct Staking.Stake memory"
																			}
																		},
																		"id": 454,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "lockingPeriodInBlocks",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 7,
																		"src": "13321:28:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		}
																	},
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 455,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "13351:5:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 456,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "number",
																			"nodeType": "MemberAccess",
																			"src": "13351:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"expression": {
																				"id": 457,
																				"name": "stake_",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 423,
																				"src": "13366:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_Stake_$12_memory_ptr",
																					"typeString": "struct Staking.Stake memory"
																				}
																			},
																			"id": 458,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "startBlock",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 9,
																			"src": "13366:17:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint32",
																				"typeString": "uint32"
																			}
																		},
																		"src": "13351:32:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint72",
																			"typeString": "uint72"
																		},
																		{
																			"typeIdentifier": "t_uint24",
																			"typeString": "uint24"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 448,
																	"name": "StakeUnlockedPrematurely",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 685,
																	"src": "13264:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256,uint256,uint256)"
																	}
																},
																"id": 460,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13264:120:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 461,
															"nodeType": "EmitStatement",
															"src": "13259:125:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "12519:86:0",
										"text": " @notice If the unlock is called prematurely - we subtract the bonus"
									},
									"id": 477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_punishEarlyWithdrawal",
									"nameLocation": "12619:22:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"mutability": "mutable",
												"name": "stake_",
												"nameLocation": "12655:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 477,
												"src": "12642:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Stake_$12_memory_ptr",
													"typeString": "struct Staking.Stake"
												},
												"typeName": {
													"id": 422,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 421,
														"name": "Stake",
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 12,
														"src": "12642:5:0"
													},
													"referencedDeclaration": 12,
													"src": "12642:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$12_storage_ptr",
														"typeString": "struct Staking.Stake"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12641:21:0"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12672:0:0"
									},
									"scope": 708,
									"src": "12610:938:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 534,
										"nodeType": "Block",
										"src": "13850:1370:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 482,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "13868:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 483,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "number",
																"nodeType": "MemberAccess",
																"src": "13868:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 484,
																"name": "stakingProgramEndsBlock",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "13883:23:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13868:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f752063616e206f6e6c79206765742052657761726473206166746572205374616b696e672050726f6772616d20656e6473",
															"id": 486,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "13908:53:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c3786129cca9bd92dcb42692167cb02d02ae8b030024a781b08e7dafd22bc2fb",
																"typeString": "literal_string \"You can only get Rewards after Staking Program ends\""
															},
															"value": "You can only get Rewards after Staking Program ends"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c3786129cca9bd92dcb42692167cb02d02ae8b030024a781b08e7dafd22bc2fb",
																"typeString": "literal_string \"You can only get Rewards after Staking Program ends\""
															}
														],
														"id": 481,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13860:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13860:102:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 488,
												"nodeType": "ExpressionStatement",
												"src": "13860:102:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint72",
																"typeString": "uint72"
															},
															"id": 496,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 490,
																		"name": "stakes",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 18,
																		"src": "13980:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$12_storage_$",
																			"typeString": "mapping(address => struct Staking.Stake storage ref)"
																		}
																	},
																	"id": 493,
																	"indexExpression": {
																		"expression": {
																			"id": 491,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "13987:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 492,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "13987:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "13980:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$12_storage",
																		"typeString": "struct Staking.Stake storage ref"
																	}
																},
																"id": 494,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "tokenAmount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 5,
																"src": "13980:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint72",
																	"typeString": "uint72"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 495,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14014:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13980:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f75207374696c6c20686176652061207374616b65206c6f636b6564202d20706c6561736520756e6c6f636b2066697273742c20646f6e2774206c656176652066726565206d6f6e65792068657265",
															"id": 497,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14017:82:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4d2c35fe1a7df903955f64419a99f644f465f2a0aa959d96b99839301c2ef508",
																"typeString": "literal_string \"You still have a stake locked - please unlock first, don't leave free money here\""
															},
															"value": "You still have a stake locked - please unlock first, don't leave free money here"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4d2c35fe1a7df903955f64419a99f644f465f2a0aa959d96b99839301c2ef508",
																"typeString": "literal_string \"You still have a stake locked - please unlock first, don't leave free money here\""
															}
														],
														"id": 489,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13972:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13972:128:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "13972:128:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 501,
																	"name": "rewardPointsEarned",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "14118:18:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 504,
																"indexExpression": {
																	"expression": {
																		"id": 502,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "14137:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 503,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "14137:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "14118:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 505,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14151:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14118:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f7520646f6e2774206861766520616e7920726577617264506f696e7473",
															"id": 507,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "14154:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e5134b59355dcbbe2d4e436ec1b03c78c1275f34182c99b81e54de3ae327f5fc",
																"typeString": "literal_string \"You don't have any rewardPoints\""
															},
															"value": "You don't have any rewardPoints"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e5134b59355dcbbe2d4e436ec1b03c78c1275f34182c99b81e54de3ae327f5fc",
																"typeString": "literal_string \"You don't have any rewardPoints\""
															}
														],
														"id": 500,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14110:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14110:78:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 509,
												"nodeType": "ExpressionStatement",
												"src": "14110:78:0"
											},
											{
												"assignments": [
													511
												],
												"declarations": [
													{
														"constant": false,
														"id": 511,
														"mutability": "mutable",
														"name": "amountEarned",
														"nameLocation": "14872:12:0",
														"nodeType": "VariableDeclaration",
														"scope": 534,
														"src": "14864:20:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 510,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14864:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 520,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 519,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 517,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 512,
															"name": "stakingFundAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 32,
															"src": "14887:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "*",
														"rightExpression": {
															"baseExpression": {
																"id": 513,
																"name": "rewardPointsEarned",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 23,
																"src": "14907:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 516,
															"indexExpression": {
																"expression": {
																	"id": 514,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "14926:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "14926:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "14907:30:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "14887:50:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 518,
														"name": "totalRewardPoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 26,
														"src": "14940:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14887:70:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14864:93:0"
											},
											{
												"expression": {
													"id": 526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 521,
															"name": "rewardPointsEarned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "14967:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 524,
														"indexExpression": {
															"expression": {
																"id": 522,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "14986:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "14986:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "14967:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 525,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15000:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14967:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 527,
												"nodeType": "ExpressionStatement",
												"src": "14967:34:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 529,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "15108:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 530,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "15108:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 531,
															"name": "amountEarned",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 511,
															"src": "15120:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 528,
														"name": "_grantTokens",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 572,
														"src": "15095:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 532,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15095:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 533,
												"nodeType": "ExpressionStatement",
												"src": "15095:38:0"
											}
										]
									},
									"documentation": {
										"id": 478,
										"nodeType": "StructuredDocumentation",
										"src": "13558:258:0",
										"text": " @notice This can only be called after the Staking Program ended\n @dev Which means that all stakes lock periods are already over, and totalRewardPoints value isn't changing anymore - so we can now calculate the percentages of rewards"
									},
									"functionSelector": "0572b0cc",
									"id": 535,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRewards",
									"nameLocation": "13830:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13840:2:0"
									},
									"returnParameters": {
										"id": 480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13850:0:0"
									},
									"scope": 708,
									"src": "13821:1399:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 571,
										"nodeType": "Block",
										"src": "15605:286:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 546,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 544,
																"name": "amountEarned_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 540,
																"src": "15623:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 545,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "15639:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "15623:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "596f75206469646e2774206561726e20616e7920696e746567657220616d6f756e74206f6620776569",
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15642:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6c4dd08c63778c1a28236bdb848c48062fa51b777ba1838c68276b07c98b172b",
																"typeString": "literal_string \"You didn't earn any integer amount of wei\""
															},
															"value": "You didn't earn any integer amount of wei"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6c4dd08c63778c1a28236bdb848c48062fa51b777ba1838c68276b07c98b172b",
																"typeString": "literal_string \"You didn't earn any integer amount of wei\""
															}
														],
														"id": 543,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15615:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15615:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 549,
												"nodeType": "ExpressionStatement",
												"src": "15615:71:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 551,
																"name": "recipient_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 538,
																"src": "15704:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15726:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 553,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15718:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 552,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "15718:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 555,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15718:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "15704:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e56657374696e673a2062656e656669636961727920697320746865207a65726f2061646472657373",
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15730:47:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2418688d011b8e0830741b4ef5b95d25f3075f5a8407237c54796d2479ff21e5",
																"typeString": "literal_string \"TokenVesting: beneficiary is the zero address\""
															},
															"value": "TokenVesting: beneficiary is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_2418688d011b8e0830741b4ef5b95d25f3075f5a8407237c54796d2479ff21e5",
																"typeString": "literal_string \"TokenVesting: beneficiary is the zero address\""
															}
														],
														"id": 550,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "15696:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15696:82:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 559,
												"nodeType": "ExpressionStatement",
												"src": "15696:82:0"
											},
											{
												"expression": {
													"id": 564,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 560,
															"name": "grantedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 45,
															"src": "15788:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 562,
														"indexExpression": {
															"id": 561,
															"name": "recipient_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "15802:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "15788:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 563,
														"name": "amountEarned_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 540,
														"src": "15816:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "15788:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 565,
												"nodeType": "ExpressionStatement",
												"src": "15788:41:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 567,
															"name": "recipient_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 538,
															"src": "15858:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 568,
															"name": "amountEarned_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 540,
															"src": "15870:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 566,
														"name": "RewardGranted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 701,
														"src": "15844:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15844:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 570,
												"nodeType": "EmitStatement",
												"src": "15839:45:0"
											}
										]
									},
									"documentation": {
										"id": 536,
										"nodeType": "StructuredDocumentation",
										"src": "15392:134:0",
										"text": " @param recipient_ - Recipient of granted tokens\n @param amountEarned_ - Amount of tokens earned to be granted"
									},
									"id": 572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantTokens",
									"nameLocation": "15540:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "recipient_",
												"nameLocation": "15561:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "15553:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 537,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "15553:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "amountEarned_",
												"nameLocation": "15581:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 572,
												"src": "15573:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15573:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15552:43:0"
									},
									"returnParameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15605:0:0"
									},
									"scope": 708,
									"src": "15531:360:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 613,
										"nodeType": "Block",
										"src": "15967:345:0",
										"statements": [
											{
												"assignments": [
													577
												],
												"declarations": [
													{
														"constant": false,
														"id": 577,
														"mutability": "mutable",
														"name": "releasable",
														"nameLocation": "15985:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 613,
														"src": "15977:18:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 576,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15977:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 582,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 579,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "16016:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 580,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "16016:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 578,
														"name": "_releasableAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 631,
														"src": "15998:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15998:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15977:50:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 586,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 584,
																"name": "releasable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 577,
																"src": "16045:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 585,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "16058:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "16045:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "56657374696e672072656c656173653a206e6f20746f6b656e732061726520647565",
															"id": 587,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16061:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_232d7994234e21dc0a46dcff0076032352d1b7b4d58ecc76ed88eec990d90098",
																"typeString": "literal_string \"Vesting release: no tokens are due\""
															},
															"value": "Vesting release: no tokens are due"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_232d7994234e21dc0a46dcff0076032352d1b7b4d58ecc76ed88eec990d90098",
																"typeString": "literal_string \"Vesting release: no tokens are due\""
															}
														],
														"id": 583,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16037:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16037:61:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 589,
												"nodeType": "ExpressionStatement",
												"src": "16037:61:0"
											},
											{
												"expression": {
													"id": 595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 590,
															"name": "releasedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 50,
															"src": "16109:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 593,
														"indexExpression": {
															"expression": {
																"id": 591,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "16124:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "16124:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "16109:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 594,
														"name": "releasable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 577,
														"src": "16139:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16109:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 596,
												"nodeType": "ExpressionStatement",
												"src": "16109:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 600,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "16187:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 601,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "16187:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 602,
																	"name": "releasable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 577,
																	"src": "16199:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 598,
																	"name": "oilerToken",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "16167:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$786",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 599,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 735,
																"src": "16167:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16167:43:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "526577617264206f696c657273207472616e73666572206661696c6564",
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "16212:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1d084e2eca749984c089d1d9f64331c149c27c323008184a1491516501160a6b",
																"typeString": "literal_string \"Reward oilers transfer failed\""
															},
															"value": "Reward oilers transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1d084e2eca749984c089d1d9f64331c149c27c323008184a1491516501160a6b",
																"typeString": "literal_string \"Reward oilers transfer failed\""
															}
														],
														"id": 597,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "16159:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16159:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 606,
												"nodeType": "ExpressionStatement",
												"src": "16159:85:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 608,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "16282:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "16282:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 610,
															"name": "releasable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 577,
															"src": "16294:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 607,
														"name": "grantedTokensReleased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "16260:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 611,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16260:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 612,
												"nodeType": "EmitStatement",
												"src": "16255:50:0"
											}
										]
									},
									"documentation": {
										"id": 573,
										"nodeType": "StructuredDocumentation",
										"src": "15901:35:0",
										"text": "@notice Releases granted tokens"
									},
									"functionSelector": "86d1a69f",
									"id": 614,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "release",
									"nameLocation": "15950:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15957:2:0"
									},
									"returnParameters": {
										"id": 575,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15967:0:0"
									},
									"scope": 708,
									"src": "15941:371:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 630,
										"nodeType": "Block",
										"src": "16505:78:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 623,
																"name": "recipient_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 617,
																"src": "16536:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 622,
															"name": "_vestedAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 665,
															"src": "16522:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 624,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "16522:25:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"baseExpression": {
															"id": 625,
															"name": "releasedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 50,
															"src": "16550:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 627,
														"indexExpression": {
															"id": 626,
															"name": "recipient_",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "16565:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "16550:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16522:54:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 621,
												"id": 629,
												"nodeType": "Return",
												"src": "16515:61:0"
											}
										]
									},
									"documentation": {
										"id": 615,
										"nodeType": "StructuredDocumentation",
										"src": "16322:99:0",
										"text": "@notice Releasable amount is what is available at a given time minus what was already withdrawn"
									},
									"id": 631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_releasableAmount",
									"nameLocation": "16435:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "recipient_",
												"nameLocation": "16461:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "16453:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16453:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16452:20:0"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "16496:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 619,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16496:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16495:9:0"
									},
									"scope": 708,
									"src": "16426:157:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 664,
										"nodeType": "Block",
										"src": "16882:411:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 639,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "16896:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 640,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "16896:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">=",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 643,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 641,
															"name": "stakingProgramEndsBlock",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "16912:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"id": 642,
															"name": "vestingDuration",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 53,
															"src": "16938:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "16912:41:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "16896:57:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 662,
													"nodeType": "Block",
													"src": "17090:197:0",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 660,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 658,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 650,
																			"name": "grantedTokens",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 45,
																			"src": "17190:13:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 652,
																		"indexExpression": {
																			"id": 651,
																			"name": "recipient_",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 634,
																			"src": "17204:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "17190:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 656,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 653,
																						"name": "block",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967292,
																						"src": "17219:5:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_block",
																							"typeString": "block"
																						}
																					},
																					"id": 654,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberName": "number",
																					"nodeType": "MemberAccess",
																					"src": "17219:12:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 655,
																					"name": "stakingProgramEndsBlock",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 29,
																					"src": "17234:23:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "17219:38:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 657,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "17218:40:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "17190:68:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 659,
																	"name": "vestingDuration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 53,
																	"src": "17261:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "17190:86:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 638,
															"id": 661,
															"nodeType": "Return",
															"src": "17183:93:0"
														}
													]
												},
												"id": 663,
												"nodeType": "IfStatement",
												"src": "16892:395:0",
												"trueBody": {
													"id": 649,
													"nodeType": "Block",
													"src": "16955:129:0",
													"statements": [
														{
															"expression": {
																"baseExpression": {
																	"id": 645,
																	"name": "grantedTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 45,
																	"src": "17048:13:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 647,
																"indexExpression": {
																	"id": 646,
																	"name": "recipient_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 634,
																	"src": "17062:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "17048:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 638,
															"id": 648,
															"nodeType": "Return",
															"src": "17041:32:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 632,
										"nodeType": "StructuredDocumentation",
										"src": "16593:209:0",
										"text": " @notice The output of this function gradually changes from [0.. to ..grantedAmount] while the vesting is going\n @param recipient_ - vested tokens recipient\n @return vested amount"
									},
									"id": 665,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_vestedAmount",
									"nameLocation": "16816:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "recipient_",
												"nameLocation": "16838:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "16830:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "16830:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16829:20:0"
									},
									"returnParameters": {
										"id": 638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 665,
												"src": "16873:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 636,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16873:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16872:9:0"
									},
									"scope": 708,
									"src": "16807:486:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"anonymous": false,
									"id": 675,
									"name": "StakeLocked",
									"nameLocation": "17309:11:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "17329:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "17321:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17321:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 669,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "17348:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "17340:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 668,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17340:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 671,
												"indexed": false,
												"mutability": "mutable",
												"name": "lockingPeriodInBlocks",
												"nameLocation": "17369:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "17361:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 670,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17361:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 673,
												"indexed": false,
												"mutability": "mutable",
												"name": "expectedStakingRewardPoints",
												"nameLocation": "17400:27:0",
												"nodeType": "VariableDeclaration",
												"scope": 675,
												"src": "17392:35:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 672,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17392:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17320:108:0"
									},
									"src": "17303:126:0"
								},
								{
									"anonymous": false,
									"id": 685,
									"name": "StakeUnlockedPrematurely",
									"nameLocation": "17440:24:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 677,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "17473:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "17465:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 676,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17465:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 679,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "17492:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "17484:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 678,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17484:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 681,
												"indexed": false,
												"mutability": "mutable",
												"name": "lockingPeriodInBlocks",
												"nameLocation": "17513:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "17505:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 680,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17505:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"indexed": false,
												"mutability": "mutable",
												"name": "actualLockingPeriodInBlocks",
												"nameLocation": "17544:27:0",
												"nodeType": "VariableDeclaration",
												"scope": 685,
												"src": "17536:35:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17536:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17464:108:0"
									},
									"src": "17434:139:0"
								},
								{
									"anonymous": false,
									"id": 695,
									"name": "StakeUnlocked",
									"nameLocation": "17584:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 687,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "17606:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "17598:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 686,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17598:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 689,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "17625:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "17617:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17617:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 691,
												"indexed": false,
												"mutability": "mutable",
												"name": "lockingPeriodInBlocks",
												"nameLocation": "17646:21:0",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "17638:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 690,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17638:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"indexed": false,
												"mutability": "mutable",
												"name": "rewardPoints",
												"nameLocation": "17677:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 695,
												"src": "17669:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17669:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17597:93:0"
									},
									"src": "17578:113:0"
								},
								{
									"anonymous": false,
									"id": 701,
									"name": "RewardGranted",
									"nameLocation": "17702:13:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 697,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "17724:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "17716:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 696,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17716:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 699,
												"indexed": false,
												"mutability": "mutable",
												"name": "amountEarned",
												"nameLocation": "17743:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 701,
												"src": "17735:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17735:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17715:41:0"
									},
									"src": "17696:61:0"
								},
								{
									"anonymous": false,
									"id": 707,
									"name": "grantedTokensReleased",
									"nameLocation": "17768:21:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 703,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "17798:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "17790:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 702,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "17790:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 705,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "17817:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "17809:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 704,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17809:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17789:35:0"
									},
									"src": "17762:63:0"
								}
							],
							"scope": 709,
							"src": "2612:15215:0",
							"usedErrors": []
						}
					],
					"src": "1306:16521:0"
				},
				"id": 0
			},
			"token-staking/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "token-staking/@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							786
						]
					},
					"id": 787,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 710,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1307:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 711,
								"nodeType": "StructuredDocumentation",
								"src": "1332:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 786,
							"linearizedBaseContracts": [
								786
							],
							"name": "IERC20",
							"nameLocation": "1413:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 712,
										"nodeType": "StructuredDocumentation",
										"src": "1426:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 717,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "1506:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 713,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1517:2:1"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 715,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "1543:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 714,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1543:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1542:9:1"
									},
									"scope": 786,
									"src": "1497:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 718,
										"nodeType": "StructuredDocumentation",
										"src": "1558:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 725,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1644:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1662:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "1654:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 719,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1653:17:1"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 725,
												"src": "1694:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 722,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1693:9:1"
									},
									"scope": 786,
									"src": "1635:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 726,
										"nodeType": "StructuredDocumentation",
										"src": "1709:209:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 735,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1932:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 731,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1949:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "1941:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 727,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1941:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 730,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1968:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "1960:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 729,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1960:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1940:35:1"
									},
									"returnParameters": {
										"id": 734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 733,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 735,
												"src": "1994:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 732,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1994:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1993:6:1"
									},
									"scope": 786,
									"src": "1923:77:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 736,
										"nodeType": "StructuredDocumentation",
										"src": "2006:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 745,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "2284:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 741,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2302:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "2294:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 737,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2294:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 740,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2317:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "2309:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 739,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2309:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2293:32:1"
									},
									"returnParameters": {
										"id": 744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 745,
												"src": "2349:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 742,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2349:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2348:9:1"
									},
									"scope": 786,
									"src": "2275:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 746,
										"nodeType": "StructuredDocumentation",
										"src": "2364:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 755,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3020:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 748,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3036:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "3028:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 747,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3028:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 750,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3053:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "3045:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 749,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3027:33:1"
									},
									"returnParameters": {
										"id": 754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 753,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 755,
												"src": "3079:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 752,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3079:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3078:6:1"
									},
									"scope": 786,
									"src": "3011:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 756,
										"nodeType": "StructuredDocumentation",
										"src": "3091:296:1",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 767,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3401:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 758,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3422:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "3414:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 757,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3414:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 760,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3438:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "3430:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 759,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3430:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3457:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "3449:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3449:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3413:51:1"
									},
									"returnParameters": {
										"id": 766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 767,
												"src": "3483:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 764,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3483:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3482:6:1"
									},
									"scope": 786,
									"src": "3392:97:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 768,
										"nodeType": "StructuredDocumentation",
										"src": "3495:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 776,
									"name": "Transfer",
									"nameLocation": "3664:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 770,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3689:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "3673:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 769,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3673:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 772,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3711:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "3695:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 771,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3695:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 774,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3723:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 776,
												"src": "3715:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3672:57:1"
									},
									"src": "3658:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 777,
										"nodeType": "StructuredDocumentation",
										"src": "3736:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 785,
									"name": "Approval",
									"nameLocation": "3895:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 784,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 779,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3920:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "3904:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 778,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3904:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3943:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "3927:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 780,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3927:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 783,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3960:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 785,
												"src": "3952:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 782,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3952:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3903:63:1"
									},
									"src": "3889:78:1"
								}
							],
							"scope": 787,
							"src": "1403:2566:1",
							"usedErrors": []
						}
					],
					"src": "1307:2663:1"
				},
				"id": 1
			}
		}
	}
}