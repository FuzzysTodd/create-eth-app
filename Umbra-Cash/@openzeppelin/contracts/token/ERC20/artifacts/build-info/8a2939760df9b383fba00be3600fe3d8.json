{
	"id": "8a2939760df9b383fba00be3600fe3d8",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol": {
				"content": "\n// File: Umbra-Cash/@openzeppelin/contracts/utils/Context.sol\n\n/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/protocols/Umbra-Cash?utm=code\n  */\n\n\npragma solidity >=0.6.0 <0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n\n// File: Umbra-Cash/@openzeppelin/contracts/token/ERC20/IERC20.sol\n\n/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/protocols/Umbra-Cash?utm=code\n  */\n\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n\n// File: Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol\n\n/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/protocols/Umbra-Cash?utm=code\n  */\n\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}\n\n// File: Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\n\n/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/protocols/Umbra-Cash?utm=code\n  */\n\n\npragma solidity >=0.6.0 <0.8.0;\n\n\n\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n     * a default value of 18.\n     *\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name_, string memory symbol_) public {\n        _name = name_;\n        _symbol = symbol_;\n        _decimals = 18;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Sets {decimals} to a value other than the default one of 18.\n     *\n     * WARNING: This function should only be called from the constructor. Most\n     * applications that interact with token contracts will not expect\n     * {decimals} to ever change, and may work incorrectly if it does.\n     */\n    function _setupDecimals(uint8 decimals_) internal virtual {\n        _decimals = decimals_;\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":{\"keccak256\":\"0x82b5eeb00e90233ce2d3dda056123737fdea95dc770f4ab20e2aa4fb04bb80fd\",\"urls\":[\"bzz-raw://5a0ef83ede982e109c96a83660e62f84bb1506ec40d07ee8ff7e9443a85e0300\",\"dweb:/ipfs/QmZeifAbs3YCYXDqXpg7YbiN5gGaYw1t2UP6cAB8Ha9UXS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":17307:26781  contract ERC20 is Context, IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":17944:18089  constructor (string memory name_, string memory symbol_) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_13:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_15\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_13)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n    /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":18018:18031  _name = name_ */\n  dup3\n  mload\n  tag_19\n  swap2\n  pop\n    /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":18018:18023  _name */\n  0x03\n  swap1\n    /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":18018:18031  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":18041:18058  _symbol = symbol_ */\n  dup1\n  mload\n  tag_21\n  swap1\n    /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":18041:18048  _symbol */\n  0x04\n  swap1\n    /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":18041:18058  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_20\n  jump\t// in\ntag_21:\n  pop\n  pop\n    /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":18068:18077  _decimals */\n  0x05\n    /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":18068:18082  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":18080:18082  18 */\n  0x12\n    /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":18068:18082  _decimals = 18 */\n  or\n  swap1\n  sstore\n  pop\n    /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":17307:26781  contract ERC20 is Context, IERC20 {... */\n  jump(tag_22)\ntag_20:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_24\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_27)\ntag_24:\n  dup3\n  0x1f\n  lt\n  tag_25\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_27)\ntag_25:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_27\n  jumpi\n  swap2\n  dup3\n  add\ntag_26:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_27\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_26)\ntag_27:\n  pop\n  tag_28\n  swap3\n  swap2\n  pop\n  tag_29\n  jump\t// in\ntag_28:\n  pop\n  swap1\n  jump\t// out\ntag_29:\ntag_30:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_28\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_30)\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":17307:26781  contract ERC20 is Context, IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":18154:18243  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_17:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_19\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_17)\n    tag_19:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_20\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_20:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":20230:20396  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_23\n      jump\t// in\n    tag_21:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":19221:19327  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":20863:21180  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_28\n      jump\t// in\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":19072:19161  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21575:21790  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_33\n      jump\t// in\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":19385:19510  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_36\n      jump\t// in\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":18356:18449  function symbol() public view virtual returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_38\n      jump\t// in\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":22277:22543  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_45\n      jump\t// in\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":19713:19885  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_48\n      jump\t// in\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":19943:20092  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_51\n      jump\t// in\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":18154:18243  function name() public view virtual returns (string memory) {... */\n    tag_16:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":18231:18236  _name */\n      0x03\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":18224:18236  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":18199:18212  string memory */\n      0x60\n      swap4\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":18224:18236  return _name */\n      swap1\n      swap3\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":18231:18236  _name */\n      swap1\n      swap2\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":18224:18236  return _name */\n      dup4\n      add\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":18231:18236  _name */\n      dup3\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":18224:18236  return _name */\n      dup3\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_54\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_53)\n    tag_54:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_55:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_55\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":18154:18243  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":20230:20396  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_23:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":20313:20317  bool */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":20329:20368  _approve(_msgSender(), spender, amount) */\n      tag_57\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":20338:20350  _msgSender() */\n      tag_58\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":20338:20348  _msgSender */\n      tag_59\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":20338:20350  _msgSender() */\n      jump\t// in\n    tag_58:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":20352:20359  spender */\n      dup5\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":20361:20367  amount */\n      dup5\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":20329:20337  _approve */\n      tag_60\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":20329:20368  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_57:\n      pop\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":20385:20389  true */\n      0x01\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":20230:20396  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":19221:19327  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":19308:19320  _totalSupply */\n      sload(0x02)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":19221:19327  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":20863:21180  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_28:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":20969:20973  bool */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":20985:21021  _transfer(sender, recipient, amount) */\n      tag_63\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":20995:21001  sender */\n      dup5\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21003:21012  recipient */\n      dup5\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21014:21020  amount */\n      dup5\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":20985:20994  _transfer */\n      tag_64\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":20985:21021  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_63:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21031:21152  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_65\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21040:21046  sender */\n      dup5\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21048:21060  _msgSender() */\n      tag_66\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21048:21058  _msgSender */\n      tag_59\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21048:21060  _msgSender() */\n      jump\t// in\n    tag_66:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21062:21151  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_67\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21100:21106  amount */\n      dup6\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21062:21151  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21062:21081  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21062:21073  _allowances */\n      0x01\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21062:21081  _allowances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21082:21094  _msgSender() */\n      tag_68\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21082:21092  _msgSender */\n      tag_59\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21082:21094  _msgSender() */\n      jump\t// in\n    tag_68:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21062:21095  _allowances[sender][_msgSender()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      swap2\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21062:21151  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap1\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21062:21099  _allowances[sender][_msgSender()].sub */\n      tag_69\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21062:21151  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      jump\t// in\n    tag_67:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21031:21039  _approve */\n      tag_60\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21031:21152  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_65:\n      pop\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21169:21173  true */\n      0x01\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":20863:21180  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":19072:19161  function decimals() public view virtual returns (uint8) {... */\n    tag_30:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":19145:19154  _decimals */\n      and(0xff, sload(0x05))\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":19072:19161  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21575:21790  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_33:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21663:21667  bool */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21679:21762  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_57\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21688:21700  _msgSender() */\n      tag_73\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21688:21698  _msgSender */\n      tag_59\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21688:21700  _msgSender() */\n      jump\t// in\n    tag_73:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21702:21709  spender */\n      dup5\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21711:21761  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_67\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21750:21760  addedValue */\n      dup6\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21711:21722  _allowances */\n      0x01\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21711:21736  _allowances[_msgSender()] */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21723:21735  _msgSender() */\n      tag_75\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21723:21733  _msgSender */\n      tag_59\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21723:21735  _msgSender() */\n      jump\t// in\n    tag_75:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21711:21736  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21711:21745  _allowances[_msgSender()][spender] */\n      swap2\n      dup13\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21711:21749  _allowances[_msgSender()][spender].add */\n      tag_76\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":21711:21761  _allowances[_msgSender()][spender].add(addedValue) */\n      jump\t// in\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":19385:19510  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_36:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":19485:19503  _balances[account] */\n      and\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":19459:19466  uint256 */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":19485:19503  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":19385:19510  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":18356:18449  function symbol() public view virtual returns (string memory) {... */\n    tag_38:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":18435:18442  _symbol */\n      0x04\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":18428:18442  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":18403:18416  string memory */\n      0x60\n      swap4\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":18428:18442  return _symbol */\n      swap1\n      swap3\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":18435:18442  _symbol */\n      swap1\n      swap2\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":18428:18442  return _symbol */\n      dup4\n      add\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":18435:18442  _symbol */\n      dup3\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":18428:18442  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_54\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_53)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":22277:22543  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_45:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":22370:22374  bool */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":22386:22515  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_57\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":22395:22407  _msgSender() */\n      tag_84\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":22395:22405  _msgSender */\n      tag_59\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":22395:22407  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":22409:22416  spender */\n      dup5\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":22418:22514  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_67\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":22457:22472  subtractedValue */\n      dup6\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":22418:22514  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":22418:22429  _allowances */\n      0x01\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":22418:22443  _allowances[_msgSender()] */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":22430:22442  _msgSender() */\n      tag_86\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":22430:22440  _msgSender */\n      tag_59\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":22430:22442  _msgSender() */\n      jump\t// in\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":22418:22443  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":22418:22452  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":22418:22514  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap1\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":22418:22456  _allowances[_msgSender()][spender].sub */\n      tag_69\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":22418:22514  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      jump\t// in\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":19713:19885  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_48:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":19799:19803  bool */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":19815:19857  _transfer(_msgSender(), recipient, amount) */\n      tag_57\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":19825:19837  _msgSender() */\n      tag_89\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":19825:19835  _msgSender */\n      tag_59\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":19825:19837  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":19839:19848  recipient */\n      dup5\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":19850:19856  amount */\n      dup5\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":19815:19824  _transfer */\n      tag_64\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":19815:19857  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":19943:20092  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_51:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":20058:20076  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":20032:20039  uint256 */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":20058:20076  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":20058:20069  _allowances */\n      0x01\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":20058:20076  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":20058:20085  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":19943:20092  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":1897:2001  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_59:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":1984:1994  msg.sender */\n      caller\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":1897:2001  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":25341:25681  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_60:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":25442:25461  owner != address(0) */\n      dup4\n      and\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":25434:25502  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":25520:25541  spender != address(0) */\n      dup3\n      and\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":25512:25580  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":25591:25609  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":25591:25602  _allowances */\n      0x01\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":25591:25609  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":25591:25618  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":25591:25627  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":25642:25674  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":25341:25681  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":23017:23547  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_64:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":23122:23142  sender != address(0) */\n      dup4\n      and\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":23114:23184  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":23202:23225  recipient != address(0) */\n      dup3\n      and\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":23194:23265  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":23276:23323  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_98\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":23297:23303  sender */\n      dup4\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":23305:23314  recipient */\n      dup4\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":23316:23322  amount */\n      dup4\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":23276:23296  _beforeTokenTransfer */\n      tag_99\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":23276:23323  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_98:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":23354:23425  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":23376:23382  amount */\n      dup2\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":23354:23425  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":23354:23371  _balances[sender] */\n      dup7\n      and\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":23354:23363  _balances */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":23354:23371  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":23354:23425  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap1\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":23354:23375  _balances[sender].sub */\n      tag_69\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":23354:23425  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      jump\t// in\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":23334:23351  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":23334:23343  _balances */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":23334:23351  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":23334:23425  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":23458:23478  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":23458:23490  _balances[recipient].add(amount) */\n      tag_101\n      swap1\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":23483:23489  amount */\n      dup3\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":23458:23482  _balances[recipient].add */\n      tag_76\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":23458:23490  _balances[recipient].add(amount) */\n      jump\t// in\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":23435:23455  _balances[recipient] */\n      dup1\n      dup5\n      and\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":23435:23444  _balances */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":23435:23455  _balances[recipient] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":23435:23490  _balances[recipient] = _balances[recipient].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":23505:23540  Transfer(sender, recipient, amount) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":23435:23455  _balances[recipient] */\n      swap2\n      swap4\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":23505:23540  Transfer(sender, recipient, amount) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":23017:23547  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":12979:13142  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_69:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":13065:13072  uint256 */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":13100:13112  errorMessage */\n      dup2\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":13092:13098  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":13084:13113  require(b <= a, errorMessage) */\n      tag_103\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_104:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_106\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_104)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_107\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_107:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n      pop\n      pop\n      pop\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":13130:13135  a - b */\n      swap1\n      sub\n      swap1\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":12979:13142  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":10237:10412  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_76:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":10295:10302  uint256 */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":10326:10331  a + b */\n      dup3\n      dup3\n      add\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":10349:10355  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":10341:10387  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_109\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_109:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":10404:10405  c */\n      swap4\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":10237:10412  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":26687:26779  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\n    tag_99:\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa2646970667358221220078d411ed623b8fe5f59f60e8810f4aa4560d6aaca2025b2def9ed3d3a366b1d64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000c8e38038062000c8e833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b5060405250508251620001b491506003906020850190620001e0565b508051620001ca906004906020840190620001e0565b50506005805460ff19166012179055506200028c565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928262000218576000855562000263565b82601f106200023357805160ff191683800117855562000263565b8280016001018555821562000263579182015b828111156200026357825182559160200191906001019062000246565b506200027192915062000275565b5090565b5b8082111562000271576000815560010162000276565b6109f2806200029c6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063395093511161007157806339509351146101d957806370a082311461020557806395d89b411461022b578063a457c2d714610233578063a9059cbb1461025f578063dd62ed3e1461028b576100a9565b806306fdde03146100ae578063095ea7b31461012b57806318160ddd1461016b57806323b872dd14610185578063313ce567146101bb575b600080fd5b6100b66102b9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f05781810151838201526020016100d8565b50505050905090810190601f16801561011d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101576004803603604081101561014157600080fd5b506001600160a01b03813516906020013561034f565b604080519115158252519081900360200190f35b61017361036c565b60408051918252519081900360200190f35b6101576004803603606081101561019b57600080fd5b506001600160a01b03813581169160208101359091169060400135610372565b6101c36103f9565b6040805160ff9092168252519081900360200190f35b610157600480360360408110156101ef57600080fd5b506001600160a01b038135169060200135610402565b6101736004803603602081101561021b57600080fd5b50356001600160a01b0316610450565b6100b661046b565b6101576004803603604081101561024957600080fd5b506001600160a01b0381351690602001356104cc565b6101576004803603604081101561027557600080fd5b506001600160a01b038135169060200135610534565b610173600480360360408110156102a157600080fd5b506001600160a01b0381358116916020013516610548565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050905090565b600061036361035c610573565b8484610577565b50600192915050565b60025490565b600061037f848484610663565b6103ef8461038b610573565b6103ea85604051806060016040528060288152602001610927602891396001600160a01b038a166000908152600160205260408120906103c9610573565b6001600160a01b0316815260208101919091526040016000205491906107be565b610577565b5060019392505050565b60055460ff1690565b600061036361040f610573565b846103ea8560016000610420610573565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610855565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b60006103636104d9610573565b846103ea856040518060600160405280602581526020016109986025913960016000610503610573565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906107be565b6000610363610541610573565b8484610663565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166105bc5760405162461bcd60e51b81526004018080602001828103825260248152602001806109746024913960400191505060405180910390fd5b6001600160a01b0382166106015760405162461bcd60e51b81526004018080602001828103825260228152602001806108df6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166106a85760405162461bcd60e51b815260040180806020018281038252602581526020018061094f6025913960400191505060405180910390fd5b6001600160a01b0382166106ed5760405162461bcd60e51b81526004018080602001828103825260238152602001806108bc6023913960400191505060405180910390fd5b6106f88383836108b6565b61073581604051806060016040528060268152602001610901602691396001600160a01b03861660009081526020819052604090205491906107be565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107649082610855565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561084d5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156108125781810151838201526020016107fa565b50505050905090810190601f16801561083f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156108af576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220078d411ed623b8fe5f59f60e8810f4aa4560d6aaca2025b2def9ed3d3a366b1d64736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xC8E CODESIZE SUB DUP1 PUSH3 0xC8E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xB8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x9E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xE6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x150 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x198 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP DUP3 MLOAD PUSH3 0x1B4 SWAP2 POP PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x1E0 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x1CA SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x1E0 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE POP PUSH3 0x28C JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x218 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x263 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x233 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x263 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x263 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x263 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x246 JUMP JUMPDEST POP PUSH3 0x271 SWAP3 SWAP2 POP PUSH3 0x275 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x271 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x276 JUMP JUMPDEST PUSH2 0x9F2 DUP1 PUSH3 0x29C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x28B JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x11D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH2 0x36C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x402 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x450 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x46B JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4CC JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x534 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x548 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x328 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x35C PUSH2 0x573 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x577 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F DUP5 DUP5 DUP5 PUSH2 0x663 JUMP JUMPDEST PUSH2 0x3EF DUP5 PUSH2 0x38B PUSH2 0x573 JUMP JUMPDEST PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x927 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x3C9 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH2 0x577 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x40F PUSH2 0x573 JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x420 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x4D9 PUSH2 0x573 JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x998 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x503 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x541 PUSH2 0x573 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x663 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x974 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x601 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8DF PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x94F PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8BC PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6F8 DUP4 DUP4 DUP4 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x735 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x901 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x764 SWAP1 DUP3 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x84D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x812 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7FA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x83F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x8AF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220078D COINBASE 0x1E 0xD6 0x23 0xB8 INVALID 0x5F MSIZE 0xF6 0xE DUP9 LT DELEGATECALL 0xAA GASLIMIT PUSH1 0xD6 0xAA 0xCA KECCAK256 0x25 0xB2 0xDE 0xF9 0xED RETURNDATASIZE GASPRICE CALLDATASIZE PUSH12 0x1D64736F6C63430007060033 ",
							"sourceMap": "17307:9474:0:-:0;;;17944:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17944:145:0;;;;;;;;;;-1:-1:-1;17944:145:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17944:145:0;;;;;;;;;;-1:-1:-1;17944:145:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17944:145:0;;-1:-1:-1;;18018:13:0;;;;-1:-1:-1;18018:5:0;;:13;;;;;:::i;:::-;-1:-1:-1;18041:17:0;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;18068:9:0;:14;;-1:-1:-1;;18068:14:0;18080:2;18068:14;;;-1:-1:-1;17307:9474:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;17307:9474:0;;;-1:-1:-1;17307:9474:0;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c8063395093511161007157806339509351146101d957806370a082311461020557806395d89b411461022b578063a457c2d714610233578063a9059cbb1461025f578063dd62ed3e1461028b576100a9565b806306fdde03146100ae578063095ea7b31461012b57806318160ddd1461016b57806323b872dd14610185578063313ce567146101bb575b600080fd5b6100b66102b9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f05781810151838201526020016100d8565b50505050905090810190601f16801561011d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101576004803603604081101561014157600080fd5b506001600160a01b03813516906020013561034f565b604080519115158252519081900360200190f35b61017361036c565b60408051918252519081900360200190f35b6101576004803603606081101561019b57600080fd5b506001600160a01b03813581169160208101359091169060400135610372565b6101c36103f9565b6040805160ff9092168252519081900360200190f35b610157600480360360408110156101ef57600080fd5b506001600160a01b038135169060200135610402565b6101736004803603602081101561021b57600080fd5b50356001600160a01b0316610450565b6100b661046b565b6101576004803603604081101561024957600080fd5b506001600160a01b0381351690602001356104cc565b6101576004803603604081101561027557600080fd5b506001600160a01b038135169060200135610534565b610173600480360360408110156102a157600080fd5b506001600160a01b0381358116916020013516610548565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050905090565b600061036361035c610573565b8484610577565b50600192915050565b60025490565b600061037f848484610663565b6103ef8461038b610573565b6103ea85604051806060016040528060288152602001610927602891396001600160a01b038a166000908152600160205260408120906103c9610573565b6001600160a01b0316815260208101919091526040016000205491906107be565b610577565b5060019392505050565b60055460ff1690565b600061036361040f610573565b846103ea8560016000610420610573565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610855565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b60006103636104d9610573565b846103ea856040518060600160405280602581526020016109986025913960016000610503610573565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906107be565b6000610363610541610573565b8484610663565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166105bc5760405162461bcd60e51b81526004018080602001828103825260248152602001806109746024913960400191505060405180910390fd5b6001600160a01b0382166106015760405162461bcd60e51b81526004018080602001828103825260228152602001806108df6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166106a85760405162461bcd60e51b815260040180806020018281038252602581526020018061094f6025913960400191505060405180910390fd5b6001600160a01b0382166106ed5760405162461bcd60e51b81526004018080602001828103825260238152602001806108bc6023913960400191505060405180910390fd5b6106f88383836108b6565b61073581604051806060016040528060268152602001610901602691396001600160a01b03861660009081526020819052604090205491906107be565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107649082610855565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561084d5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156108125781810151838201526020016107fa565b50505050905090810190601f16801561083f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156108af576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220078d411ed623b8fe5f59f60e8810f4aa4560d6aaca2025b2def9ed3d3a366b1d64736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x28B JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x11D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH2 0x36C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x402 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x450 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x46B JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4CC JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x534 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x548 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x328 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x35C PUSH2 0x573 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x577 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F DUP5 DUP5 DUP5 PUSH2 0x663 JUMP JUMPDEST PUSH2 0x3EF DUP5 PUSH2 0x38B PUSH2 0x573 JUMP JUMPDEST PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x927 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x3C9 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH2 0x577 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x40F PUSH2 0x573 JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x420 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x4D9 PUSH2 0x573 JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x998 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x503 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x541 PUSH2 0x573 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x663 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x974 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x601 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8DF PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x94F PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8BC PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6F8 DUP4 DUP4 DUP4 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x735 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x901 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x764 SWAP1 DUP3 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x84D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x812 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7FA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x83F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x8AF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220078D COINBASE 0x1E 0xD6 0x23 0xB8 INVALID 0x5F MSIZE 0xF6 0xE DUP9 LT DELEGATECALL 0xAA GASLIMIT PUSH1 0xD6 0xAA 0xCA KECCAK256 0x25 0xB2 0xDE 0xF9 0xED RETURNDATASIZE GASPRICE CALLDATASIZE PUSH12 0x1D64736F6C63430007060033 ",
							"sourceMap": "17307:9474:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18154:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20230:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;20230:166:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;19221:106;;;:::i;:::-;;;;;;;;;;;;;;;;20863:317;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;20863:317:0;;;;;;;;;;;;;;;;;:::i;19072:89::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;21575:215;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;21575:215:0;;;;;;;;:::i;19385:125::-;;;;;;;;;;;;;;;;-1:-1:-1;19385:125:0;-1:-1:-1;;;;;19385:125:0;;:::i;18356:93::-;;;:::i;22277:266::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;22277:266:0;;;;;;;;:::i;19713:172::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;19713:172:0;;;;;;;;:::i;19943:149::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;19943:149:0;;;;;;;;;;:::i;18154:89::-;18231:5;18224:12;;;;;;;;-1:-1:-1;;18224:12:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18199:13;;18224:12;;18231:5;;18224:12;;18231:5;18224:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18154:89;:::o;20230:166::-;20313:4;20329:39;20338:12;:10;:12::i;:::-;20352:7;20361:6;20329:8;:39::i;:::-;-1:-1:-1;20385:4:0;20230:166;;;;:::o;19221:106::-;19308:12;;19221:106;:::o;20863:317::-;20969:4;20985:36;20995:6;21003:9;21014:6;20985:9;:36::i;:::-;21031:121;21040:6;21048:12;:10;:12::i;:::-;21062:89;21100:6;21062:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21062:19:0;;;;;;:11;:19;;;;;;21082:12;:10;:12::i;:::-;-1:-1:-1;;;;;21062:33:0;;;;;;;;;;;;-1:-1:-1;21062:33:0;;;:89;:37;:89::i;:::-;21031:8;:121::i;:::-;-1:-1:-1;21169:4:0;20863:317;;;;;:::o;19072:89::-;19145:9;;;;19072:89;:::o;21575:215::-;21663:4;21679:83;21688:12;:10;:12::i;:::-;21702:7;21711:50;21750:10;21711:11;:25;21723:12;:10;:12::i;:::-;-1:-1:-1;;;;;21711:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;21711:25:0;;;:34;;;;;;;;;;;:38;:50::i;19385:125::-;-1:-1:-1;;;;;19485:18:0;19459:7;19485:18;;;;;;;;;;;;19385:125::o;18356:93::-;18435:7;18428:14;;;;;;;;-1:-1:-1;;18428:14:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18403:13;;18428:14;;18435:7;;18428:14;;18435:7;18428:14;;;;;;;;;;;;;;;;;;;;;;;;22277:266;22370:4;22386:129;22395:12;:10;:12::i;:::-;22409:7;22418:96;22457:15;22418:96;;;;;;;;;;;;;;;;;:11;:25;22430:12;:10;:12::i;:::-;-1:-1:-1;;;;;22418:25:0;;;;;;;;;;;;;;;;;-1:-1:-1;22418:25:0;;;:34;;;;;;;;;;;:96;:38;:96::i;19713:172::-;19799:4;19815:42;19825:12;:10;:12::i;:::-;19839:9;19850:6;19815:9;:42::i;19943:149::-;-1:-1:-1;;;;;20058:18:0;;;20032:7;20058:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;19943:149::o;1897:104::-;1984:10;1897:104;:::o;25341:340::-;-1:-1:-1;;;;;25442:19:0;;25434:68;;;;-1:-1:-1;;;25434:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;25520:21:0;;25512:68;;;;-1:-1:-1;;;25512:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;25591:18:0;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;25642:32;;;;;;;;;;;;;;;;;25341:340;;;:::o;23017:530::-;-1:-1:-1;;;;;23122:20:0;;23114:70;;;;-1:-1:-1;;;23114:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;23202:23:0;;23194:71;;;;-1:-1:-1;;;23194:71:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23276:47;23297:6;23305:9;23316:6;23276:20;:47::i;:::-;23354:71;23376:6;23354:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;23354:17:0;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;23334:17:0;;;:9;:17;;;;;;;;;;;:91;;;;23458:20;;;;;;;:32;;23483:6;23458:24;:32::i;:::-;-1:-1:-1;;;;;23435:20:0;;;:9;:20;;;;;;;;;;;;:55;;;;23505:35;;;;;;;23435:20;;23505:35;;;;;;;;;;;;;23017:530;;;:::o;12979:163::-;13065:7;13100:12;13092:6;;;;13084:29;;;;-1:-1:-1;;;13084:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;13130:5:0;;;12979:163::o;10237:175::-;10295:7;10326:5;;;10349:6;;;;10341:46;;;;;-1:-1:-1;;;10341:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;10404:1;10237:175;-1:-1:-1;;;10237:175:0:o;26687:92::-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "509200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1360",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1167",
								"decimals()": "1102",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1043",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_setupDecimals(uint8)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 17307,
									"end": 26781,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH",
									"source": 0,
									"value": "100000000"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "tag",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH",
									"source": 0,
									"value": "100000000"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "tag",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH",
									"source": 0,
									"value": "100000000"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH",
									"source": 0,
									"value": "100000000"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP9",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "tag",
									"source": 0,
									"value": "16"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 17944,
									"end": 18089,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 18018,
									"end": 18031,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 18018,
									"end": 18031,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18018,
									"end": 18031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 18018,
									"end": 18031,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 18018,
									"end": 18023,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 18018,
									"end": 18023,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18018,
									"end": 18031,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18018,
									"end": 18031,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 18018,
									"end": 18031,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18018,
									"end": 18031,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18018,
									"end": 18031,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18018,
									"end": 18031,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 18018,
									"end": 18031,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 18018,
									"end": 18031,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 18041,
									"end": 18058,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18041,
									"end": 18058,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 18041,
									"end": 18058,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 18041,
									"end": 18058,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18041,
									"end": 18048,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 18041,
									"end": 18048,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18041,
									"end": 18058,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18041,
									"end": 18058,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 18041,
									"end": 18058,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 18041,
									"end": 18058,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18041,
									"end": 18058,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 18041,
									"end": 18058,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 18041,
									"end": 18058,
									"name": "tag",
									"source": 0,
									"value": "21"
								},
								{
									"begin": 18041,
									"end": 18058,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 18068,
									"end": 18077,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 18068,
									"end": 18082,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 18068,
									"end": 18082,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 18068,
									"end": 18082,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 18080,
									"end": 18082,
									"name": "PUSH",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 18068,
									"end": 18082,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 18068,
									"end": 18082,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 18068,
									"end": 18082,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "PUSH",
									"source": 0,
									"value": "1F"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "DUP6",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "tag",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "26"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "tag",
									"source": 0,
									"value": "27"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "tag",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "tag",
									"source": 0,
									"value": "29"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "tag",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "GT",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "28"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "30"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 17307,
									"end": 26781,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220078d411ed623b8fe5f59f60e8810f4aa4560d6aaca2025b2def9ed3d3a366b1d64736f6c63430007060033",
									".code": [
										{
											"begin": 17307,
											"end": 26781,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "PUSH",
											"source": 0,
											"value": "39509351"
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "PUSH",
											"source": 0,
											"value": "95D89B41"
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "PUSH",
											"source": 0,
											"value": "A457C2D7"
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "PUSH",
											"source": 0,
											"value": "DD62ED3E"
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "PUSH",
											"source": 0,
											"value": "6FDDE03"
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "PUSH",
											"source": 0,
											"value": "95EA7B3"
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "PUSH",
											"source": 0,
											"value": "18160DDD"
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "PUSH",
											"source": 0,
											"value": "313CE567"
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 17307,
											"end": 26781,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 19221,
											"end": 19327,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 19221,
											"end": 19327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19221,
											"end": 19327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 19221,
											"end": 19327,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 19221,
											"end": 19327,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19221,
											"end": 19327,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 19221,
											"end": 19327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19221,
											"end": 19327,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19221,
											"end": 19327,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19221,
											"end": 19327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19221,
											"end": 19327,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19221,
											"end": 19327,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19221,
											"end": 19327,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19221,
											"end": 19327,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19221,
											"end": 19327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19221,
											"end": 19327,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19221,
											"end": 19327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19221,
											"end": 19327,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19221,
											"end": 19327,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19221,
											"end": 19327,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19221,
											"end": 19327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19221,
											"end": 19327,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19072,
											"end": 19161,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 19072,
											"end": 19161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19072,
											"end": 19161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 19072,
											"end": 19161,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 19072,
											"end": 19161,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19072,
											"end": 19161,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 19072,
											"end": 19161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19072,
											"end": 19161,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19072,
											"end": 19161,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19072,
											"end": 19161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19072,
											"end": 19161,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 19072,
											"end": 19161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19072,
											"end": 19161,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 19072,
											"end": 19161,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19072,
											"end": 19161,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 19072,
											"end": 19161,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19072,
											"end": 19161,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 19072,
											"end": 19161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19072,
											"end": 19161,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19072,
											"end": 19161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19072,
											"end": 19161,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19072,
											"end": 19161,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19072,
											"end": 19161,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19072,
											"end": 19161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19072,
											"end": 19161,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 21575,
											"end": 21790,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 21575,
											"end": 21790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21575,
											"end": 21790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 21575,
											"end": 21790,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 21575,
											"end": 21790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21575,
											"end": 21790,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 21575,
											"end": 21790,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 21575,
											"end": 21790,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21575,
											"end": 21790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21575,
											"end": 21790,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 21575,
											"end": 21790,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 21575,
											"end": 21790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 21575,
											"end": 21790,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 21575,
											"end": 21790,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21575,
											"end": 21790,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21575,
											"end": 21790,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 21575,
											"end": 21790,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 21575,
											"end": 21790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21575,
											"end": 21790,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21575,
											"end": 21790,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 21575,
											"end": 21790,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21575,
											"end": 21790,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21575,
											"end": 21790,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21575,
											"end": 21790,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21575,
											"end": 21790,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 21575,
											"end": 21790,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 21575,
											"end": 21790,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19385,
											"end": 19510,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 19385,
											"end": 19510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19385,
											"end": 19510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 19385,
											"end": 19510,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19385,
											"end": 19510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19385,
											"end": 19510,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19385,
											"end": 19510,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19385,
											"end": 19510,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19385,
											"end": 19510,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19385,
											"end": 19510,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19385,
											"end": 19510,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19385,
											"end": 19510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 19385,
											"end": 19510,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19385,
											"end": 19510,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19385,
											"end": 19510,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19385,
											"end": 19510,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19385,
											"end": 19510,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 19385,
											"end": 19510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 19385,
											"end": 19510,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19385,
											"end": 19510,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19385,
											"end": 19510,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 19385,
											"end": 19510,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18356,
											"end": 18449,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 18356,
											"end": 18449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18356,
											"end": 18449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 18356,
											"end": 18449,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 18356,
											"end": 18449,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22277,
											"end": 22543,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 22277,
											"end": 22543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22277,
											"end": 22543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 22277,
											"end": 22543,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 22277,
											"end": 22543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22277,
											"end": 22543,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 22277,
											"end": 22543,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 22277,
											"end": 22543,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22277,
											"end": 22543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22277,
											"end": 22543,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 22277,
											"end": 22543,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 22277,
											"end": 22543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 22277,
											"end": 22543,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 22277,
											"end": 22543,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22277,
											"end": 22543,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22277,
											"end": 22543,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 22277,
											"end": 22543,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 22277,
											"end": 22543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22277,
											"end": 22543,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22277,
											"end": 22543,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22277,
											"end": 22543,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22277,
											"end": 22543,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22277,
											"end": 22543,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22277,
											"end": 22543,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22277,
											"end": 22543,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 22277,
											"end": 22543,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 22277,
											"end": 22543,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19713,
											"end": 19885,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 19713,
											"end": 19885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19713,
											"end": 19885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 19713,
											"end": 19885,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19713,
											"end": 19885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19713,
											"end": 19885,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19713,
											"end": 19885,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19713,
											"end": 19885,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19713,
											"end": 19885,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19713,
											"end": 19885,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19713,
											"end": 19885,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19713,
											"end": 19885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 19713,
											"end": 19885,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19713,
											"end": 19885,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19713,
											"end": 19885,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19713,
											"end": 19885,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19713,
											"end": 19885,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 19713,
											"end": 19885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19713,
											"end": 19885,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19713,
											"end": 19885,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 19713,
											"end": 19885,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19713,
											"end": 19885,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19713,
											"end": 19885,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19713,
											"end": 19885,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19713,
											"end": 19885,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 19713,
											"end": 19885,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 19713,
											"end": 19885,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19943,
											"end": 20092,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 19943,
											"end": 20092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19943,
											"end": 20092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 19943,
											"end": 20092,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 19943,
											"end": 20092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19943,
											"end": 20092,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 19943,
											"end": 20092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 19943,
											"end": 20092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19943,
											"end": 20092,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19943,
											"end": 20092,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 19943,
											"end": 20092,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 19943,
											"end": 20092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 19943,
											"end": 20092,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 19943,
											"end": 20092,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19943,
											"end": 20092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 19943,
											"end": 20092,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 19943,
											"end": 20092,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 19943,
											"end": 20092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19943,
											"end": 20092,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19943,
											"end": 20092,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 19943,
											"end": 20092,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19943,
											"end": 20092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19943,
											"end": 20092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 19943,
											"end": 20092,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19943,
											"end": 20092,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 19943,
											"end": 20092,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 19943,
											"end": 20092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19943,
											"end": 20092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 19943,
											"end": 20092,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18231,
											"end": 18236,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18199,
											"end": 18212,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 18199,
											"end": 18212,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18231,
											"end": 18236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18231,
											"end": 18236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18231,
											"end": 18236,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "tag",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18224,
											"end": 18236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18154,
											"end": 18243,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20313,
											"end": 20317,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20329,
											"end": 20368,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 20338,
											"end": 20350,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 20338,
											"end": 20348,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 20338,
											"end": 20350,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20338,
											"end": 20350,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 20338,
											"end": 20350,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20352,
											"end": 20359,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20361,
											"end": 20367,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20329,
											"end": 20337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 20329,
											"end": 20368,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20329,
											"end": 20368,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 20329,
											"end": 20368,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 20385,
											"end": 20389,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20230,
											"end": 20396,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19221,
											"end": 19327,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 19221,
											"end": 19327,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19308,
											"end": 19320,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 19308,
											"end": 19320,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19221,
											"end": 19327,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19221,
											"end": 19327,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 20969,
											"end": 20973,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20985,
											"end": 21021,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 20995,
											"end": 21001,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21003,
											"end": 21012,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21014,
											"end": 21020,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 20985,
											"end": 20994,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 20985,
											"end": 21021,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 20985,
											"end": 21021,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 20985,
											"end": 21021,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21031,
											"end": 21152,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 21040,
											"end": 21046,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21048,
											"end": 21060,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 21048,
											"end": 21058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 21048,
											"end": 21060,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21048,
											"end": 21060,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 21048,
											"end": 21060,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21062,
											"end": 21151,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 21100,
											"end": 21106,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21062,
											"end": 21151,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21062,
											"end": 21151,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 21062,
											"end": 21151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21062,
											"end": 21151,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 21062,
											"end": 21151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21062,
											"end": 21151,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21062,
											"end": 21151,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21062,
											"end": 21151,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21062,
											"end": 21151,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 21062,
											"end": 21151,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21062,
											"end": 21151,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21062,
											"end": 21151,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21062,
											"end": 21151,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21062,
											"end": 21151,
											"name": "PUSH data",
											"source": 0,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 21062,
											"end": 21151,
											"name": "PUSH",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 21062,
											"end": 21151,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21062,
											"end": 21151,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21062,
											"end": 21081,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 21062,
											"end": 21081,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21062,
											"end": 21081,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21062,
											"end": 21081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21062,
											"end": 21081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21062,
											"end": 21081,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21062,
											"end": 21073,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21062,
											"end": 21081,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21062,
											"end": 21081,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21062,
											"end": 21081,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21062,
											"end": 21081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21062,
											"end": 21081,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21062,
											"end": 21081,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21082,
											"end": 21094,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 21082,
											"end": 21092,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 21082,
											"end": 21094,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21082,
											"end": 21094,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 21082,
											"end": 21094,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21062,
											"end": 21095,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21062,
											"end": 21095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21062,
											"end": 21095,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21062,
											"end": 21095,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21062,
											"end": 21095,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21062,
											"end": 21095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21062,
											"end": 21095,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21062,
											"end": 21095,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21062,
											"end": 21095,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21062,
											"end": 21095,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21062,
											"end": 21095,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21062,
											"end": 21095,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 21062,
											"end": 21095,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21062,
											"end": 21095,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21062,
											"end": 21095,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21062,
											"end": 21151,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21062,
											"end": 21099,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 21062,
											"end": 21151,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21062,
											"end": 21151,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 21062,
											"end": 21151,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21031,
											"end": 21039,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 21031,
											"end": 21152,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21031,
											"end": 21152,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 21031,
											"end": 21152,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 21169,
											"end": 21173,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 20863,
											"end": 21180,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 19072,
											"end": 19161,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 19072,
											"end": 19161,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19145,
											"end": 19154,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 19145,
											"end": 19154,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19145,
											"end": 19154,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 19145,
											"end": 19154,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19072,
											"end": 19161,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19072,
											"end": 19161,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 21575,
											"end": 21790,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 21575,
											"end": 21790,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21663,
											"end": 21667,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21679,
											"end": 21762,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 21688,
											"end": 21700,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 21688,
											"end": 21698,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 21688,
											"end": 21700,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21688,
											"end": 21700,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 21688,
											"end": 21700,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 21702,
											"end": 21709,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 21711,
											"end": 21761,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 21750,
											"end": 21760,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 21711,
											"end": 21722,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 21711,
											"end": 21736,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 21723,
											"end": 21735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 21723,
											"end": 21733,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 21723,
											"end": 21735,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 21723,
											"end": 21735,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 21723,
											"end": 21735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 21711,
											"end": 21736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21711,
											"end": 21736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21711,
											"end": 21736,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21711,
											"end": 21736,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21711,
											"end": 21736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21711,
											"end": 21736,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 21711,
											"end": 21736,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 21711,
											"end": 21736,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 21711,
											"end": 21736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 21711,
											"end": 21736,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21711,
											"end": 21736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21711,
											"end": 21736,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 21711,
											"end": 21736,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21711,
											"end": 21736,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 21711,
											"end": 21736,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21711,
											"end": 21736,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 21711,
											"end": 21736,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 21711,
											"end": 21736,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21711,
											"end": 21736,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21711,
											"end": 21736,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21711,
											"end": 21745,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 21711,
											"end": 21745,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 21711,
											"end": 21745,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 21711,
											"end": 21745,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 21711,
											"end": 21745,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21711,
											"end": 21745,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 21711,
											"end": 21745,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 21711,
											"end": 21745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21711,
											"end": 21745,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 21711,
											"end": 21745,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 21711,
											"end": 21745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 21711,
											"end": 21749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 21711,
											"end": 21761,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19385,
											"end": 19510,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 19385,
											"end": 19510,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 19485,
											"end": 19503,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 19459,
											"end": 19466,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19485,
											"end": 19503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19485,
											"end": 19503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19485,
											"end": 19503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19485,
											"end": 19503,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 19485,
											"end": 19503,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 19485,
											"end": 19503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19485,
											"end": 19503,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 19485,
											"end": 19503,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 19485,
											"end": 19503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19485,
											"end": 19503,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 19485,
											"end": 19503,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 19485,
											"end": 19503,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19385,
											"end": 19510,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 18356,
											"end": 18449,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 18356,
											"end": 18449,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 18435,
											"end": 18442,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18403,
											"end": 18416,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 18403,
											"end": 18416,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 18435,
											"end": 18442,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 18435,
											"end": 18442,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18435,
											"end": 18442,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 18428,
											"end": 18442,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 22277,
											"end": 22543,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 22277,
											"end": 22543,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22370,
											"end": 22374,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22386,
											"end": 22515,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 22395,
											"end": 22407,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 22395,
											"end": 22405,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 22395,
											"end": 22407,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22395,
											"end": 22407,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 22395,
											"end": 22407,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 22409,
											"end": 22416,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22514,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 22457,
											"end": 22472,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22418,
											"end": 22514,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22514,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 22418,
											"end": 22514,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22514,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22418,
											"end": 22514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22514,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22514,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 22418,
											"end": 22514,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22514,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22514,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22418,
											"end": 22514,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22514,
											"name": "PUSH data",
											"source": 0,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 22418,
											"end": 22514,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 22418,
											"end": 22514,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22514,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22429,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 22418,
											"end": 22443,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 22430,
											"end": 22442,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 22430,
											"end": 22440,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 22430,
											"end": 22442,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 22430,
											"end": 22442,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 22430,
											"end": 22442,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22418,
											"end": 22443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22443,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22443,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22443,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22443,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22443,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 22418,
											"end": 22443,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22443,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22443,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22443,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22443,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22443,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22443,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 22418,
											"end": 22443,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22443,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22443,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 22418,
											"end": 22443,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22443,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22443,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22452,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22452,
											"name": "DUP14",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22452,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22452,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22452,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22452,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22452,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22452,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22452,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22452,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22452,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22514,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 22418,
											"end": 22456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 22418,
											"end": 22514,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19713,
											"end": 19885,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 19713,
											"end": 19885,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19799,
											"end": 19803,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 19815,
											"end": 19857,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 19825,
											"end": 19837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 19825,
											"end": 19835,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 19825,
											"end": 19837,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19825,
											"end": 19837,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 19825,
											"end": 19837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 19839,
											"end": 19848,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19850,
											"end": 19856,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 19815,
											"end": 19824,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 19815,
											"end": 19857,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 19943,
											"end": 20092,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 19943,
											"end": 20092,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 20058,
											"end": 20076,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 20076,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 20076,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20032,
											"end": 20039,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 20058,
											"end": 20076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 20076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 20076,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 20069,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 20058,
											"end": 20076,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 20058,
											"end": 20076,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 20076,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 20076,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 20076,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 20058,
											"end": 20076,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 20076,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 20076,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 20085,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 20085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 20085,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 20085,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 20085,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 20085,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 20085,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 20085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 20085,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 20085,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 20085,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 20085,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 20058,
											"end": 20085,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 19943,
											"end": 20092,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1897,
											"end": 2001,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1897,
											"end": 2001,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1984,
											"end": 1994,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1897,
											"end": 2001,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1897,
											"end": 2001,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 25341,
											"end": 25681,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 25341,
											"end": 25681,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25442,
											"end": 25461,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25442,
											"end": 25461,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "PUSH data",
											"source": 0,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 25434,
											"end": 25502,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25520,
											"end": 25541,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25520,
											"end": 25541,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "PUSH data",
											"source": 0,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "PUSH",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 25512,
											"end": 25580,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 25591,
											"end": 25609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25591,
											"end": 25609,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25591,
											"end": 25609,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25591,
											"end": 25609,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25591,
											"end": 25609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25591,
											"end": 25609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25591,
											"end": 25609,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25591,
											"end": 25602,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25591,
											"end": 25609,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 25591,
											"end": 25609,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25591,
											"end": 25609,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25591,
											"end": 25609,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25591,
											"end": 25609,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25591,
											"end": 25609,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25591,
											"end": 25609,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 25591,
											"end": 25609,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25591,
											"end": 25618,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 25591,
											"end": 25618,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 25591,
											"end": 25618,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 25591,
											"end": 25618,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25591,
											"end": 25618,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 25591,
											"end": 25618,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25591,
											"end": 25618,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 25591,
											"end": 25618,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25591,
											"end": 25618,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25591,
											"end": 25618,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25591,
											"end": 25618,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 25591,
											"end": 25618,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25591,
											"end": 25618,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 25591,
											"end": 25627,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25591,
											"end": 25627,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25591,
											"end": 25627,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 25642,
											"end": 25674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25642,
											"end": 25674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25642,
											"end": 25674,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 25642,
											"end": 25674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25642,
											"end": 25674,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25642,
											"end": 25674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25642,
											"end": 25674,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 25642,
											"end": 25674,
											"name": "PUSH",
											"source": 0,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 25642,
											"end": 25674,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 25642,
											"end": 25674,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 25642,
											"end": 25674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25642,
											"end": 25674,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 25642,
											"end": 25674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25642,
											"end": 25674,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 25642,
											"end": 25674,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 25642,
											"end": 25674,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 25642,
											"end": 25674,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 25341,
											"end": 25681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25341,
											"end": 25681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25341,
											"end": 25681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25341,
											"end": 25681,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 23017,
											"end": 23547,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 23017,
											"end": 23547,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23122,
											"end": 23142,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23122,
											"end": 23142,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "PUSH data",
											"source": 0,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "PUSH",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 23114,
											"end": 23184,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23202,
											"end": 23225,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23202,
											"end": 23225,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "PUSH data",
											"source": 0,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "PUSH",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 23194,
											"end": 23265,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23276,
											"end": 23323,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 23297,
											"end": 23303,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23305,
											"end": 23314,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23316,
											"end": 23322,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 23276,
											"end": 23296,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 23276,
											"end": 23323,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23276,
											"end": 23323,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 23276,
											"end": 23323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 23354,
											"end": 23425,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23376,
											"end": 23382,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23354,
											"end": 23425,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23354,
											"end": 23425,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23354,
											"end": 23425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23354,
											"end": 23425,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 23354,
											"end": 23425,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23354,
											"end": 23425,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23354,
											"end": 23425,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23354,
											"end": 23425,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23354,
											"end": 23425,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 23354,
											"end": 23425,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23354,
											"end": 23425,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23354,
											"end": 23425,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23354,
											"end": 23425,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23354,
											"end": 23425,
											"name": "PUSH data",
											"source": 0,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 23354,
											"end": 23425,
											"name": "PUSH",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 23354,
											"end": 23425,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23354,
											"end": 23425,
											"name": "CODECOPY",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23354,
											"end": 23371,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 23354,
											"end": 23371,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23354,
											"end": 23363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23354,
											"end": 23371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23354,
											"end": 23371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23354,
											"end": 23371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23354,
											"end": 23371,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23354,
											"end": 23371,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23354,
											"end": 23371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23354,
											"end": 23371,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23354,
											"end": 23371,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23354,
											"end": 23371,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23354,
											"end": 23371,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23354,
											"end": 23371,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23354,
											"end": 23371,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23354,
											"end": 23425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23354,
											"end": 23375,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 23354,
											"end": 23425,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23354,
											"end": 23425,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 23354,
											"end": 23425,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23334,
											"end": 23351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23334,
											"end": 23351,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23334,
											"end": 23351,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23334,
											"end": 23343,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23334,
											"end": 23351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23334,
											"end": 23351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23334,
											"end": 23351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23334,
											"end": 23351,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23334,
											"end": 23351,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23334,
											"end": 23351,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23334,
											"end": 23351,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23334,
											"end": 23351,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23334,
											"end": 23351,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23334,
											"end": 23351,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23334,
											"end": 23351,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23334,
											"end": 23425,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23334,
											"end": 23425,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23334,
											"end": 23425,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23334,
											"end": 23425,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23458,
											"end": 23478,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23458,
											"end": 23478,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23458,
											"end": 23478,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23458,
											"end": 23478,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23458,
											"end": 23478,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23458,
											"end": 23478,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23458,
											"end": 23478,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 23458,
											"end": 23490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 23458,
											"end": 23490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23483,
											"end": 23489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23458,
											"end": 23482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 23458,
											"end": 23490,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 23458,
											"end": 23490,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 23458,
											"end": 23490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 23435,
											"end": 23455,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23435,
											"end": 23455,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 23435,
											"end": 23455,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23435,
											"end": 23444,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 23435,
											"end": 23455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23435,
											"end": 23455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23435,
											"end": 23455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23435,
											"end": 23455,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 23435,
											"end": 23455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23435,
											"end": 23455,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23435,
											"end": 23455,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23435,
											"end": 23455,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 23435,
											"end": 23455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23435,
											"end": 23455,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23435,
											"end": 23455,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23435,
											"end": 23455,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 23435,
											"end": 23490,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 23435,
											"end": 23490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23435,
											"end": 23490,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 23435,
											"end": 23490,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 23505,
											"end": 23540,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 23505,
											"end": 23540,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23505,
											"end": 23540,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 23505,
											"end": 23540,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 23505,
											"end": 23540,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 23505,
											"end": 23540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23505,
											"end": 23540,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 23435,
											"end": 23455,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23435,
											"end": 23455,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 23505,
											"end": 23540,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23505,
											"end": 23540,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 23505,
											"end": 23540,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 23505,
											"end": 23540,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23505,
											"end": 23540,
											"name": "PUSH",
											"source": 0,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 23505,
											"end": 23540,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 23505,
											"end": 23540,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 23505,
											"end": 23540,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 23505,
											"end": 23540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23505,
											"end": 23540,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 23505,
											"end": 23540,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 23505,
											"end": 23540,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 23505,
											"end": 23540,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 23017,
											"end": 23547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23017,
											"end": 23547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23017,
											"end": 23547,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 23017,
											"end": 23547,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 12979,
											"end": 13142,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 12979,
											"end": 13142,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13065,
											"end": 13072,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13100,
											"end": 13112,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13092,
											"end": 13098,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13092,
											"end": 13098,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 13092,
											"end": 13098,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 13092,
											"end": 13098,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 13084,
											"end": 13113,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13130,
											"end": 13135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 13130,
											"end": 13135,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 13130,
											"end": 13135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 12979,
											"end": 13142,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 10237,
											"end": 10412,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 10237,
											"end": 10412,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10295,
											"end": 10302,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 10326,
											"end": 10331,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10326,
											"end": 10331,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10326,
											"end": 10331,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10349,
											"end": 10355,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 10349,
											"end": 10355,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10349,
											"end": 10355,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 10349,
											"end": 10355,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 10341,
											"end": 10387,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10341,
											"end": 10387,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 10341,
											"end": 10387,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 10341,
											"end": 10387,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 10341,
											"end": 10387,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10341,
											"end": 10387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10341,
											"end": 10387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10341,
											"end": 10387,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 10341,
											"end": 10387,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 10341,
											"end": 10387,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10341,
											"end": 10387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10341,
											"end": 10387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10341,
											"end": 10387,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 10341,
											"end": 10387,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 10341,
											"end": 10387,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10341,
											"end": 10387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10341,
											"end": 10387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10341,
											"end": 10387,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 10341,
											"end": 10387,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 10341,
											"end": 10387,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 10341,
											"end": 10387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10341,
											"end": 10387,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 10341,
											"end": 10387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10341,
											"end": 10387,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 10341,
											"end": 10387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10341,
											"end": 10387,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 10341,
											"end": 10387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10341,
											"end": 10387,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 10341,
											"end": 10387,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 10341,
											"end": 10387,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 10341,
											"end": 10387,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 10341,
											"end": 10387,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 10341,
											"end": 10387,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 10341,
											"end": 10387,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10404,
											"end": 10405,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 10237,
											"end": 10412,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10237,
											"end": 10412,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 26687,
											"end": 26779,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 26687,
											"end": 26779,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 26687,
											"end": 26779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26687,
											"end": 26779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26687,
											"end": 26779,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 26687,
											"end": 26779,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":{\"keccak256\":\"0x82b5eeb00e90233ce2d3dda056123737fdea95dc770f4ab20e2aa4fb04bb80fd\",\"urls\":[\"bzz-raw://5a0ef83ede982e109c96a83660e62f84bb1506ec40d07ee8ff7e9443a85e0300\",\"dweb:/ipfs/QmZeifAbs3YCYXDqXpg7YbiN5gGaYw1t2UP6cAB8Ha9UXS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 466,
								"contract": "Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 472,
								"contract": "Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 474,
								"contract": "Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 476,
								"contract": "Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 478,
								"contract": "Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 480,
								"contract": "Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol:ERC20",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":{\"keccak256\":\"0x82b5eeb00e90233ce2d3dda056123737fdea95dc770f4ab20e2aa4fb04bb80fd\",\"urls\":[\"bzz-raw://5a0ef83ede982e109c96a83660e62f84bb1506ec40d07ee8ff7e9443a85e0300\",\"dweb:/ipfs/QmZeifAbs3YCYXDqXpg7YbiN5gGaYw1t2UP6cAB8Ha9UXS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":8177:14771  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":8177:14771  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122002e150b56caa48f71bf7a9295425599e089f278aea5a6b82cae01bcdbd87145864736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122002e150b56caa48f71bf7a9295425599e089f278aea5a6b82cae01bcdbd87145864736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL 0xE1 POP 0xB5 PUSH13 0xAA48F71BF7A9295425599E089F 0x27 DUP11 0xEA GAS PUSH12 0x82CAE01BCDBD87145864736F PUSH13 0x63430007060033000000000000 ",
							"sourceMap": "8177:6594:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122002e150b56caa48f71bf7a9295425599e089f278aea5a6b82cae01bcdbd87145864736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MUL 0xE1 POP 0xB5 PUSH13 0xAA48F71BF7A9295425599E089F 0x27 DUP11 0xEA GAS PUSH12 0x82CAE01BCDBD87145864736F PUSH13 0x63430007060033000000000000 ",
							"sourceMap": "8177:6594:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 8177,
									"end": 14771,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8177,
									"end": 14771,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8177,
									"end": 14771,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 8177,
									"end": 14771,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8177,
									"end": 14771,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8177,
									"end": 14771,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8177,
									"end": 14771,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 8177,
									"end": 14771,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 8177,
									"end": 14771,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 8177,
									"end": 14771,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8177,
									"end": 14771,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 8177,
									"end": 14771,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 8177,
									"end": 14771,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 8177,
									"end": 14771,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8177,
									"end": 14771,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 8177,
									"end": 14771,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 8177,
									"end": 14771,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 8177,
									"end": 14771,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 8177,
									"end": 14771,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 8177,
									"end": 14771,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 8177,
									"end": 14771,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 8177,
									"end": 14771,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 8177,
									"end": 14771,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8177,
									"end": 14771,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 8177,
									"end": 14771,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 8177,
									"end": 14771,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 8177,
									"end": 14771,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122002e150b56caa48f71bf7a9295425599e089f278aea5a6b82cae01bcdbd87145864736f6c63430007060033",
									".code": [
										{
											"begin": 8177,
											"end": 14771,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 8177,
											"end": 14771,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 8177,
											"end": 14771,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 8177,
											"end": 14771,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 8177,
											"end": 14771,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8177,
											"end": 14771,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8177,
											"end": 14771,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 14771,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8177,
											"end": 14771,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol\":{\"keccak256\":\"0x82b5eeb00e90233ce2d3dda056123737fdea95dc770f4ab20e2aa4fb04bb80fd\",\"urls\":[\"bzz-raw://5a0ef83ede982e109c96a83660e62f84bb1506ec40d07ee8ff7e9443a85e0300\",\"dweb:/ipfs/QmZeifAbs3YCYXDqXpg7YbiN5gGaYw1t2UP6cAB8Ha9UXS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol:437:5: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n    constructor (string memory name_, string memory symbol_) public {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 18089,
					"file": "Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol",
					"start": 17944
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol": {
				"ast": {
					"absolutePath": "Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20_flattened.sol",
					"exportedSymbols": {
						"Context": [
							22
						],
						"ERC20": [
							952
						],
						"IERC20": [
							99
						],
						"SafeMath": [
							453
						]
					},
					"id": 953,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1332:31:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 22,
							"linearizedBaseContracts": [
								22
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 9,
										"nodeType": "Block",
										"src": "1967:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 6,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1984:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 7,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1984:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 5,
												"id": 8,
												"nodeType": "Return",
												"src": "1977:17:0"
											}
										]
									},
									"id": 10,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1916:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 10,
												"src": "1950:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 3,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1950:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1949:17:0"
									},
									"scope": 22,
									"src": "1897:104:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 20,
										"nodeType": "Block",
										"src": "2072:165:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "2082:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$22",
														"typeString": "contract Context"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "2082:4:0"
											},
											{
												"expression": {
													"expression": {
														"id": 17,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2222:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "2222:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 14,
												"id": 19,
												"nodeType": "Return",
												"src": "2215:15:0"
											}
										]
									},
									"id": 21,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2024:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 13,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 21,
												"src": "2058:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 12,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2058:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2057:14:0"
									},
									"scope": 22,
									"src": "2007:230:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 953,
							"src": "1865:374:0"
						},
						{
							"id": 23,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "3577:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 24,
								"nodeType": "StructuredDocumentation",
								"src": "3610:70:0",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 99,
							"linearizedBaseContracts": [
								99
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "3704:66:0",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 30,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3795:2:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 30,
												"src": "3821:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3821:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3820:9:0"
									},
									"scope": 99,
									"src": "3775:55:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 31,
										"nodeType": "StructuredDocumentation",
										"src": "3836:72:0",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 38,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 33,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "3932:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 32,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3932:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3931:17:0"
									},
									"returnParameters": {
										"id": 37,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "3972:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3972:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3971:9:0"
									},
									"scope": 99,
									"src": "3913:68:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "3987:209:0",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 48,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "4219:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 40,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4219:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "4238:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4238:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4218:35:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 48,
												"src": "4272:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 45,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4272:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4271:6:0"
									},
									"scope": 99,
									"src": "4201:77:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 49,
										"nodeType": "StructuredDocumentation",
										"src": "4284:264:0",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 58,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 54,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 51,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "4572:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 50,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4572:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 53,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "4587:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 52,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4587:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4571:32:0"
									},
									"returnParameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 56,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 58,
												"src": "4627:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 55,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4627:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4626:9:0"
									},
									"scope": 99,
									"src": "4553:83:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "4642:642:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 68,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "5306:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 60,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5306:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "5323:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5323:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5305:33:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 68,
												"src": "5357:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 65,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5357:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5356:6:0"
									},
									"scope": 99,
									"src": "5289:74:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "5369:296:0",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 80,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "5692:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5692:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 73,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "5708:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 72,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5708:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "5727:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 74,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5727:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5691:51:0"
									},
									"returnParameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 80,
												"src": "5761:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 77,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5761:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5760:6:0"
									},
									"scope": 99,
									"src": "5670:97:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 81,
										"nodeType": "StructuredDocumentation",
										"src": "5773:158:0",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 89,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "5951:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 82,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5951:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 85,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "5973:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5973:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 87,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 89,
												"src": "5993:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 86,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5993:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5950:57:0"
									},
									"src": "5936:72:0"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 90,
										"nodeType": "StructuredDocumentation",
										"src": "6014:148:0",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 98,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "6182:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 91,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6182:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 94,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "6205:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6205:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 98,
												"src": "6230:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 95,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6230:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6181:63:0"
									},
									"src": "6167:78:0"
								}
							],
							"scope": 953,
							"src": "3681:2566:0"
						},
						{
							"id": 100,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "7580:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 101,
								"nodeType": "StructuredDocumentation",
								"src": "7613:563:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 453,
							"linearizedBaseContracts": [
								453
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 131,
										"nodeType": "Block",
										"src": "8412:98:0",
										"statements": [
											{
												"assignments": [
													114
												],
												"declarations": [
													{
														"constant": false,
														"id": 114,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 131,
														"src": "8422:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 113,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8422:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 118,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 115,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 104,
														"src": "8434:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 116,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "8438:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8434:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8422:17:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 119,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 114,
														"src": "8453:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 120,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 104,
														"src": "8457:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8453:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 126,
												"nodeType": "IfStatement",
												"src": "8449:28:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 122,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8468:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 123,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8475:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 124,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8467:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 112,
													"id": 125,
													"nodeType": "Return",
													"src": "8460:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8495:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 128,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 114,
															"src": "8501:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 129,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "8494:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 112,
												"id": 130,
												"nodeType": "Return",
												"src": "8487:16:0"
											}
										]
									},
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "8200:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "8352:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8352:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "8363:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8363:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8351:22:0"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "8397:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 108,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8397:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "8403:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8403:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8396:15:0"
									},
									"scope": 453,
									"src": "8336:174:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 158,
										"nodeType": "Block",
										"src": "8732:75:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 144,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 137,
														"src": "8746:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 145,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 135,
														"src": "8750:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8746:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 151,
												"nodeType": "IfStatement",
												"src": "8742:28:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 147,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8761:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 148,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8768:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 149,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "8760:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 143,
													"id": 150,
													"nodeType": "Return",
													"src": "8753:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 152,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8788:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 155,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 153,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 135,
																"src": "8794:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 154,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "8798:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8794:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 156,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "8787:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 143,
												"id": 157,
												"nodeType": "Return",
												"src": "8780:20:0"
											}
										]
									},
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "8516:135:0",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "8672:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8672:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "8683:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 136,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8683:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8671:22:0"
									},
									"returnParameters": {
										"id": 143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 140,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "8717:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 139,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8717:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 142,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "8723:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 141,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8723:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8716:15:0"
									},
									"scope": 453,
									"src": "8656:151:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "9031:359:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 173,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 171,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "9263:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 172,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9268:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9263:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 178,
												"nodeType": "IfStatement",
												"src": "9259:28:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "74727565",
																"id": 174,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9279:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"hexValue": "30",
																"id": 175,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9285:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 176,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9278:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 170,
													"id": 177,
													"nodeType": "Return",
													"src": "9271:16:0"
												}
											},
											{
												"assignments": [
													180
												],
												"declarations": [
													{
														"constant": false,
														"id": 180,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 199,
														"src": "9297:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 179,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9297:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 184,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 181,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 162,
														"src": "9309:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 182,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "9313:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9309:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9297:17:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 187,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 185,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "9328:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 186,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "9332:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "9328:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 188,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 164,
														"src": "9337:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9328:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 194,
												"nodeType": "IfStatement",
												"src": "9324:33:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 190,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9348:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 191,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9355:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 192,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9347:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 170,
													"id": 193,
													"nodeType": "Return",
													"src": "9340:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9375:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 196,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 180,
															"src": "9381:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 197,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "9374:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 170,
												"id": 198,
												"nodeType": "Return",
												"src": "9367:16:0"
											}
										]
									},
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "8813:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "8971:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8971:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "8982:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8982:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8970:22:0"
									},
									"returnParameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "9016:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 166,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9016:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "9022:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9022:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9015:15:0"
									},
									"scope": 453,
									"src": "8955:435:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "9615:76:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 212,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 205,
														"src": "9629:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 213,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9634:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9629:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 219,
												"nodeType": "IfStatement",
												"src": "9625:29:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 215,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9645:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9652:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 217,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9644:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 211,
													"id": 218,
													"nodeType": "Return",
													"src": "9637:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 220,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9672:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 223,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 221,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "9678:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 222,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 205,
																"src": "9682:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9678:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 224,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "9671:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 211,
												"id": 225,
												"nodeType": "Return",
												"src": "9664:20:0"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "9396:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "9555:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9555:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "9566:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9566:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9554:22:0"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "9600:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 207,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9600:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "9606:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 209,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9606:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9599:15:0"
									},
									"scope": 453,
									"src": "9539:152:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 253,
										"nodeType": "Block",
										"src": "9926:76:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 239,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 232,
														"src": "9940:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 240,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9945:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "9940:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 246,
												"nodeType": "IfStatement",
												"src": "9936:29:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 242,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9956:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 243,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9963:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 244,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9955:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 238,
													"id": 245,
													"nodeType": "Return",
													"src": "9948:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 247,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9983:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 248,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 230,
																"src": "9989:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 249,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 232,
																"src": "9993:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9989:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 251,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "9982:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 238,
												"id": 252,
												"nodeType": "Return",
												"src": "9975:20:0"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "9697:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 254,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "9866:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9866:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "9877:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 231,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9877:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9865:22:0"
									},
									"returnParameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "9911:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 234,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9911:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "9917:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 236,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9917:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9910:15:0"
									},
									"scope": 453,
									"src": "9850:152:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 279,
										"nodeType": "Block",
										"src": "10304:108:0",
										"statements": [
											{
												"assignments": [
													265
												],
												"declarations": [
													{
														"constant": false,
														"id": 265,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 279,
														"src": "10314:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 264,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10314:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 269,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 266,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 257,
														"src": "10326:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 267,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 259,
														"src": "10330:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10326:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10314:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 271,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 265,
																"src": "10349:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 272,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 257,
																"src": "10354:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10349:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 274,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10357:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 270,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10341:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10341:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "10341:46:0"
											},
											{
												"expression": {
													"id": 277,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 265,
													"src": "10404:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 263,
												"id": 278,
												"nodeType": "Return",
												"src": "10397:8:0"
											}
										]
									},
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "10008:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "10250:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 256,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10250:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "10261:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10261:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10249:22:0"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "10295:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10295:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10294:9:0"
									},
									"scope": 453,
									"src": "10237:175:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 301,
										"nodeType": "Block",
										"src": "10750:88:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 293,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 291,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 285,
																"src": "10768:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 292,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 283,
																"src": "10773:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10768:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10776:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 290,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10760:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10760:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 296,
												"nodeType": "ExpressionStatement",
												"src": "10760:49:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 299,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 297,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "10826:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 298,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 285,
														"src": "10830:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10826:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 289,
												"id": 300,
												"nodeType": "Return",
												"src": "10819:12:0"
											}
										]
									},
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "10418:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 302,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 283,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "10696:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10696:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "10707:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 284,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10707:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10695:22:0"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 302,
												"src": "10741:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10741:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10740:9:0"
									},
									"scope": 453,
									"src": "10683:155:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "11152:148:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 312,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "11166:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 313,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11171:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11166:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 317,
												"nodeType": "IfStatement",
												"src": "11162:20:0",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 315,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11181:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 311,
													"id": 316,
													"nodeType": "Return",
													"src": "11174:8:0"
												}
											},
											{
												"assignments": [
													319
												],
												"declarations": [
													{
														"constant": false,
														"id": 319,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 335,
														"src": "11192:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 318,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11192:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 323,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 320,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 305,
														"src": "11204:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 321,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 307,
														"src": "11208:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11204:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11192:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 325,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 319,
																	"src": "11227:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 326,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "11231:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "11227:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 328,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 307,
																"src": "11236:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "11227:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 330,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11239:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 324,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11219:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 331,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11219:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 332,
												"nodeType": "ExpressionStatement",
												"src": "11219:56:0"
											},
											{
												"expression": {
													"id": 333,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 319,
													"src": "11292:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 311,
												"id": 334,
												"nodeType": "Return",
												"src": "11285:8:0"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "10844:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "11098:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11098:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "11109:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 306,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11109:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11097:22:0"
									},
									"returnParameters": {
										"id": 311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "11143:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11143:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11142:9:0"
									},
									"scope": 453,
									"src": "11085:215:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 357,
										"nodeType": "Block",
										"src": "11831:83:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 349,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 347,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 341,
																"src": "11849:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 348,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11853:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11849:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11856:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 346,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "11841:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11841:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 352,
												"nodeType": "ExpressionStatement",
												"src": "11841:44:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 355,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 353,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 339,
														"src": "11902:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 354,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 341,
														"src": "11906:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11902:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 345,
												"id": 356,
												"nodeType": "Return",
												"src": "11895:12:0"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "11306:453:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 358,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "11777:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11777:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "11788:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 340,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11788:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11776:22:0"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 358,
												"src": "11822:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11821:9:0"
									},
									"scope": 453,
									"src": "11764:150:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "12434:81:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 369,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 363,
																"src": "12452:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 370,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12456:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12452:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 372,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "12459:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 368,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "12444:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12444:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 374,
												"nodeType": "ExpressionStatement",
												"src": "12444:42:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 375,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "12503:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 376,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 363,
														"src": "12507:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "12503:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 367,
												"id": 378,
												"nodeType": "Return",
												"src": "12496:12:0"
											}
										]
									},
									"documentation": {
										"id": 359,
										"nodeType": "StructuredDocumentation",
										"src": "11920:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "12380:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 360,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12380:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "12391:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12379:22:0"
									},
									"returnParameters": {
										"id": 367,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "12425:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 365,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12425:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12424:9:0"
									},
									"scope": 453,
									"src": "12367:148:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 403,
										"nodeType": "Block",
										"src": "13074:68:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 395,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 393,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 385,
																"src": "13092:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 394,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 383,
																"src": "13097:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "13092:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 396,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 387,
															"src": "13100:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 392,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13084:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 397,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13084:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 398,
												"nodeType": "ExpressionStatement",
												"src": "13084:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 401,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 399,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 383,
														"src": "13130:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 400,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "13134:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13130:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 391,
												"id": 402,
												"nodeType": "Return",
												"src": "13123:12:0"
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "12521:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 404,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "12992:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 382,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12992:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "13003:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13003:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 387,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "13014:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 386,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13014:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12991:50:0"
									},
									"returnParameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 404,
												"src": "13065:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13065:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13064:9:0"
									},
									"scope": 453,
									"src": "12979:163:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 427,
										"nodeType": "Block",
										"src": "13894:67:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 417,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 409,
																"src": "13912:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 418,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13916:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13912:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 420,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 411,
															"src": "13919:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 416,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "13904:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13904:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 422,
												"nodeType": "ExpressionStatement",
												"src": "13904:28:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 423,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 407,
														"src": "13949:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 424,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 409,
														"src": "13953:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13949:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 415,
												"id": 426,
												"nodeType": "Return",
												"src": "13942:12:0"
											}
										]
									},
									"documentation": {
										"id": 405,
										"nodeType": "StructuredDocumentation",
										"src": "13148:646:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 428,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "13812:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 406,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13812:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "13823:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13823:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 411,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "13834:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 410,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "13834:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13811:50:0"
									},
									"returnParameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 428,
												"src": "13885:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13885:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13884:9:0"
									},
									"scope": 453,
									"src": "13799:162:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 451,
										"nodeType": "Block",
										"src": "14702:67:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 443,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 441,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 433,
																"src": "14720:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 442,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14724:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14720:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 444,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 435,
															"src": "14727:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 440,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "14712:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 445,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14712:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 446,
												"nodeType": "ExpressionStatement",
												"src": "14712:28:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 447,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 431,
														"src": "14757:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 448,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 433,
														"src": "14761:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14757:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 439,
												"id": 450,
												"nodeType": "Return",
												"src": "14750:12:0"
											}
										]
									},
									"documentation": {
										"id": 429,
										"nodeType": "StructuredDocumentation",
										"src": "13967:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 452,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "14620:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 430,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14620:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "14631:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 432,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14631:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "14642:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 434,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "14642:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14619:50:0"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "14693:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14693:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14692:9:0"
									},
									"scope": 453,
									"src": "14607:162:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 953,
							"src": "8177:6594:0"
						},
						{
							"id": 454,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "16108:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 456,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 22,
										"src": "17325:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$22",
											"typeString": "contract Context"
										}
									},
									"id": 457,
									"nodeType": "InheritanceSpecifier",
									"src": "17325:7:0"
								},
								{
									"baseName": {
										"id": 458,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 99,
										"src": "17334:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$99",
											"typeString": "contract IERC20"
										}
									},
									"id": 459,
									"nodeType": "InheritanceSpecifier",
									"src": "17334:6:0"
								}
							],
							"contractDependencies": [
								22,
								99
							],
							"contractKind": "contract",
							"documentation": {
								"id": 455,
								"nodeType": "StructuredDocumentation",
								"src": "16144:1162:0",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 952,
							"linearizedBaseContracts": [
								952,
								99,
								22
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 462,
									"libraryName": {
										"id": 460,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 453,
										"src": "17353:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$453",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "17347:27:0",
									"typeName": {
										"id": 461,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "17366:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 466,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 952,
									"src": "17380:46:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 465,
										"keyType": {
											"id": 463,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "17389:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "17380:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 464,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "17400:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 472,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 952,
									"src": "17433:69:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 471,
										"keyType": {
											"id": 467,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "17442:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "17433:49:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 470,
											"keyType": {
												"id": 468,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "17462:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "17453:28:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 469,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "17473:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 474,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 952,
									"src": "17509:28:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 473,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "17509:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 476,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 952,
									"src": "17544:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 475,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "17544:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 478,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 952,
									"src": "17570:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 477,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "17570:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 480,
									"mutability": "mutable",
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 952,
									"src": "17598:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 479,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "17598:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 500,
										"nodeType": "Block",
										"src": "18008:81:0",
										"statements": [
											{
												"expression": {
													"id": 490,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 488,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 476,
														"src": "18018:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 489,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "18026:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "18018:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 491,
												"nodeType": "ExpressionStatement",
												"src": "18018:13:0"
											},
											{
												"expression": {
													"id": 494,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 492,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 478,
														"src": "18041:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 493,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "18051:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "18041:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 495,
												"nodeType": "ExpressionStatement",
												"src": "18041:17:0"
											},
											{
												"expression": {
													"id": 498,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 496,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "18068:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3138",
														"id": 497,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "18080:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "18068:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 499,
												"nodeType": "ExpressionStatement",
												"src": "18068:14:0"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "17628:311:0",
										"text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
									},
									"id": 501,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "17957:19:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 482,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17957:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 485,
												"mutability": "mutable",
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"scope": 501,
												"src": "17978:21:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 484,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "17978:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17956:44:0"
									},
									"returnParameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18008:0:0"
									},
									"scope": 952,
									"src": "17944:145:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 509,
										"nodeType": "Block",
										"src": "18214:29:0",
										"statements": [
											{
												"expression": {
													"id": 507,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 476,
													"src": "18231:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 506,
												"id": 508,
												"nodeType": "Return",
												"src": "18224:12:0"
											}
										]
									},
									"documentation": {
										"id": 502,
										"nodeType": "StructuredDocumentation",
										"src": "18095:54:0",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 510,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18167:2:0"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 510,
												"src": "18199:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 504,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "18199:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18198:15:0"
									},
									"scope": 952,
									"src": "18154:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 518,
										"nodeType": "Block",
										"src": "18418:31:0",
										"statements": [
											{
												"expression": {
													"id": 516,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 478,
													"src": "18435:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 515,
												"id": 517,
												"nodeType": "Return",
												"src": "18428:14:0"
											}
										]
									},
									"documentation": {
										"id": 511,
										"nodeType": "StructuredDocumentation",
										"src": "18249:102:0",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "18371:2:0"
									},
									"returnParameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "18403:13:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 513,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "18403:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18402:15:0"
									},
									"scope": 952,
									"src": "18356:93:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 527,
										"nodeType": "Block",
										"src": "19128:33:0",
										"statements": [
											{
												"expression": {
													"id": 525,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 480,
													"src": "19145:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 524,
												"id": 526,
												"nodeType": "Return",
												"src": "19138:16:0"
											}
										]
									},
									"documentation": {
										"id": 520,
										"nodeType": "StructuredDocumentation",
										"src": "18455:612:0",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 528,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19089:2:0"
									},
									"returnParameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 523,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "19121:5:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 522,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "19121:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19120:7:0"
									},
									"scope": 952,
									"src": "19072:89:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										30
									],
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "19291:36:0",
										"statements": [
											{
												"expression": {
													"id": 535,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 474,
													"src": "19308:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 534,
												"id": 536,
												"nodeType": "Return",
												"src": "19301:19:0"
											}
										]
									},
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "19167:49:0",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 531,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "19264:8:0"
									},
									"parameters": {
										"id": 530,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "19241:2:0"
									},
									"returnParameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 538,
												"src": "19282:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 532,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19282:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19281:9:0"
									},
									"scope": 952,
									"src": "19221:106:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										38
									],
									"body": {
										"id": 551,
										"nodeType": "Block",
										"src": "19468:42:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 547,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 466,
														"src": "19485:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 549,
													"indexExpression": {
														"id": 548,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 541,
														"src": "19495:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "19485:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 546,
												"id": 550,
												"nodeType": "Return",
												"src": "19478:25:0"
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "19333:47:0",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 552,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 543,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "19441:8:0"
									},
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "19404:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 540,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19404:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19403:17:0"
									},
									"returnParameters": {
										"id": 546,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "19459:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19459:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19458:9:0"
									},
									"scope": 952,
									"src": "19385:125:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										48
									],
									"body": {
										"id": 572,
										"nodeType": "Block",
										"src": "19805:80:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 564,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "19825:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 565,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "19825:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 566,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 555,
															"src": "19839:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 567,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 557,
															"src": "19850:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 563,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "19815:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 568,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "19815:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 569,
												"nodeType": "ExpressionStatement",
												"src": "19815:42:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 570,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "19874:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 562,
												"id": 571,
												"nodeType": "Return",
												"src": "19867:11:0"
											}
										]
									},
									"documentation": {
										"id": 553,
										"nodeType": "StructuredDocumentation",
										"src": "19516:192:0",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 573,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 559,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "19781:8:0"
									},
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "19731:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19731:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "19750:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 556,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "19750:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19730:35:0"
									},
									"returnParameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 573,
												"src": "19799:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 560,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "19799:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19798:6:0"
									},
									"scope": 952,
									"src": "19713:172:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										58
									],
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "20041:51:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 584,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 472,
															"src": "20058:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 586,
														"indexExpression": {
															"id": 585,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "20070:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "20058:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 588,
													"indexExpression": {
														"id": 587,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 578,
														"src": "20077:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "20058:27:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 583,
												"id": 589,
												"nodeType": "Return",
												"src": "20051:34:0"
											}
										]
									},
									"documentation": {
										"id": 574,
										"nodeType": "StructuredDocumentation",
										"src": "19891:47:0",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 580,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "20014:8:0"
									},
									"parameters": {
										"id": 579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "19962:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 575,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19962:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "19977:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "19977:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19961:32:0"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 582,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "20032:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 581,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20032:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20031:9:0"
									},
									"scope": 952,
									"src": "19943:149:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										68
									],
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "20319:77:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 603,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "20338:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "20338:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 605,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 594,
															"src": "20352:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 606,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 596,
															"src": "20361:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 602,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 929,
														"src": "20329:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20329:39:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 608,
												"nodeType": "ExpressionStatement",
												"src": "20329:39:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "20385:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 601,
												"id": 610,
												"nodeType": "Return",
												"src": "20378:11:0"
											}
										]
									},
									"documentation": {
										"id": 592,
										"nodeType": "StructuredDocumentation",
										"src": "20098:127:0",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 598,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "20295:8:0"
									},
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "20247:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 593,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "20264:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 595,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20264:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20246:33:0"
									},
									"returnParameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "20313:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 599,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20313:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20312:6:0"
									},
									"scope": 952,
									"src": "20230:166:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										80
									],
									"body": {
										"id": 649,
										"nodeType": "Block",
										"src": "20975:205:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 626,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "20995:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 627,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "21003:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 628,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "21014:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 625,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 773,
														"src": "20985:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "20985:36:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 630,
												"nodeType": "ExpressionStatement",
												"src": "20985:36:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 632,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "21040:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 633,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "21048:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 634,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21048:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 642,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 619,
																	"src": "21100:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 643,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "21108:42:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 635,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 472,
																			"src": "21062:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 637,
																		"indexExpression": {
																			"id": 636,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 615,
																			"src": "21074:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "21062:19:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 640,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 638,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 10,
																			"src": "21082:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 639,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "21082:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "21062:33:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 641,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 404,
																"src": "21062:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21062:89:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 631,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 929,
														"src": "21031:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21031:121:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 646,
												"nodeType": "ExpressionStatement",
												"src": "21031:121:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 647,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "21169:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 624,
												"id": 648,
												"nodeType": "Return",
												"src": "21162:11:0"
											}
										]
									},
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "20402:456:0",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 650,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 621,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "20951:8:0"
									},
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "20885:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20885:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "20901:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "20901:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "20920:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "20920:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20884:51:0"
									},
									"returnParameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 650,
												"src": "20969:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 622,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "20969:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20968:6:0"
									},
									"scope": 952,
									"src": "20863:317:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "21669:121:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 661,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "21688:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 662,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21688:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 663,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 653,
															"src": "21702:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 671,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 655,
																	"src": "21750:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 664,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 472,
																			"src": "21711:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 667,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 665,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 10,
																				"src": "21723:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 666,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "21723:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "21711:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 669,
																	"indexExpression": {
																		"id": 668,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 653,
																		"src": "21737:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "21711:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 670,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 280,
																"src": "21711:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "21711:50:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 660,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 929,
														"src": "21679:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "21679:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 674,
												"nodeType": "ExpressionStatement",
												"src": "21679:83:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "21779:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 659,
												"id": 676,
												"nodeType": "Return",
												"src": "21772:11:0"
											}
										]
									},
									"documentation": {
										"id": 651,
										"nodeType": "StructuredDocumentation",
										"src": "21186:384:0",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 656,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 653,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "21602:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 652,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "21602:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 655,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "21619:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 654,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "21619:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21601:37:0"
									},
									"returnParameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "21663:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 657,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "21663:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21662:6:0"
									},
									"scope": 952,
									"src": "21575:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 706,
										"nodeType": "Block",
										"src": "22376:167:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 689,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "22395:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 690,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22395:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 691,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "22409:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 699,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 683,
																	"src": "22457:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 700,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "22474:39:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 692,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 472,
																			"src": "22418:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 695,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 693,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 10,
																				"src": "22430:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 694,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "22430:12:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "22418:25:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 697,
																	"indexExpression": {
																		"id": 696,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 681,
																		"src": "22444:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "22418:34:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 404,
																"src": "22418:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "22418:96:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 688,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 929,
														"src": "22386:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "22386:129:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 703,
												"nodeType": "ExpressionStatement",
												"src": "22386:129:0"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 704,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "22532:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 687,
												"id": 705,
												"nodeType": "Return",
												"src": "22525:11:0"
											}
										]
									},
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "21796:476:0",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 707,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "22304:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "22304:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "22321:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "22321:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22303:42:0"
									},
									"returnParameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 707,
												"src": "22370:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 685,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "22370:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22369:6:0"
									},
									"scope": 952,
									"src": "22277:266:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 772,
										"nodeType": "Block",
										"src": "23104:443:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 723,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 718,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 710,
																"src": "23122:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23140:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 720,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "23132:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 719,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "23132:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 722,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23132:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "23122:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 724,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23144:39:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 717,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23114:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 725,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23114:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 726,
												"nodeType": "ExpressionStatement",
												"src": "23114:70:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 733,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 728,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 712,
																"src": "23202:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23223:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "23215:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 729,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "23215:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23215:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "23202:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23227:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 727,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23194:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23194:71:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 736,
												"nodeType": "ExpressionStatement",
												"src": "23194:71:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 738,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "23297:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 739,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "23305:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 740,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "23316:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 737,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "23276:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23276:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "23276:47:0"
											},
											{
												"expression": {
													"id": 753,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 743,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "23334:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 745,
														"indexExpression": {
															"id": 744,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "23344:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "23334:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 750,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 714,
																"src": "23376:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "23384:40:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 746,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 466,
																	"src": "23354:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 748,
																"indexExpression": {
																	"id": 747,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 710,
																	"src": "23364:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "23354:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 404,
															"src": "23354:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 752,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23354:71:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23334:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 754,
												"nodeType": "ExpressionStatement",
												"src": "23334:91:0"
											},
											{
												"expression": {
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 755,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "23435:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 757,
														"indexExpression": {
															"id": 756,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "23445:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "23435:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 762,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 714,
																"src": "23483:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 758,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 466,
																	"src": "23458:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 760,
																"indexExpression": {
																	"id": 759,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 712,
																	"src": "23468:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "23458:20:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 280,
															"src": "23458:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23458:32:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "23435:55:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 765,
												"nodeType": "ExpressionStatement",
												"src": "23435:55:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 767,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "23514:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 768,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 712,
															"src": "23522:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 769,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 714,
															"src": "23533:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 766,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "23505:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23505:35:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 771,
												"nodeType": "EmitStatement",
												"src": "23500:40:0"
											}
										]
									},
									"documentation": {
										"id": 708,
										"nodeType": "StructuredDocumentation",
										"src": "22549:463:0",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 715,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 710,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "23036:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 709,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23036:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 712,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "23052:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 711,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23052:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 714,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 773,
												"src": "23071:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 713,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23071:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23035:51:0"
									},
									"returnParameters": {
										"id": 716,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23104:0:0"
									},
									"scope": 952,
									"src": "23017:530:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 827,
										"nodeType": "Block",
										"src": "23883:305:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 782,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 776,
																"src": "23901:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23920:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 784,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "23912:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 783,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "23912:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 786,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23912:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "23901:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "23924:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 781,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "23893:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23893:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 790,
												"nodeType": "ExpressionStatement",
												"src": "23893:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 794,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "23998:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 793,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "23990:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 792,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "23990:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 795,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "23990:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 796,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "24002:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 797,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "24011:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 791,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "23969:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 798,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "23969:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 799,
												"nodeType": "ExpressionStatement",
												"src": "23969:49:0"
											},
											{
												"expression": {
													"id": 805,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 800,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "24029:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 803,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 778,
																"src": "24061:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 801,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 474,
																"src": "24044:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 802,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 280,
															"src": "24044:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 804,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24044:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24029:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 806,
												"nodeType": "ExpressionStatement",
												"src": "24029:39:0"
											},
											{
												"expression": {
													"id": 816,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 807,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "24078:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 809,
														"indexExpression": {
															"id": 808,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "24088:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "24078:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 814,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 778,
																"src": "24122:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 810,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 466,
																	"src": "24099:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 812,
																"indexExpression": {
																	"id": 811,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 776,
																	"src": "24109:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "24099:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 813,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 280,
															"src": "24099:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 815,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24099:30:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24078:51:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 817,
												"nodeType": "ExpressionStatement",
												"src": "24078:51:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24161:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 820,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24153:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 819,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "24153:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24153:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 823,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 776,
															"src": "24165:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 824,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 778,
															"src": "24174:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 818,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "24144:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24144:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 826,
												"nodeType": "EmitStatement",
												"src": "24139:42:0"
											}
										]
									},
									"documentation": {
										"id": 774,
										"nodeType": "StructuredDocumentation",
										"src": "23553:260:0",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
									},
									"id": 828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 776,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "23833:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 775,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "23833:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 778,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 828,
												"src": "23850:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 777,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "23850:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23832:33:0"
									},
									"returnParameters": {
										"id": 780,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "23883:0:0"
									},
									"scope": 952,
									"src": "23818:370:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 883,
										"nodeType": "Block",
										"src": "24573:345:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 842,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 837,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 831,
																"src": "24591:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 840,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24610:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "24602:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 838,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "24602:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 841,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24602:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "24591:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 843,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "24614:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 836,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "24583:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24583:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 845,
												"nodeType": "ExpressionStatement",
												"src": "24583:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 847,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "24682:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 850,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24699:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 849,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24691:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 848,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "24691:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 851,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24691:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 852,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "24703:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 846,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 951,
														"src": "24661:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 853,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24661:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 854,
												"nodeType": "ExpressionStatement",
												"src": "24661:49:0"
											},
											{
												"expression": {
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 855,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 466,
															"src": "24721:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 857,
														"indexExpression": {
															"id": 856,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "24731:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "24721:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 862,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "24765:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 863,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "24773:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 858,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 466,
																	"src": "24742:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 860,
																"indexExpression": {
																	"id": 859,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 831,
																	"src": "24752:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "24742:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 861,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 404,
															"src": "24742:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 864,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24742:68:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24721:89:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 866,
												"nodeType": "ExpressionStatement",
												"src": "24721:89:0"
											},
											{
												"expression": {
													"id": 872,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 867,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 474,
														"src": "24820:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 870,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 833,
																"src": "24852:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 868,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 474,
																"src": "24835:12:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 869,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 302,
															"src": "24835:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 871,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24835:24:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "24820:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 873,
												"nodeType": "ExpressionStatement",
												"src": "24820:39:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 875,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 831,
															"src": "24883:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 878,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "24900:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 877,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "24892:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 876,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "24892:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 879,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "24892:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 880,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 833,
															"src": "24904:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 874,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 89,
														"src": "24874:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 881,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "24874:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 882,
												"nodeType": "EmitStatement",
												"src": "24869:42:0"
											}
										]
									},
									"documentation": {
										"id": 829,
										"nodeType": "StructuredDocumentation",
										"src": "24194:309:0",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "24523:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 830,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "24523:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 833,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "24540:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 832,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "24540:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24522:33:0"
									},
									"returnParameters": {
										"id": 835,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "24573:0:0"
									},
									"scope": 952,
									"src": "24508:410:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 928,
										"nodeType": "Block",
										"src": "25424:257:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 895,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 887,
																"src": "25442:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 898,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25459:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 897,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "25451:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 896,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "25451:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 899,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25451:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "25442:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 901,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25463:38:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 894,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "25434:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 902,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25434:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 903,
												"nodeType": "ExpressionStatement",
												"src": "25434:68:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 910,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 905,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 889,
																"src": "25520:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 908,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25539:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "25531:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 906,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "25531:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 909,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25531:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "25520:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 911,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "25543:36:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 904,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "25512:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25512:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 913,
												"nodeType": "ExpressionStatement",
												"src": "25512:68:0"
											},
											{
												"expression": {
													"id": 920,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 914,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 472,
																"src": "25591:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 917,
															"indexExpression": {
																"id": 915,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 887,
																"src": "25603:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "25591:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 918,
														"indexExpression": {
															"id": 916,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "25610:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "25591:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 919,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 891,
														"src": "25621:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "25591:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 921,
												"nodeType": "ExpressionStatement",
												"src": "25591:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 923,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 887,
															"src": "25651:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 924,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 889,
															"src": "25658:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 925,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 891,
															"src": "25667:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 922,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 98,
														"src": "25642:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "25642:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 927,
												"nodeType": "EmitStatement",
												"src": "25637:37:0"
											}
										]
									},
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "24924:412:0",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 929,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 892,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "25359:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25359:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "25374:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "25374:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 891,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 929,
												"src": "25391:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 890,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "25391:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25358:48:0"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "25424:0:0"
									},
									"scope": 952,
									"src": "25341:340:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 939,
										"nodeType": "Block",
										"src": "26062:38:0",
										"statements": [
											{
												"expression": {
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 935,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "26072:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 936,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 932,
														"src": "26084:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "26072:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 938,
												"nodeType": "ExpressionStatement",
												"src": "26072:21:0"
											}
										]
									},
									"documentation": {
										"id": 930,
										"nodeType": "StructuredDocumentation",
										"src": "25687:312:0",
										"text": " @dev Sets {decimals} to a value other than the default one of 18.\n WARNING: This function should only be called from the constructor. Most\n applications that interact with token contracts will not expect\n {decimals} to ever change, and may work incorrectly if it does."
									},
									"id": 940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupDecimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "decimals_",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "26028:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 931,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "26028:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26027:17:0"
									},
									"returnParameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26062:0:0"
									},
									"scope": 952,
									"src": "26004:96:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 950,
										"nodeType": "Block",
										"src": "26776:3:0",
										"statements": []
									},
									"documentation": {
										"id": 941,
										"nodeType": "StructuredDocumentation",
										"src": "26106:576:0",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 951,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "26717:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26717:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "26731:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "26731:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 947,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 951,
												"src": "26743:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 946,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "26743:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26716:42:0"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "26776:0:0"
									},
									"scope": 952,
									"src": "26687:92:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 953,
							"src": "17307:9474:0"
						}
					],
					"src": "1332:25450:0"
				},
				"id": 0
			}
		}
	}
}