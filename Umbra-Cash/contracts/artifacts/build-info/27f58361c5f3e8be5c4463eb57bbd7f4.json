{
	"id": "27f58361c5f3e8be5c4463eb57bbd7f4",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.7.6",
	"solcLongVersion": "0.7.6+commit.7338295f",
	"input": {
		"language": "Solidity",
		"sources": {
			"Umbra-Cash/contracts/TestToken.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/protocols/Umbra-Cash?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n\npragma solidity ^0.7.6;\n\nimport \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\";\n\ncontract TestToken is ERC20 {\n  constructor(string memory name, string memory symbol) ERC20(name, symbol) {}\n\n  function mint(address account, uint256 amount) public {\n    _mint(account, amount);\n  }\n}\n"
			},
			"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/protocols/Umbra-Cash?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../../utils/Context.sol\";\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin guidelines: functions revert instead\n * of returning `false` on failure. This behavior is nonetheless conventional\n * and does not conflict with the expectations of ERC20 applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20 {\n    using SafeMath for uint256;\n\n    mapping (address => uint256) private _balances;\n\n    mapping (address => mapping (address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n    uint8 private _decimals;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n     * a default value of 18.\n     *\n     * To select a different value for {decimals}, use {_setupDecimals}.\n     *\n     * All three of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor (string memory name_, string memory symbol_) public {\n        _name = name_;\n        _symbol = symbol_;\n        _decimals = 18;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5,05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n     * called.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return _decimals;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `recipient` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(_msgSender(), recipient, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        _approve(_msgSender(), spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * Requirements:\n     *\n     * - `sender` and `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``sender``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {\n        _transfer(sender, recipient, amount);\n        _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\"));\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue));\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\"));\n        return true;\n    }\n\n    /**\n     * @dev Moves tokens `amount` from `sender` to `recipient`.\n     *\n     * This is internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `sender` cannot be the zero address.\n     * - `recipient` cannot be the zero address.\n     * - `sender` must have a balance of at least `amount`.\n     */\n    function _transfer(address sender, address recipient, uint256 amount) internal virtual {\n        require(sender != address(0), \"ERC20: transfer from the zero address\");\n        require(recipient != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(sender, recipient, amount);\n\n        _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\");\n        _balances[recipient] = _balances[recipient].add(amount);\n        emit Transfer(sender, recipient, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply = _totalSupply.add(amount);\n        _balances[account] = _balances[account].add(amount);\n        emit Transfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        _balances[account] = _balances[account].sub(amount, \"ERC20: burn amount exceeds balance\");\n        _totalSupply = _totalSupply.sub(amount);\n        emit Transfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(address owner, address spender, uint256 amount) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Sets {decimals} to a value other than the default one of 18.\n     *\n     * WARNING: This function should only be called from the constructor. Most\n     * applications that interact with token contracts will not expect\n     * {decimals} to ever change, and may work incorrectly if it does.\n     */\n    function _setupDecimals(uint8 decimals_) internal virtual {\n        _decimals = decimals_;\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be to transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { }\n}\n"
			},
			"Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/protocols/Umbra-Cash?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}\n"
			},
			"Umbra-Cash/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/protocols/Umbra-Cash?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"
			},
			"Umbra-Cash/@openzeppelin/contracts/utils/Context.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/protocols/Umbra-Cash?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"details": "Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol\":1901:8495  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol\":1901:8495  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212203a529d38b9085255663f0f056c3471e00a65d4a50475f284077f06c6da4ac01e64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203a529d38b9085255663f0f056c3471e00a65d4a50475f284077f06c6da4ac01e64736f6c63430007060033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE MSTORE SWAP14 CODESIZE 0xB9 ADDMOD MSTORE SSTORE PUSH7 0x3F0F056C3471E0 EXP PUSH6 0xD4A50475F284 SMOD PUSH32 0x6C6DA4AC01E64736F6C63430007060033000000000000000000000000000000 ",
							"sourceMap": "1901:6594:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212203a529d38b9085255663f0f056c3471e00a65d4a50475f284077f06c6da4ac01e64736f6c63430007060033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 GASPRICE MSTORE SWAP14 CODESIZE 0xB9 ADDMOD MSTORE SSTORE PUSH7 0x3F0F056C3471E0 EXP PUSH6 0xD4A50475F284 SMOD PUSH32 0x6C6DA4AC01E64736F6C63430007060033000000000000000000000000000000 ",
							"sourceMap": "1901:6594:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1901,
									"end": 8495,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1901,
									"end": 8495,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1901,
									"end": 8495,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 1901,
									"end": 8495,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 8495,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 8495,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 8495,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 8495,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 8495,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 8495,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1901,
									"end": 8495,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 8495,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 1901,
									"end": 8495,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 8495,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1901,
									"end": 8495,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 8495,
									"name": "INVALID",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 8495,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1901,
									"end": 8495,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 8495,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 8495,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1901,
									"end": 8495,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 8495,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 1901,
									"end": 8495,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 8495,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 8495,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 8495,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1901,
									"end": 8495,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203a529d38b9085255663f0f056c3471e00a65d4a50475f284077f06c6da4ac01e64736f6c63430007060033",
									".code": [
										{
											"begin": 1901,
											"end": 8495,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 8495,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 8495,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 8495,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 1901,
											"end": 8495,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 8495,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 8495,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1901,
											"end": 8495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 8495,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xed84f952d9565c4fc3690a3c7f295ae401f14d3e952ef104ef991f272127b5dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54f04c5b3bad1b034e0164b453b326fdddbb067664c2255d79b266bccff3b7d7\",\"dweb:/ipfs/Qmb83oMdU7UtMZ8YbnxmP8CDc8rgQFzWQDN3uoAwPDyRRQ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name_",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol_",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2592:12066  contract ERC20 is Context, IERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3229:3374  constructor (string memory name_, string memory symbol_) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_13:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_15\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_13)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n    /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3303:3316  _name = name_ */\n  dup3\n  mload\n  tag_19\n  swap2\n  pop\n    /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3303:3308  _name */\n  0x03\n  swap1\n    /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3303:3316  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n  pop\n    /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3326:3343  _symbol = symbol_ */\n  dup1\n  mload\n  tag_21\n  swap1\n    /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3326:3333  _symbol */\n  0x04\n  swap1\n    /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3326:3343  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_20\n  jump\t// in\ntag_21:\n  pop\n  pop\n    /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3353:3362  _decimals */\n  0x05\n    /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3353:3367  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3367  18 */\n  0x12\n    /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3353:3367  _decimals = 18 */\n  or\n  swap1\n  sstore\n  pop\n    /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2592:12066  contract ERC20 is Context, IERC20 {... */\n  jump(tag_22)\ntag_20:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_24\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_27)\ntag_24:\n  dup3\n  0x1f\n  lt\n  tag_25\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_27)\ntag_25:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_27\n  jumpi\n  swap2\n  dup3\n  add\ntag_26:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_27\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_26)\ntag_27:\n  pop\n  tag_28\n  swap3\n  swap2\n  pop\n  tag_29\n  jump\t// in\ntag_28:\n  pop\n  swap1\n  jump\t// out\ntag_29:\ntag_30:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_28\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_30)\ntag_22:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":2592:12066  contract ERC20 is Context, IERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x39509351\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_13\n      jumpi\n      jump(tag_2)\n    tag_14:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3439:3528  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_17:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_19\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_17)\n    tag_19:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_20\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_20:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5515:5681  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_23\n      jump\t// in\n    tag_21:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4506:4612  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6148:6465  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_27:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_28\n      jump\t// in\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4357:4446  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6860:7075  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_33\n      jump\t// in\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4670:4795  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_9:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_36\n      jump\t// in\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3641:3734  function symbol() public view virtual returns (string memory) {... */\n    tag_10:\n      tag_15\n      tag_38\n      jump\t// in\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7562:7828  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_11:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_44\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_44:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_45\n      jump\t// in\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4998:5170  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_12:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_48\n      jump\t// in\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5228:5377  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_13:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_50\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_50:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_51\n      jump\t// in\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3439:3528  function name() public view virtual returns (string memory) {... */\n    tag_16:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3516:3521  _name */\n      0x03\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3509:3521  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3484:3497  string memory */\n      0x60\n      swap4\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3509:3521  return _name */\n      swap1\n      swap3\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3516:3521  _name */\n      swap1\n      swap2\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3509:3521  return _name */\n      dup4\n      add\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3516:3521  _name */\n      dup3\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3509:3521  return _name */\n      dup3\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_54\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_53)\n    tag_54:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_55:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_55\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_53:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3439:3528  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5515:5681  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_23:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5598:5602  bool */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5614:5653  _approve(_msgSender(), spender, amount) */\n      tag_57\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5623:5635  _msgSender() */\n      tag_58\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5623:5633  _msgSender */\n      tag_59\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5623:5635  _msgSender() */\n      jump\t// in\n    tag_58:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5637:5644  spender */\n      dup5\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5646:5652  amount */\n      dup5\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5614:5622  _approve */\n      tag_60\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5614:5653  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_57:\n      pop\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  true */\n      0x01\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5515:5681  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4506:4612  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_25:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4593:4605  _totalSupply */\n      sload(0x02)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4506:4612  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6148:6465  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_28:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6254:6258  bool */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6270:6306  _transfer(sender, recipient, amount) */\n      tag_63\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6280:6286  sender */\n      dup5\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  recipient */\n      dup5\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6299:6305  amount */\n      dup5\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6270:6279  _transfer */\n      tag_64\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6270:6306  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_63:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6316:6437  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_65\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6325:6331  sender */\n      dup5\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6333:6345  _msgSender() */\n      tag_66\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6333:6343  _msgSender */\n      tag_59\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6333:6345  _msgSender() */\n      jump\t// in\n    tag_66:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6347:6436  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_67\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6385:6391  amount */\n      dup6\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6347:6436  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6347:6366  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6347:6358  _allowances */\n      0x01\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6347:6366  _allowances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6379  _msgSender() */\n      tag_68\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6377  _msgSender */\n      tag_59\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6379  _msgSender() */\n      jump\t// in\n    tag_68:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6347:6380  _allowances[sender][_msgSender()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      swap2\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6347:6436  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap1\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6347:6384  _allowances[sender][_msgSender()].sub */\n      tag_69\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6347:6436  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      jump\t// in\n    tag_67:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6316:6324  _approve */\n      tag_60\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6316:6437  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_65:\n      pop\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6454:6458  true */\n      0x01\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6148:6465  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4357:4446  function decimals() public view virtual returns (uint8) {... */\n    tag_30:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4430:4439  _decimals */\n      and(0xff, sload(0x05))\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4357:4446  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6860:7075  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_33:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6948:6952  bool */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6964:7047  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_57\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6973:6985  _msgSender() */\n      tag_73\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6973:6983  _msgSender */\n      tag_59\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6973:6985  _msgSender() */\n      jump\t// in\n    tag_73:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:6994  spender */\n      dup5\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7046  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_67\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7035:7045  addedValue */\n      dup6\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7007  _allowances */\n      0x01\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7021  _allowances[_msgSender()] */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7008:7020  _msgSender() */\n      tag_75\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7008:7018  _msgSender */\n      tag_59\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7008:7020  _msgSender() */\n      jump\t// in\n    tag_75:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7021  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7030  _allowances[_msgSender()][spender] */\n      swap2\n      dup13\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7034  _allowances[_msgSender()][spender].add */\n      tag_76\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7046  _allowances[_msgSender()][spender].add(addedValue) */\n      jump\t// in\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4670:4795  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_36:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4770:4788  _balances[account] */\n      and\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4744:4751  uint256 */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4770:4788  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4670:4795  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3641:3734  function symbol() public view virtual returns (string memory) {... */\n    tag_38:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3720:3727  _symbol */\n      0x04\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3713:3727  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3688:3701  string memory */\n      0x60\n      swap4\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3713:3727  return _symbol */\n      swap1\n      swap3\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3720:3727  _symbol */\n      swap1\n      swap2\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3713:3727  return _symbol */\n      dup4\n      add\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3720:3727  _symbol */\n      dup3\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3713:3727  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_53\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_54\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_53)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7562:7828  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_45:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7655:7659  bool */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7800  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_57\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7680:7692  _msgSender() */\n      tag_84\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7680:7690  _msgSender */\n      tag_59\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7680:7692  _msgSender() */\n      jump\t// in\n    tag_84:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7694:7701  spender */\n      dup5\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7703:7799  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_67\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7742:7757  subtractedValue */\n      dup6\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7703:7799  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7703:7714  _allowances */\n      0x01\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7703:7728  _allowances[_msgSender()] */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7715:7727  _msgSender() */\n      tag_86\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7715:7725  _msgSender */\n      tag_59\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7715:7727  _msgSender() */\n      jump\t// in\n    tag_86:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7703:7728  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7703:7737  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7703:7799  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap1\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7703:7741  _allowances[_msgSender()][spender].sub */\n      tag_69\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7703:7799  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      jump\t// in\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4998:5170  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_48:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5084:5088  bool */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5100:5142  _transfer(_msgSender(), recipient, amount) */\n      tag_57\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5110:5122  _msgSender() */\n      tag_89\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5110:5120  _msgSender */\n      tag_59\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5110:5122  _msgSender() */\n      jump\t// in\n    tag_89:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5124:5133  recipient */\n      dup5\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5135:5141  amount */\n      dup5\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5100:5109  _transfer */\n      tag_64\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5100:5142  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5228:5377  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_51:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5343:5361  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5317:5324  uint256 */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5343:5361  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5343:5354  _allowances */\n      0x01\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5343:5361  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5343:5370  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5228:5377  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"Umbra-Cash/@openzeppelin/contracts/utils/Context.sol\":1869:1973  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_59:\n        /* \"Umbra-Cash/@openzeppelin/contracts/utils/Context.sol\":1956:1966  msg.sender */\n      caller\n        /* \"Umbra-Cash/@openzeppelin/contracts/utils/Context.sol\":1869:1973  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10626:10966  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_60:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10727:10746  owner != address(0) */\n      dup4\n      and\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10719:10787  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_93\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10805:10826  spender != address(0) */\n      dup3\n      and\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10797:10865  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_94\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_94:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10876:10894  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10876:10887  _allowances */\n      0x01\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10876:10894  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10876:10903  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10876:10912  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10927:10959  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10626:10966  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8302:8832  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_64:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8407:8427  sender != address(0) */\n      dup4\n      and\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8399:8469  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8487:8510  recipient != address(0) */\n      dup3\n      and\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8479:8550  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_97\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8561:8608  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_98\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8582:8588  sender */\n      dup4\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8590:8599  recipient */\n      dup4\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8601:8607  amount */\n      dup4\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8561:8581  _beforeTokenTransfer */\n      tag_99\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8561:8608  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_98:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8639:8710  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_100\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8661:8667  amount */\n      dup2\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8639:8710  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8639:8656  _balances[sender] */\n      dup7\n      and\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8639:8648  _balances */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8639:8656  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8639:8710  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap1\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8639:8660  _balances[sender].sub */\n      tag_69\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8639:8710  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      jump\t// in\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8619:8636  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8619:8628  _balances */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8619:8636  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8619:8710  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8743:8763  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8743:8775  _balances[recipient].add(amount) */\n      tag_101\n      swap1\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8768:8774  amount */\n      dup3\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8743:8767  _balances[recipient].add */\n      tag_76\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8743:8775  _balances[recipient].add(amount) */\n      jump\t// in\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8720:8740  _balances[recipient] */\n      dup1\n      dup5\n      and\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8720:8729  _balances */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8720:8740  _balances[recipient] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8720:8775  _balances[recipient] = _balances[recipient].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8790:8825  Transfer(sender, recipient, amount) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8720:8740  _balances[recipient] */\n      swap2\n      swap4\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8790:8825  Transfer(sender, recipient, amount) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8302:8832  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol\":6703:6866  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_69:\n        /* \"Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol\":6789:6796  uint256 */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol\":6824:6836  errorMessage */\n      dup2\n        /* \"Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol\":6816:6822  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol\":6808:6837  require(b <= a, errorMessage) */\n      tag_103\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_104:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_106\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_104)\n    tag_106:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_107\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_107:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n      pop\n      pop\n      pop\n        /* \"Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol\":6854:6859  a - b */\n      swap1\n      sub\n      swap1\n        /* \"Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol\":6703:6866  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol\":3961:4136  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_76:\n        /* \"Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol\":4019:4026  uint256 */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol\":4050:4055  a + b */\n      dup3\n      dup3\n      add\n        /* \"Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol\":4073:4079  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol\":4065:4111  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_109\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_109:\n        /* \"Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol\":4128:4129  c */\n      swap4\n        /* \"Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol\":3961:4136  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11972:12064  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\n    tag_99:\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa2646970667358221220bea694e09f88e4c2ea12dc0f0177f3a388db188d317397570d9050f46428450e64736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000c8e38038062000c8e833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b5060405250508251620001b491506003906020850190620001e0565b508051620001ca906004906020840190620001e0565b50506005805460ff19166012179055506200028c565b828054600181600116156101000203166002900490600052602060002090601f01602090048101928262000218576000855562000263565b82601f106200023357805160ff191683800117855562000263565b8280016001018555821562000263579182015b828111156200026357825182559160200191906001019062000246565b506200027192915062000275565b5090565b5b8082111562000271576000815560010162000276565b6109f2806200029c6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063395093511161007157806339509351146101d957806370a082311461020557806395d89b411461022b578063a457c2d714610233578063a9059cbb1461025f578063dd62ed3e1461028b576100a9565b806306fdde03146100ae578063095ea7b31461012b57806318160ddd1461016b57806323b872dd14610185578063313ce567146101bb575b600080fd5b6100b66102b9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f05781810151838201526020016100d8565b50505050905090810190601f16801561011d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101576004803603604081101561014157600080fd5b506001600160a01b03813516906020013561034f565b604080519115158252519081900360200190f35b61017361036c565b60408051918252519081900360200190f35b6101576004803603606081101561019b57600080fd5b506001600160a01b03813581169160208101359091169060400135610372565b6101c36103f9565b6040805160ff9092168252519081900360200190f35b610157600480360360408110156101ef57600080fd5b506001600160a01b038135169060200135610402565b6101736004803603602081101561021b57600080fd5b50356001600160a01b0316610450565b6100b661046b565b6101576004803603604081101561024957600080fd5b506001600160a01b0381351690602001356104cc565b6101576004803603604081101561027557600080fd5b506001600160a01b038135169060200135610534565b610173600480360360408110156102a157600080fd5b506001600160a01b0381358116916020013516610548565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050905090565b600061036361035c610573565b8484610577565b50600192915050565b60025490565b600061037f848484610663565b6103ef8461038b610573565b6103ea85604051806060016040528060288152602001610927602891396001600160a01b038a166000908152600160205260408120906103c9610573565b6001600160a01b0316815260208101919091526040016000205491906107be565b610577565b5060019392505050565b60055460ff1690565b600061036361040f610573565b846103ea8560016000610420610573565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610855565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b60006103636104d9610573565b846103ea856040518060600160405280602581526020016109986025913960016000610503610573565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906107be565b6000610363610541610573565b8484610663565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166105bc5760405162461bcd60e51b81526004018080602001828103825260248152602001806109746024913960400191505060405180910390fd5b6001600160a01b0382166106015760405162461bcd60e51b81526004018080602001828103825260228152602001806108df6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166106a85760405162461bcd60e51b815260040180806020018281038252602581526020018061094f6025913960400191505060405180910390fd5b6001600160a01b0382166106ed5760405162461bcd60e51b81526004018080602001828103825260238152602001806108bc6023913960400191505060405180910390fd5b6106f88383836108b6565b61073581604051806060016040528060268152602001610901602691396001600160a01b03861660009081526020819052604090205491906107be565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107649082610855565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561084d5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156108125781810151838201526020016107fa565b50505050905090810190601f16801561083f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156108af576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220bea694e09f88e4c2ea12dc0f0177f3a388db188d317397570d9050f46428450e64736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xC8E CODESIZE SUB DUP1 PUSH3 0xC8E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xB8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x9E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xE6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x150 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x198 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP DUP3 MLOAD PUSH3 0x1B4 SWAP2 POP PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x1E0 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x1CA SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x1E0 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE POP PUSH3 0x28C JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x218 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x263 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x233 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x263 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x263 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x263 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x246 JUMP JUMPDEST POP PUSH3 0x271 SWAP3 SWAP2 POP PUSH3 0x275 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x271 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x276 JUMP JUMPDEST PUSH2 0x9F2 DUP1 PUSH3 0x29C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x28B JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x11D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH2 0x36C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x402 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x450 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x46B JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4CC JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x534 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x548 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x328 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x35C PUSH2 0x573 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x577 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F DUP5 DUP5 DUP5 PUSH2 0x663 JUMP JUMPDEST PUSH2 0x3EF DUP5 PUSH2 0x38B PUSH2 0x573 JUMP JUMPDEST PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x927 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x3C9 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH2 0x577 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x40F PUSH2 0x573 JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x420 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x4D9 PUSH2 0x573 JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x998 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x503 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x541 PUSH2 0x573 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x663 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x974 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x601 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8DF PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x94F PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8BC PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6F8 DUP4 DUP4 DUP4 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x735 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x901 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x764 SWAP1 DUP3 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x84D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x812 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7FA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x83F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x8AF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220BEA6 SWAP5 0xE0 SWAP16 DUP9 0xE4 0xC2 0xEA SLT 0xDC 0xF ADD PUSH24 0xF3A388DB188D317397570D9050F46428450E64736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "2592:9474:1:-:0;;;3229:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3229:145:1;;;;;;;;;;-1:-1:-1;3229:145:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3229:145:1;;;;;;;;;;-1:-1:-1;3229:145:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3229:145:1;;-1:-1:-1;;3303:13:1;;;;-1:-1:-1;3303:5:1;;:13;;;;;:::i;:::-;-1:-1:-1;3326:17:1;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;3353:9:1;:14;;-1:-1:-1;;3353:14:1;3365:2;3353:14;;;-1:-1:-1;2592:9474:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2592:9474:1;;;-1:-1:-1;2592:9474:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c8063395093511161007157806339509351146101d957806370a082311461020557806395d89b411461022b578063a457c2d714610233578063a9059cbb1461025f578063dd62ed3e1461028b576100a9565b806306fdde03146100ae578063095ea7b31461012b57806318160ddd1461016b57806323b872dd14610185578063313ce567146101bb575b600080fd5b6100b66102b9565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100f05781810151838201526020016100d8565b50505050905090810190601f16801561011d5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101576004803603604081101561014157600080fd5b506001600160a01b03813516906020013561034f565b604080519115158252519081900360200190f35b61017361036c565b60408051918252519081900360200190f35b6101576004803603606081101561019b57600080fd5b506001600160a01b03813581169160208101359091169060400135610372565b6101c36103f9565b6040805160ff9092168252519081900360200190f35b610157600480360360408110156101ef57600080fd5b506001600160a01b038135169060200135610402565b6101736004803603602081101561021b57600080fd5b50356001600160a01b0316610450565b6100b661046b565b6101576004803603604081101561024957600080fd5b506001600160a01b0381351690602001356104cc565b6101576004803603604081101561027557600080fd5b506001600160a01b038135169060200135610534565b610173600480360360408110156102a157600080fd5b506001600160a01b0381358116916020013516610548565b60038054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b820191906000526020600020905b81548152906001019060200180831161032857829003601f168201915b5050505050905090565b600061036361035c610573565b8484610577565b50600192915050565b60025490565b600061037f848484610663565b6103ef8461038b610573565b6103ea85604051806060016040528060288152602001610927602891396001600160a01b038a166000908152600160205260408120906103c9610573565b6001600160a01b0316815260208101919091526040016000205491906107be565b610577565b5060019392505050565b60055460ff1690565b600061036361040f610573565b846103ea8560016000610420610573565b6001600160a01b03908116825260208083019390935260409182016000908120918c168152925290205490610855565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156103455780601f1061031a57610100808354040283529160200191610345565b60006103636104d9610573565b846103ea856040518060600160405280602581526020016109986025913960016000610503610573565b6001600160a01b03908116825260208083019390935260409182016000908120918d168152925290205491906107be565b6000610363610541610573565b8484610663565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166105bc5760405162461bcd60e51b81526004018080602001828103825260248152602001806109746024913960400191505060405180910390fd5b6001600160a01b0382166106015760405162461bcd60e51b81526004018080602001828103825260228152602001806108df6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166106a85760405162461bcd60e51b815260040180806020018281038252602581526020018061094f6025913960400191505060405180910390fd5b6001600160a01b0382166106ed5760405162461bcd60e51b81526004018080602001828103825260238152602001806108bc6023913960400191505060405180910390fd5b6106f88383836108b6565b61073581604051806060016040528060268152602001610901602691396001600160a01b03861660009081526020819052604090205491906107be565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107649082610855565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b6000818484111561084d5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156108125781810151838201526020016107fa565b50505050905090810190601f16801561083f5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156108af576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220bea694e09f88e4c2ea12dc0f0177f3a388db188d317397570d9050f46428450e64736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1D9 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x205 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x22B JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x233 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x25F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x28B JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x12B JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x185 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1BB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x2B9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xF0 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xD8 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x11D JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x141 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x34F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x173 PUSH2 0x36C JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x19B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x372 JUMP JUMPDEST PUSH2 0x1C3 PUSH2 0x3F9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x402 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x21B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x450 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x46B JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x249 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x4CC JUMP JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x534 JUMP JUMPDEST PUSH2 0x173 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2A1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x548 JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x328 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x35C PUSH2 0x573 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x577 JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F DUP5 DUP5 DUP5 PUSH2 0x663 JUMP JUMPDEST PUSH2 0x3EF DUP5 PUSH2 0x38B PUSH2 0x573 JUMP JUMPDEST PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x927 PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x3C9 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH2 0x577 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x40F PUSH2 0x573 JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x420 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x345 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x31A JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x345 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x4D9 PUSH2 0x573 JUMP JUMPDEST DUP5 PUSH2 0x3EA DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x998 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x503 PUSH2 0x573 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x363 PUSH2 0x541 PUSH2 0x573 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x663 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x974 PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x601 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8DF PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x94F PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x6ED JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x8BC PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6F8 DUP4 DUP4 DUP4 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x735 DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x901 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x7BE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x764 SWAP1 DUP3 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x84D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x812 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x7FA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x83F JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x8AF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x7358221220BEA6 SWAP5 0xE0 SWAP16 DUP9 0xE4 0xC2 0xEA SLT 0xDC 0xF ADD PUSH24 0xF3A388DB188D317397570D9050F46428450E64736F6C6343 STOP SMOD MOD STOP CALLER ",
							"sourceMap": "2592:9474:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3439:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5515:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5515:166:1;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4506:106;;;:::i;:::-;;;;;;;;;;;;;;;;6148:317;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6148:317:1;;;;;;;;;;;;;;;;;:::i;4357:89::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6860:215;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6860:215:1;;;;;;;;:::i;4670:125::-;;;;;;;;;;;;;;;;-1:-1:-1;4670:125:1;-1:-1:-1;;;;;4670:125:1;;:::i;3641:93::-;;;:::i;7562:266::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7562:266:1;;;;;;;;:::i;4998:172::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4998:172:1;;;;;;;;:::i;5228:149::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5228:149:1;;;;;;;;;;:::i;3439:89::-;3516:5;3509:12;;;;;;;;-1:-1:-1;;3509:12:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3484:13;;3509:12;;3516:5;;3509:12;;3516:5;3509:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3439:89;:::o;5515:166::-;5598:4;5614:39;5623:12;:10;:12::i;:::-;5637:7;5646:6;5614:8;:39::i;:::-;-1:-1:-1;5670:4:1;5515:166;;;;:::o;4506:106::-;4593:12;;4506:106;:::o;6148:317::-;6254:4;6270:36;6280:6;6288:9;6299:6;6270:9;:36::i;:::-;6316:121;6325:6;6333:12;:10;:12::i;:::-;6347:89;6385:6;6347:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6347:19:1;;;;;;:11;:19;;;;;;6367:12;:10;:12::i;:::-;-1:-1:-1;;;;;6347:33:1;;;;;;;;;;;;-1:-1:-1;6347:33:1;;;:89;:37;:89::i;:::-;6316:8;:121::i;:::-;-1:-1:-1;6454:4:1;6148:317;;;;;:::o;4357:89::-;4430:9;;;;4357:89;:::o;6860:215::-;6948:4;6964:83;6973:12;:10;:12::i;:::-;6987:7;6996:50;7035:10;6996:11;:25;7008:12;:10;:12::i;:::-;-1:-1:-1;;;;;6996:25:1;;;;;;;;;;;;;;;;;-1:-1:-1;6996:25:1;;;:34;;;;;;;;;;;:38;:50::i;4670:125::-;-1:-1:-1;;;;;4770:18:1;4744:7;4770:18;;;;;;;;;;;;4670:125::o;3641:93::-;3720:7;3713:14;;;;;;;;-1:-1:-1;;3713:14:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3688:13;;3713:14;;3720:7;;3713:14;;3720:7;3713:14;;;;;;;;;;;;;;;;;;;;;;;;7562:266;7655:4;7671:129;7680:12;:10;:12::i;:::-;7694:7;7703:96;7742:15;7703:96;;;;;;;;;;;;;;;;;:11;:25;7715:12;:10;:12::i;:::-;-1:-1:-1;;;;;7703:25:1;;;;;;;;;;;;;;;;;-1:-1:-1;7703:25:1;;;:34;;;;;;;;;;;:96;:38;:96::i;4998:172::-;5084:4;5100:42;5110:12;:10;:12::i;:::-;5124:9;5135:6;5100:9;:42::i;5228:149::-;-1:-1:-1;;;;;5343:18:1;;;5317:7;5343:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;5228:149::o;1869:104:3:-;1956:10;1869:104;:::o;10626:340:1:-;-1:-1:-1;;;;;10727:19:1;;10719:68;;;;-1:-1:-1;;;10719:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10805:21:1;;10797:68;;;;-1:-1:-1;;;10797:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10876:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10927:32;;;;;;;;;;;;;;;;;10626:340;;;:::o;8302:530::-;-1:-1:-1;;;;;8407:20:1;;8399:70;;;;-1:-1:-1;;;8399:70:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8487:23:1;;8479:71;;;;-1:-1:-1;;;8479:71:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8561:47;8582:6;8590:9;8601:6;8561:20;:47::i;:::-;8639:71;8661:6;8639:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8639:17:1;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;8619:17:1;;;:9;:17;;;;;;;;;;;:91;;;;8743:20;;;;;;;:32;;8768:6;8743:24;:32::i;:::-;-1:-1:-1;;;;;8720:20:1;;;:9;:20;;;;;;;;;;;;:55;;;;8790:35;;;;;;;8720:20;;8790:35;;;;;;;;;;;;;8302:530;;;:::o;6703:163:0:-;6789:7;6824:12;6816:6;;;;6808:29;;;;-1:-1:-1;;;6808:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6854:5:0;;;6703:163::o;3961:175::-;4019:7;4050:5;;;4073:6;;;;4065:46;;;;;-1:-1:-1;;;4065:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;4128:1;3961:175;-1:-1:-1;;;3961:175:0:o;11972:92:1:-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "509200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1360",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1167",
								"decimals()": "1102",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1043",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_beforeTokenTransfer(address,address,uint256)": "15",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_setupDecimals(uint8)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2592,
									"end": 12066,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "tag",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "tag",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "tag",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "100000000"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP9",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "tag",
									"source": 1,
									"value": "16"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 3229,
									"end": 3374,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3303,
									"end": 3316,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3303,
									"end": 3316,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3303,
									"end": 3316,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 3303,
									"end": 3316,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3303,
									"end": 3308,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 3303,
									"end": 3308,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3303,
									"end": 3316,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3303,
									"end": 3316,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3303,
									"end": 3316,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3303,
									"end": 3316,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3303,
									"end": 3316,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3303,
									"end": 3316,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 3303,
									"end": 3316,
									"name": "tag",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 3303,
									"end": 3316,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3326,
									"end": 3343,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3326,
									"end": 3343,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3326,
									"end": 3343,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 3326,
									"end": 3343,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3326,
									"end": 3333,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 3326,
									"end": 3333,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3326,
									"end": 3343,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3326,
									"end": 3343,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3326,
									"end": 3343,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3326,
									"end": 3343,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3326,
									"end": 3343,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3326,
									"end": 3343,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 3326,
									"end": 3343,
									"name": "tag",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 3326,
									"end": 3343,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3353,
									"end": 3362,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 3353,
									"end": 3367,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3353,
									"end": 3367,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3353,
									"end": 3367,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3365,
									"end": 3367,
									"name": "PUSH",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 3353,
									"end": 3367,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3353,
									"end": 3367,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3353,
									"end": 3367,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "tag",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "tag",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "26"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "tag",
									"source": 1,
									"value": "27"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "tag",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 2592,
									"end": 12066,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bea694e09f88e4c2ea12dc0f0177f3a388db188d317397570d9050f46428450e64736f6c63430007060033",
									".code": [
										{
											"begin": 2592,
											"end": 12066,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "tag",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "PUSH",
											"source": 1,
											"value": "39509351"
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "PUSH",
											"source": 1,
											"value": "70A08231"
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "PUSH",
											"source": 1,
											"value": "95D89B41"
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "PUSH",
											"source": 1,
											"value": "A457C2D7"
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "PUSH",
											"source": 1,
											"value": "A9059CBB"
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "PUSH",
											"source": 1,
											"value": "DD62ED3E"
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "PUSH",
											"source": 1,
											"value": "6FDDE03"
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "PUSH",
											"source": 1,
											"value": "95EA7B3"
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "PUSH",
											"source": 1,
											"value": "18160DDD"
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "PUSH",
											"source": 1,
											"value": "23B872DD"
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "PUSH",
											"source": 1,
											"value": "313CE567"
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2592,
											"end": 12066,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "tag",
											"source": 1,
											"value": "9"
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3641,
											"end": 3734,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3641,
											"end": 3734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3641,
											"end": 3734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 3641,
											"end": 3734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3641,
											"end": 3734,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3521,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3484,
											"end": 3497,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3484,
											"end": 3497,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3521,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3521,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5598,
											"end": 5602,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5614,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 5623,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 5623,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5623,
											"end": 5635,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5623,
											"end": 5635,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 5623,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5637,
											"end": 5644,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5646,
											"end": 5652,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5614,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 5614,
											"end": 5653,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5614,
											"end": 5653,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 5614,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4593,
											"end": 4605,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4593,
											"end": 4605,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6254,
											"end": 6258,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6270,
											"end": 6306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 6280,
											"end": 6286,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6299,
											"end": 6305,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6270,
											"end": 6279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6270,
											"end": 6306,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6270,
											"end": 6306,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 6270,
											"end": 6306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6316,
											"end": 6437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 6325,
											"end": 6331,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6333,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 6333,
											"end": 6343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 6333,
											"end": 6345,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6333,
											"end": 6345,
											"name": "tag",
											"source": 1,
											"value": "66"
										},
										{
											"begin": 6333,
											"end": 6345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 6385,
											"end": 6391,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "PUSH data",
											"source": 1,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6347,
											"end": 6366,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6366,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6366,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6347,
											"end": 6366,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6366,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6358,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6347,
											"end": 6366,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6347,
											"end": 6366,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6366,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6347,
											"end": 6366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6366,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6366,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 6367,
											"end": 6377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 6367,
											"end": 6379,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6367,
											"end": 6379,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 6367,
											"end": 6379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6347,
											"end": 6380,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6380,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6347,
											"end": 6380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6347,
											"end": 6380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6347,
											"end": 6380,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6380,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6316,
											"end": 6324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6316,
											"end": 6437,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6316,
											"end": 6437,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 6316,
											"end": 6437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6454,
											"end": 6458,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4430,
											"end": 4439,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4430,
											"end": 4439,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4430,
											"end": 4439,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4430,
											"end": 4439,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6948,
											"end": 6952,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6964,
											"end": 7047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 6973,
											"end": 6985,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 6973,
											"end": 6983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 6973,
											"end": 6985,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6973,
											"end": 6985,
											"name": "tag",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 6973,
											"end": 6985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 6994,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 7035,
											"end": 7045,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7007,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7008,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 7008,
											"end": 7018,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 7008,
											"end": 7020,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7008,
											"end": 7020,
											"name": "tag",
											"source": 1,
											"value": "75"
										},
										{
											"begin": 7008,
											"end": 7020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7030,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7030,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7030,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7030,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7030,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7030,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7030,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7030,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7030,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 6996,
											"end": 7046,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4744,
											"end": 4751,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3641,
											"end": 3734,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 3641,
											"end": 3734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3688,
											"end": 3701,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3688,
											"end": 3701,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7655,
											"end": 7659,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7671,
											"end": 7800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 7680,
											"end": 7692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7680,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 7680,
											"end": 7692,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7680,
											"end": 7692,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 7680,
											"end": 7692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7694,
											"end": 7701,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 7742,
											"end": 7757,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "PUSH data",
											"source": 1,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7714,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7715,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 7715,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 7715,
											"end": 7727,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7715,
											"end": 7727,
											"name": "tag",
											"source": 1,
											"value": "86"
										},
										{
											"begin": 7715,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7737,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7737,
											"name": "DUP14",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7737,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7737,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7737,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7737,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7737,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7737,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7737,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7737,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5084,
											"end": 5088,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 5110,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 5110,
											"end": 5120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 5110,
											"end": 5122,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5110,
											"end": 5122,
											"name": "tag",
											"source": 1,
											"value": "89"
										},
										{
											"begin": 5110,
											"end": 5122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5124,
											"end": 5133,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5135,
											"end": 5141,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5100,
											"end": 5142,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5343,
											"end": 5361,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5361,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5361,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5317,
											"end": 5324,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5343,
											"end": 5361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5361,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5361,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5354,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5343,
											"end": 5361,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5343,
											"end": 5361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5361,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5361,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5361,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5343,
											"end": 5361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5361,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5361,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5370,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5370,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5370,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5370,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5370,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5370,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5370,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5370,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5370,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5370,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5370,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5370,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5370,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1869,
											"end": 1973,
											"name": "tag",
											"source": 3,
											"value": "59"
										},
										{
											"begin": 1869,
											"end": 1973,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1956,
											"end": 1966,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1869,
											"end": 1973,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1869,
											"end": 1973,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10626,
											"end": 10966,
											"name": "tag",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 10626,
											"end": 10966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10727,
											"end": 10746,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10727,
											"end": 10746,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "PUSH data",
											"source": 1,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10805,
											"end": 10826,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10805,
											"end": 10826,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "PUSH data",
											"source": 1,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "tag",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10876,
											"end": 10894,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10894,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10894,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10894,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10876,
											"end": 10894,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10894,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10894,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10887,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10876,
											"end": 10894,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10876,
											"end": 10894,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10894,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10894,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10894,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10876,
											"end": 10894,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10894,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10894,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10903,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10903,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10903,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10903,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10903,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10903,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10903,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10903,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10903,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10903,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10903,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10903,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10903,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10912,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10912,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10912,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10959,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10959,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10959,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10959,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10959,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10959,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10959,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10959,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10927,
											"end": 10959,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10959,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10959,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10959,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10959,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10959,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10626,
											"end": 10966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10626,
											"end": 10966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10626,
											"end": 10966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10626,
											"end": 10966,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8302,
											"end": 8832,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 8302,
											"end": 8832,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8407,
											"end": 8427,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8407,
											"end": 8427,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "PUSH data",
											"source": 1,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8487,
											"end": 8510,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8510,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "PUSH data",
											"source": 1,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 8582,
											"end": 8588,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8590,
											"end": 8599,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8601,
											"end": 8607,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 8561,
											"end": 8608,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8561,
											"end": 8608,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 8561,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8661,
											"end": 8667,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "PUSH data",
											"source": 1,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8639,
											"end": 8656,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8648,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8639,
											"end": 8656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8639,
											"end": 8656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8656,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8639,
											"end": 8656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8656,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8656,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8656,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8619,
											"end": 8636,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8636,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8636,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8619,
											"end": 8636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8636,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8636,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8636,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8619,
											"end": 8636,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8636,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8636,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8619,
											"end": 8636,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8636,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8636,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8710,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8710,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8710,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8743,
											"end": 8763,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8743,
											"end": 8763,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8743,
											"end": 8763,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8743,
											"end": 8763,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8743,
											"end": 8763,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8743,
											"end": 8763,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8743,
											"end": 8763,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8743,
											"end": 8775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 8743,
											"end": 8775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8768,
											"end": 8774,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8743,
											"end": 8767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "76"
										},
										{
											"begin": 8743,
											"end": 8775,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8743,
											"end": 8775,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 8743,
											"end": 8775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8720,
											"end": 8740,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8740,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8740,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8729,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8720,
											"end": 8740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8740,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8740,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8720,
											"end": 8740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8740,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8740,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8720,
											"end": 8740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8740,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8740,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8775,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8775,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8775,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8740,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 8302,
											"end": 8832,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8302,
											"end": 8832,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8302,
											"end": 8832,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8302,
											"end": 8832,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6703,
											"end": 6866,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6703,
											"end": 6866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6789,
											"end": 6796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6824,
											"end": 6836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6816,
											"end": 6822,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6816,
											"end": 6822,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6816,
											"end": 6822,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6816,
											"end": 6822,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6854,
											"end": 6859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6859,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6703,
											"end": 6866,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3961,
											"end": 4136,
											"name": "tag",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 3961,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4019,
											"end": 4026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4050,
											"end": 4055,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4055,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4073,
											"end": 4079,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4073,
											"end": 4079,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4073,
											"end": 4079,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4073,
											"end": 4079,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "tag",
											"source": 0,
											"value": "109"
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4128,
											"end": 4129,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 4136,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3961,
											"end": 4136,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 11972,
											"end": 12064,
											"name": "tag",
											"source": 1,
											"value": "99"
										},
										{
											"begin": 11972,
											"end": 12064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11972,
											"end": 12064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11972,
											"end": 12064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11972,
											"end": 12064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11972,
											"end": 12064,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin guidelines: functions revert instead of returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}, initializes {decimals} with a default value of 18. To select a different value for {decimals}, use {_setupDecimals}. All three of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xed84f952d9565c4fc3690a3c7f295ae401f14d3e952ef104ef991f272127b5dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54f04c5b3bad1b034e0164b453b326fdddbb067664c2255d79b266bccff3b7d7\",\"dweb:/ipfs/Qmb83oMdU7UtMZ8YbnxmP8CDc8rgQFzWQDN3uoAwPDyRRQ\"]},\"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xe6ac370a35e912e5f6c40b93225c89c6c43d0ec1b5a4cb78441ebfa4db083db6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9630a9a9e5b3be441a3ea5fb24f2f29121e1e882c65e062aa2deedceab8e021d\",\"dweb:/ipfs/QmS7fXssrbucgk7xfB3RxvxiBWKUUjPmTrLtv9qT1eN3tM\"]},\"Umbra-Cash/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x702e70ef0f67b8a45db9bdccdbe3eb1de654d4c8c93503df15784d0964046ff6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e852c6eddd2a3889f99be4b591be57177d2a00bb0c2e0585f2af8e96b7e480fc\",\"dweb:/ipfs/QmRSosgbTfUYW7g3mA6Sy8ydsMGQRWKypWxbqLPe5UgjAN\"]},\"Umbra-Cash/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x0e92b627582fd191d8db7901cba59e29b57059716e53b5034ef8977357c3244a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54c37e6816bd5730227bcb2553dd74d9ed0d4b513485375d644061bc98d3d08e\",\"dweb:/ipfs/QmQ67ZbMnJovZCpgtPbfPQms1ZfWHD5mkaEiy6YrnQvCLD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 371,
								"contract": "Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 377,
								"contract": "Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 379,
								"contract": "Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 381,
								"contract": "Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 383,
								"contract": "Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 385,
								"contract": "Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Umbra-Cash/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Umbra-Cash/@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Umbra-Cash/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x702e70ef0f67b8a45db9bdccdbe3eb1de654d4c8c93503df15784d0964046ff6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e852c6eddd2a3889f99be4b591be57177d2a00bb0c2e0585f2af8e96b7e480fc\",\"dweb:/ipfs/QmRSosgbTfUYW7g3mA6Sy8ydsMGQRWKypWxbqLPe5UgjAN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Umbra-Cash/@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Umbra-Cash/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Umbra-Cash/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x0e92b627582fd191d8db7901cba59e29b57059716e53b5034ef8977357c3244a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54c37e6816bd5730227bcb2553dd74d9ed0d4b513485375d644061bc98d3d08e\",\"dweb:/ipfs/QmQ67ZbMnJovZCpgtPbfPQms1ZfWHD5mkaEiy6YrnQvCLD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"Umbra-Cash/contracts/TestToken.sol": {
				"TestToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "symbol",
									"type": "string"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "subtractedValue",
									"type": "uint256"
								}
							],
							"name": "decreaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "addedValue",
									"type": "uint256"
								}
							],
							"name": "increaseAllowance",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"decreaseAllowance(address,uint256)": {
								"details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
							},
							"increaseAllowance(address,uint256)": {
								"details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Umbra-Cash/contracts/TestToken.sol\":1397:1598  contract TestToken is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"Umbra-Cash/contracts/TestToken.sol\":1429:1505  constructor(string memory name, string memory symbol) ERC20(name, symbol) {} */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x40\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_3\n  jumpi\n  0x00\n  dup1\n  revert\ntag_3:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_4\n  jumpi\n  0x00\n  dup1\n  revert\ntag_4:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_5\n  jumpi\n  0x00\n  dup1\n  revert\ntag_5:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_6:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_8\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_6)\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_9\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_9:\n  pop\n  0x40\n  mstore\n  0x20\n  add\n  dup1\n  mload\n  mload(0x40)\n  swap4\n  swap3\n  swap2\n  swap1\n  dup5\n  0x0100000000\n  dup3\n  gt\n  iszero\n  tag_10\n  jumpi\n  0x00\n  dup1\n  revert\ntag_10:\n  swap1\n  dup4\n  add\n  swap1\n  0x20\n  dup3\n  add\n  dup6\n  dup2\n  gt\n  iszero\n  tag_11\n  jumpi\n  0x00\n  dup1\n  revert\ntag_11:\n  dup3\n  mload\n  0x0100000000\n  dup2\n  gt\n  dup3\n  dup3\n  add\n  dup9\n  lt\n  or\n  iszero\n  tag_12\n  jumpi\n  0x00\n  dup1\n  revert\ntag_12:\n  dup3\n  mstore\n  pop\n  dup2\n  mload\n  0x20\n  swap2\n  dup3\n  add\n  swap3\n  swap1\n  swap2\n  add\n  swap1\n  dup1\n  dup4\n  dup4\n  0x00\ntag_13:\n  dup4\n  dup2\n  lt\n  iszero\n  tag_15\n  jumpi\n  dup2\n  dup2\n  add\n  mload\n  dup4\n  dup3\n  add\n  mstore\n  0x20\n  add\n  jump(tag_13)\ntag_15:\n  pop\n  pop\n  pop\n  pop\n  swap1\n  pop\n  swap1\n  dup2\n  add\n  swap1\n  0x1f\n  and\n  dup1\n  iszero\n  tag_16\n  jumpi\n  dup1\n  dup3\n  sub\n  dup1\n  mload\n  0x01\n  dup4\n  0x20\n  sub\n  0x0100\n  exp\n  sub\n  not\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\ntag_16:\n  pop\n  0x40\n  mstore\n  pop\n  pop\n    /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3303:3316  _name = name_ */\n  dup3\n  mload\n    /* \"Umbra-Cash/contracts/TestToken.sol\":1489:1493  name */\n  dup4\n  swap2\n  pop\n    /* \"Umbra-Cash/contracts/TestToken.sol\":1495:1501  symbol */\n  dup3\n  swap1\n    /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3303:3316  _name = name_ */\n  tag_20\n  swap1\n    /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3303:3308  _name */\n  0x03\n  swap1\n    /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3303:3316  _name = name_ */\n  0x20\n  dup6\n  add\n  swap1\n  tag_21\n  jump\t// in\ntag_20:\n  pop\n    /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3326:3343  _symbol = symbol_ */\n  dup1\n  mload\n  tag_22\n  swap1\n    /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3326:3333  _symbol */\n  0x04\n  swap1\n    /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3326:3343  _symbol = symbol_ */\n  0x20\n  dup5\n  add\n  swap1\n  tag_21\n  jump\t// in\ntag_22:\n  pop\n  pop\n    /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3353:3362  _decimals */\n  0x05\n    /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3353:3367  _decimals = 18 */\n  dup1\n  sload\n  not(0xff)\n  and\n    /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3365:3367  18 */\n  0x12\n    /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3353:3367  _decimals = 18 */\n  or\n  swap1\n  sstore\n  pop\n    /* \"Umbra-Cash/contracts/TestToken.sol\":1397:1598  contract TestToken is ERC20 {... */\n  tag_24\n  swap2\n  pop\n  pop\n  jump\ntag_21:\n  dup3\n  dup1\n  sload\n  0x01\n  dup2\n  0x01\n  and\n  iszero\n  0x0100\n  mul\n  sub\n  and\n  0x02\n  swap1\n  div\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\n  0x1f\n  add\n  0x20\n  swap1\n  div\n  dup2\n  add\n  swap3\n  dup3\n  tag_26\n  jumpi\n  0x00\n  dup6\n  sstore\n  jump(tag_29)\ntag_26:\n  dup3\n  0x1f\n  lt\n  tag_27\n  jumpi\n  dup1\n  mload\n  not(0xff)\n  and\n  dup4\n  dup1\n  add\n  or\n  dup6\n  sstore\n  jump(tag_29)\ntag_27:\n  dup3\n  dup1\n  add\n  0x01\n  add\n  dup6\n  sstore\n  dup3\n  iszero\n  tag_29\n  jumpi\n  swap2\n  dup3\n  add\ntag_28:\n  dup3\n  dup2\n  gt\n  iszero\n  tag_29\n  jumpi\n  dup3\n  mload\n  dup3\n  sstore\n  swap2\n  0x20\n  add\n  swap2\n  swap1\n  0x01\n  add\n  swap1\n  jump(tag_28)\ntag_29:\n  pop\n  tag_30\n  swap3\n  swap2\n  pop\n  tag_31\n  jump\t// in\ntag_30:\n  pop\n  swap1\n  jump\t// out\ntag_31:\ntag_32:\n  dup1\n  dup3\n  gt\n  iszero\n  tag_30\n  jumpi\n  0x00\n  dup2\n  sstore\n  0x01\n  add\n  jump(tag_32)\ntag_24:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Umbra-Cash/contracts/TestToken.sol\":1397:1598  contract TestToken is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x40c10f19\n      gt\n      tag_15\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xa457c2d7\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_15:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x39509351\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3439:3528  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_16\n      tag_17\n      jump\t// in\n    tag_16:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_18:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_20\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_18)\n    tag_20:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_21\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_21:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5515:5681  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_4:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_23:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_24\n      jump\t// in\n    tag_22:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4506:4612  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_5:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6148:6465  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_6:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x60\n      dup2\n      lt\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_29\n      jump\t// in\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4357:4446  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6860:7075  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_8:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_33\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_34\n      jump\t// in\n        /* \"Umbra-Cash/contracts/TestToken.sol\":1509:1596  function mint(address account, uint256 amount) public {... */\n    tag_9:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_36\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_37\n      jump\t// in\n    tag_35:\n      stop\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4670:4795  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_10:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_40\n      jump\t// in\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3641:3734  function symbol() public view virtual returns (string memory) {... */\n    tag_11:\n      tag_16\n      tag_42\n      jump\t// in\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7562:7828  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_12:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_49\n      jump\t// in\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4998:5170  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_13:\n      tag_22\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_52\n      jump\t// in\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5228:5377  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_14:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x40\n      dup2\n      lt\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_55\n      jump\t// in\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3439:3528  function name() public view virtual returns (string memory) {... */\n    tag_17:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3516:3521  _name */\n      0x03\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3509:3521  return _name */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3484:3497  string memory */\n      0x60\n      swap4\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3509:3521  return _name */\n      swap1\n      swap3\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3516:3521  _name */\n      swap1\n      swap2\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3509:3521  return _name */\n      dup4\n      add\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3516:3521  _name */\n      dup3\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3509:3521  return _name */\n      dup3\n      dup1\n      iszero\n      tag_57\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_58\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_57)\n    tag_58:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_59:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_59\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_57:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3439:3528  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5515:5681  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n    tag_24:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5598:5602  bool */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5614:5653  _approve(_msgSender(), spender, amount) */\n      tag_61\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5623:5635  _msgSender() */\n      tag_62\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5623:5633  _msgSender */\n      tag_63\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5623:5635  _msgSender() */\n      jump\t// in\n    tag_62:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5637:5644  spender */\n      dup5\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5646:5652  amount */\n      dup5\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5614:5622  _approve */\n      tag_64\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5614:5653  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_61:\n      pop\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  true */\n      0x01\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5515:5681  function approve(address spender, uint256 amount) public virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4506:4612  function totalSupply() public view virtual override returns (uint256) {... */\n    tag_26:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4593:4605  _totalSupply */\n      sload(0x02)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4506:4612  function totalSupply() public view virtual override returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6148:6465  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_29:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6254:6258  bool */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6270:6306  _transfer(sender, recipient, amount) */\n      tag_67\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6280:6286  sender */\n      dup5\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6288:6297  recipient */\n      dup5\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6299:6305  amount */\n      dup5\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6270:6279  _transfer */\n      tag_68\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6270:6306  _transfer(sender, recipient, amount) */\n      jump\t// in\n    tag_67:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6316:6437  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      tag_69\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6325:6331  sender */\n      dup5\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6333:6345  _msgSender() */\n      tag_70\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6333:6343  _msgSender */\n      tag_63\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6333:6345  _msgSender() */\n      jump\t// in\n    tag_70:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6347:6436  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      tag_71\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6385:6391  amount */\n      dup6\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6347:6436  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x28\n      dup2\n      mstore\n      0x20\n      add\n      data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330\n      0x28\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6347:6366  _allowances[sender] */\n      dup11\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6347:6358  _allowances */\n      0x01\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6347:6366  _allowances[sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6379  _msgSender() */\n      tag_72\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6377  _msgSender */\n      tag_63\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6367:6379  _msgSender() */\n      jump\t// in\n    tag_72:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6347:6380  _allowances[sender][_msgSender()] */\n      and\n      dup2\n      mstore\n      0x20\n      dup2\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      0x40\n      add\n      0x00\n      keccak256\n      sload\n      swap2\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6347:6436  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      swap1\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6347:6384  _allowances[sender][_msgSender()].sub */\n      tag_73\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6347:6436  _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\") */\n      jump\t// in\n    tag_71:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6316:6324  _approve */\n      tag_64\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6316:6437  _approve(sender, _msgSender(), _allowances[sender][_msgSender()].sub(amount, \"ERC20: transfer amount exceeds allowance\")) */\n      jump\t// in\n    tag_69:\n      pop\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6454:6458  true */\n      0x01\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6148:6465  function transferFrom(address sender, address recipient, uint256 amount) public virtual override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4357:4446  function decimals() public view virtual returns (uint8) {... */\n    tag_31:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4430:4439  _decimals */\n      and(0xff, sload(0x05))\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4357:4446  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6860:7075  function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {... */\n    tag_34:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6948:6952  bool */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6964:7047  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].add(addedValue)) */\n      tag_61\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6973:6985  _msgSender() */\n      tag_77\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6973:6983  _msgSender */\n      tag_63\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6973:6985  _msgSender() */\n      jump\t// in\n    tag_77:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6987:6994  spender */\n      dup5\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7046  _allowances[_msgSender()][spender].add(addedValue) */\n      tag_71\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7035:7045  addedValue */\n      dup6\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7007  _allowances */\n      0x01\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7021  _allowances[_msgSender()] */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7008:7020  _msgSender() */\n      tag_79\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7008:7018  _msgSender */\n      tag_63\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7008:7020  _msgSender() */\n      jump\t// in\n    tag_79:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7021  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7030  _allowances[_msgSender()][spender] */\n      swap2\n      dup13\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7034  _allowances[_msgSender()][spender].add */\n      tag_80\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":6996:7046  _allowances[_msgSender()][spender].add(addedValue) */\n      jump\t// in\n        /* \"Umbra-Cash/contracts/TestToken.sol\":1509:1596  function mint(address account, uint256 amount) public {... */\n    tag_37:\n        /* \"Umbra-Cash/contracts/TestToken.sol\":1569:1591  _mint(account, amount) */\n      tag_82\n        /* \"Umbra-Cash/contracts/TestToken.sol\":1575:1582  account */\n      dup3\n        /* \"Umbra-Cash/contracts/TestToken.sol\":1584:1590  amount */\n      dup3\n        /* \"Umbra-Cash/contracts/TestToken.sol\":1569:1574  _mint */\n      tag_83\n        /* \"Umbra-Cash/contracts/TestToken.sol\":1569:1591  _mint(account, amount) */\n      jump\t// in\n    tag_82:\n        /* \"Umbra-Cash/contracts/TestToken.sol\":1509:1596  function mint(address account, uint256 amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4670:4795  function balanceOf(address account) public view virtual override returns (uint256) {... */\n    tag_40:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4770:4788  _balances[account] */\n      and\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4744:4751  uint256 */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4770:4788  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap1\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4670:4795  function balanceOf(address account) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3641:3734  function symbol() public view virtual returns (string memory) {... */\n    tag_42:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3720:3727  _symbol */\n      0x04\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3713:3727  return _symbol */\n      dup1\n      sload\n      0x40\n      dup1\n      mload\n      0x20\n      0x1f\n      0x02\n      not(0x00)\n      0x0100\n      0x01\n      dup9\n      and\n      iszero\n      mul\n      add\n      swap1\n      swap6\n      and\n      swap5\n      swap1\n      swap5\n      div\n      swap4\n      dup5\n      add\n      dup2\n      swap1\n      div\n      dup2\n      mul\n      dup3\n      add\n      dup2\n      add\n      swap1\n      swap3\n      mstore\n      dup3\n      dup2\n      mstore\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3688:3701  string memory */\n      0x60\n      swap4\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3713:3727  return _symbol */\n      swap1\n      swap3\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3720:3727  _symbol */\n      swap1\n      swap2\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3713:3727  return _symbol */\n      dup4\n      add\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3720:3727  _symbol */\n      dup3\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":3713:3727  return _symbol */\n      dup3\n      dup1\n      iszero\n      tag_57\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_58\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_57)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7562:7828  function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {... */\n    tag_49:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7655:7659  bool */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7671:7800  _approve(_msgSender(), spender, _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\")) */\n      tag_61\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7680:7692  _msgSender() */\n      tag_91\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7680:7690  _msgSender */\n      tag_63\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7680:7692  _msgSender() */\n      jump\t// in\n    tag_91:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7694:7701  spender */\n      dup5\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7703:7799  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      tag_71\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7742:7757  subtractedValue */\n      dup6\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7703:7799  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8\n      0x25\n      swap2\n      codecopy\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7703:7714  _allowances */\n      0x01\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7703:7728  _allowances[_msgSender()] */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7715:7727  _msgSender() */\n      tag_93\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7715:7725  _msgSender */\n      tag_63\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7715:7727  _msgSender() */\n      jump\t// in\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7703:7728  _allowances[_msgSender()] */\n      swap1\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      add\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      swap2\n      dup3\n      add\n      0x00\n      swap1\n      dup2\n      keccak256\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7703:7737  _allowances[_msgSender()][spender] */\n      swap2\n      dup14\n      and\n      dup2\n      mstore\n      swap3\n      mstore\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7703:7799  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      swap1\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7703:7741  _allowances[_msgSender()][spender].sub */\n      tag_73\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":7703:7799  _allowances[_msgSender()][spender].sub(subtractedValue, \"ERC20: decreased allowance below zero\") */\n      jump\t// in\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":4998:5170  function transfer(address recipient, uint256 amount) public virtual override returns (bool) {... */\n    tag_52:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5084:5088  bool */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5100:5142  _transfer(_msgSender(), recipient, amount) */\n      tag_61\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5110:5122  _msgSender() */\n      tag_96\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5110:5120  _msgSender */\n      tag_63\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5110:5122  _msgSender() */\n      jump\t// in\n    tag_96:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5124:5133  recipient */\n      dup5\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5135:5141  amount */\n      dup5\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5100:5109  _transfer */\n      tag_68\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5100:5142  _transfer(_msgSender(), recipient, amount) */\n      jump\t// in\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5228:5377  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n    tag_55:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5343:5361  _allowances[owner] */\n      swap2\n      dup3\n      and\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5317:5324  uint256 */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5343:5361  _allowances[owner] */\n      swap1\n      dup2\n      mstore\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5343:5354  _allowances */\n      0x01\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5343:5361  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5343:5370  _allowances[owner][spender] */\n      swap4\n      swap1\n      swap5\n      and\n      dup3\n      mstore\n      swap2\n      swap1\n      swap2\n      mstore\n      keccak256\n      sload\n      swap1\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":5228:5377  function allowance(address owner, address spender) public view virtual override returns (uint256) {... */\n      jump\t// out\n        /* \"Umbra-Cash/@openzeppelin/contracts/utils/Context.sol\":1869:1973  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_63:\n        /* \"Umbra-Cash/@openzeppelin/contracts/utils/Context.sol\":1956:1966  msg.sender */\n      caller\n        /* \"Umbra-Cash/@openzeppelin/contracts/utils/Context.sol\":1869:1973  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10626:10966  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n    tag_64:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10727:10746  owner != address(0) */\n      dup4\n      and\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10719:10787  require(owner != address(0), \"ERC20: approve from the zero address\") */\n      tag_100\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x24\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208\n      0x24\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10805:10826  spender != address(0) */\n      dup3\n      and\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10797:10865  require(spender != address(0), \"ERC20: approve to the zero address\") */\n      tag_101\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_101:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10876:10894  _allowances[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10876:10887  _allowances */\n      0x01\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10876:10894  _allowances[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10876:10903  _allowances[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10876:10912  _allowances[owner][spender] = amount */\n      dup6\n      swap1\n      sstore\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10927:10959  Approval(owner, spender, amount) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":10626:10966  function _approve(address owner, address spender, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8302:8832  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n    tag_68:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8407:8427  sender != address(0) */\n      dup4\n      and\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8399:8469  require(sender != address(0), \"ERC20: transfer from the zero address\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x25\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea\n      0x25\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_103:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8487:8510  recipient != address(0) */\n      dup3\n      and\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8479:8550  require(recipient != address(0), \"ERC20: transfer to the zero address\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x23\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f\n      0x23\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8561:8608  _beforeTokenTransfer(sender, recipient, amount) */\n      tag_105\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8582:8588  sender */\n      dup4\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8590:8599  recipient */\n      dup4\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8601:8607  amount */\n      dup4\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8561:8581  _beforeTokenTransfer */\n      tag_106\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8561:8608  _beforeTokenTransfer(sender, recipient, amount) */\n      jump\t// in\n    tag_105:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8639:8710  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      tag_107\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8661:8667  amount */\n      dup2\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8639:8710  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      mload(0x40)\n      dup1\n      0x60\n      add\n      0x40\n      mstore\n      dup1\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6\n      0x26\n      swap2\n      codecopy\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8639:8656  _balances[sender] */\n      dup7\n      and\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8639:8648  _balances */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8639:8656  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      swap2\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8639:8710  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap1\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8639:8660  _balances[sender].sub */\n      tag_73\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8639:8710  _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      jump\t// in\n    tag_107:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8619:8636  _balances[sender] */\n      dup1\n      dup6\n      and\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8619:8628  _balances */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8619:8636  _balances[sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8619:8710  _balances[sender] = _balances[sender].sub(amount, \"ERC20: transfer amount exceeds balance\") */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8743:8763  _balances[recipient] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8743:8775  _balances[recipient].add(amount) */\n      tag_108\n      swap1\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8768:8774  amount */\n      dup3\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8743:8767  _balances[recipient].add */\n      tag_80\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8743:8775  _balances[recipient].add(amount) */\n      jump\t// in\n    tag_108:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8720:8740  _balances[recipient] */\n      dup1\n      dup5\n      and\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8720:8729  _balances */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8720:8740  _balances[recipient] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8720:8775  _balances[recipient] = _balances[recipient].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8790:8825  Transfer(sender, recipient, amount) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8720:8740  _balances[recipient] */\n      swap2\n      swap4\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8790:8825  Transfer(sender, recipient, amount) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":8302:8832  function _transfer(address sender, address recipient, uint256 amount) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol\":6703:6866  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n    tag_73:\n        /* \"Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol\":6789:6796  uint256 */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol\":6824:6836  errorMessage */\n      dup2\n        /* \"Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol\":6816:6822  b <= a */\n      dup5\n      dup5\n      gt\n      iszero\n        /* \"Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol\":6808:6837  require(b <= a, errorMessage) */\n      tag_110\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_111:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_113\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_111)\n    tag_113:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_114\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_114:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_110:\n      pop\n      pop\n      pop\n        /* \"Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol\":6854:6859  a - b */\n      swap1\n      sub\n      swap1\n        /* \"Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol\":6703:6866  function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {... */\n      jump\t// out\n        /* \"Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol\":3961:4136  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_80:\n        /* \"Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol\":4019:4026  uint256 */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol\":4050:4055  a + b */\n      dup3\n      dup3\n      add\n        /* \"Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol\":4073:4079  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol\":4065:4111  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_116\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_116:\n        /* \"Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol\":4128:4129  c */\n      swap4\n        /* \"Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol\":3961:4136  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9103:9473  function _mint(address account, uint256 amount) internal virtual {... */\n    tag_83:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9186:9207  account != address(0) */\n      dup3\n      and\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9178:9243  require(account != address(0), \"ERC20: mint to the zero address\") */\n      tag_118\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1f\n      0x24\n      dup3\n      add\n      mstore\n      0x45524332303a206d696e7420746f20746865207a65726f206164647265737300\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_118:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9254:9303  _beforeTokenTransfer(address(0), account, amount) */\n      tag_119\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9283:9284  0 */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9287:9294  account */\n      dup4\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9296:9302  amount */\n      dup4\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9254:9274  _beforeTokenTransfer */\n      tag_106\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9254:9303  _beforeTokenTransfer(address(0), account, amount) */\n      jump\t// in\n    tag_119:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9329:9341  _totalSupply */\n      sload(0x02)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9329:9353  _totalSupply.add(amount) */\n      tag_120\n      swap1\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9346:9352  amount */\n      dup3\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9329:9345  _totalSupply.add */\n      tag_80\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9329:9353  _totalSupply.add(amount) */\n      jump\t// in\n    tag_120:\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9314:9326  _totalSupply */\n      0x02\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9314:9353  _totalSupply = _totalSupply.add(amount) */\n      sstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9384:9402  _balances[account] */\n      dup3\n      and\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9384:9393  _balances */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9384:9402  _balances[account] */\n      swap1\n      dup2\n      mstore\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9384:9414  _balances[account].add(amount) */\n      tag_121\n      swap1\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9407:9413  amount */\n      dup3\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9384:9406  _balances[account].add */\n      tag_80\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9384:9414  _balances[account].add(amount) */\n      jump\t// in\n    tag_121:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9363:9381  _balances[account] */\n      dup4\n      and\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9363:9372  _balances */\n      0x00\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9363:9381  _balances[account] */\n      dup2\n      dup2\n      mstore\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9363:9414  _balances[account] = _balances[account].add(amount) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9429:9466  Transfer(address(0), account, amount) */\n      dup4\n      mload\n      dup6\n      dup2\n      mstore\n      swap4\n      mload\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9363:9381  _balances[account] */\n      swap3\n      swap4\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9363:9372  _balances */\n      swap2\n      swap3\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9429:9466  Transfer(address(0), account, amount) */\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":9103:9473  function _mint(address account, uint256 amount) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":11972:12064  function _beforeTokenTransfer(address from, address to, uint256 amount) internal virtual { } */\n    tag_106:\n      pop\n      pop\n      pop\n      jump\t// out\n    stop\n    data_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f 45524332303a207472616e7366657220746f20746865207a65726f2061646472657373\n    data_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029 45524332303a20617070726f766520746f20746865207a65726f2061646472657373\n    data_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6 45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365\n    data_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330 45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365\n    data_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea 45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373\n    data_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208 45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373\n    data_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8 45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f\n\n    auxdata: 0xa264697066735822122066cea9cf0e694c7e48dd990ba9e203f9f68d7aec2f37240c8450c8299fc7aaa364736f6c63430007060033\n}\n",
						"bytecode": {
							"generatedSources": [],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b5060405162000dcc38038062000dcc833981810160405260408110156200003757600080fd5b81019080805160405193929190846401000000008211156200005857600080fd5b9083019060208201858111156200006e57600080fd5b82516401000000008111828201881017156200008957600080fd5b82525081516020918201929091019080838360005b83811015620000b85781810151838201526020016200009e565b50505050905090810190601f168015620000e65780820380516001836020036101000a031916815260200191505b50604052602001805160405193929190846401000000008211156200010a57600080fd5b9083019060208201858111156200012057600080fd5b82516401000000008111828201881017156200013b57600080fd5b82525081516020918201929091019080838360005b838110156200016a57818101518382015260200162000150565b50505050905090810190601f168015620001985780820380516001836020036101000a031916815260200191505b50604052505082518391508290620001b8906003906020850190620001e7565b508051620001ce906004906020840190620001e7565b50506005805460ff191660121790555062000293915050565b828054600181600116156101000203166002900490600052602060002090601f0160209004810192826200021f57600085556200026a565b82601f106200023a57805160ff19168380011785556200026a565b828001600101855582156200026a579182015b828111156200026a5782518255916020019190600101906200024d565b50620002789291506200027c565b5090565b5b808211156200027857600081556001016200027d565b610b2980620002a36000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f191461021057806370a082311461023e57806395d89b4114610264578063a457c2d71461026c578063a9059cbb14610298578063dd62ed3e146102c4576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd14610190578063313ce567146101c657806339509351146101e4575b600080fd5b6100c16102f2565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b038135169060200135610388565b604080519115158252519081900360200190f35b61017e6103a5565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b038135811691602081013590911690604001356103ab565b6101ce610432565b6040805160ff9092168252519081900360200190f35b610162600480360360408110156101fa57600080fd5b506001600160a01b03813516906020013561043b565b61023c6004803603604081101561022657600080fd5b506001600160a01b038135169060200135610489565b005b61017e6004803603602081101561025457600080fd5b50356001600160a01b0316610497565b6100c16104b2565b6101626004803603604081101561028257600080fd5b506001600160a01b038135169060200135610513565b610162600480360360408110156102ae57600080fd5b506001600160a01b03813516906020013561057b565b61017e600480360360408110156102da57600080fd5b506001600160a01b038135811691602001351661058f565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561037e5780601f106103535761010080835404028352916020019161037e565b820191906000526020600020905b81548152906001019060200180831161036157829003601f168201915b5050505050905090565b600061039c6103956105ba565b84846105be565b50600192915050565b60025490565b60006103b88484846106aa565b610428846103c46105ba565b61042385604051806060016040528060288152602001610a5e602891396001600160a01b038a166000908152600160205260408120906104026105ba565b6001600160a01b031681526020810191909152604001600020549190610805565b6105be565b5060019392505050565b60055460ff1690565b600061039c6104486105ba565b8461042385600160006104596105ba565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549061089c565b61049382826108fd565b5050565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561037e5780601f106103535761010080835404028352916020019161037e565b600061039c6105206105ba565b8461042385604051806060016040528060258152602001610acf602591396001600061054a6105ba565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610805565b600061039c6105886105ba565b84846106aa565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166106035760405162461bcd60e51b8152600401808060200182810382526024815260200180610aab6024913960400191505060405180910390fd5b6001600160a01b0382166106485760405162461bcd60e51b8152600401808060200182810382526022815260200180610a166022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166106ef5760405162461bcd60e51b8152600401808060200182810382526025815260200180610a866025913960400191505060405180910390fd5b6001600160a01b0382166107345760405162461bcd60e51b81526004018080602001828103825260238152602001806109f36023913960400191505060405180910390fd5b61073f8383836109ed565b61077c81604051806060016040528060268152602001610a38602691396001600160a01b0386166000908152602081905260409020549190610805565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107ab908261089c565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156108945760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610859578181015183820152602001610841565b50505050905090810190601f1680156108865780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156108f6576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610958576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610964600083836109ed565b600254610971908261089c565b6002556001600160a01b038216600090815260208190526040902054610997908261089c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122066cea9cf0e694c7e48dd990ba9e203f9f68d7aec2f37240c8450c8299fc7aaa364736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xDCC CODESIZE SUB DUP1 PUSH3 0xDCC DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x40 DUP2 LT ISZERO PUSH3 0x37 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x58 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x6E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x89 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0xB8 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x9E JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0xE6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE PUSH1 0x20 ADD DUP1 MLOAD PUSH1 0x40 MLOAD SWAP4 SWAP3 SWAP2 SWAP1 DUP5 PUSH5 0x100000000 DUP3 GT ISZERO PUSH3 0x10A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP1 DUP4 ADD SWAP1 PUSH1 0x20 DUP3 ADD DUP6 DUP2 GT ISZERO PUSH3 0x120 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MLOAD PUSH5 0x100000000 DUP2 GT DUP3 DUP3 ADD DUP9 LT OR ISZERO PUSH3 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 MSTORE POP DUP2 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD SWAP3 SWAP1 SWAP2 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x16A JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x150 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x198 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP PUSH1 0x40 MSTORE POP POP DUP3 MLOAD DUP4 SWAP2 POP DUP3 SWAP1 PUSH3 0x1B8 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x1E7 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x1CE SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x1E7 JUMP JUMPDEST POP POP PUSH1 0x5 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x12 OR SWAP1 SSTORE POP PUSH3 0x293 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x21F JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x26A JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x23A JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x26A JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x26A JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x26A JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x24D JUMP JUMPDEST POP PUSH3 0x278 SWAP3 SWAP2 POP PUSH3 0x27C JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x278 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x27D JUMP JUMPDEST PUSH2 0xB29 DUP1 PUSH3 0x2A3 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2C4 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1E4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x128 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x388 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17E PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x3AB JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x432 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x43B JUMP JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x489 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x254 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x497 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x513 JUMP JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x57B JUMP JUMPDEST PUSH2 0x17E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x58F JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x37E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x353 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x37E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x361 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39C PUSH2 0x395 PUSH2 0x5BA JUMP JUMPDEST DUP5 DUP5 PUSH2 0x5BE JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B8 DUP5 DUP5 DUP5 PUSH2 0x6AA JUMP JUMPDEST PUSH2 0x428 DUP5 PUSH2 0x3C4 PUSH2 0x5BA JUMP JUMPDEST PUSH2 0x423 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA5E PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x402 PUSH2 0x5BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x805 JUMP JUMPDEST PUSH2 0x5BE JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39C PUSH2 0x448 PUSH2 0x5BA JUMP JUMPDEST DUP5 PUSH2 0x423 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x459 PUSH2 0x5BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x89C JUMP JUMPDEST PUSH2 0x493 DUP3 DUP3 PUSH2 0x8FD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x37E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x353 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x37E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39C PUSH2 0x520 PUSH2 0x5BA JUMP JUMPDEST DUP5 PUSH2 0x423 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xACF PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x54A PUSH2 0x5BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x805 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39C PUSH2 0x588 PUSH2 0x5BA JUMP JUMPDEST DUP5 DUP5 PUSH2 0x6AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x603 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xAAB PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x648 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xA16 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xA86 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x734 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x9F3 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x73F DUP4 DUP4 DUP4 PUSH2 0x9ED JUMP JUMPDEST PUSH2 0x77C DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA38 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x805 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x7AB SWAP1 DUP3 PUSH2 0x89C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x894 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x859 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x841 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x886 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x8F6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x958 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x964 PUSH1 0x0 DUP4 DUP4 PUSH2 0x9ED JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x971 SWAP1 DUP3 PUSH2 0x89C JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x997 SWAP1 DUP3 PUSH2 0x89C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x735822122066CE 0xA9 0xCF 0xE PUSH10 0x4C7E48DD990BA9E203F9 0xF6 DUP14 PUSH27 0xEC2F37240C8450C8299FC7AAA364736F6C63430007060033000000 ",
							"sourceMap": "1397:201:4:-:0;;;1429:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1429:76:4;;;;;;;;;;-1:-1:-1;1429:76:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1429:76:4;;;;;;;;;;-1:-1:-1;1429:76:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1429:76:4;;-1:-1:-1;;3303:13:1;;1489:4:4;;-1:-1:-1;1495:6:4;;3303:13:1;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;3326:17:1;;;;:7;;:17;;;;;:::i;:::-;-1:-1:-1;;3353:9:1;:14;;-1:-1:-1;;3353:14:1;3365:2;3353:14;;;-1:-1:-1;1397:201:4;;-1:-1:-1;;1397:201:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1397:201:4;;;-1:-1:-1;1397:201:4;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100b45760003560e01c806340c10f191161007157806340c10f191461021057806370a082311461023e57806395d89b4114610264578063a457c2d71461026c578063a9059cbb14610298578063dd62ed3e146102c4576100b4565b806306fdde03146100b9578063095ea7b31461013657806318160ddd1461017657806323b872dd14610190578063313ce567146101c657806339509351146101e4575b600080fd5b6100c16102f2565b6040805160208082528351818301528351919283929083019185019080838360005b838110156100fb5781810151838201526020016100e3565b50505050905090810190601f1680156101285780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101626004803603604081101561014c57600080fd5b506001600160a01b038135169060200135610388565b604080519115158252519081900360200190f35b61017e6103a5565b60408051918252519081900360200190f35b610162600480360360608110156101a657600080fd5b506001600160a01b038135811691602081013590911690604001356103ab565b6101ce610432565b6040805160ff9092168252519081900360200190f35b610162600480360360408110156101fa57600080fd5b506001600160a01b03813516906020013561043b565b61023c6004803603604081101561022657600080fd5b506001600160a01b038135169060200135610489565b005b61017e6004803603602081101561025457600080fd5b50356001600160a01b0316610497565b6100c16104b2565b6101626004803603604081101561028257600080fd5b506001600160a01b038135169060200135610513565b610162600480360360408110156102ae57600080fd5b506001600160a01b03813516906020013561057b565b61017e600480360360408110156102da57600080fd5b506001600160a01b038135811691602001351661058f565b60038054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561037e5780601f106103535761010080835404028352916020019161037e565b820191906000526020600020905b81548152906001019060200180831161036157829003601f168201915b5050505050905090565b600061039c6103956105ba565b84846105be565b50600192915050565b60025490565b60006103b88484846106aa565b610428846103c46105ba565b61042385604051806060016040528060288152602001610a5e602891396001600160a01b038a166000908152600160205260408120906104026105ba565b6001600160a01b031681526020810191909152604001600020549190610805565b6105be565b5060019392505050565b60055460ff1690565b600061039c6104486105ba565b8461042385600160006104596105ba565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549061089c565b61049382826108fd565b5050565b6001600160a01b031660009081526020819052604090205490565b60048054604080516020601f600260001961010060018816150201909516949094049384018190048102820181019092528281526060939092909183018282801561037e5780601f106103535761010080835404028352916020019161037e565b600061039c6105206105ba565b8461042385604051806060016040528060258152602001610acf602591396001600061054a6105ba565b6001600160a01b03908116825260208083019390935260409182016000908120918d16815292529020549190610805565b600061039c6105886105ba565b84846106aa565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166106035760405162461bcd60e51b8152600401808060200182810382526024815260200180610aab6024913960400191505060405180910390fd5b6001600160a01b0382166106485760405162461bcd60e51b8152600401808060200182810382526022815260200180610a166022913960400191505060405180910390fd5b6001600160a01b03808416600081815260016020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b0383166106ef5760405162461bcd60e51b8152600401808060200182810382526025815260200180610a866025913960400191505060405180910390fd5b6001600160a01b0382166107345760405162461bcd60e51b81526004018080602001828103825260238152602001806109f36023913960400191505060405180910390fd5b61073f8383836109ed565b61077c81604051806060016040528060268152602001610a38602691396001600160a01b0386166000908152602081905260409020549190610805565b6001600160a01b0380851660009081526020819052604080822093909355908416815220546107ab908261089c565b6001600160a01b038084166000818152602081815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b600081848411156108945760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610859578181015183820152602001610841565b50505050905090810190601f1680156108865780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6000828201838110156108f6576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b6001600160a01b038216610958576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610964600083836109ed565b600254610971908261089c565b6002556001600160a01b038216600090815260208190526040902054610997908261089c565b6001600160a01b0383166000818152602081815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa264697066735822122066cea9cf0e694c7e48dd990ba9e203f9f68d7aec2f37240c8450c8299fc7aaa364736f6c63430007060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xB4 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x40C10F19 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x23E JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x298 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2C4 JUMPI PUSH2 0xB4 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xB9 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1C6 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1E4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xC1 PUSH2 0x2F2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xFB JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xE3 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x128 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x14C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x388 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17E PUSH2 0x3A5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1A6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x3AB JUMP JUMPDEST PUSH2 0x1CE PUSH2 0x432 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x1FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x43B JUMP JUMPDEST PUSH2 0x23C PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x226 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x489 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x254 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x497 JUMP JUMPDEST PUSH2 0xC1 PUSH2 0x4B2 JUMP JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x282 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x513 JUMP JUMPDEST PUSH2 0x162 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x57B JUMP JUMPDEST PUSH2 0x17E PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2DA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x58F JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x37E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x353 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x37E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x361 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39C PUSH2 0x395 PUSH2 0x5BA JUMP JUMPDEST DUP5 DUP5 PUSH2 0x5BE JUMP JUMPDEST POP PUSH1 0x1 SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B8 DUP5 DUP5 DUP5 PUSH2 0x6AA JUMP JUMPDEST PUSH2 0x428 DUP5 PUSH2 0x3C4 PUSH2 0x5BA JUMP JUMPDEST PUSH2 0x423 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x28 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA5E PUSH1 0x28 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 PUSH2 0x402 PUSH2 0x5BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x805 JUMP JUMPDEST PUSH2 0x5BE JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39C PUSH2 0x448 PUSH2 0x5BA JUMP JUMPDEST DUP5 PUSH2 0x423 DUP6 PUSH1 0x1 PUSH1 0x0 PUSH2 0x459 PUSH2 0x5BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP13 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 PUSH2 0x89C JUMP JUMPDEST PUSH2 0x493 DUP3 DUP3 PUSH2 0x8FD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 PUSH1 0x1F PUSH1 0x2 PUSH1 0x0 NOT PUSH2 0x100 PUSH1 0x1 DUP9 AND ISZERO MUL ADD SWAP1 SWAP6 AND SWAP5 SWAP1 SWAP5 DIV SWAP4 DUP5 ADD DUP2 SWAP1 DIV DUP2 MUL DUP3 ADD DUP2 ADD SWAP1 SWAP3 MSTORE DUP3 DUP2 MSTORE PUSH1 0x60 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 DUP4 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0x37E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x353 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x37E JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39C PUSH2 0x520 PUSH2 0x5BA JUMP JUMPDEST DUP5 PUSH2 0x423 DUP6 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xACF PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x0 PUSH2 0x54A PUSH2 0x5BA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP2 DUP3 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SWAP2 DUP14 AND DUP2 MSTORE SWAP3 MSTORE SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x805 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39C PUSH2 0x588 PUSH2 0x5BA JUMP JUMPDEST DUP5 DUP5 PUSH2 0x6AA JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x603 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x24 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xAAB PUSH1 0x24 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x648 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xA16 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6EF JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x25 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0xA86 PUSH1 0x25 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x734 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x23 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x9F3 PUSH1 0x23 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x73F DUP4 DUP4 DUP4 PUSH2 0x9ED JUMP JUMPDEST PUSH2 0x77C DUP2 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xA38 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP1 PUSH2 0x805 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x7AB SWAP1 DUP3 PUSH2 0x89C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP5 DUP5 GT ISZERO PUSH2 0x894 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x859 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x841 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x886 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x8F6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x958 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x964 PUSH1 0x0 DUP4 DUP4 PUSH2 0x9ED JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x971 SWAP1 DUP3 PUSH2 0x89C JUMP JUMPDEST PUSH1 0x2 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x997 SWAP1 DUP3 PUSH2 0x89C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP4 MLOAD DUP6 DUP2 MSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP INVALID GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220746F20746865207A65726F2061 PUSH5 0x6472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH2 0x7070 PUSH19 0x6F766520746F20746865207A65726F20616464 PUSH19 0x65737345524332303A207472616E7366657220 PUSH2 0x6D6F PUSH22 0x6E7420657863656564732062616C616E636545524332 ADDRESS GASPRICE KECCAK256 PUSH21 0x72616E7366657220616D6F756E7420657863656564 PUSH20 0x20616C6C6F77616E636545524332303A20747261 PUSH15 0x736665722066726F6D20746865207A PUSH6 0x726F20616464 PUSH19 0x65737345524332303A20617070726F76652066 PUSH19 0x6F6D20746865207A65726F2061646472657373 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS GASPRICE KECCAK256 PUSH5 0x6563726561 PUSH20 0x656420616C6C6F77616E63652062656C6F77207A PUSH6 0x726FA2646970 PUSH7 0x735822122066CE 0xA9 0xCF 0xE PUSH10 0x4C7E48DD990BA9E203F9 0xF6 DUP14 PUSH27 0xEC2F37240C8450C8299FC7AAA364736F6C63430007060033000000 ",
							"sourceMap": "1397:201:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3439:89:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5515:166;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5515:166:1;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4506:106;;;:::i;:::-;;;;;;;;;;;;;;;;6148:317;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6148:317:1;;;;;;;;;;;;;;;;;:::i;4357:89::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6860:215;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6860:215:1;;;;;;;;:::i;1509:87:4:-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1509:87:4;;;;;;;;:::i;:::-;;4670:125:1;;;;;;;;;;;;;;;;-1:-1:-1;4670:125:1;-1:-1:-1;;;;;4670:125:1;;:::i;3641:93::-;;;:::i;7562:266::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;7562:266:1;;;;;;;;:::i;4998:172::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;4998:172:1;;;;;;;;:::i;5228:149::-;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;5228:149:1;;;;;;;;;;:::i;3439:89::-;3516:5;3509:12;;;;;;;;-1:-1:-1;;3509:12:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3484:13;;3509:12;;3516:5;;3509:12;;3516:5;3509:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3439:89;:::o;5515:166::-;5598:4;5614:39;5623:12;:10;:12::i;:::-;5637:7;5646:6;5614:8;:39::i;:::-;-1:-1:-1;5670:4:1;5515:166;;;;:::o;4506:106::-;4593:12;;4506:106;:::o;6148:317::-;6254:4;6270:36;6280:6;6288:9;6299:6;6270:9;:36::i;:::-;6316:121;6325:6;6333:12;:10;:12::i;:::-;6347:89;6385:6;6347:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6347:19:1;;;;;;:11;:19;;;;;;6367:12;:10;:12::i;:::-;-1:-1:-1;;;;;6347:33:1;;;;;;;;;;;;-1:-1:-1;6347:33:1;;;:89;:37;:89::i;:::-;6316:8;:121::i;:::-;-1:-1:-1;6454:4:1;6148:317;;;;;:::o;4357:89::-;4430:9;;;;4357:89;:::o;6860:215::-;6948:4;6964:83;6973:12;:10;:12::i;:::-;6987:7;6996:50;7035:10;6996:11;:25;7008:12;:10;:12::i;:::-;-1:-1:-1;;;;;6996:25:1;;;;;;;;;;;;;;;;;-1:-1:-1;6996:25:1;;;:34;;;;;;;;;;;:38;:50::i;1509:87:4:-;1569:22;1575:7;1584:6;1569:5;:22::i;:::-;1509:87;;:::o;4670:125:1:-;-1:-1:-1;;;;;4770:18:1;4744:7;4770:18;;;;;;;;;;;;4670:125::o;3641:93::-;3720:7;3713:14;;;;;;;;-1:-1:-1;;3713:14:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3688:13;;3713:14;;3720:7;;3713:14;;3720:7;3713:14;;;;;;;;;;;;;;;;;;;;;;;;7562:266;7655:4;7671:129;7680:12;:10;:12::i;:::-;7694:7;7703:96;7742:15;7703:96;;;;;;;;;;;;;;;;;:11;:25;7715:12;:10;:12::i;:::-;-1:-1:-1;;;;;7703:25:1;;;;;;;;;;;;;;;;;-1:-1:-1;7703:25:1;;;:34;;;;;;;;;;;:96;:38;:96::i;4998:172::-;5084:4;5100:42;5110:12;:10;:12::i;:::-;5124:9;5135:6;5100:9;:42::i;5228:149::-;-1:-1:-1;;;;;5343:18:1;;;5317:7;5343:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;5228:149::o;1869:104:3:-;1956:10;1869:104;:::o;10626:340:1:-;-1:-1:-1;;;;;10727:19:1;;10719:68;;;;-1:-1:-1;;;10719:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10805:21:1;;10797:68;;;;-1:-1:-1;;;10797:68:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;10876:18:1;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10927:32;;;;;;;;;;;;;;;;;10626:340;;;:::o;8302:530::-;-1:-1:-1;;;;;8407:20:1;;8399:70;;;;-1:-1:-1;;;8399:70:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8487:23:1;;8479:71;;;;-1:-1:-1;;;8479:71:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8561:47;8582:6;8590:9;8601:6;8561:20;:47::i;:::-;8639:71;8661:6;8639:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;8639:17:1;;:9;:17;;;;;;;;;;;;:71;:21;:71::i;:::-;-1:-1:-1;;;;;8619:17:1;;;:9;:17;;;;;;;;;;;:91;;;;8743:20;;;;;;;:32;;8768:6;8743:24;:32::i;:::-;-1:-1:-1;;;;;8720:20:1;;;:9;:20;;;;;;;;;;;;:55;;;;8790:35;;;;;;;8720:20;;8790:35;;;;;;;;;;;;;8302:530;;;:::o;6703:163:0:-;6789:7;6824:12;6816:6;;;;6808:29;;;;-1:-1:-1;;;6808:29:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6854:5:0;;;6703:163::o;3961:175::-;4019:7;4050:5;;;4073:6;;;;4065:46;;;;;-1:-1:-1;;;4065:46:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;4128:1;3961:175;-1:-1:-1;;;3961:175:0:o;9103:370:1:-;-1:-1:-1;;;;;9186:21:1;;9178:65;;;;;-1:-1:-1;;;9178:65:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;9254:49;9283:1;9287:7;9296:6;9254:20;:49::i;:::-;9329:12;;:24;;9346:6;9329:16;:24::i;:::-;9314:12;:39;-1:-1:-1;;;;;9384:18:1;;:9;:18;;;;;;;;;;;:30;;9407:6;9384:22;:30::i;:::-;-1:-1:-1;;;;;9363:18:1;;:9;:18;;;;;;;;;;;:51;;;;9429:37;;;;;;;9363:18;;:9;;9429:37;;;;;;;;;;9103:370;;:::o;11972:92::-;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "571400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"allowance(address,address)": "1360",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "1167",
								"decimals()": "1102",
								"decreaseAllowance(address,uint256)": "infinite",
								"increaseAllowance(address,uint256)": "infinite",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1043",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1397,
									"end": 1598,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "100000000"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "tag",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "tag",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "100000000"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "tag",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "tag",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "100000000"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "tag",
									"source": 4,
									"value": "10"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "tag",
									"source": 4,
									"value": "11"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "100000000"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP9",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "tag",
									"source": 4,
									"value": "12"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "tag",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "tag",
									"source": 4,
									"value": "15"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "tag",
									"source": 4,
									"value": "16"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1429,
									"end": 1505,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3303,
									"end": 3316,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 3303,
									"end": 3316,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1489,
									"end": 1493,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1489,
									"end": 1493,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1495,
									"end": 1501,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1495,
									"end": 1501,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 3303,
									"end": 3316,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3303,
									"end": 3316,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3303,
									"end": 3308,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 3303,
									"end": 3308,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3303,
									"end": 3316,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3303,
									"end": 3316,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 3303,
									"end": 3316,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3303,
									"end": 3316,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3303,
									"end": 3316,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 3303,
									"end": 3316,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 3303,
									"end": 3316,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3303,
									"end": 3316,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3326,
									"end": 3343,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3326,
									"end": 3343,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 3326,
									"end": 3343,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 3326,
									"end": 3343,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3326,
									"end": 3333,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 3326,
									"end": 3333,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3326,
									"end": 3343,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 3326,
									"end": 3343,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 3326,
									"end": 3343,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 3326,
									"end": 3343,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3326,
									"end": 3343,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "21"
								},
								{
									"begin": 3326,
									"end": 3343,
									"name": "JUMP",
									"source": 1,
									"value": "[in]"
								},
								{
									"begin": 3326,
									"end": 3343,
									"name": "tag",
									"source": 1,
									"value": "22"
								},
								{
									"begin": 3326,
									"end": 3343,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 3353,
									"end": 3362,
									"name": "PUSH",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 3353,
									"end": 3367,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 3353,
									"end": 3367,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "FF"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3353,
									"end": 3367,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 3365,
									"end": 3367,
									"name": "PUSH",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 3353,
									"end": 3367,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 3353,
									"end": 3367,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 3353,
									"end": 3367,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "tag",
									"source": 4,
									"value": "21"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "DIV",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "PUSH",
									"source": 4,
									"value": "1F"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "PUSH",
									"source": 4,
									"value": "FF"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "tag",
									"source": 4,
									"value": "27"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "tag",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "28"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "tag",
									"source": 4,
									"value": "29"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "tag",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "tag",
									"source": 4,
									"value": "31"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "tag",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "GT",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "30"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "32"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1397,
									"end": 1598,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122066cea9cf0e694c7e48dd990ba9e203f9f68d7aec2f37240c8450c8299fc7aaa364736f6c63430007060033",
									".code": [
										{
											"begin": 1397,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "40C10F19"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "40C10F19"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "A457C2D7"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "DD62ED3E"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "6FDDE03"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "18160DDD"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "39509351"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1397,
											"end": 1598,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "NOT",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "tag",
											"source": 1,
											"value": "6"
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1509,
											"end": 1596,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1509,
											"end": 1596,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1509,
											"end": 1596,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1509,
											"end": 1596,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1596,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1596,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1596,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1509,
											"end": 1596,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1596,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1596,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1509,
											"end": 1596,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1596,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1509,
											"end": 1596,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1596,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1596,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1509,
											"end": 1596,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1509,
											"end": 1596,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1596,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1596,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1596,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1596,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1509,
											"end": 1596,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1596,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1509,
											"end": 1596,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1509,
											"end": 1596,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 1509,
											"end": 1596,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1596,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3641,
											"end": 3734,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 3641,
											"end": 3734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3641,
											"end": 3734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 3641,
											"end": 3734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3641,
											"end": 3734,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3521,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3484,
											"end": 3497,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3484,
											"end": 3497,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3521,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3516,
											"end": 3521,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3509,
											"end": 3521,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3439,
											"end": 3528,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5598,
											"end": 5602,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5614,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 5623,
											"end": 5635,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 5623,
											"end": 5633,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5623,
											"end": 5635,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5623,
											"end": 5635,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 5623,
											"end": 5635,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5637,
											"end": 5644,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5646,
											"end": 5652,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5614,
											"end": 5622,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 5614,
											"end": 5653,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5614,
											"end": 5653,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 5614,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5515,
											"end": 5681,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4593,
											"end": 4605,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 4593,
											"end": 4605,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4506,
											"end": 4612,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6254,
											"end": 6258,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6270,
											"end": 6306,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 6280,
											"end": 6286,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6288,
											"end": 6297,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6299,
											"end": 6305,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6270,
											"end": 6279,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 6270,
											"end": 6306,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6270,
											"end": 6306,
											"name": "tag",
											"source": 1,
											"value": "67"
										},
										{
											"begin": 6270,
											"end": 6306,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6316,
											"end": 6437,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 6325,
											"end": 6331,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6333,
											"end": 6345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 6333,
											"end": 6343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 6333,
											"end": 6345,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6333,
											"end": 6345,
											"name": "tag",
											"source": 1,
											"value": "70"
										},
										{
											"begin": 6333,
											"end": 6345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 6385,
											"end": 6391,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "PUSH data",
											"source": 1,
											"value": "974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330"
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "PUSH",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6347,
											"end": 6366,
											"name": "DUP11",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6366,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6366,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6347,
											"end": 6366,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6366,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6358,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6347,
											"end": 6366,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6347,
											"end": 6366,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6366,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6347,
											"end": 6366,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6366,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6366,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6367,
											"end": 6379,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 6367,
											"end": 6377,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 6367,
											"end": 6379,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6367,
											"end": 6379,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 6367,
											"end": 6379,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6347,
											"end": 6380,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6380,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6347,
											"end": 6380,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6380,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6380,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6380,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6347,
											"end": 6380,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6347,
											"end": 6380,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6380,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6380,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6347,
											"end": 6384,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "tag",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 6347,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6316,
											"end": 6324,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 6316,
											"end": 6437,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6316,
											"end": 6437,
											"name": "tag",
											"source": 1,
											"value": "69"
										},
										{
											"begin": 6316,
											"end": 6437,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6454,
											"end": 6458,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6148,
											"end": 6465,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4430,
											"end": 4439,
											"name": "PUSH",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 4430,
											"end": 4439,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4430,
											"end": 4439,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4430,
											"end": 4439,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4357,
											"end": 4446,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 6860,
											"end": 7075,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6948,
											"end": 6952,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6964,
											"end": 7047,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 6973,
											"end": 6985,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 6973,
											"end": 6983,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 6973,
											"end": 6985,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 6973,
											"end": 6985,
											"name": "tag",
											"source": 1,
											"value": "77"
										},
										{
											"begin": 6973,
											"end": 6985,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6987,
											"end": 6994,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 7035,
											"end": 7045,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7007,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7008,
											"end": 7020,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 7008,
											"end": 7018,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 7008,
											"end": 7020,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7008,
											"end": 7020,
											"name": "tag",
											"source": 1,
											"value": "79"
										},
										{
											"begin": 7008,
											"end": 7020,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7021,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7030,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7030,
											"name": "DUP13",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7030,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7030,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7030,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7030,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7030,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7030,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7030,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7030,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6996,
											"end": 7034,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 6996,
											"end": 7046,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1509,
											"end": 1596,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1509,
											"end": 1596,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1569,
											"end": 1591,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1575,
											"end": 1582,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1584,
											"end": 1590,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1569,
											"end": 1574,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 1569,
											"end": 1591,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1569,
											"end": 1591,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 1569,
											"end": 1591,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1596,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1596,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1509,
											"end": 1596,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4744,
											"end": 4751,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4788,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4670,
											"end": 4795,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 3641,
											"end": 3734,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 3641,
											"end": 3734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DUP9",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "SWAP6",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3688,
											"end": 3701,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 3688,
											"end": 3701,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3720,
											"end": 3727,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3713,
											"end": 3727,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 7562,
											"end": 7828,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7655,
											"end": 7659,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7671,
											"end": 7800,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 7680,
											"end": 7692,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 7680,
											"end": 7690,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 7680,
											"end": 7692,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7680,
											"end": 7692,
											"name": "tag",
											"source": 1,
											"value": "91"
										},
										{
											"begin": 7680,
											"end": 7692,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7694,
											"end": 7701,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "71"
										},
										{
											"begin": 7742,
											"end": 7757,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "PUSH data",
											"source": 1,
											"value": "F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8"
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7714,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7715,
											"end": 7727,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 7715,
											"end": 7725,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 7715,
											"end": 7727,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 7715,
											"end": 7727,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 7715,
											"end": 7727,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7728,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7737,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7737,
											"name": "DUP14",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7737,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7737,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7737,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7737,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7737,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7737,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7737,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7737,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7737,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7703,
											"end": 7741,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 7703,
											"end": 7799,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 4998,
											"end": 5170,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5084,
											"end": 5088,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5100,
											"end": 5142,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 5110,
											"end": 5122,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 5110,
											"end": 5120,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 5110,
											"end": 5122,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5110,
											"end": 5122,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 5110,
											"end": 5122,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5124,
											"end": 5133,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5135,
											"end": 5141,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5109,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 5100,
											"end": 5142,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "tag",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5343,
											"end": 5361,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5361,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5361,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5317,
											"end": 5324,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5343,
											"end": 5361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5361,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5361,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5354,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 5343,
											"end": 5361,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 5343,
											"end": 5361,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5361,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5361,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5361,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5343,
											"end": 5361,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5361,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5361,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5370,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5370,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5370,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5370,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5370,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5370,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5370,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5370,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5370,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5370,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5370,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5370,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 5343,
											"end": 5370,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5228,
											"end": 5377,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1869,
											"end": 1973,
											"name": "tag",
											"source": 3,
											"value": "63"
										},
										{
											"begin": 1869,
											"end": 1973,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1956,
											"end": 1966,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 1869,
											"end": 1973,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1869,
											"end": 1973,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 10626,
											"end": 10966,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 10626,
											"end": 10966,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10727,
											"end": 10746,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10727,
											"end": 10746,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "PUSH data",
											"source": 1,
											"value": "C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208"
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "tag",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 10719,
											"end": 10787,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10805,
											"end": 10826,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10805,
											"end": 10826,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "PUSH data",
											"source": 1,
											"value": "24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029"
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "PUSH",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "tag",
											"source": 1,
											"value": "101"
										},
										{
											"begin": 10797,
											"end": 10865,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 10876,
											"end": 10894,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10894,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10894,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10894,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10876,
											"end": 10894,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10894,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10894,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10887,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10876,
											"end": 10894,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10876,
											"end": 10894,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10894,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10894,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10894,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10876,
											"end": 10894,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10894,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10894,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10903,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10903,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10903,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10903,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10903,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10903,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10903,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10903,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10903,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10903,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10903,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10903,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10903,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10912,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10912,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10876,
											"end": 10912,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10959,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10959,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10959,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10959,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10959,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10959,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10959,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10959,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10927,
											"end": 10959,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10959,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10959,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10959,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10959,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10959,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10927,
											"end": 10959,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10626,
											"end": 10966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10626,
											"end": 10966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10626,
											"end": 10966,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10626,
											"end": 10966,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 8302,
											"end": 8832,
											"name": "tag",
											"source": 1,
											"value": "68"
										},
										{
											"begin": 8302,
											"end": 8832,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8407,
											"end": 8427,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8407,
											"end": 8427,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "PUSH data",
											"source": 1,
											"value": "BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA"
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "PUSH",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 8399,
											"end": 8469,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8487,
											"end": 8510,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8487,
											"end": 8510,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "PUSH data",
											"source": 1,
											"value": "557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F"
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "PUSH",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "tag",
											"source": 1,
											"value": "104"
										},
										{
											"begin": 8479,
											"end": 8550,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8608,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 8582,
											"end": 8588,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8590,
											"end": 8599,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8601,
											"end": 8607,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8561,
											"end": 8581,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 8561,
											"end": 8608,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8561,
											"end": 8608,
											"name": "tag",
											"source": 1,
											"value": "105"
										},
										{
											"begin": 8561,
											"end": 8608,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 8661,
											"end": 8667,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "PUSH data",
											"source": 1,
											"value": "4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6"
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "PUSH",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "CODECOPY",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8639,
											"end": 8656,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8656,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8648,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8639,
											"end": 8656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8656,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8639,
											"end": 8656,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8656,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8656,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8639,
											"end": 8656,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8656,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8656,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8656,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8639,
											"end": 8660,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "73"
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 8639,
											"end": 8710,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8619,
											"end": 8636,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8636,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8636,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8628,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8619,
											"end": 8636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8636,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8636,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8636,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8619,
											"end": 8636,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8636,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8636,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8636,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8619,
											"end": 8636,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8636,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8636,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8710,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8710,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8710,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8619,
											"end": 8710,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8743,
											"end": 8763,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8743,
											"end": 8763,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8743,
											"end": 8763,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8743,
											"end": 8763,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8743,
											"end": 8763,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8743,
											"end": 8763,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8743,
											"end": 8763,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 8743,
											"end": 8775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 8743,
											"end": 8775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8768,
											"end": 8774,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8743,
											"end": 8767,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 8743,
											"end": 8775,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 8743,
											"end": 8775,
											"name": "tag",
											"source": 1,
											"value": "108"
										},
										{
											"begin": 8743,
											"end": 8775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8720,
											"end": 8740,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8740,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8740,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8729,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8720,
											"end": 8740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8740,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8740,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 8720,
											"end": 8740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8740,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8740,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8740,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8720,
											"end": 8740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8740,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8740,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8740,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8775,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8775,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8775,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8775,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8740,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8720,
											"end": 8740,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "DUP8",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8790,
											"end": 8825,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 8302,
											"end": 8832,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8302,
											"end": 8832,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8302,
											"end": 8832,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8302,
											"end": 8832,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 6703,
											"end": 6866,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 6703,
											"end": 6866,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6789,
											"end": 6796,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6824,
											"end": 6836,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6816,
											"end": 6822,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6816,
											"end": 6822,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 6816,
											"end": 6822,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 6816,
											"end": 6822,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 6808,
											"end": 6837,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6854,
											"end": 6859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6859,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6854,
											"end": 6859,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6703,
											"end": 6866,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3961,
											"end": 4136,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3961,
											"end": 4136,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4019,
											"end": 4026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4050,
											"end": 4055,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4055,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4050,
											"end": 4055,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4073,
											"end": 4079,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4073,
											"end": 4079,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4073,
											"end": 4079,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4073,
											"end": 4079,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "PUSH",
											"source": 0,
											"value": "1B"
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "PUSH",
											"source": 0,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 4065,
											"end": 4111,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4128,
											"end": 4129,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3961,
											"end": 4136,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3961,
											"end": 4136,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 9103,
											"end": 9473,
											"name": "tag",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 9103,
											"end": 9473,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9186,
											"end": 9207,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9186,
											"end": 9207,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9243,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 9178,
											"end": 9243,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9243,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9178,
											"end": 9243,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9243,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9178,
											"end": 9243,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9243,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9243,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9178,
											"end": 9243,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 9178,
											"end": 9243,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9243,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9243,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 9178,
											"end": 9243,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 9178,
											"end": 9243,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9243,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9243,
											"name": "PUSH",
											"source": 1,
											"value": "45524332303A206D696E7420746F20746865207A65726F206164647265737300"
										},
										{
											"begin": 9178,
											"end": 9243,
											"name": "PUSH",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 9178,
											"end": 9243,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9243,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9243,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9243,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9243,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9243,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9243,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9243,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9243,
											"name": "PUSH",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 9178,
											"end": 9243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9243,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9243,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9178,
											"end": 9243,
											"name": "tag",
											"source": 1,
											"value": "118"
										},
										{
											"begin": 9178,
											"end": 9243,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9254,
											"end": 9303,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 9283,
											"end": 9284,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9287,
											"end": 9294,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9296,
											"end": 9302,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9254,
											"end": 9274,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 9254,
											"end": 9303,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9254,
											"end": 9303,
											"name": "tag",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 9254,
											"end": 9303,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9329,
											"end": 9341,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9329,
											"end": 9341,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9329,
											"end": 9353,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 9329,
											"end": 9353,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9346,
											"end": 9352,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9329,
											"end": 9345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9329,
											"end": 9353,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9329,
											"end": 9353,
											"name": "tag",
											"source": 1,
											"value": "120"
										},
										{
											"begin": 9329,
											"end": 9353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9314,
											"end": 9326,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 9314,
											"end": 9353,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9384,
											"end": 9402,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9384,
											"end": 9402,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9384,
											"end": 9393,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9384,
											"end": 9402,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9384,
											"end": 9402,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9384,
											"end": 9402,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9384,
											"end": 9402,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9384,
											"end": 9402,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9384,
											"end": 9402,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9384,
											"end": 9402,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9384,
											"end": 9402,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9384,
											"end": 9402,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9384,
											"end": 9402,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9384,
											"end": 9402,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 9384,
											"end": 9414,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 9384,
											"end": 9414,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9407,
											"end": 9413,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 9384,
											"end": 9406,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 9384,
											"end": 9414,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 9384,
											"end": 9414,
											"name": "tag",
											"source": 1,
											"value": "121"
										},
										{
											"begin": 9384,
											"end": 9414,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9363,
											"end": 9381,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9363,
											"end": 9381,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9363,
											"end": 9372,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9363,
											"end": 9381,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9363,
											"end": 9381,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9363,
											"end": 9381,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9363,
											"end": 9381,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 9363,
											"end": 9381,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9363,
											"end": 9381,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9363,
											"end": 9381,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9363,
											"end": 9381,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 9363,
											"end": 9381,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 9363,
											"end": 9381,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9363,
											"end": 9381,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 9363,
											"end": 9414,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9363,
											"end": 9414,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9363,
											"end": 9414,
											"name": "SWAP5",
											"source": 1
										},
										{
											"begin": 9363,
											"end": 9414,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9466,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9466,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9466,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9466,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9466,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9466,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9466,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 9363,
											"end": 9381,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9363,
											"end": 9381,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 9363,
											"end": 9372,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9363,
											"end": 9372,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9466,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 9429,
											"end": 9466,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9466,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9466,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9466,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9466,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9466,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9466,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9466,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 9429,
											"end": 9466,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 9103,
											"end": 9473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9103,
											"end": 9473,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9103,
											"end": 9473,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 11972,
											"end": 12064,
											"name": "tag",
											"source": 1,
											"value": "106"
										},
										{
											"begin": 11972,
											"end": 12064,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 11972,
											"end": 12064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11972,
											"end": 12064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11972,
											"end": 12064,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 11972,
											"end": 12064,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									],
									".data": {
										"24883CC5FE64ACE9D0DF1893501ECB93C77180F0FF69CCA79AFFB3C316DC8029": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
										"4107E8A8B9E94BF8FF83080DDEC1C0BFFE897EBC2241B89D44F66B3D274088B6": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
										"557E210F7A69A685100A7E4E3D0A7024C546085CEE28910FD17D0B081D9516F": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
										"974D1B4421DA69CC60B481194F0DAD36A5BB4E23DA810DA7A7FB30CDBA178330": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
										"BAECC556B46F4ED0F2B4CB599D60785AC8563DD2DC0A5BF12EDEA1C39E5E1FEA": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
										"C953F4879035ED60E766B34720F656AAB5C697B141D924C283124ECEDB91C208": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
										"F8B476F7D28209D77D4A4AC1FE36B9F8259AA1BB6BDDFA6E89DE7E51615CF8A8": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f"
									}
								}
							}
						},
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"decreaseAllowance(address,uint256)": "a457c2d7",
							"increaseAllowance(address,uint256)": "39509351",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Umbra-Cash/contracts/TestToken.sol\":\"TestToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xed84f952d9565c4fc3690a3c7f295ae401f14d3e952ef104ef991f272127b5dc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54f04c5b3bad1b034e0164b453b326fdddbb067664c2255d79b266bccff3b7d7\",\"dweb:/ipfs/Qmb83oMdU7UtMZ8YbnxmP8CDc8rgQFzWQDN3uoAwPDyRRQ\"]},\"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xe6ac370a35e912e5f6c40b93225c89c6c43d0ec1b5a4cb78441ebfa4db083db6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9630a9a9e5b3be441a3ea5fb24f2f29121e1e882c65e062aa2deedceab8e021d\",\"dweb:/ipfs/QmS7fXssrbucgk7xfB3RxvxiBWKUUjPmTrLtv9qT1eN3tM\"]},\"Umbra-Cash/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x702e70ef0f67b8a45db9bdccdbe3eb1de654d4c8c93503df15784d0964046ff6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e852c6eddd2a3889f99be4b591be57177d2a00bb0c2e0585f2af8e96b7e480fc\",\"dweb:/ipfs/QmRSosgbTfUYW7g3mA6Sy8ydsMGQRWKypWxbqLPe5UgjAN\"]},\"Umbra-Cash/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x0e92b627582fd191d8db7901cba59e29b57059716e53b5034ef8977357c3244a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://54c37e6816bd5730227bcb2553dd74d9ed0d4b513485375d644061bc98d3d08e\",\"dweb:/ipfs/QmQ67ZbMnJovZCpgtPbfPQms1ZfWHD5mkaEiy6YrnQvCLD\"]},\"Umbra-Cash/contracts/TestToken.sol\":{\"keccak256\":\"0x31305158b16e043a3bda5abbaf6afc7823caee48d228158f0306b47ac0fd4a3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://632f88891a1c0186b9349df8bb91dcd907eb1d354755cb67c6f7c910158c2013\",\"dweb:/ipfs/QmPz3Brd5Az8i1Qt4ebdm7jCH7psdiV4tVVzNJQB5WZoa2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 371,
								"contract": "Umbra-Cash/contracts/TestToken.sol:TestToken",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 377,
								"contract": "Umbra-Cash/contracts/TestToken.sol:TestToken",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 379,
								"contract": "Umbra-Cash/contracts/TestToken.sol:TestToken",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 381,
								"contract": "Umbra-Cash/contracts/TestToken.sol:TestToken",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 383,
								"contract": "Umbra-Cash/contracts/TestToken.sol:TestToken",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 385,
								"contract": "Umbra-Cash/contracts/TestToken.sol:TestToken",
								"label": "_decimals",
								"offset": 0,
								"slot": "5",
								"type": "t_uint8"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint8": {
								"encoding": "inplace",
								"label": "uint8",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2462",
				"formattedMessage": "Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol:70:5: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n    constructor (string memory name_, string memory symbol_) public {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.",
				"severity": "warning",
				"sourceLocation": {
					"end": 3374,
					"file": "Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"start": 3229
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol": {
				"ast": {
					"absolutePath": "Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							354
						]
					},
					"id": 355,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1304:31:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "1337:563:0",
								"text": " @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 354,
							"linearizedBaseContracts": [
								354
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 32,
										"nodeType": "Block",
										"src": "2136:98:0",
										"statements": [
											{
												"assignments": [
													15
												],
												"declarations": [
													{
														"constant": false,
														"id": 15,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 32,
														"src": "2146:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 14,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2146:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 19,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 18,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 16,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2158:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 17,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2162:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2158:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2146:17:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 20,
														"name": "c",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 15,
														"src": "2177:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 21,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2181:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2177:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 27,
												"nodeType": "IfStatement",
												"src": "2173:28:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2192:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 24,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2199:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 25,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2191:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 13,
													"id": 26,
													"nodeType": "Return",
													"src": "2184:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 28,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2219:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 29,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 15,
															"src": "2225:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 30,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2218:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 13,
												"id": 31,
												"nodeType": "Return",
												"src": "2211:16:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "1924:131:0",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 33,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "2076:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2076:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "2087:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2087:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2075:22:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "2121:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 9,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2121:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 33,
												"src": "2127:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 11,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2127:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2120:15:0"
									},
									"scope": 354,
									"src": "2060:174:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "2456:75:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 45,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "2470:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 46,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 36,
														"src": "2474:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2470:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 52,
												"nodeType": "IfStatement",
												"src": "2466:28:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2485:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 49,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2492:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 50,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2484:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 44,
													"id": 51,
													"nodeType": "Return",
													"src": "2477:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 53,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2512:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 54,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 36,
																"src": "2518:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 55,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 38,
																"src": "2522:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2518:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 57,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2511:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 44,
												"id": 58,
												"nodeType": "Return",
												"src": "2504:20:0"
											}
										]
									},
									"documentation": {
										"id": 34,
										"nodeType": "StructuredDocumentation",
										"src": "2240:135:0",
										"text": " @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 36,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2396:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 35,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2396:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 38,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2407:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 37,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2407:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2395:22:0"
									},
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2441:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 40,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2441:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2447:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2447:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2440:15:0"
									},
									"scope": 354,
									"src": "2380:151:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "2755:359:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 72,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "2987:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 73,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2992:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2987:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 79,
												"nodeType": "IfStatement",
												"src": "2983:28:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "74727565",
																"id": 75,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3003:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															{
																"hexValue": "30",
																"id": 76,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3009:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 77,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3002:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 71,
													"id": 78,
													"nodeType": "Return",
													"src": "2995:16:0"
												}
											},
											{
												"assignments": [
													81
												],
												"declarations": [
													{
														"constant": false,
														"id": 81,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 100,
														"src": "3021:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 80,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3021:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 85,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 82,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "3033:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 83,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "3037:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3033:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3021:17:0"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 90,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 88,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 86,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "3052:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 87,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "3056:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3052:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 89,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "3061:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3052:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 95,
												"nodeType": "IfStatement",
												"src": "3048:33:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 91,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3072:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3079:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 93,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3071:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 71,
													"id": 94,
													"nodeType": "Return",
													"src": "3064:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 96,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3099:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"id": 97,
															"name": "c",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 81,
															"src": "3105:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 98,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3098:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 71,
												"id": 99,
												"nodeType": "Return",
												"src": "3091:16:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2537:137:0",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"
									},
									"id": 101,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "2695:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 62,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2695:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "2706:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 64,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2706:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2694:22:0"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 68,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "2740:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 67,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2740:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 101,
												"src": "2746:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 69,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2746:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2739:15:0"
									},
									"scope": 354,
									"src": "2679:435:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3339:76:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 115,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 113,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 106,
														"src": "3353:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 114,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3358:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3353:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "3349:29:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 116,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3369:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3376:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 118,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3368:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 112,
													"id": 119,
													"nodeType": "Return",
													"src": "3361:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 121,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3396:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 124,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 122,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 104,
																"src": "3402:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 123,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 106,
																"src": "3406:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3402:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 125,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3395:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 112,
												"id": 126,
												"nodeType": "Return",
												"src": "3388:20:0"
											}
										]
									},
									"documentation": {
										"id": 102,
										"nodeType": "StructuredDocumentation",
										"src": "3120:138:0",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 107,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 104,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3279:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 103,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3279:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 106,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3290:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 105,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3290:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:22:0"
									},
									"returnParameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3324:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 108,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3324:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3330:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3330:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3323:15:0"
									},
									"scope": 354,
									"src": "3263:152:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 154,
										"nodeType": "Block",
										"src": "3650:76:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 140,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 133,
														"src": "3664:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3669:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3664:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 147,
												"nodeType": "IfStatement",
												"src": "3660:29:0",
												"trueBody": {
													"expression": {
														"components": [
															{
																"hexValue": "66616c7365",
																"id": 143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3680:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															{
																"hexValue": "30",
																"id": 144,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3687:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"id": 145,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "3679:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
															"typeString": "tuple(bool,int_const 0)"
														}
													},
													"functionReturnParameters": 139,
													"id": 146,
													"nodeType": "Return",
													"src": "3672:17:0"
												}
											},
											{
												"expression": {
													"components": [
														{
															"hexValue": "74727565",
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3707:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 151,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 149,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 131,
																"src": "3713:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "%",
															"rightExpression": {
																"id": 150,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 133,
																"src": "3717:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3713:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 152,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "3706:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
														"typeString": "tuple(bool,uint256)"
													}
												},
												"functionReturnParameters": 139,
												"id": 153,
												"nodeType": "Return",
												"src": "3699:20:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "3421:148:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"
									},
									"id": 155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "3590:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3590:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 133,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "3601:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 132,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3601:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3589:22:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 136,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "3635:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 135,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3635:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 155,
												"src": "3641:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3641:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3634:15:0"
									},
									"scope": 354,
									"src": "3574:152:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 180,
										"nodeType": "Block",
										"src": "4028:108:0",
										"statements": [
											{
												"assignments": [
													166
												],
												"declarations": [
													{
														"constant": false,
														"id": 166,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 180,
														"src": "4038:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 165,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4038:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 170,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 167,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 158,
														"src": "4050:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 168,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 160,
														"src": "4054:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4050:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4038:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 172,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "4073:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 173,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "4078:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4073:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 175,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4081:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 171,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4065:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4065:46:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "4065:46:0"
											},
											{
												"expression": {
													"id": 178,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 166,
													"src": "4128:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 164,
												"id": 179,
												"nodeType": "Return",
												"src": "4121:8:0"
											}
										]
									},
									"documentation": {
										"id": 156,
										"nodeType": "StructuredDocumentation",
										"src": "3732:224:0",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 181,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "3974:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3974:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "3985:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 159,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3985:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3973:22:0"
									},
									"returnParameters": {
										"id": 164,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 163,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 181,
												"src": "4019:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 162,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4019:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4018:9:0"
									},
									"scope": 354,
									"src": "3961:175:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 202,
										"nodeType": "Block",
										"src": "4474:88:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 194,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 192,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 186,
																"src": "4492:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 193,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 184,
																"src": "4497:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4492:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4500:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 191,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4484:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4484:49:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 197,
												"nodeType": "ExpressionStatement",
												"src": "4484:49:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 198,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 184,
														"src": "4550:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 199,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 186,
														"src": "4554:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4550:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 190,
												"id": 201,
												"nodeType": "Return",
												"src": "4543:12:0"
											}
										]
									},
									"documentation": {
										"id": 182,
										"nodeType": "StructuredDocumentation",
										"src": "4142:260:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 203,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 184,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "4420:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 183,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4420:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "4431:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4431:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4419:22:0"
									},
									"returnParameters": {
										"id": 190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 203,
												"src": "4465:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 188,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4465:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4464:9:0"
									},
									"scope": 354,
									"src": "4407:155:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "4876:148:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 215,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 213,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "4890:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 214,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4895:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "4890:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 218,
												"nodeType": "IfStatement",
												"src": "4886:20:0",
												"trueBody": {
													"expression": {
														"hexValue": "30",
														"id": 216,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4905:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"functionReturnParameters": 212,
													"id": 217,
													"nodeType": "Return",
													"src": "4898:8:0"
												}
											},
											{
												"assignments": [
													220
												],
												"declarations": [
													{
														"constant": false,
														"id": 220,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"scope": 236,
														"src": "4916:9:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 219,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4916:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 224,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 221,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 206,
														"src": "4928:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 222,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 208,
														"src": "4932:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4928:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4916:17:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 230,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 228,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 226,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 220,
																	"src": "4951:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 227,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 206,
																	"src": "4955:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4951:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 229,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 208,
																"src": "4960:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4951:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4963:35:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 225,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4943:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4943:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 233,
												"nodeType": "ExpressionStatement",
												"src": "4943:56:0"
											},
											{
												"expression": {
													"id": 234,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 220,
													"src": "5016:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 212,
												"id": 235,
												"nodeType": "Return",
												"src": "5009:8:0"
											}
										]
									},
									"documentation": {
										"id": 204,
										"nodeType": "StructuredDocumentation",
										"src": "4568:236:0",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 209,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 206,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "4822:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4822:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 208,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "4833:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 207,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4821:22:0"
									},
									"returnParameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "4867:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 210,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4867:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4866:9:0"
									},
									"scope": 354,
									"src": "4809:215:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 258,
										"nodeType": "Block",
										"src": "5555:83:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 248,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 242,
																"src": "5573:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 249,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5577:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5573:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 251,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5580:28:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 247,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5565:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5565:44:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 253,
												"nodeType": "ExpressionStatement",
												"src": "5565:44:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 256,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 254,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 240,
														"src": "5626:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 255,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 242,
														"src": "5630:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5626:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 246,
												"id": 257,
												"nodeType": "Return",
												"src": "5619:12:0"
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "5030:453:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 259,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5501:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 239,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5501:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5512:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5512:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5500:22:0"
									},
									"returnParameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5546:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5546:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5545:9:0"
									},
									"scope": 354,
									"src": "5488:150:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 280,
										"nodeType": "Block",
										"src": "6158:81:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 272,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 270,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 264,
																"src": "6176:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6180:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6176:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6183:26:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 269,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6168:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6168:42:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 275,
												"nodeType": "ExpressionStatement",
												"src": "6168:42:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 276,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 262,
														"src": "6227:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 277,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 264,
														"src": "6231:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6227:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 268,
												"id": 279,
												"nodeType": "Return",
												"src": "6220:12:0"
											}
										]
									},
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5644:442:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 281,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "6104:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 261,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6104:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "6115:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6115:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6103:22:0"
									},
									"returnParameters": {
										"id": 268,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 281,
												"src": "6149:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 266,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6149:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6148:9:0"
									},
									"scope": 354,
									"src": "6091:148:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 304,
										"nodeType": "Block",
										"src": "6798:68:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 294,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 286,
																"src": "6816:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 295,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 284,
																"src": "6821:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6816:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 297,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "6824:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 293,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6808:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6808:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "6808:29:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 300,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 284,
														"src": "6854:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 301,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 286,
														"src": "6858:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6854:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 292,
												"id": 303,
												"nodeType": "Return",
												"src": "6847:12:0"
											}
										]
									},
									"documentation": {
										"id": 282,
										"nodeType": "StructuredDocumentation",
										"src": "6245:453:0",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 305,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "6716:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 283,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6716:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "6727:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6727:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "6738:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 287,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6738:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6715:50:0"
									},
									"returnParameters": {
										"id": 292,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 291,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 305,
												"src": "6789:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 290,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6789:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6788:9:0"
									},
									"scope": 354,
									"src": "6703:163:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 328,
										"nodeType": "Block",
										"src": "7618:67:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 320,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 318,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 310,
																"src": "7636:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 319,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7640:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "7636:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 321,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 312,
															"src": "7643:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 317,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7628:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 322,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7628:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 323,
												"nodeType": "ExpressionStatement",
												"src": "7628:28:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 324,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 308,
														"src": "7673:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 325,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 310,
														"src": "7677:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7673:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 316,
												"id": 327,
												"nodeType": "Return",
												"src": "7666:12:0"
											}
										]
									},
									"documentation": {
										"id": 306,
										"nodeType": "StructuredDocumentation",
										"src": "6872:646:0",
										"text": " @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 329,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 308,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "7536:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 307,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7536:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 310,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "7547:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7547:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 312,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "7558:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 311,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "7558:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7535:50:0"
									},
									"returnParameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 329,
												"src": "7609:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7609:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7608:9:0"
									},
									"scope": 354,
									"src": "7523:162:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 352,
										"nodeType": "Block",
										"src": "8426:67:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 342,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 334,
																"src": "8444:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 343,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8448:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8444:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 345,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 336,
															"src": "8451:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 341,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8436:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8436:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "8436:28:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 350,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 348,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 332,
														"src": "8481:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"id": 349,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 334,
														"src": "8485:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8481:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 340,
												"id": 351,
												"nodeType": "Return",
												"src": "8474:12:0"
											}
										]
									},
									"documentation": {
										"id": 330,
										"nodeType": "StructuredDocumentation",
										"src": "7691:635:0",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 353,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "8344:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8344:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "8355:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 333,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8355:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "8366:26:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 335,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "8366:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8343:50:0"
									},
									"returnParameters": {
										"id": 340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 353,
												"src": "8417:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8417:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8416:9:0"
									},
									"scope": 354,
									"src": "8331:162:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 355,
							"src": "1901:6594:0"
						}
					],
					"src": "1304:7192:0"
				},
				"id": 0
			},
			"Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							958
						],
						"ERC20": [
							857
						],
						"IERC20": [
							935
						],
						"SafeMath": [
							354
						]
					},
					"id": 858,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 356,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1304:31:1"
						},
						{
							"absolutePath": "Umbra-Cash/@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 357,
							"nodeType": "ImportDirective",
							"scope": 858,
							"sourceUnit": 959,
							"src": "1337:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Umbra-Cash/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 358,
							"nodeType": "ImportDirective",
							"scope": 858,
							"sourceUnit": 936,
							"src": "1371:22:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Umbra-Cash/@openzeppelin/contracts/math/SafeMath.sol",
							"file": "../../math/SafeMath.sol",
							"id": 359,
							"nodeType": "ImportDirective",
							"scope": 858,
							"sourceUnit": 355,
							"src": "1394:33:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 361,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 958,
										"src": "2610:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$958",
											"typeString": "contract Context"
										}
									},
									"id": 362,
									"nodeType": "InheritanceSpecifier",
									"src": "2610:7:1"
								},
								{
									"baseName": {
										"id": 363,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 935,
										"src": "2619:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$935",
											"typeString": "contract IERC20"
										}
									},
									"id": 364,
									"nodeType": "InheritanceSpecifier",
									"src": "2619:6:1"
								}
							],
							"contractDependencies": [
								935,
								958
							],
							"contractKind": "contract",
							"documentation": {
								"id": 360,
								"nodeType": "StructuredDocumentation",
								"src": "1429:1162:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin guidelines: functions revert instead\n of returning `false` on failure. This behavior is nonetheless conventional\n and does not conflict with the expectations of ERC20 applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
							},
							"fullyImplemented": true,
							"id": 857,
							"linearizedBaseContracts": [
								857,
								935,
								958
							],
							"name": "ERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 367,
									"libraryName": {
										"id": 365,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 354,
										"src": "2638:8:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$354",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "2632:27:1",
									"typeName": {
										"id": 366,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2651:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": false,
									"id": 371,
									"mutability": "mutable",
									"name": "_balances",
									"nodeType": "VariableDeclaration",
									"scope": 857,
									"src": "2665:46:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 370,
										"keyType": {
											"id": 368,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2674:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2665:28:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 369,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2685:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 377,
									"mutability": "mutable",
									"name": "_allowances",
									"nodeType": "VariableDeclaration",
									"scope": 857,
									"src": "2718:69:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 376,
										"keyType": {
											"id": 372,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2727:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2718:49:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 375,
											"keyType": {
												"id": 373,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "2747:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "2738:28:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 374,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "2758:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 379,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 857,
									"src": "2794:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 378,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2794:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 381,
									"mutability": "mutable",
									"name": "_name",
									"nodeType": "VariableDeclaration",
									"scope": 857,
									"src": "2829:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 380,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2829:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 383,
									"mutability": "mutable",
									"name": "_symbol",
									"nodeType": "VariableDeclaration",
									"scope": 857,
									"src": "2855:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 382,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "2855:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 385,
									"mutability": "mutable",
									"name": "_decimals",
									"nodeType": "VariableDeclaration",
									"scope": 857,
									"src": "2883:23:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 384,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "2883:5:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 405,
										"nodeType": "Block",
										"src": "3293:81:1",
										"statements": [
											{
												"expression": {
													"id": 395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 393,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 381,
														"src": "3303:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 394,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 388,
														"src": "3311:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3303:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 396,
												"nodeType": "ExpressionStatement",
												"src": "3303:13:1"
											},
											{
												"expression": {
													"id": 399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 397,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 383,
														"src": "3326:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 398,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 390,
														"src": "3336:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "3326:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 400,
												"nodeType": "ExpressionStatement",
												"src": "3326:17:1"
											},
											{
												"expression": {
													"id": 403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 401,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "3353:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "3138",
														"id": 402,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3365:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_18_by_1",
															"typeString": "int_const 18"
														},
														"value": "18"
													},
													"src": "3353:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 404,
												"nodeType": "ExpressionStatement",
												"src": "3353:14:1"
											}
										]
									},
									"documentation": {
										"id": 386,
										"nodeType": "StructuredDocumentation",
										"src": "2913:311:1",
										"text": " @dev Sets the values for {name} and {symbol}, initializes {decimals} with\n a default value of 18.\n To select a different value for {decimals}, use {_setupDecimals}.\n All three of these values are immutable: they can only be set once during\n construction."
									},
									"id": 406,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "name_",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "3242:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 387,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3242:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "symbol_",
												"nodeType": "VariableDeclaration",
												"scope": 406,
												"src": "3263:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 389,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3263:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3241:44:1"
									},
									"returnParameters": {
										"id": 392,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3293:0:1"
									},
									"scope": 857,
									"src": "3229:145:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 414,
										"nodeType": "Block",
										"src": "3499:29:1",
										"statements": [
											{
												"expression": {
													"id": 412,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 381,
													"src": "3516:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 411,
												"id": 413,
												"nodeType": "Return",
												"src": "3509:12:1"
											}
										]
									},
									"documentation": {
										"id": 407,
										"nodeType": "StructuredDocumentation",
										"src": "3380:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 415,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 408,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3452:2:1"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 415,
												"src": "3484:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 409,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3484:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3483:15:1"
									},
									"scope": 857,
									"src": "3439:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 423,
										"nodeType": "Block",
										"src": "3703:31:1",
										"statements": [
											{
												"expression": {
													"id": 421,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 383,
													"src": "3720:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 420,
												"id": 422,
												"nodeType": "Return",
												"src": "3713:14:1"
											}
										]
									},
									"documentation": {
										"id": 416,
										"nodeType": "StructuredDocumentation",
										"src": "3534:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 424,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 417,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3656:2:1"
									},
									"returnParameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 424,
												"src": "3688:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 418,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3688:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3687:15:1"
									},
									"scope": 857,
									"src": "3641:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 432,
										"nodeType": "Block",
										"src": "4413:33:1",
										"statements": [
											{
												"expression": {
													"id": 430,
													"name": "_decimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 385,
													"src": "4430:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 429,
												"id": 431,
												"nodeType": "Return",
												"src": "4423:16:1"
											}
										]
									},
									"documentation": {
										"id": 425,
										"nodeType": "StructuredDocumentation",
										"src": "3740:612:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5,05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is\n called.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 433,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4374:2:1"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 428,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 433,
												"src": "4406:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 427,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "4406:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4405:7:1"
									},
									"scope": 857,
									"src": "4357:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										866
									],
									"body": {
										"id": 442,
										"nodeType": "Block",
										"src": "4576:36:1",
										"statements": [
											{
												"expression": {
													"id": 440,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 379,
													"src": "4593:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 439,
												"id": 441,
												"nodeType": "Return",
												"src": "4586:19:1"
											}
										]
									},
									"documentation": {
										"id": 434,
										"nodeType": "StructuredDocumentation",
										"src": "4452:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 436,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4549:8:1"
									},
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4526:2:1"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 443,
												"src": "4567:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4567:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4566:9:1"
									},
									"scope": 857,
									"src": "4506:106:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										874
									],
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "4753:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 452,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 371,
														"src": "4770:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 454,
													"indexExpression": {
														"id": 453,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 446,
														"src": "4780:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4770:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 451,
												"id": 455,
												"nodeType": "Return",
												"src": "4763:25:1"
											}
										]
									},
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "4618:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 448,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4726:8:1"
									},
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "4689:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 445,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4689:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4688:17:1"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "4744:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 449,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4744:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4743:9:1"
									},
									"scope": 857,
									"src": "4670:125:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										884
									],
									"body": {
										"id": 477,
										"nodeType": "Block",
										"src": "5090:80:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 469,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "5110:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 470,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5110:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 471,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "5124:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 472,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 462,
															"src": "5135:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 468,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "5100:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5100:42:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 474,
												"nodeType": "ExpressionStatement",
												"src": "5100:42:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 475,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5159:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 467,
												"id": 476,
												"nodeType": "Return",
												"src": "5152:11:1"
											}
										]
									},
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "4801:192:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `recipient` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
									},
									"functionSelector": "a9059cbb",
									"id": 478,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 464,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5066:8:1"
									},
									"parameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "5016:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5016:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 462,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "5035:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5035:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5015:35:1"
									},
									"returnParameters": {
										"id": 467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 478,
												"src": "5084:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 465,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5084:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5083:6:1"
									},
									"scope": 857,
									"src": "4998:172:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										894
									],
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "5326:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 489,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 377,
															"src": "5343:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 491,
														"indexExpression": {
															"id": 490,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 481,
															"src": "5355:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "5343:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 493,
													"indexExpression": {
														"id": 492,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "5362:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5343:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 488,
												"id": 494,
												"nodeType": "Return",
												"src": "5336:34:1"
											}
										]
									},
									"documentation": {
										"id": 479,
										"nodeType": "StructuredDocumentation",
										"src": "5176:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 485,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5299:8:1"
									},
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "5247:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5247:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "5262:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5246:32:1"
									},
									"returnParameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 487,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "5317:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5317:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5316:9:1"
									},
									"scope": 857,
									"src": "5228:149:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										904
									],
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "5604:77:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 508,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "5623:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5623:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 510,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 499,
															"src": "5637:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 511,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 501,
															"src": "5646:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 507,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "5614:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 512,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5614:39:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 513,
												"nodeType": "ExpressionStatement",
												"src": "5614:39:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5670:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 506,
												"id": 515,
												"nodeType": "Return",
												"src": "5663:11:1"
											}
										]
									},
									"documentation": {
										"id": 497,
										"nodeType": "StructuredDocumentation",
										"src": "5383:127:1",
										"text": " @dev See {IERC20-approve}.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 517,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 503,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5580:8:1"
									},
									"parameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 499,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "5532:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 498,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5532:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 501,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "5549:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 500,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5549:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5531:33:1"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "5598:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 504,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5598:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5597:6:1"
									},
									"scope": 857,
									"src": "5515:166:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										916
									],
									"body": {
										"id": 554,
										"nodeType": "Block",
										"src": "6260:205:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 531,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "6280:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 532,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 522,
															"src": "6288:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 533,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 524,
															"src": "6299:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 530,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 678,
														"src": "6270:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 534,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6270:36:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 535,
												"nodeType": "ExpressionStatement",
												"src": "6270:36:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 537,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 520,
															"src": "6325:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 538,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "6333:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 539,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6333:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"arguments": [
																{
																	"id": 547,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 524,
																	"src": "6385:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e6365",
																	"id": 548,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6393:42:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	},
																	"value": "ERC20: transfer amount exceeds allowance"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_974d1b4421da69cc60b481194f0dad36a5bb4e23da810da7a7fb30cdba178330",
																		"typeString": "literal_string \"ERC20: transfer amount exceeds allowance\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 540,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 377,
																			"src": "6347:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 542,
																		"indexExpression": {
																			"id": 541,
																			"name": "sender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 520,
																			"src": "6359:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6347:19:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 545,
																	"indexExpression": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 543,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 946,
																			"src": "6367:10:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																				"typeString": "function () view returns (address payable)"
																			}
																		},
																		"id": 544,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6367:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6347:33:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 305,
																"src": "6347:37:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6347:89:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 536,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "6316:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 550,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6316:121:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 551,
												"nodeType": "ExpressionStatement",
												"src": "6316:121:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 552,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "6454:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 529,
												"id": 553,
												"nodeType": "Return",
												"src": "6447:11:1"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "5687:456:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n Requirements:\n - `sender` and `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`.\n - the caller must have allowance for ``sender``'s tokens of at least\n `amount`."
									},
									"functionSelector": "23b872dd",
									"id": 555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 526,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6236:8:1"
									},
									"parameters": {
										"id": 525,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 520,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "6170:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 519,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6170:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "6186:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 521,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6186:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 524,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "6205:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 523,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6205:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6169:51:1"
									},
									"returnParameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 528,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 555,
												"src": "6254:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 527,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6254:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6253:6:1"
									},
									"scope": 857,
									"src": "6148:317:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 582,
										"nodeType": "Block",
										"src": "6954:121:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 566,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "6973:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6973:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 568,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 558,
															"src": "6987:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 576,
																	"name": "addedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 560,
																	"src": "7035:10:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 569,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 377,
																			"src": "6996:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 572,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 570,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 946,
																				"src": "7008:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 571,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7008:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "6996:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 574,
																	"indexExpression": {
																		"id": 573,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 558,
																		"src": "7022:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "6996:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 575,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 181,
																"src": "6996:38:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 577,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6996:50:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 565,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "6964:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 578,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6964:83:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 579,
												"nodeType": "ExpressionStatement",
												"src": "6964:83:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7064:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 564,
												"id": 581,
												"nodeType": "Return",
												"src": "7057:11:1"
											}
										]
									},
									"documentation": {
										"id": 556,
										"nodeType": "StructuredDocumentation",
										"src": "6471:384:1",
										"text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "39509351",
									"id": 583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "increaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 561,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 558,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "6887:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 557,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6887:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 560,
												"mutability": "mutable",
												"name": "addedValue",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "6904:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 559,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6904:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6886:37:1"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "6948:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 562,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6948:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6947:6:1"
									},
									"scope": 857,
									"src": "6860:215:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 611,
										"nodeType": "Block",
										"src": "7661:167:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 594,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 946,
																"src": "7680:10:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																	"typeString": "function () view returns (address payable)"
																}
															},
															"id": 595,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7680:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 596,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 586,
															"src": "7694:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 604,
																	"name": "subtractedValue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 588,
																	"src": "7742:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
																	"id": 605,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7759:39:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	},
																	"value": "ERC20: decreased allowance below zero"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
																		"typeString": "literal_string \"ERC20: decreased allowance below zero\""
																	}
																],
																"expression": {
																	"baseExpression": {
																		"baseExpression": {
																			"id": 597,
																			"name": "_allowances",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 377,
																			"src": "7703:11:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 600,
																		"indexExpression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"id": 598,
																				"name": "_msgSender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 946,
																				"src": "7715:10:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																					"typeString": "function () view returns (address payable)"
																				}
																			},
																			"id": 599,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "7715:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address_payable",
																				"typeString": "address payable"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "7703:25:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 602,
																	"indexExpression": {
																		"id": 601,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 586,
																		"src": "7729:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "7703:34:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 603,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sub",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 305,
																"src": "7703:38:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
																}
															},
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7703:96:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 593,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 834,
														"src": "7671:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7671:129:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 608,
												"nodeType": "ExpressionStatement",
												"src": "7671:129:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 609,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "7817:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 592,
												"id": 610,
												"nodeType": "Return",
												"src": "7810:11:1"
											}
										]
									},
									"documentation": {
										"id": 584,
										"nodeType": "StructuredDocumentation",
										"src": "7081:476:1",
										"text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
									},
									"functionSelector": "a457c2d7",
									"id": 612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decreaseAllowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 586,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "7589:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 585,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7589:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "subtractedValue",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "7606:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 587,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7606:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7588:42:1"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 612,
												"src": "7655:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 590,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7655:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7654:6:1"
									},
									"scope": 857,
									"src": "7562:266:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 677,
										"nodeType": "Block",
										"src": "8389:443:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 628,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 623,
																"name": "sender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 615,
																"src": "8407:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 626,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8425:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 625,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8417:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 624,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8417:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 627,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8417:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8407:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
															"id": 629,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8429:39:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															},
															"value": "ERC20: transfer from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
																"typeString": "literal_string \"ERC20: transfer from the zero address\""
															}
														],
														"id": 622,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8399:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 630,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8399:70:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 631,
												"nodeType": "ExpressionStatement",
												"src": "8399:70:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 633,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 617,
																"src": "8487:9:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8508:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 635,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8500:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 634,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8500:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 637,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8500:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "8487:23:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
															"id": 639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8512:37:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															},
															"value": "ERC20: transfer to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
																"typeString": "literal_string \"ERC20: transfer to the zero address\""
															}
														],
														"id": 632,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8479:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8479:71:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 641,
												"nodeType": "ExpressionStatement",
												"src": "8479:71:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 643,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "8582:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 644,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "8590:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 645,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "8601:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 642,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "8561:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8561:47:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 647,
												"nodeType": "ExpressionStatement",
												"src": "8561:47:1"
											},
											{
												"expression": {
													"id": 658,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 648,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "8619:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 650,
														"indexExpression": {
															"id": 649,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "8629:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8619:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 655,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 619,
																"src": "8661:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
																"id": 656,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8669:40:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																},
																"value": "ERC20: transfer amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
																	"typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 651,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 371,
																	"src": "8639:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 653,
																"indexExpression": {
																	"id": 652,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 615,
																	"src": "8649:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8639:17:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 654,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 305,
															"src": "8639:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 657,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8639:71:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8619:91:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 659,
												"nodeType": "ExpressionStatement",
												"src": "8619:91:1"
											},
											{
												"expression": {
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 660,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "8720:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 662,
														"indexExpression": {
															"id": 661,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "8730:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "8720:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 667,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 619,
																"src": "8768:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 663,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 371,
																	"src": "8743:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 665,
																"indexExpression": {
																	"id": 664,
																	"name": "recipient",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 617,
																	"src": "8753:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "8743:20:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "8743:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8743:32:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8720:55:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 670,
												"nodeType": "ExpressionStatement",
												"src": "8720:55:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 672,
															"name": "sender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "8799:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 673,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 617,
															"src": "8807:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 674,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 619,
															"src": "8818:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 671,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "8790:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8790:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 676,
												"nodeType": "EmitStatement",
												"src": "8785:40:1"
											}
										]
									},
									"documentation": {
										"id": 613,
										"nodeType": "StructuredDocumentation",
										"src": "7834:463:1",
										"text": " @dev Moves tokens `amount` from `sender` to `recipient`.\n This is internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `sender` cannot be the zero address.\n - `recipient` cannot be the zero address.\n - `sender` must have a balance of at least `amount`."
									},
									"id": 678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "8321:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8321:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 617,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "8337:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 616,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8337:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 678,
												"src": "8356:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8356:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8320:51:1"
									},
									"returnParameters": {
										"id": 621,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8389:0:1"
									},
									"scope": 857,
									"src": "8302:530:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 732,
										"nodeType": "Block",
										"src": "9168:305:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 687,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 681,
																"src": "9186:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9205:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 689,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9197:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 688,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9197:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9197:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9186:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
															"id": 693,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9209:33:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															},
															"value": "ERC20: mint to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
																"typeString": "literal_string \"ERC20: mint to the zero address\""
															}
														],
														"id": 686,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9178:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9178:65:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 695,
												"nodeType": "ExpressionStatement",
												"src": "9178:65:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 699,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9283:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 698,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9275:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 697,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9275:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 700,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9275:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 701,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "9287:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 702,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "9296:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 696,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "9254:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9254:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 704,
												"nodeType": "ExpressionStatement",
												"src": "9254:49:1"
											},
											{
												"expression": {
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 705,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "9314:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 708,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 683,
																"src": "9346:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 706,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 379,
																"src": "9329:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 707,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "9329:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 709,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9329:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9314:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "9314:39:1"
											},
											{
												"expression": {
													"id": 721,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 712,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "9363:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 714,
														"indexExpression": {
															"id": 713,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "9373:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "9363:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 719,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 683,
																"src": "9407:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 715,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 371,
																	"src": "9384:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 717,
																"indexExpression": {
																	"id": 716,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 681,
																	"src": "9394:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "9384:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 718,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 181,
															"src": "9384:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 720,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9384:30:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9363:51:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 722,
												"nodeType": "ExpressionStatement",
												"src": "9363:51:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9446:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9438:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 724,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9438:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 727,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9438:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 728,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 681,
															"src": "9450:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 729,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 683,
															"src": "9459:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 723,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "9429:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 730,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9429:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 731,
												"nodeType": "EmitStatement",
												"src": "9424:42:1"
											}
										]
									},
									"documentation": {
										"id": 679,
										"nodeType": "StructuredDocumentation",
										"src": "8838:260:1",
										"text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `to` cannot be the zero address."
									},
									"id": 733,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 681,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "9118:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 680,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9118:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 683,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 733,
												"src": "9135:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 682,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9135:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9117:33:1"
									},
									"returnParameters": {
										"id": 685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9168:0:1"
									},
									"scope": 857,
									"src": "9103:370:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 788,
										"nodeType": "Block",
										"src": "9858:345:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 742,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 736,
																"src": "9876:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 745,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9895:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 744,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9887:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 743,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "9887:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 746,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9887:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "9876:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
															"id": 748,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9899:35:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															},
															"value": "ERC20: burn from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
																"typeString": "literal_string \"ERC20: burn from the zero address\""
															}
														],
														"id": 741,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "9868:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9868:67:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 750,
												"nodeType": "ExpressionStatement",
												"src": "9868:67:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 752,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "9967:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 755,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9984:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 754,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "9976:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 753,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "9976:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 756,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9976:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 757,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "9988:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 751,
														"name": "_beforeTokenTransfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 856,
														"src": "9946:20:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9946:49:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 759,
												"nodeType": "ExpressionStatement",
												"src": "9946:49:1"
											},
											{
												"expression": {
													"id": 770,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 760,
															"name": "_balances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 371,
															"src": "10006:9:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 762,
														"indexExpression": {
															"id": 761,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "10016:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 767,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "10050:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
																"id": 768,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10058:36:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																},
																"value": "ERC20: burn amount exceeds balance"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
																	"typeString": "literal_string \"ERC20: burn amount exceeds balance\""
																}
															],
															"expression": {
																"baseExpression": {
																	"id": 763,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 371,
																	"src": "10027:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 765,
																"indexExpression": {
																	"id": 764,
																	"name": "account",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 736,
																	"src": "10037:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "10027:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 766,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 305,
															"src": "10027:22:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
															}
														},
														"id": 769,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10027:68:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:89:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 771,
												"nodeType": "ExpressionStatement",
												"src": "10006:89:1"
											},
											{
												"expression": {
													"id": 777,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 772,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 379,
														"src": "10105:12:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 775,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 738,
																"src": "10137:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 773,
																"name": "_totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 379,
																"src": "10120:12:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 774,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 203,
															"src": "10120:16:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 776,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10120:24:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10105:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 778,
												"nodeType": "ExpressionStatement",
												"src": "10105:39:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 780,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "10168:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 783,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10185:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 782,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "10177:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 781,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "10177:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 784,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10177:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"id": 785,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 738,
															"src": "10189:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 779,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 925,
														"src": "10159:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10159:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 787,
												"nodeType": "EmitStatement",
												"src": "10154:42:1"
											}
										]
									},
									"documentation": {
										"id": 734,
										"nodeType": "StructuredDocumentation",
										"src": "9479:309:1",
										"text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
									},
									"id": 789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 739,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 736,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "9808:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 735,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9808:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 738,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "9825:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 737,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9825:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9807:33:1"
									},
									"returnParameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9858:0:1"
									},
									"scope": 857,
									"src": "9793:410:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 833,
										"nodeType": "Block",
										"src": "10709:257:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 805,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 800,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "10727:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 803,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10744:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 802,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10736:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 801,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10736:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 804,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10736:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "10727:19:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10748:38:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															},
															"value": "ERC20: approve from the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
																"typeString": "literal_string \"ERC20: approve from the zero address\""
															}
														],
														"id": 799,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10719:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 807,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10719:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 808,
												"nodeType": "ExpressionStatement",
												"src": "10719:68:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 815,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 810,
																"name": "spender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 794,
																"src": "10805:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 813,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10824:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 812,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10816:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 811,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "10816:7:1",
																		"typeDescriptions": {}
																	}
																},
																"id": 814,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10816:10:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "10805:21:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
															"id": 816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "10828:36:1",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															},
															"value": "ERC20: approve to the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
																"typeString": "literal_string \"ERC20: approve to the zero address\""
															}
														],
														"id": 809,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "10797:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10797:68:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 818,
												"nodeType": "ExpressionStatement",
												"src": "10797:68:1"
											},
											{
												"expression": {
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 819,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 377,
																"src": "10876:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 822,
															"indexExpression": {
																"id": 820,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 792,
																"src": "10888:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10876:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 823,
														"indexExpression": {
															"id": 821,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "10895:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10876:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 824,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 796,
														"src": "10906:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10876:36:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 826,
												"nodeType": "ExpressionStatement",
												"src": "10876:36:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 828,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 792,
															"src": "10936:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 829,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 794,
															"src": "10943:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 830,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 796,
															"src": "10952:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 827,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "10927:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 831,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10927:32:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 832,
												"nodeType": "EmitStatement",
												"src": "10922:37:1"
											}
										]
									},
									"documentation": {
										"id": 790,
										"nodeType": "StructuredDocumentation",
										"src": "10209:412:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
									},
									"id": 834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "10644:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 791,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10644:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "10659:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 793,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10659:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 834,
												"src": "10676:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10676:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10643:48:1"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10709:0:1"
									},
									"scope": 857,
									"src": "10626:340:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "11347:38:1",
										"statements": [
											{
												"expression": {
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 840,
														"name": "_decimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 385,
														"src": "11357:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 841,
														"name": "decimals_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 837,
														"src": "11369:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "11357:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 843,
												"nodeType": "ExpressionStatement",
												"src": "11357:21:1"
											}
										]
									},
									"documentation": {
										"id": 835,
										"nodeType": "StructuredDocumentation",
										"src": "10972:312:1",
										"text": " @dev Sets {decimals} to a value other than the default one of 18.\n WARNING: This function should only be called from the constructor. Most\n applications that interact with token contracts will not expect\n {decimals} to ever change, and may work incorrectly if it does."
									},
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupDecimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 838,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 837,
												"mutability": "mutable",
												"name": "decimals_",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "11313:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 836,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "11313:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11312:17:1"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "11347:0:1"
									},
									"scope": 857,
									"src": "11289:96:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "12061:3:1",
										"statements": []
									},
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "11391:576:1",
										"text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be to transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
									},
									"id": 856,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_beforeTokenTransfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "12002:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12002:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "12016:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "12016:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 856,
												"src": "12028:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12028:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12001:42:1"
									},
									"returnParameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12061:0:1"
									},
									"scope": 857,
									"src": "11972:92:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 858,
							"src": "2592:9474:1"
						}
					],
					"src": "1304:10763:1"
				},
				"id": 1
			},
			"Umbra-Cash/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "Umbra-Cash/@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							935
						]
					},
					"id": 936,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 859,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1304:31:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 860,
								"nodeType": "StructuredDocumentation",
								"src": "1337:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 935,
							"linearizedBaseContracts": [
								935
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 861,
										"nodeType": "StructuredDocumentation",
										"src": "1431:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 866,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1522:2:2"
									},
									"returnParameters": {
										"id": 865,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 864,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 866,
												"src": "1548:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 863,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1548:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1547:9:2"
									},
									"scope": 935,
									"src": "1502:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 867,
										"nodeType": "StructuredDocumentation",
										"src": "1563:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 874,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 870,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 869,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "1659:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1659:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1658:17:2"
									},
									"returnParameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "1699:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 871,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1699:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1698:9:2"
									},
									"scope": 935,
									"src": "1640:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 875,
										"nodeType": "StructuredDocumentation",
										"src": "1714:209:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 884,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "1946:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1946:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "1965:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1965:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1945:35:2"
									},
									"returnParameters": {
										"id": 883,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 882,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 884,
												"src": "1999:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 881,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1999:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1998:6:2"
									},
									"scope": 935,
									"src": "1928:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 885,
										"nodeType": "StructuredDocumentation",
										"src": "2011:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 894,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 887,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "2299:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2299:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "2314:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 888,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2314:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2298:32:2"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 892,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 894,
												"src": "2354:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 891,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2354:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2353:9:2"
									},
									"scope": 935,
									"src": "2280:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "2369:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 904,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 897,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "3033:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 896,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 899,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "3050:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3050:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3032:33:2"
									},
									"returnParameters": {
										"id": 903,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 904,
												"src": "3084:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 901,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3084:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3083:6:2"
									},
									"scope": 935,
									"src": "3016:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "3096:296:2",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 916,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "3419:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 906,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3419:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 909,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "3435:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 908,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3435:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 911,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "3454:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 910,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3454:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3418:51:2"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 916,
												"src": "3488:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 913,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3488:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3487:6:2"
									},
									"scope": 935,
									"src": "3397:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 917,
										"nodeType": "StructuredDocumentation",
										"src": "3500:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 925,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "3678:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 918,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3678:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 921,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "3700:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3700:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 923,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "3720:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3720:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3677:57:2"
									},
									"src": "3663:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 926,
										"nodeType": "StructuredDocumentation",
										"src": "3741:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 934,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "3909:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3909:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "3932:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3932:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 934,
												"src": "3957:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3957:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3908:63:2"
									},
									"src": "3894:78:2"
								}
							],
							"scope": 936,
							"src": "1408:2566:2"
						}
					],
					"src": "1304:2671:2"
				},
				"id": 2
			},
			"Umbra-Cash/@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "Umbra-Cash/@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							958
						]
					},
					"id": 959,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 937,
							"literals": [
								"solidity",
								">=",
								"0.6",
								".0",
								"<",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1304:31:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 958,
							"linearizedBaseContracts": [
								958
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "1939:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 942,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1956:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1956:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 941,
												"id": 944,
												"nodeType": "Return",
												"src": "1949:17:3"
											}
										]
									},
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 938,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1888:2:3"
									},
									"returnParameters": {
										"id": 941,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "1922:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1922:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1921:17:3"
									},
									"scope": 958,
									"src": "1869:104:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 956,
										"nodeType": "Block",
										"src": "2044:165:3",
										"statements": [
											{
												"expression": {
													"id": 951,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4294967268,
													"src": "2054:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$958",
														"typeString": "contract Context"
													}
												},
												"id": 952,
												"nodeType": "ExpressionStatement",
												"src": "2054:4:3"
											},
											{
												"expression": {
													"expression": {
														"id": 953,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2194:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 954,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "2194:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 950,
												"id": 955,
												"nodeType": "Return",
												"src": "2187:15:3"
											}
										]
									},
									"id": 957,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 947,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:3"
									},
									"returnParameters": {
										"id": 950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 949,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "2030:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 948,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2030:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:14:3"
									},
									"scope": 958,
									"src": "1979:230:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 959,
							"src": "1837:374:3"
						}
					],
					"src": "1304:908:3"
				},
				"id": 3
			},
			"Umbra-Cash/contracts/TestToken.sol": {
				"ast": {
					"absolutePath": "Umbra-Cash/contracts/TestToken.sol",
					"exportedSymbols": {
						"Context": [
							958
						],
						"ERC20": [
							857
						],
						"IERC20": [
							935
						],
						"SafeMath": [
							354
						],
						"TestToken": [
							989
						]
					},
					"id": 990,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 960,
							"literals": [
								"solidity",
								"^",
								"0.7",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "1304:23:4"
						},
						{
							"absolutePath": "Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "Umbra-Cash/@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 961,
							"nodeType": "ImportDirective",
							"scope": 990,
							"sourceUnit": 858,
							"src": "1329:66:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 962,
										"name": "ERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 857,
										"src": "1419:5:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ERC20_$857",
											"typeString": "contract ERC20"
										}
									},
									"id": 963,
									"nodeType": "InheritanceSpecifier",
									"src": "1419:5:4"
								}
							],
							"contractDependencies": [
								857,
								935,
								958
							],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 989,
							"linearizedBaseContracts": [
								989,
								857,
								935,
								958
							],
							"name": "TestToken",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 974,
										"nodeType": "Block",
										"src": "1503:2:4",
										"statements": []
									},
									"id": 975,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 970,
													"name": "name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 965,
													"src": "1489:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												{
													"id": 971,
													"name": "symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 967,
													"src": "1495:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												}
											],
											"id": 972,
											"modifierName": {
												"id": 969,
												"name": "ERC20",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 857,
												"src": "1483:5:4",
												"typeDescriptions": {
													"typeIdentifier": "t_type$_t_contract$_ERC20_$857_$",
													"typeString": "type(contract ERC20)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1483:19:4"
										}
									],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 965,
												"mutability": "mutable",
												"name": "name",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "1441:18:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 964,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1441:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"mutability": "mutable",
												"name": "symbol",
												"nodeType": "VariableDeclaration",
												"scope": 975,
												"src": "1461:20:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 966,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1461:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1440:42:4"
									},
									"returnParameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1503:0:4"
									},
									"scope": 989,
									"src": "1429:76:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 987,
										"nodeType": "Block",
										"src": "1563:33:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 983,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 977,
															"src": "1575:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 984,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "1584:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 982,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 733,
														"src": "1569:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 985,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1569:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 986,
												"nodeType": "ExpressionStatement",
												"src": "1569:22:4"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 988,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 977,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "1523:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 976,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1523:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"scope": 988,
												"src": "1540:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 978,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1540:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1522:33:4"
									},
									"returnParameters": {
										"id": 981,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1563:0:4"
									},
									"scope": 989,
									"src": "1509:87:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 990,
							"src": "1397:201:4"
						}
					],
					"src": "1304:295:4"
				},
				"id": 4
			}
		}
	}
}