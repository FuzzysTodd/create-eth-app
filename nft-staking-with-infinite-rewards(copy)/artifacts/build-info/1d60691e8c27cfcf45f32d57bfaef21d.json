{
	"id": "1d60691e8c27cfcf45f32d57bfaef21d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.27",
	"solcLongVersion": "0.8.27+commit.40a35a09",
	"input": {
		"language": "Solidity",
		"sources": {
			"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol": {
				"content": "/*\r\n    \r\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\r\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\r\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\r\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\r\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\r\n  \r\n  Find any smart contract, and build your project faster: https://www.cookbook.dev\r\n  Twitter: https://twitter.com/cookbook_dev\r\n  Discord: https://discord.gg/cookbookdev\r\n  \r\n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/nft-staking-with-infinite-rewards?utm=code\r\n  */\r\n  \r\n  // SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol\";\r\nimport \"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\nimport \"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\";\r\n\r\n/**\r\n * @title NFT Staking with Infinite Rewards\r\n * @author Breakthrough Labs Inc.\r\n * @notice Staking, NFT, ERC721\r\n * @custom:version 1.0.0\r\n * @custom:address 51\r\n * @custom:default-precision 0\r\n * @custom:simple-description NFT staking contract that rewards stakers with an exact number of ERC20 tokens per day.\r\n * @dev NFT staking contract that rewards stakers with an exact number of ERC20 tokens per day. On deployment, the owner specifies a daily reward rate,\r\n * and an address that tokens will be pulled from. Neither of these can be changed. Each staked NFT receives the same number of tokens every day. The per NFT\r\n * rate stays the same even when the number of staked NFTs increases/decreases.\r\n *\r\n * A common usecase is for blockchain-based games, where each NFT rewards a certain number of lives per day.\r\n *\r\n */\r\ncontract NFTStakingPerToken is Context, IERC721Receiver {\r\n    IERC721 public nft;\r\n    IERC20 public rewardToken;\r\n    address public rewardWallet;\r\n    /// @custom:precision 18\r\n    uint256 public rewardPerTokenPerDay;\r\n\r\n    mapping(uint256 => address) private stakedTokens;\r\n    mapping(address => uint256) public balanceOf;\r\n    mapping(address => uint256) public lastUpdateTime;\r\n    mapping(address => uint256) private reward;\r\n\r\n    /**\r\n     * @param nftAddress  Staked NFT Address\r\n     * @param rewardTokenAddress Reward Token Address\r\n     * @param rewardWalletAddress Wallet that holds rewards to be paid out\r\n     * @param rewardRate # of tokens per staked NFT per day | precision:18\r\n     */\r\n    constructor(\r\n        address nftAddress,\r\n        address rewardTokenAddress,\r\n        address rewardWalletAddress,\r\n        uint256 rewardRate\r\n    ) {\r\n        nft = IERC721(nftAddress);\r\n        rewardToken = IERC20(rewardTokenAddress);\r\n        rewardWallet = rewardWalletAddress;\r\n        rewardPerTokenPerDay = rewardRate;\r\n    }\r\n\r\n    modifier update(address account) {\r\n        reward[account] = available(account);\r\n        lastUpdateTime[account] = block.timestamp;\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev returns the number of reward tokens available for an address\r\n     * @param account account\r\n     */\r\n    function available(address account) public view returns (uint256) {\r\n        uint256 timeElapsed = block.timestamp - lastUpdateTime[account];\r\n        uint256 earned = (balanceOf[account] *\r\n            timeElapsed *\r\n            rewardPerTokenPerDay) / 86400;\r\n        return reward[account] + earned;\r\n    }\r\n\r\n    /**\r\n     * @dev stakes a specific tokenID\r\n     * @param tokenId tokenId\r\n     */\r\n    function stake(uint256 tokenId) external {\r\n        nft.safeTransferFrom(_msgSender(), address(this), tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev withdraws a token from the staking contract\r\n     * @param tokenId tokenId\r\n     */\r\n    function withdraw(uint256 tokenId) external update(_msgSender()) {\r\n        require(stakedTokens[tokenId] == _msgSender(), \"Token is not staked.\");\r\n        delete stakedTokens[tokenId];\r\n        balanceOf[_msgSender()]--;\r\n        nft.transferFrom(address(this), _msgSender(), tokenId);\r\n    }\r\n\r\n    /**\r\n     * @dev redeems all of a user's reward tokens.\r\n     */\r\n    function redeem() external update(_msgSender()) {\r\n        uint256 amount = reward[_msgSender()];\r\n        require(amount > 0, \"Nothing to redeem\");\r\n        reward[_msgSender()] = 0;\r\n        rewardToken.transferFrom(rewardWallet, _msgSender(), amount);\r\n    }\r\n\r\n    function onERC721Received(\r\n        address,\r\n        address from,\r\n        uint256 tokenId,\r\n        bytes calldata\r\n    ) external update(from) returns (bytes4) {\r\n        stakedTokens[tokenId] = from;\r\n        balanceOf[from]++;\r\n        return IERC721Receiver.onERC721Received.selector;\r\n    }\r\n}\r\n\r\n"
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/nft-staking-with-infinite-rewards?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC721/IERC721Receiver.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @title ERC721 token receiver interface\n * @dev Interface for any contract that wants to support safeTransfers\n * from ERC721 asset contracts.\n */\ninterface IERC721Receiver {\n    /**\n     * @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n     * by `operator` from `from`, this function is called.\n     *\n     * It must return its Solidity selector to confirm the token transfer.\n     * If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n     *\n     * The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\n     */\n    function onERC721Received(\n        address operator,\n        address from,\n        uint256 tokenId,\n        bytes calldata data\n    ) external returns (bytes4);\n}\n"
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/nft-staking-with-infinite-rewards?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/nft-staking-with-infinite-rewards?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/nft-staking-with-infinite-rewards?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "/*\n    \n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██    ██████  ███████ ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██      ██    ██\n  ██      ██    ██ ██    ██ █████   ██████  ██    ██ ██    ██ █████      ██   ██ █████   ██    ██\n  ██      ██    ██ ██    ██ ██  ██  ██   ██ ██    ██ ██    ██ ██  ██     ██   ██ ██       ██  ██\n   ██████  ██████   ██████  ██   ██ ██████   ██████   ██████  ██   ██ ██ ██████  ███████   ████\n  \n  Find any smart contract, and build your project faster: https://www.cookbook.dev\n  Twitter: https://twitter.com/cookbook_dev\n  Discord: https://discord.gg/cookbookdev\n  \n  Find this contract on Cookbook: https://www.cookbook.dev/contracts/nft-staking-with-infinite-rewards?utm=code\n  */\n  \n  // SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol": {
				"NFTStakingPerToken": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "nftAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "rewardTokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "rewardWalletAddress",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "rewardRate",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "available",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "lastUpdateTime",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nft",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "redeem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardPerTokenPerDay",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "rewardWallet",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"author": "Breakthrough Labs Inc.",
						"custom:address": "51",
						"custom:default-precision": "0",
						"custom:simple-description": "NFT staking contract that rewards stakers with an exact number of ERC20 tokens per day.",
						"custom:version": "1.0.0",
						"details": "NFT staking contract that rewards stakers with an exact number of ERC20 tokens per day. On deployment, the owner specifies a daily reward rate, and an address that tokens will be pulled from. Neither of these can be changed. Each staked NFT receives the same number of tokens every day. The per NFT rate stays the same even when the number of staked NFTs increases/decreases. A common usecase is for blockchain-based games, where each NFT rewards a certain number of lives per day.",
						"kind": "dev",
						"methods": {
							"available(address)": {
								"details": "returns the number of reward tokens available for an address",
								"params": {
									"account": "account"
								}
							},
							"constructor": {
								"params": {
									"nftAddress": "Staked NFT Address",
									"rewardRate": "# of tokens per staked NFT per day | precision:18",
									"rewardTokenAddress": "Reward Token Address",
									"rewardWalletAddress": "Wallet that holds rewards to be paid out"
								}
							},
							"redeem()": {
								"details": "redeems all of a user's reward tokens."
							},
							"stake(uint256)": {
								"details": "stakes a specific tokenID",
								"params": {
									"tokenId": "tokenId"
								}
							},
							"withdraw(uint256)": {
								"details": "withdraws a token from the staking contract",
								"params": {
									"tokenId": "tokenId"
								}
							}
						},
						"stateVariables": {
							"rewardPerTokenPerDay": {
								"custom:precision": "18"
							}
						},
						"title": "NFT Staking with Infinite Rewards",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":2582:5500  contract NFTStakingPerToken is Context, IERC721Receiver {... */\n  mstore(0x40, 0x80)\n    /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3294:3630  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  add\n  0x40\n  dup2\n  swap1\n  mstore\n  tag_2\n  swap2\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3457:3460  nft */\n  0x00\n    /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3457:3482  nft = IERC721(nftAddress) */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  swap1\n  dup2\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap7\n  dup8\n  and\n  or\n  swap1\n  swap2\n  sstore\n  0x01\n    /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3493:3533  rewardToken = IERC20(rewardTokenAddress) */\n  dup1\n  sload\n  dup3\n  and\n  swap5\n  dup7\n  and\n  swap5\n  swap1\n  swap5\n  or\n  swap1\n  swap4\n  sstore\n    /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3544:3556  rewardWallet */\n  0x02\n    /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3544:3578  rewardWallet = rewardWalletAddress */\n  dup1\n  sload\n  swap1\n  swap4\n  and\n  swap2\n  swap1\n  swap4\n  and\n  or\n  swap1\n  sstore\n    /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3589:3609  rewardPerTokenPerDay */\n  0x03\n    /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3589:3622  rewardPerTokenPerDay = rewardRate */\n  sstore\n    /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":2582:5500  contract NFTStakingPerToken is Context, IERC721Receiver {... */\n  jump(tag_8)\n    /* \"#utility.yul\":14:191   */\ntag_7:\n    /* \"#utility.yul\":93:106   */\n  dup1\n  mload\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"#utility.yul\":135:166   */\n  dup2\n  and\n    /* \"#utility.yul\":125:167   */\n  dup2\n  eq\n    /* \"#utility.yul\":115:185   */\n  tag_10\n  jumpi\n    /* \"#utility.yul\":181:182   */\n  0x00\n    /* \"#utility.yul\":178:179   */\n  0x00\n    /* \"#utility.yul\":171:183   */\n  revert\n    /* \"#utility.yul\":115:185   */\ntag_10:\n    /* \"#utility.yul\":14:191   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":196:636   */\ntag_3:\n    /* \"#utility.yul\":293:299   */\n  0x00\n    /* \"#utility.yul\":301:307   */\n  0x00\n    /* \"#utility.yul\":309:315   */\n  0x00\n    /* \"#utility.yul\":317:323   */\n  0x00\n    /* \"#utility.yul\":370:373   */\n  0x80\n    /* \"#utility.yul\":358:367   */\n  dup6\n    /* \"#utility.yul\":349:356   */\n  dup8\n    /* \"#utility.yul\":345:368   */\n  sub\n    /* \"#utility.yul\":341:374   */\n  slt\n    /* \"#utility.yul\":338:391   */\n  iszero\n  tag_12\n  jumpi\n    /* \"#utility.yul\":387:388   */\n  0x00\n    /* \"#utility.yul\":384:385   */\n  0x00\n    /* \"#utility.yul\":377:389   */\n  revert\n    /* \"#utility.yul\":338:391   */\ntag_12:\n    /* \"#utility.yul\":410:450   */\n  tag_13\n    /* \"#utility.yul\":440:449   */\n  dup6\n    /* \"#utility.yul\":410:450   */\n  tag_7\n  jump\t// in\ntag_13:\n    /* \"#utility.yul\":400:450   */\n  swap4\n  pop\n    /* \"#utility.yul\":469:518   */\n  tag_14\n    /* \"#utility.yul\":514:516   */\n  0x20\n    /* \"#utility.yul\":503:512   */\n  dup7\n    /* \"#utility.yul\":499:517   */\n  add\n    /* \"#utility.yul\":469:518   */\n  tag_7\n  jump\t// in\ntag_14:\n    /* \"#utility.yul\":459:518   */\n  swap3\n  pop\n    /* \"#utility.yul\":537:586   */\n  tag_15\n    /* \"#utility.yul\":582:584   */\n  0x40\n    /* \"#utility.yul\":571:580   */\n  dup7\n    /* \"#utility.yul\":567:585   */\n  add\n    /* \"#utility.yul\":537:586   */\n  tag_7\n  jump\t// in\ntag_15:\n    /* \"#utility.yul\":626:628   */\n  0x60\n    /* \"#utility.yul\":611:629   */\n  swap6\n  swap1\n  swap6\n  add\n    /* \"#utility.yul\":605:630   */\n  mload\n    /* \"#utility.yul\":196:636   */\n  swap4\n  swap7\n  swap3\n  swap6\n  pop\n  pop\n  pop\n  jump\t// out\ntag_8:\n    /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":2582:5500  contract NFTStakingPerToken is Context, IERC721Receiver {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":2582:5500  contract NFTStakingPerToken is Context, IERC721Receiver {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x47ccca02\n      gt\n      tag_14\n      jumpi\n      dup1\n      0x47ccca02\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xbe040fb0\n      eq\n      tag_11\n      jumpi\n      dup1\n      0xf7c618c1\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xfb75b2c7\n      eq\n      tag_13\n      jumpi\n      revert(0x00, 0x00)\n    tag_14:\n      dup1\n      0x10098ad5\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x150b7a02\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2ce9aead\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2d6a1fa6\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_7\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3921:4230  function available(address account) public view returns (uint256) {... */\n    tag_3:\n      tag_15\n      tag_16\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      mload(0x40)\n        /* \"#utility.yul\":529:554   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":517:519   */\n      0x20\n        /* \"#utility.yul\":502:520   */\n      add\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3921:4230  function available(address account) public view returns (uint256) {... */\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5199:5497  function onERC721Received(... */\n    tag_4:\n      tag_21\n      tag_22\n      calldatasize\n      0x04\n      tag_23\n      jump\t// in\n    tag_22:\n      tag_24\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":1581:1614   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":1563:1615   */\n      dup2\n      mstore\n        /* \"#utility.yul\":1551:1553   */\n      0x20\n        /* \"#utility.yul\":1536:1554   */\n      add\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5199:5497  function onERC721Received(... */\n      tag_19\n        /* \"#utility.yul\":1419:1621   */\n      jump\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":2916:2965  mapping(address => uint256) public lastUpdateTime */\n    tag_5:\n      tag_15\n      tag_28\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_28:\n      mstore(0x20, 0x06)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":2766:2801  uint256 public rewardPerTokenPerDay */\n    tag_6:\n      tag_15\n      sload(0x03)\n      dup2\n      jump\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4558:4852  function withdraw(uint256 tokenId) external update(_msgSender()) {... */\n    tag_7:\n      tag_34\n      tag_35\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_35:\n      tag_37\n      jump\t// in\n    tag_34:\n      stop\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":2645:2663  IERC721 public nft */\n    tag_8:\n      sload(0x00)\n      tag_38\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_38:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2036:2068   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2018:2069   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2006:2008   */\n      0x20\n        /* \"#utility.yul\":1991:2009   */\n      add\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":2645:2663  IERC721 public nft */\n      tag_19\n        /* \"#utility.yul\":1857:2075   */\n      jump\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":2865:2909  mapping(address => uint256) public balanceOf */\n    tag_9:\n      tag_15\n      tag_43\n      calldatasize\n      0x04\n      tag_17\n      jump\t// in\n    tag_43:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4326:4444  function stake(uint256 tokenId) external {... */\n    tag_10:\n      tag_34\n      tag_47\n      calldatasize\n      0x04\n      tag_36\n      jump\t// in\n    tag_47:\n      tag_48\n      jump\t// in\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4930:5191  function redeem() external update(_msgSender()) {... */\n    tag_11:\n      tag_34\n      tag_50\n      jump\t// in\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":2670:2695  IERC20 public rewardToken */\n    tag_12:\n      sload(0x01)\n      tag_38\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":2702:2729  address public rewardWallet */\n    tag_13:\n      sload(0x02)\n      tag_38\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3921:4230  function available(address account) public view returns (uint256) {... */\n    tag_18:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4038:4061  lastUpdateTime[account] */\n      dup2\n      and\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3978:3985  uint256 */\n      0x00\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4038:4061  lastUpdateTime[account] */\n      swap1\n      dup2\n      mstore\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4038:4052  lastUpdateTime */\n      0x06\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4038:4061  lastUpdateTime[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3978:3985  uint256 */\n      dup2\n      swap1\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4020:4061  block.timestamp - lastUpdateTime[account] */\n      tag_60\n      swap1\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4020:4035  block.timestamp */\n      timestamp\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4020:4061  block.timestamp - lastUpdateTime[account] */\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4151:4171  rewardPerTokenPerDay */\n      sload(0x03)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4090:4108  balanceOf[account] */\n      dup6\n      and\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4072:4086  uint256 earned */\n      0x00\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4090:4108  balanceOf[account] */\n      swap1\n      dup2\n      mstore\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4090:4099  balanceOf */\n      0x05\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4090:4108  balanceOf[account] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3998:4061  uint256 timeElapsed = block.timestamp - lastUpdateTime[account] */\n      swap3\n      swap4\n      pop\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4072:4086  uint256 earned */\n      swap2\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4175:4180  86400 */\n      0x015180\n      swap2\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4151:4171  rewardPerTokenPerDay */\n      swap1\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4090:4135  balanceOf[account] *... */\n      tag_62\n      swap1\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3998:4061  uint256 timeElapsed = block.timestamp - lastUpdateTime[account] */\n      dup6\n      swap1\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4090:4135  balanceOf[account] *... */\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4090:4171  balanceOf[account] *... */\n      tag_64\n      swap2\n      swap1\n      tag_63\n      jump\t// in\n    tag_64:\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4089:4180  (balanceOf[account] *... */\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4198:4213  reward[account] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4198:4204  reward */\n      0x07\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4198:4213  reward[account] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4072:4180  uint256 earned = (balanceOf[account] *... */\n      swap1\n      swap2\n      pop\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4198:4222  reward[account] + earned */\n      tag_67\n      swap1\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4072:4180  uint256 earned = (balanceOf[account] *... */\n      dup3\n      swap1\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4198:4222  reward[account] + earned */\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4191:4222  return reward[account] + earned */\n      swap5\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3921:4230  function available(address account) public view returns (uint256) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5199:5497  function onERC721Received(... */\n    tag_24:\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5355:5361  bytes4 */\n      0x00\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5340:5344  from */\n      dup5\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3700:3718  available(account) */\n      tag_70\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3710:3717  account */\n      dup2\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3700:3709  available */\n      tag_18\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3700:3718  available(account) */\n      jump\t// in\n    tag_70:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3682:3697  reward[account] */\n      dup3\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3682:3688  reward */\n      0x07\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3682:3697  reward[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3682:3718  reward[account] = available(account) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3729:3743  lastUpdateTime */\n      0x06\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3729:3752  lastUpdateTime[account] */\n      dup2\n      mstore\n      dup4\n      dup3\n      keccak256\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3755:3770  block.timestamp */\n      timestamp\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3729:3770  lastUpdateTime[account] = block.timestamp */\n      swap1\n      sstore\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5374:5395  stakedTokens[tokenId] */\n      dup9\n      dup3\n      mstore\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5374:5386  stakedTokens */\n      0x04\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5374:5395  stakedTokens[tokenId] */\n      dup2\n      mstore\n      dup4\n      dup3\n      keccak256\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5374:5402  stakedTokens[tokenId] = from */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap4\n      dup12\n      and\n      swap4\n      dup5\n      or\n      swap1\n      sstore\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5413:5428  balanceOf[from] */\n      swap2\n      dup2\n      mstore\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5413:5422  balanceOf */\n      0x05\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5413:5428  balanceOf[from] */\n      swap1\n      swap2\n      mstore\n      swap1\n      dup2\n      keccak256\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5413:5430  balanceOf[from]++ */\n      dup1\n      sload\n      swap2\n      tag_72\n      dup4\n      tag_73\n      jump\t// in\n    tag_72:\n      swap1\n      swap2\n      sstore\n      pop\n      shl(0xe1, 0x0a85bd01)\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5448:5489  IERC721Receiver.onERC721Received.selector */\n      swap9\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5199:5497  function onERC721Received(... */\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4558:4852  function withdraw(uint256 tokenId) external update(_msgSender()) {... */\n    tag_37:\n        /* \"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol\":2013:2023  msg.sender */\n      caller\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3700:3718  available(account) */\n      tag_77\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3710:3717  account */\n      dup2\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3700:3709  available */\n      tag_18\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3700:3718  available(account) */\n      jump\t// in\n    tag_77:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3682:3697  reward[account] */\n      dup3\n      dup2\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3682:3688  reward */\n      0x07\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3682:3697  reward[account] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3682:3718  reward[account] = available(account) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3729:3743  lastUpdateTime */\n      0x06\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3729:3752  lastUpdateTime[account] */\n      dup2\n      mstore\n      dup4\n      dup3\n      keccak256\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3755:3770  block.timestamp */\n      timestamp\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3729:3770  lastUpdateTime[account] = block.timestamp */\n      swap1\n      sstore\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4642:4663  stakedTokens[tokenId] */\n      dup6\n      dup3\n      mstore\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4642:4654  stakedTokens */\n      0x04\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4642:4663  stakedTokens[tokenId] */\n      swap1\n      mstore\n      swap2\n      swap1\n      swap2\n      keccak256\n      sload\n      and\n        /* \"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol\":2013:2023  msg.sender */\n      caller\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4642:4679  stakedTokens[tokenId] == _msgSender() */\n      eq\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4634:4704  require(stakedTokens[tokenId] == _msgSender(), \"Token is not staked.\") */\n      tag_80\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":3642:3644   */\n      0x20\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4634:4704  require(stakedTokens[tokenId] == _msgSender(), \"Token is not staked.\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":3624:3645   */\n      mstore\n        /* \"#utility.yul\":3681:3683   */\n      0x14\n        /* \"#utility.yul\":3661:3679   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":3654:3684   */\n      mstore\n      shl(0x61, 0x2a37b5b2b71034b9903737ba1039ba30b5b2b217)\n        /* \"#utility.yul\":3700:3718   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":3693:3743   */\n      mstore\n        /* \"#utility.yul\":3760:3778   */\n      0x64\n      add\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4634:4704  require(stakedTokens[tokenId] == _msgSender(), \"Token is not staked.\") */\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_80:\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4722:4743  stakedTokens[tokenId] */\n      0x00\n      dup3\n      dup2\n      mstore\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4722:4734  stakedTokens */\n      0x04\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4722:4743  stakedTokens[tokenId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4715:4743  delete stakedTokens[tokenId] */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol\":2013:2023  msg.sender */\n      caller\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4754:4777  balanceOf[_msgSender()] */\n      dup4\n      mstore\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4754:4763  balanceOf */\n      0x05\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4754:4777  balanceOf[_msgSender()] */\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4754:4779  balanceOf[_msgSender()]-- */\n      dup1\n      sload\n      swap2\n      tag_84\n      dup4\n      tag_85\n      jump\t// in\n    tag_84:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4790:4793  nft */\n      0x00\n      dup1\n      sload\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4790:4844  nft.transferFrom(address(this), _msgSender(), tokenId) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4815:4819  this */\n      address\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4790:4844  nft.transferFrom(address(this), _msgSender(), tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4132:4183   */\n      mstore\n        /* \"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol\":2013:2023  msg.sender */\n      caller\n        /* \"#utility.yul\":4199:4217   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4192:4252   */\n      mstore\n        /* \"#utility.yul\":4268:4286   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":4261:4295   */\n      dup7\n      swap1\n      mstore\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4790:4844  nft.transferFrom(address(this), _msgSender(), tokenId) */\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4790:4793  nft */\n      swap1\n      swap3\n      and\n      swap3\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4790:4806  nft.transferFrom */\n      0x23b872dd\n      swap3\n        /* \"#utility.yul\":4105:4123   */\n      0x64\n      dup1\n      dup5\n      add\n      swap4\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4790:4844  nft.transferFrom(address(this), _msgSender(), tokenId) */\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4790:4793  nft */\n      dup4\n      dup8\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4790:4844  nft.transferFrom(address(this), _msgSender(), tokenId) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_89\n      jumpi\n      revert(0x00, 0x00)\n    tag_89:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_91\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_91:\n      pop\n      pop\n      pop\n      pop\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4558:4852  function withdraw(uint256 tokenId) external update(_msgSender()) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4326:4444  function stake(uint256 tokenId) external {... */\n    tag_48:\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4378:4381  nft */\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x00))\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4378:4398  nft.safeTransferFrom */\n      0x42842e0e\n        /* \"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol\":2013:2023  msg.sender */\n      caller\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4378:4436  nft.safeTransferFrom(_msgSender(), address(this), tokenId) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup5\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":4150:4182   */\n      swap1\n      swap2\n      and\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4378:4436  nft.safeTransferFrom(_msgSender(), address(this), tokenId) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4132:4183   */\n      mstore\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4421:4425  this */\n      address\n        /* \"#utility.yul\":4199:4217   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4192:4252   */\n      mstore\n        /* \"#utility.yul\":4268:4286   */\n      0x44\n      dup2\n      add\n        /* \"#utility.yul\":4261:4295   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":4105:4123   */\n      0x64\n      add\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4378:4436  nft.safeTransferFrom(_msgSender(), address(this), tokenId) */\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_95\n      jumpi\n      revert(0x00, 0x00)\n    tag_95:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_97\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_97:\n      pop\n      pop\n      pop\n      pop\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4326:4444  function stake(uint256 tokenId) external {... */\n      pop\n      jump\t// out\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4930:5191  function redeem() external update(_msgSender()) {... */\n    tag_50:\n        /* \"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol\":2013:2023  msg.sender */\n      caller\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3700:3718  available(account) */\n      tag_100\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3710:3717  account */\n      dup2\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3700:3709  available */\n      tag_18\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3700:3718  available(account) */\n      jump\t// in\n    tag_100:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3682:3697  reward[account] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3682:3688  reward */\n      0x07\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3682:3697  reward[account] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3682:3718  reward[account] = available(account) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3729:3743  lastUpdateTime */\n      0x06\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3729:3752  lastUpdateTime[account] */\n      dup2\n      mstore\n      dup4\n      dup4\n      keccak256\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3755:3770  block.timestamp */\n      timestamp\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":3729:3770  lastUpdateTime[account] = block.timestamp */\n      swap1\n      sstore\n        /* \"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol\":2013:2023  msg.sender */\n      caller\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5006:5026  reward[_msgSender()] */\n      dup4\n      mstore\n      mstore\n      keccak256\n      sload\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5045:5055  amount > 0 */\n      dup1\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5037:5077  require(amount > 0, \"Nothing to redeem\") */\n      tag_103\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":4508:4510   */\n      0x20\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5037:5077  require(amount > 0, \"Nothing to redeem\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4490:4511   */\n      mstore\n        /* \"#utility.yul\":4547:4549   */\n      0x11\n        /* \"#utility.yul\":4527:4545   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":4520:4550   */\n      mstore\n      shl(0x78, 0x4e6f7468696e6720746f2072656465656d)\n        /* \"#utility.yul\":4566:4584   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":4559:4606   */\n      mstore\n        /* \"#utility.yul\":4623:4641   */\n      0x64\n      add\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5037:5077  require(amount > 0, \"Nothing to redeem\") */\n      tag_81\n        /* \"#utility.yul\":4306:4647   */\n      jump\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5037:5077  require(amount > 0, \"Nothing to redeem\") */\n    tag_103:\n        /* \"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol\":2013:2023  msg.sender */\n      caller\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5111:5112  0 */\n      0x00\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5088:5108  reward[_msgSender()] */\n      dup2\n      dup2\n      mstore\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5088:5094  reward */\n      0x07\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5088:5108  reward[_msgSender()] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5088:5112  reward[_msgSender()] = 0 */\n      dup4\n      swap1\n      sstore\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5123:5134  rewardToken */\n      sload(0x01)\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5148:5160  rewardWallet */\n      sload(0x02)\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5123:5183  rewardToken.transferFrom(rewardWallet, _msgSender(), amount) */\n      dup3\n      mload\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5148:5160  rewardWallet */\n      swap2\n      dup3\n      and\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5123:5183  rewardToken.transferFrom(rewardWallet, _msgSender(), amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":4132:4183   */\n      mstore\n        /* \"#utility.yul\":4199:4217   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":4192:4252   */\n      swap7\n      swap1\n      swap7\n      mstore\n        /* \"#utility.yul\":4268:4286   */\n      0x44\n      dup7\n      add\n        /* \"#utility.yul\":4261:4295   */\n      dup8\n      swap1\n      mstore\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5123:5183  rewardToken.transferFrom(rewardWallet, _msgSender(), amount) */\n      swap2\n      mload\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5123:5134  rewardToken */\n      swap2\n      and\n      swap4\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5123:5147  rewardToken.transferFrom */\n      0x23b872dd\n      swap4\n        /* \"#utility.yul\":4105:4123   */\n      0x64\n      dup1\n      dup4\n      add\n      swap5\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5088:5108  reward[_msgSender()] */\n      swap4\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5123:5183  rewardToken.transferFrom(rewardWallet, _msgSender(), amount) */\n      swap3\n      dup4\n      swap1\n      sub\n      add\n      swap1\n      dup3\n      swap1\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5123:5134  rewardToken */\n      dup8\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":5123:5183  rewardToken.transferFrom(rewardWallet, _msgSender(), amount) */\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_110\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_110:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_111\n      swap2\n      swap1\n      tag_112\n      jump\t// in\n    tag_111:\n      pop\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4978:5191  {... */\n      pop\n        /* \"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":4930:5191  function redeem() external update(_msgSender()) {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14:187   */\n    tag_114:\n        /* \"#utility.yul\":82:102   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":131:162   */\n      dup2\n      and\n        /* \"#utility.yul\":121:163   */\n      dup2\n      eq\n        /* \"#utility.yul\":111:181   */\n      tag_118\n      jumpi\n        /* \"#utility.yul\":177:178   */\n      0x00\n        /* \"#utility.yul\":174:175   */\n      0x00\n        /* \"#utility.yul\":167:179   */\n      revert\n        /* \"#utility.yul\":111:181   */\n    tag_118:\n        /* \"#utility.yul\":14:187   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":192:378   */\n    tag_17:\n        /* \"#utility.yul\":251:257   */\n      0x00\n        /* \"#utility.yul\":304:306   */\n      0x20\n        /* \"#utility.yul\":292:301   */\n      dup3\n        /* \"#utility.yul\":283:290   */\n      dup5\n        /* \"#utility.yul\":279:302   */\n      sub\n        /* \"#utility.yul\":275:307   */\n      slt\n        /* \"#utility.yul\":272:324   */\n      iszero\n      tag_120\n      jumpi\n        /* \"#utility.yul\":320:321   */\n      0x00\n        /* \"#utility.yul\":317:318   */\n      0x00\n        /* \"#utility.yul\":310:322   */\n      revert\n        /* \"#utility.yul\":272:324   */\n    tag_120:\n        /* \"#utility.yul\":343:372   */\n      tag_121\n        /* \"#utility.yul\":362:371   */\n      dup3\n        /* \"#utility.yul\":343:372   */\n      tag_114\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":333:372   */\n      swap4\n        /* \"#utility.yul\":192:378   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":565:1414   */\n    tag_23:\n        /* \"#utility.yul\":662:668   */\n      0x00\n        /* \"#utility.yul\":670:676   */\n      0x00\n        /* \"#utility.yul\":678:684   */\n      0x00\n        /* \"#utility.yul\":686:692   */\n      0x00\n        /* \"#utility.yul\":694:700   */\n      0x00\n        /* \"#utility.yul\":747:750   */\n      0x80\n        /* \"#utility.yul\":735:744   */\n      dup7\n        /* \"#utility.yul\":726:733   */\n      dup9\n        /* \"#utility.yul\":722:745   */\n      sub\n        /* \"#utility.yul\":718:751   */\n      slt\n        /* \"#utility.yul\":715:768   */\n      iszero\n      tag_124\n      jumpi\n        /* \"#utility.yul\":764:765   */\n      0x00\n        /* \"#utility.yul\":761:762   */\n      0x00\n        /* \"#utility.yul\":754:766   */\n      revert\n        /* \"#utility.yul\":715:768   */\n    tag_124:\n        /* \"#utility.yul\":787:816   */\n      tag_125\n        /* \"#utility.yul\":806:815   */\n      dup7\n        /* \"#utility.yul\":787:816   */\n      tag_114\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":777:816   */\n      swap5\n      pop\n        /* \"#utility.yul\":835:873   */\n      tag_126\n        /* \"#utility.yul\":869:871   */\n      0x20\n        /* \"#utility.yul\":858:867   */\n      dup8\n        /* \"#utility.yul\":854:872   */\n      add\n        /* \"#utility.yul\":835:873   */\n      tag_114\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":825:873   */\n      swap4\n      pop\n        /* \"#utility.yul\":942:944   */\n      0x40\n        /* \"#utility.yul\":927:945   */\n      dup7\n      add\n        /* \"#utility.yul\":914:946   */\n      calldataload\n      swap3\n      pop\n        /* \"#utility.yul\":1021:1023   */\n      0x60\n        /* \"#utility.yul\":1006:1024   */\n      dup7\n      add\n        /* \"#utility.yul\":993:1025   */\n      calldataload\n        /* \"#utility.yul\":1048:1066   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1037:1067   */\n      dup2\n      gt\n        /* \"#utility.yul\":1034:1084   */\n      iszero\n      tag_127\n      jumpi\n        /* \"#utility.yul\":1080:1081   */\n      0x00\n        /* \"#utility.yul\":1077:1078   */\n      0x00\n        /* \"#utility.yul\":1070:1082   */\n      revert\n        /* \"#utility.yul\":1034:1084   */\n    tag_127:\n        /* \"#utility.yul\":1103:1125   */\n      dup7\n      add\n        /* \"#utility.yul\":1156:1160   */\n      0x1f\n        /* \"#utility.yul\":1148:1161   */\n      dup2\n      add\n        /* \"#utility.yul\":1144:1171   */\n      dup9\n      sgt\n        /* \"#utility.yul\":1134:1189   */\n      tag_128\n      jumpi\n        /* \"#utility.yul\":1185:1186   */\n      0x00\n        /* \"#utility.yul\":1182:1183   */\n      0x00\n        /* \"#utility.yul\":1175:1187   */\n      revert\n        /* \"#utility.yul\":1134:1189   */\n    tag_128:\n        /* \"#utility.yul\":1225:1227   */\n      dup1\n        /* \"#utility.yul\":1212:1228   */\n      calldataload\n        /* \"#utility.yul\":1251:1269   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1243:1249   */\n      dup2\n        /* \"#utility.yul\":1240:1270   */\n      gt\n        /* \"#utility.yul\":1237:1287   */\n      iszero\n      tag_129\n      jumpi\n        /* \"#utility.yul\":1283:1284   */\n      0x00\n        /* \"#utility.yul\":1280:1281   */\n      0x00\n        /* \"#utility.yul\":1273:1285   */\n      revert\n        /* \"#utility.yul\":1237:1287   */\n    tag_129:\n        /* \"#utility.yul\":1328:1335   */\n      dup9\n        /* \"#utility.yul\":1323:1325   */\n      0x20\n        /* \"#utility.yul\":1314:1320   */\n      dup3\n        /* \"#utility.yul\":1310:1312   */\n      dup5\n        /* \"#utility.yul\":1306:1321   */\n      add\n        /* \"#utility.yul\":1302:1326   */\n      add\n        /* \"#utility.yul\":1299:1336   */\n      gt\n        /* \"#utility.yul\":1296:1353   */\n      iszero\n      tag_130\n      jumpi\n        /* \"#utility.yul\":1349:1350   */\n      0x00\n        /* \"#utility.yul\":1346:1347   */\n      0x00\n        /* \"#utility.yul\":1339:1351   */\n      revert\n        /* \"#utility.yul\":1296:1353   */\n    tag_130:\n        /* \"#utility.yul\":565:1414   */\n      swap6\n      swap9\n      swap5\n      swap8\n      pop\n      swap3\n      swap6\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1380:1382   */\n      0x20\n        /* \"#utility.yul\":1372:1383   */\n      add\n      swap2\n        /* \"#utility.yul\":1402:1408   */\n      swap1\n        /* \"#utility.yul\":565:1414   */\n      jump\t// out\n        /* \"#utility.yul\":1626:1852   */\n    tag_36:\n        /* \"#utility.yul\":1685:1691   */\n      0x00\n        /* \"#utility.yul\":1738:1740   */\n      0x20\n        /* \"#utility.yul\":1726:1735   */\n      dup3\n        /* \"#utility.yul\":1717:1724   */\n      dup5\n        /* \"#utility.yul\":1713:1736   */\n      sub\n        /* \"#utility.yul\":1709:1741   */\n      slt\n        /* \"#utility.yul\":1706:1758   */\n      iszero\n      tag_133\n      jumpi\n        /* \"#utility.yul\":1754:1755   */\n      0x00\n        /* \"#utility.yul\":1751:1752   */\n      0x00\n        /* \"#utility.yul\":1744:1756   */\n      revert\n        /* \"#utility.yul\":1706:1758   */\n    tag_133:\n      pop\n        /* \"#utility.yul\":1799:1822   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1626:1852   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2510:2637   */\n    tag_115:\n        /* \"#utility.yul\":2571:2581   */\n      0x4e487b71\n        /* \"#utility.yul\":2566:2569   */\n      0xe0\n        /* \"#utility.yul\":2562:2582   */\n      shl\n        /* \"#utility.yul\":2559:2560   */\n      0x00\n        /* \"#utility.yul\":2552:2583   */\n      mstore\n        /* \"#utility.yul\":2602:2606   */\n      0x11\n        /* \"#utility.yul\":2599:2600   */\n      0x04\n        /* \"#utility.yul\":2592:2607   */\n      mstore\n        /* \"#utility.yul\":2626:2630   */\n      0x24\n        /* \"#utility.yul\":2623:2624   */\n      0x00\n        /* \"#utility.yul\":2616:2631   */\n      revert\n        /* \"#utility.yul\":2642:2770   */\n    tag_61:\n        /* \"#utility.yul\":2709:2718   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":2730:2741   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":2727:2764   */\n      iszero\n      tag_140\n      jumpi\n        /* \"#utility.yul\":2744:2762   */\n      tag_140\n      tag_115\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":2642:2770   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2775:2943   */\n    tag_63:\n        /* \"#utility.yul\":2848:2857   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":2879:2888   */\n      dup2\n      iszero\n        /* \"#utility.yul\":2896:2911   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":2890:2912   */\n      dup5\n      eq\n        /* \"#utility.yul\":2876:2913   */\n      or\n        /* \"#utility.yul\":2866:2937   */\n      tag_140\n      jumpi\n        /* \"#utility.yul\":2917:2935   */\n      tag_140\n      tag_115\n      jump\t// in\n        /* \"#utility.yul\":2948:3165   */\n    tag_66:\n        /* \"#utility.yul\":2988:2989   */\n      0x00\n        /* \"#utility.yul\":3014:3015   */\n      dup3\n        /* \"#utility.yul\":3004:3136   */\n      tag_145\n      jumpi\n        /* \"#utility.yul\":3058:3068   */\n      0x4e487b71\n        /* \"#utility.yul\":3053:3056   */\n      0xe0\n        /* \"#utility.yul\":3049:3069   */\n      shl\n        /* \"#utility.yul\":3046:3047   */\n      0x00\n        /* \"#utility.yul\":3039:3070   */\n      mstore\n        /* \"#utility.yul\":3093:3097   */\n      0x12\n        /* \"#utility.yul\":3090:3091   */\n      0x04\n        /* \"#utility.yul\":3083:3098   */\n      mstore\n        /* \"#utility.yul\":3121:3125   */\n      0x24\n        /* \"#utility.yul\":3118:3119   */\n      0x00\n        /* \"#utility.yul\":3111:3126   */\n      revert\n        /* \"#utility.yul\":3004:3136   */\n    tag_145:\n      pop\n        /* \"#utility.yul\":3150:3159   */\n      div\n      swap1\n        /* \"#utility.yul\":2948:3165   */\n      jump\t// out\n        /* \"#utility.yul\":3170:3295   */\n    tag_68:\n        /* \"#utility.yul\":3235:3244   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":3256:3266   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":3253:3289   */\n      iszero\n      tag_140\n      jumpi\n        /* \"#utility.yul\":3269:3287   */\n      tag_140\n      tag_115\n      jump\t// in\n        /* \"#utility.yul\":3300:3435   */\n    tag_73:\n        /* \"#utility.yul\":3339:3342   */\n      0x00\n        /* \"#utility.yul\":3360:3377   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":3357:3400   */\n      tag_151\n      jumpi\n        /* \"#utility.yul\":3380:3398   */\n      tag_151\n      tag_115\n      jump\t// in\n    tag_151:\n      pop\n        /* \"#utility.yul\":3427:3428   */\n      0x01\n        /* \"#utility.yul\":3416:3429   */\n      add\n      swap1\n        /* \"#utility.yul\":3300:3435   */\n      jump\t// out\n        /* \"#utility.yul\":3789:3925   */\n    tag_85:\n        /* \"#utility.yul\":3828:3831   */\n      0x00\n        /* \"#utility.yul\":3856:3861   */\n      dup2\n        /* \"#utility.yul\":3846:3885   */\n      tag_155\n      jumpi\n        /* \"#utility.yul\":3865:3883   */\n      tag_155\n      tag_115\n      jump\t// in\n    tag_155:\n      pop\n      not(0x00)\n        /* \"#utility.yul\":3901:3919   */\n      add\n      swap1\n        /* \"#utility.yul\":3789:3925   */\n      jump\t// out\n        /* \"#utility.yul\":4652:4929   */\n    tag_112:\n        /* \"#utility.yul\":4719:4725   */\n      0x00\n        /* \"#utility.yul\":4772:4774   */\n      0x20\n        /* \"#utility.yul\":4760:4769   */\n      dup3\n        /* \"#utility.yul\":4751:4758   */\n      dup5\n        /* \"#utility.yul\":4747:4770   */\n      sub\n        /* \"#utility.yul\":4743:4775   */\n      slt\n        /* \"#utility.yul\":4740:4792   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":4788:4789   */\n      0x00\n        /* \"#utility.yul\":4785:4786   */\n      0x00\n        /* \"#utility.yul\":4778:4790   */\n      revert\n        /* \"#utility.yul\":4740:4792   */\n    tag_159:\n        /* \"#utility.yul\":4820:4829   */\n      dup2\n        /* \"#utility.yul\":4814:4830   */\n      mload\n        /* \"#utility.yul\":4873:4878   */\n      dup1\n        /* \"#utility.yul\":4866:4879   */\n      iszero\n        /* \"#utility.yul\":4859:4880   */\n      iszero\n        /* \"#utility.yul\":4852:4857   */\n      dup2\n        /* \"#utility.yul\":4849:4881   */\n      eq\n        /* \"#utility.yul\":4839:4899   */\n      tag_121\n      jumpi\n        /* \"#utility.yul\":4895:4896   */\n      0x00\n        /* \"#utility.yul\":4892:4893   */\n      0x00\n        /* \"#utility.yul\":4885:4897   */\n      revert\n\n    auxdata: 0xa2646970667358221220f110e4b4f082c754c2397783ac698a064cdee6c32be957f81cf45f7db40b006464736f6c634300081b0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_70": {
									"entryPoint": null,
									"id": 70,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"abi_decode_address_fromMemory": {
									"entryPoint": 110,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_uint256_fromMemory": {
									"entryPoint": 136,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:638:6",
										"nodeType": "YulBlock",
										"src": "0:638:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "74:117:6",
													"nodeType": "YulBlock",
													"src": "74:117:6",
													"statements": [
														{
															"nativeSrc": "84:22:6",
															"nodeType": "YulAssignment",
															"src": "84:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "99:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "99:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "93:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "93:5:6"
																},
																"nativeSrc": "93:13:6",
																"nodeType": "YulFunctionCall",
																"src": "93:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "84:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "84:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "169:16:6",
																"nodeType": "YulBlock",
																"src": "169:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "178:1:6",
																					"nodeType": "YulLiteral",
																					"src": "178:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "181:1:6",
																					"nodeType": "YulLiteral",
																					"src": "181:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "171:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "171:6:6"
																			},
																			"nativeSrc": "171:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "171:12:6"
																		},
																		"nativeSrc": "171:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "171:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "128:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "128:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "139:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "139:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "154:3:6",
																										"nodeType": "YulLiteral",
																										"src": "154:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "159:1:6",
																										"nodeType": "YulLiteral",
																										"src": "159:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "150:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "150:3:6"
																								},
																								"nativeSrc": "150:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "150:11:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "163:1:6",
																								"nodeType": "YulLiteral",
																								"src": "163:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "146:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "146:3:6"
																						},
																						"nativeSrc": "146:19:6",
																						"nodeType": "YulFunctionCall",
																						"src": "146:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "135:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "135:3:6"
																				},
																				"nativeSrc": "135:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "135:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "125:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "125:2:6"
																		},
																		"nativeSrc": "125:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "125:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "118:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "118:6:6"
																},
																"nativeSrc": "118:50:6",
																"nodeType": "YulFunctionCall",
																"src": "118:50:6"
															},
															"nativeSrc": "115:70:6",
															"nodeType": "YulIf",
															"src": "115:70:6"
														}
													]
												},
												"name": "abi_decode_address_fromMemory",
												"nativeSrc": "14:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "53:6:6",
														"nodeType": "YulTypedName",
														"src": "53:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "64:5:6",
														"nodeType": "YulTypedName",
														"src": "64:5:6",
														"type": ""
													}
												],
												"src": "14:177:6"
											},
											{
												"body": {
													"nativeSrc": "328:308:6",
													"nodeType": "YulBlock",
													"src": "328:308:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "375:16:6",
																"nodeType": "YulBlock",
																"src": "375:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "384:1:6",
																					"nodeType": "YulLiteral",
																					"src": "384:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "387:1:6",
																					"nodeType": "YulLiteral",
																					"src": "387:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "377:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "377:6:6"
																			},
																			"nativeSrc": "377:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "377:12:6"
																		},
																		"nativeSrc": "377:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "377:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "349:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "349:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "358:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "358:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "345:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "345:3:6"
																		},
																		"nativeSrc": "345:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "345:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "370:3:6",
																		"nodeType": "YulLiteral",
																		"src": "370:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "341:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "341:3:6"
																},
																"nativeSrc": "341:33:6",
																"nodeType": "YulFunctionCall",
																"src": "341:33:6"
															},
															"nativeSrc": "338:53:6",
															"nodeType": "YulIf",
															"src": "338:53:6"
														},
														{
															"nativeSrc": "400:50:6",
															"nodeType": "YulAssignment",
															"src": "400:50:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "440:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "440:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "410:29:6",
																	"nodeType": "YulIdentifier",
																	"src": "410:29:6"
																},
																"nativeSrc": "410:40:6",
																"nodeType": "YulFunctionCall",
																"src": "410:40:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "400:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "400:6:6"
																}
															]
														},
														{
															"nativeSrc": "459:59:6",
															"nodeType": "YulAssignment",
															"src": "459:59:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "503:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "503:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "514:2:6",
																				"nodeType": "YulLiteral",
																				"src": "514:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "499:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "499:3:6"
																		},
																		"nativeSrc": "499:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "499:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "469:29:6",
																	"nodeType": "YulIdentifier",
																	"src": "469:29:6"
																},
																"nativeSrc": "469:49:6",
																"nodeType": "YulFunctionCall",
																"src": "469:49:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "459:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "459:6:6"
																}
															]
														},
														{
															"nativeSrc": "527:59:6",
															"nodeType": "YulAssignment",
															"src": "527:59:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "571:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "571:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "582:2:6",
																				"nodeType": "YulLiteral",
																				"src": "582:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "567:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "567:3:6"
																		},
																		"nativeSrc": "567:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "567:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address_fromMemory",
																	"nativeSrc": "537:29:6",
																	"nodeType": "YulIdentifier",
																	"src": "537:29:6"
																},
																"nativeSrc": "537:49:6",
																"nodeType": "YulFunctionCall",
																"src": "537:49:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "527:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "527:6:6"
																}
															]
														},
														{
															"nativeSrc": "595:35:6",
															"nodeType": "YulAssignment",
															"src": "595:35:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "615:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "615:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "626:2:6",
																				"nodeType": "YulLiteral",
																				"src": "626:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "611:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:6"
																		},
																		"nativeSrc": "611:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "611:18:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "605:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "605:5:6"
																},
																"nativeSrc": "605:25:6",
																"nodeType": "YulFunctionCall",
																"src": "605:25:6"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "595:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "595:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256_fromMemory",
												"nativeSrc": "196:440:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "270:9:6",
														"nodeType": "YulTypedName",
														"src": "270:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "281:7:6",
														"nodeType": "YulTypedName",
														"src": "281:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "293:6:6",
														"nodeType": "YulTypedName",
														"src": "293:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "301:6:6",
														"nodeType": "YulTypedName",
														"src": "301:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "309:6:6",
														"nodeType": "YulTypedName",
														"src": "309:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "317:6:6",
														"nodeType": "YulTypedName",
														"src": "317:6:6",
														"type": ""
													}
												],
												"src": "196:440:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_address_fromMemory(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052348015600e575f5ffd5b50604051610846380380610846833981016040819052602b916088565b5f80546001600160a01b03199081166001600160a01b039687161790915560018054821694861694909417909355600280549093169190931617905560035560c9565b80516001600160a01b03811681146083575f5ffd5b919050565b5f5f5f5f60808587031215609a575f5ffd5b60a185606e565b935060ad60208601606e565b925060b960408601606e565b6060959095015193969295505050565b610770806100d65f395ff3fe608060405234801561000f575f5ffd5b50600436106100a6575f3560e01c806347ccca021161006e57806347ccca021461013957806370a0823114610163578063a694fc3a14610182578063be040fb014610195578063f7c618c11461019d578063fb75b2c7146101b0575f5ffd5b806310098ad5146100aa578063150b7a02146100d05780632ce9aead146100fc5780632d6a1fa61461011b5780632e1a7d4d14610124575b5f5ffd5b6100bd6100b83660046105ac565b6101c3565b6040519081526020015b60405180910390f35b6100e36100de3660046105cc565b610259565b6040516001600160e01b031990911681526020016100c7565b6100bd61010a3660046105ac565b60066020525f908152604090205481565b6100bd60035481565b610137610132366004610661565b6102da565b005b5f5461014b906001600160a01b031681565b6040516001600160a01b0390911681526020016100c7565b6100bd6101713660046105ac565b60056020525f908152604090205481565b610137610190366004610661565b610409565b61013761047e565b60015461014b906001600160a01b031681565b60025461014b906001600160a01b031681565b6001600160a01b0381165f9081526006602052604081205481906101e7904261068c565b6003546001600160a01b0385165f90815260056020526040812054929350916201518091906102179085906106a5565b61022191906106a5565b61022b91906106bc565b6001600160a01b0385165f908152600760205260409020549091506102519082906106db565b949350505050565b5f84610264816101c3565b6001600160a01b038281165f90815260076020908152604080832094909455600681528382204290558882526004815283822080546001600160a01b031916938b16938417905591815260059091529081208054916102c2836106ee565b90915550630a85bd0160e11b98975050505050505050565b336102e4816101c3565b6001600160a01b038281165f90815260076020908152604080832094909455600681528382204290558582526004905291909120541633146103645760405162461bcd60e51b81526020600482015260146024820152732a37b5b2b71034b9903737ba1039ba30b5b2b21760611b60448201526064015b60405180910390fd5b5f82815260046020908152604080832080546001600160a01b03191690553383526005909152812080549161039883610706565b90915550505f8054604080516323b872dd60e01b81523060048201523360248201526044810186905290516001600160a01b03909216926323b872dd9260648084019382900301818387803b1580156103ef575f5ffd5b505af1158015610401573d5f5f3e3d5ffd5b505050505050565b5f546001600160a01b03166342842e0e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018490526064015f604051808303815f87803b158015610465575f5ffd5b505af1158015610477573d5f5f3e3d5ffd5b5050505050565b33610488816101c3565b6001600160a01b0382165f9081526007602081815260408084209490945560068152838320429055338352522054806104f75760405162461bcd60e51b81526020600482015260116024820152704e6f7468696e6720746f2072656465656d60781b604482015260640161035b565b335f81815260076020908152604080832083905560015460025482516323b872dd60e01b81526001600160a01b03918216600482015260248101969096526044860187905291519116936323b872dd93606480830194939283900301908290875af1158015610568573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061058c919061071b565b505050565b80356001600160a01b03811681146105a7575f5ffd5b919050565b5f602082840312156105bc575f5ffd5b6105c582610591565b9392505050565b5f5f5f5f5f608086880312156105e0575f5ffd5b6105e986610591565b94506105f760208701610591565b935060408601359250606086013567ffffffffffffffff811115610619575f5ffd5b8601601f81018813610629575f5ffd5b803567ffffffffffffffff81111561063f575f5ffd5b886020828401011115610650575f5ffd5b959894975092955050506020019190565b5f60208284031215610671575f5ffd5b5035919050565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561069f5761069f610678565b92915050565b808202811582820484141761069f5761069f610678565b5f826106d657634e487b7160e01b5f52601260045260245ffd5b500490565b8082018082111561069f5761069f610678565b5f600182016106ff576106ff610678565b5060010190565b5f8161071457610714610678565b505f190190565b5f6020828403121561072b575f5ffd5b815180151581146105c5575f5ffdfea2646970667358221220f110e4b4f082c754c2397783ac698a064cdee6c32be957f81cf45f7db40b006464736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x846 CODESIZE SUB DUP1 PUSH2 0x846 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH1 0x2B SWAP2 PUSH1 0x88 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP7 DUP8 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD DUP3 AND SWAP5 DUP7 AND SWAP5 SWAP1 SWAP5 OR SWAP1 SWAP4 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP4 AND OR SWAP1 SSTORE PUSH1 0x3 SSTORE PUSH1 0xC9 JUMP JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH1 0x83 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH1 0x9A JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH1 0xA1 DUP6 PUSH1 0x6E JUMP JUMPDEST SWAP4 POP PUSH1 0xAD PUSH1 0x20 DUP7 ADD PUSH1 0x6E JUMP JUMPDEST SWAP3 POP PUSH1 0xB9 PUSH1 0x40 DUP7 ADD PUSH1 0x6E JUMP JUMPDEST PUSH1 0x60 SWAP6 SWAP1 SWAP6 ADD MLOAD SWAP4 SWAP7 SWAP3 SWAP6 POP POP POP JUMP JUMPDEST PUSH2 0x770 DUP1 PUSH2 0xD6 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x47CCCA02 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x47CCCA02 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xBE040FB0 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0xFB75B2C7 EQ PUSH2 0x1B0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x10098AD5 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x2CE9AEAD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x2D6A1FA6 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x124 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xBD PUSH2 0xB8 CALLDATASIZE PUSH1 0x4 PUSH2 0x5AC JUMP JUMPDEST PUSH2 0x1C3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH2 0xDE CALLDATASIZE PUSH1 0x4 PUSH2 0x5CC JUMP JUMPDEST PUSH2 0x259 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC7 JUMP JUMPDEST PUSH2 0xBD PUSH2 0x10A CALLDATASIZE PUSH1 0x4 PUSH2 0x5AC JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xBD PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x137 PUSH2 0x132 CALLDATASIZE PUSH1 0x4 PUSH2 0x661 JUMP JUMPDEST PUSH2 0x2DA JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD PUSH2 0x14B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC7 JUMP JUMPDEST PUSH2 0xBD PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0x5AC JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x137 PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0x661 JUMP JUMPDEST PUSH2 0x409 JUMP JUMPDEST PUSH2 0x137 PUSH2 0x47E JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x14B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x14B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH2 0x1E7 SWAP1 TIMESTAMP PUSH2 0x68C JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP3 SWAP4 POP SWAP2 PUSH3 0x15180 SWAP2 SWAP1 PUSH2 0x217 SWAP1 DUP6 SWAP1 PUSH2 0x6A5 JUMP JUMPDEST PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x6A5 JUMP JUMPDEST PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x6BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x251 SWAP1 DUP3 SWAP1 PUSH2 0x6DB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH2 0x264 DUP2 PUSH2 0x1C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP3 KECCAK256 TIMESTAMP SWAP1 SSTORE DUP9 DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE DUP4 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP4 DUP12 AND SWAP4 DUP5 OR SWAP1 SSTORE SWAP2 DUP2 MSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x2C2 DUP4 PUSH2 0x6EE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH2 0x2E4 DUP2 PUSH2 0x1C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP3 KECCAK256 TIMESTAMP SWAP1 SSTORE DUP6 DUP3 MSTORE PUSH1 0x4 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD AND CALLER EQ PUSH2 0x364 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2A37B5B2B71034B9903737BA1039BA30B5B2B217 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE CALLER DUP4 MSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x398 DUP4 PUSH2 0x706 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0x23B872DD SWAP3 PUSH1 0x64 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3EF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x401 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x42842E0E CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x465 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x477 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLER PUSH2 0x488 DUP2 PUSH2 0x1C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 TIMESTAMP SWAP1 SSTORE CALLER DUP4 MSTORE MSTORE KECCAK256 SLOAD DUP1 PUSH2 0x4F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4E6F7468696E6720746F2072656465656D PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x35B JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD DUP3 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x44 DUP7 ADD DUP8 SWAP1 MSTORE SWAP2 MLOAD SWAP2 AND SWAP4 PUSH4 0x23B872DD SWAP4 PUSH1 0x64 DUP1 DUP4 ADD SWAP5 SWAP4 SWAP3 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x568 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x58C SWAP2 SWAP1 PUSH2 0x71B JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5A7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5BC JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x5C5 DUP3 PUSH2 0x591 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x5E0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x5E9 DUP7 PUSH2 0x591 JUMP JUMPDEST SWAP5 POP PUSH2 0x5F7 PUSH1 0x20 DUP8 ADD PUSH2 0x591 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x619 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP7 ADD PUSH1 0x1F DUP2 ADD DUP9 SGT PUSH2 0x629 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x63F JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x650 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 POP POP POP PUSH1 0x20 ADD SWAP2 SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x671 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x69F JUMPI PUSH2 0x69F PUSH2 0x678 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x69F JUMPI PUSH2 0x69F PUSH2 0x678 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x6D6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x69F JUMPI PUSH2 0x69F PUSH2 0x678 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x6FF JUMPI PUSH2 0x6FF PUSH2 0x678 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP2 PUSH2 0x714 JUMPI PUSH2 0x714 PUSH2 0x678 JUMP JUMPDEST POP PUSH0 NOT ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x72B JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x5C5 JUMPI PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL LT 0xE4 0xB4 CREATE DUP3 0xC7 SLOAD 0xC2 CODECOPY PUSH24 0x83AC698A064CDEE6C32BE957F81CF45F7DB40B006464736F PUSH13 0x634300081B0033000000000000 ",
							"sourceMap": "2582:2918:0:-:0;;;3294:336;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3457:3;:25;;-1:-1:-1;;;;;;3457:25:0;;;-1:-1:-1;;;;;3457:25:0;;;;;;;-1:-1:-1;3493:40:0;;;;;;;;;;;;;;3544:12;:34;;;;;;;;;;;;3589:20;:33;2582:2918;;14:177:6;93:13;;-1:-1:-1;;;;;135:31:6;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:440::-;293:6;301;309;317;370:3;358:9;349:7;345:23;341:33;338:53;;;387:1;384;377:12;338:53;410:40;440:9;410:40;:::i;:::-;400:50;;469:49;514:2;503:9;499:18;469:49;:::i;:::-;459:59;;537:49;582:2;571:9;567:18;537:49;:::i;:::-;626:2;611:18;;;;605:25;196:440;;;;-1:-1:-1;;;196:440:6:o;:::-;2582:2918:0;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_487": {
									"entryPoint": null,
									"id": 487,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@available_128": {
									"entryPoint": 451,
									"id": 128,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@balanceOf_29": {
									"entryPoint": null,
									"id": 29,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@lastUpdateTime_33": {
									"entryPoint": null,
									"id": 33,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@nft_13": {
									"entryPoint": null,
									"id": 13,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@onERC721Received_262": {
									"entryPoint": 601,
									"id": 262,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@redeem_230": {
									"entryPoint": 1150,
									"id": 230,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardPerTokenPerDay_21": {
									"entryPoint": null,
									"id": 21,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardToken_16": {
									"entryPoint": null,
									"id": 16,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rewardWallet_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_147": {
									"entryPoint": 1033,
									"id": 147,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_191": {
									"entryPoint": 730,
									"id": 191,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_address": {
									"entryPoint": 1425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr": {
									"entryPoint": 1484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 1819,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1633,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$341__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$457__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_4814ee9298a6ee14dd8d406f87112f1967472b7011a3ae8ceed8f6adee3d0290__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7047e1907ec48195b0277350fe86675187cd3cbb8bd2baa58bb8272dc08b5034__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1755,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 1724,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 1701,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 1676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"decrement_t_uint256": {
									"entryPoint": 1798,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 1774,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 1656,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:4931:6",
										"nodeType": "YulBlock",
										"src": "0:4931:6",
										"statements": [
											{
												"nativeSrc": "6:3:6",
												"nodeType": "YulBlock",
												"src": "6:3:6",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "63:124:6",
													"nodeType": "YulBlock",
													"src": "63:124:6",
													"statements": [
														{
															"nativeSrc": "73:29:6",
															"nodeType": "YulAssignment",
															"src": "73:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "95:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "82:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "82:12:6"
																},
																"nativeSrc": "82:20:6",
																"nodeType": "YulFunctionCall",
																"src": "82:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "73:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "73:5:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "165:16:6",
																"nodeType": "YulBlock",
																"src": "165:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "174:1:6",
																					"nodeType": "YulLiteral",
																					"src": "174:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "177:1:6",
																					"nodeType": "YulLiteral",
																					"src": "177:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "167:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "167:6:6"
																			},
																			"nativeSrc": "167:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "167:12:6"
																		},
																		"nativeSrc": "167:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "167:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "124:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "124:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "135:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "135:5:6"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "150:3:6",
																										"nodeType": "YulLiteral",
																										"src": "150:3:6",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "155:1:6",
																										"nodeType": "YulLiteral",
																										"src": "155:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "146:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "146:3:6"
																								},
																								"nativeSrc": "146:11:6",
																								"nodeType": "YulFunctionCall",
																								"src": "146:11:6"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "159:1:6",
																								"nodeType": "YulLiteral",
																								"src": "159:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "142:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "142:3:6"
																						},
																						"nativeSrc": "142:19:6",
																						"nodeType": "YulFunctionCall",
																						"src": "142:19:6"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "131:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "131:3:6"
																				},
																				"nativeSrc": "131:31:6",
																				"nodeType": "YulFunctionCall",
																				"src": "131:31:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "121:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "121:2:6"
																		},
																		"nativeSrc": "121:42:6",
																		"nodeType": "YulFunctionCall",
																		"src": "121:42:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "114:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "114:6:6"
																},
																"nativeSrc": "114:50:6",
																"nodeType": "YulFunctionCall",
																"src": "114:50:6"
															},
															"nativeSrc": "111:70:6",
															"nodeType": "YulIf",
															"src": "111:70:6"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "14:173:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "42:6:6",
														"nodeType": "YulTypedName",
														"src": "42:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "53:5:6",
														"nodeType": "YulTypedName",
														"src": "53:5:6",
														"type": ""
													}
												],
												"src": "14:173:6"
											},
											{
												"body": {
													"nativeSrc": "262:116:6",
													"nodeType": "YulBlock",
													"src": "262:116:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "308:16:6",
																"nodeType": "YulBlock",
																"src": "308:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "317:1:6",
																					"nodeType": "YulLiteral",
																					"src": "317:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "320:1:6",
																					"nodeType": "YulLiteral",
																					"src": "320:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "310:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:6"
																			},
																			"nativeSrc": "310:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "310:12:6"
																		},
																		"nativeSrc": "310:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "310:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "283:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "283:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "292:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "292:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "279:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "279:3:6"
																		},
																		"nativeSrc": "279:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "279:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "304:2:6",
																		"nodeType": "YulLiteral",
																		"src": "304:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "275:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "275:3:6"
																},
																"nativeSrc": "275:32:6",
																"nodeType": "YulFunctionCall",
																"src": "275:32:6"
															},
															"nativeSrc": "272:52:6",
															"nodeType": "YulIf",
															"src": "272:52:6"
														},
														{
															"nativeSrc": "333:39:6",
															"nodeType": "YulAssignment",
															"src": "333:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "362:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "362:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "343:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "343:18:6"
																},
																"nativeSrc": "343:29:6",
																"nodeType": "YulFunctionCall",
																"src": "343:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "333:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "333:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "192:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "228:9:6",
														"nodeType": "YulTypedName",
														"src": "228:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "239:7:6",
														"nodeType": "YulTypedName",
														"src": "239:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "251:6:6",
														"nodeType": "YulTypedName",
														"src": "251:6:6",
														"type": ""
													}
												],
												"src": "192:186:6"
											},
											{
												"body": {
													"nativeSrc": "484:76:6",
													"nodeType": "YulBlock",
													"src": "484:76:6",
													"statements": [
														{
															"nativeSrc": "494:26:6",
															"nodeType": "YulAssignment",
															"src": "494:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "506:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "506:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "517:2:6",
																		"nodeType": "YulLiteral",
																		"src": "517:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "502:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "502:3:6"
																},
																"nativeSrc": "502:18:6",
																"nodeType": "YulFunctionCall",
																"src": "502:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "494:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "494:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "536:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "536:9:6"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "547:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "547:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "529:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "529:6:6"
																},
																"nativeSrc": "529:25:6",
																"nodeType": "YulFunctionCall",
																"src": "529:25:6"
															},
															"nativeSrc": "529:25:6",
															"nodeType": "YulExpressionStatement",
															"src": "529:25:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "383:177:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "453:9:6",
														"nodeType": "YulTypedName",
														"src": "453:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "464:6:6",
														"nodeType": "YulTypedName",
														"src": "464:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "475:4:6",
														"nodeType": "YulTypedName",
														"src": "475:4:6",
														"type": ""
													}
												],
												"src": "383:177:6"
											},
											{
												"body": {
													"nativeSrc": "705:709:6",
													"nodeType": "YulBlock",
													"src": "705:709:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "752:16:6",
																"nodeType": "YulBlock",
																"src": "752:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "761:1:6",
																					"nodeType": "YulLiteral",
																					"src": "761:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "764:1:6",
																					"nodeType": "YulLiteral",
																					"src": "764:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "754:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "754:6:6"
																			},
																			"nativeSrc": "754:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "754:12:6"
																		},
																		"nativeSrc": "754:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "754:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "726:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "726:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "735:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "735:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "722:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "722:3:6"
																		},
																		"nativeSrc": "722:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "722:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "747:3:6",
																		"nodeType": "YulLiteral",
																		"src": "747:3:6",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "718:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "718:3:6"
																},
																"nativeSrc": "718:33:6",
																"nodeType": "YulFunctionCall",
																"src": "718:33:6"
															},
															"nativeSrc": "715:53:6",
															"nodeType": "YulIf",
															"src": "715:53:6"
														},
														{
															"nativeSrc": "777:39:6",
															"nodeType": "YulAssignment",
															"src": "777:39:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "806:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "806:9:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "787:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "787:18:6"
																},
																"nativeSrc": "787:29:6",
																"nodeType": "YulFunctionCall",
																"src": "787:29:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "777:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "777:6:6"
																}
															]
														},
														{
															"nativeSrc": "825:48:6",
															"nodeType": "YulAssignment",
															"src": "825:48:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "858:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "858:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "869:2:6",
																				"nodeType": "YulLiteral",
																				"src": "869:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "854:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "854:3:6"
																		},
																		"nativeSrc": "854:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "854:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "835:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "835:18:6"
																},
																"nativeSrc": "835:38:6",
																"nodeType": "YulFunctionCall",
																"src": "835:38:6"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "825:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "825:6:6"
																}
															]
														},
														{
															"nativeSrc": "882:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "882:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "895:1:6",
																"nodeType": "YulLiteral",
																"src": "895:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "886:5:6",
																	"nodeType": "YulTypedName",
																	"src": "886:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "905:41:6",
															"nodeType": "YulAssignment",
															"src": "905:41:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "931:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "931:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "942:2:6",
																				"nodeType": "YulLiteral",
																				"src": "942:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "927:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "927:3:6"
																		},
																		"nativeSrc": "927:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "927:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "914:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "914:12:6"
																},
																"nativeSrc": "914:32:6",
																"nodeType": "YulFunctionCall",
																"src": "914:32:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "905:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "905:5:6"
																}
															]
														},
														{
															"nativeSrc": "955:15:6",
															"nodeType": "YulAssignment",
															"src": "955:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "965:5:6",
																"nodeType": "YulIdentifier",
																"src": "965:5:6"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "955:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "955:6:6"
																}
															]
														},
														{
															"nativeSrc": "979:46:6",
															"nodeType": "YulVariableDeclaration",
															"src": "979:46:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1010:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1010:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1021:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1021:2:6",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1006:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1006:3:6"
																		},
																		"nativeSrc": "1006:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1006:18:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "993:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "993:12:6"
																},
																"nativeSrc": "993:32:6",
																"nodeType": "YulFunctionCall",
																"src": "993:32:6"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "983:6:6",
																	"nodeType": "YulTypedName",
																	"src": "983:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1068:16:6",
																"nodeType": "YulBlock",
																"src": "1068:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1077:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1077:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1080:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1080:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1070:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1070:6:6"
																			},
																			"nativeSrc": "1070:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1070:12:6"
																		},
																		"nativeSrc": "1070:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1070:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1040:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1040:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1048:18:6",
																		"nodeType": "YulLiteral",
																		"src": "1048:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1037:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1037:2:6"
																},
																"nativeSrc": "1037:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1037:30:6"
															},
															"nativeSrc": "1034:50:6",
															"nodeType": "YulIf",
															"src": "1034:50:6"
														},
														{
															"nativeSrc": "1093:32:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1093:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1107:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1107:9:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "1118:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1118:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1103:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1103:3:6"
																},
																"nativeSrc": "1103:22:6",
																"nodeType": "YulFunctionCall",
																"src": "1103:22:6"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "1097:2:6",
																	"nodeType": "YulTypedName",
																	"src": "1097:2:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1173:16:6",
																"nodeType": "YulBlock",
																"src": "1173:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1182:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1182:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1185:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1185:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1175:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1175:6:6"
																			},
																			"nativeSrc": "1175:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1175:12:6"
																		},
																		"nativeSrc": "1175:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1175:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "1152:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "1152:2:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1156:4:6",
																						"nodeType": "YulLiteral",
																						"src": "1156:4:6",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1148:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1148:3:6"
																				},
																				"nativeSrc": "1148:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1148:13:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1163:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1163:7:6"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1144:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1144:3:6"
																		},
																		"nativeSrc": "1144:27:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1144:27:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1137:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1137:6:6"
																},
																"nativeSrc": "1137:35:6",
																"nodeType": "YulFunctionCall",
																"src": "1137:35:6"
															},
															"nativeSrc": "1134:55:6",
															"nodeType": "YulIf",
															"src": "1134:55:6"
														},
														{
															"nativeSrc": "1198:30:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1198:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "1225:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "1225:2:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1212:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1212:12:6"
																},
																"nativeSrc": "1212:16:6",
																"nodeType": "YulFunctionCall",
																"src": "1212:16:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "1202:6:6",
																	"nodeType": "YulTypedName",
																	"src": "1202:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1271:16:6",
																"nodeType": "YulBlock",
																"src": "1271:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1280:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1280:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1283:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1283:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1273:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1273:6:6"
																			},
																			"nativeSrc": "1273:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1273:12:6"
																		},
																		"nativeSrc": "1273:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1273:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1243:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1243:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1251:18:6",
																		"nodeType": "YulLiteral",
																		"src": "1251:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1240:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1240:2:6"
																},
																"nativeSrc": "1240:30:6",
																"nodeType": "YulFunctionCall",
																"src": "1240:30:6"
															},
															"nativeSrc": "1237:50:6",
															"nodeType": "YulIf",
															"src": "1237:50:6"
														},
														{
															"body": {
																"nativeSrc": "1337:16:6",
																"nodeType": "YulBlock",
																"src": "1337:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1346:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1346:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1349:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1349:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1339:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1339:6:6"
																			},
																			"nativeSrc": "1339:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1339:12:6"
																		},
																		"nativeSrc": "1339:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1339:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "1310:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "1310:2:6"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1314:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1314:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1306:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1306:3:6"
																				},
																				"nativeSrc": "1306:15:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1306:15:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1323:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1323:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1302:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1302:3:6"
																		},
																		"nativeSrc": "1302:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1302:24:6"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1328:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "1328:7:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1299:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1299:2:6"
																},
																"nativeSrc": "1299:37:6",
																"nodeType": "YulFunctionCall",
																"src": "1299:37:6"
															},
															"nativeSrc": "1296:57:6",
															"nodeType": "YulIf",
															"src": "1296:57:6"
														},
														{
															"nativeSrc": "1362:21:6",
															"nodeType": "YulAssignment",
															"src": "1362:21:6",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "1376:2:6",
																		"nodeType": "YulIdentifier",
																		"src": "1376:2:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1380:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1380:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1372:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1372:3:6"
																},
																"nativeSrc": "1372:11:6",
																"nodeType": "YulFunctionCall",
																"src": "1372:11:6"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "1362:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1362:6:6"
																}
															]
														},
														{
															"nativeSrc": "1392:16:6",
															"nodeType": "YulAssignment",
															"src": "1392:16:6",
															"value": {
																"name": "length",
																"nativeSrc": "1402:6:6",
																"nodeType": "YulIdentifier",
																"src": "1402:6:6"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "1392:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1392:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr",
												"nativeSrc": "565:849:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "639:9:6",
														"nodeType": "YulTypedName",
														"src": "639:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "650:7:6",
														"nodeType": "YulTypedName",
														"src": "650:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "662:6:6",
														"nodeType": "YulTypedName",
														"src": "662:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "670:6:6",
														"nodeType": "YulTypedName",
														"src": "670:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "678:6:6",
														"nodeType": "YulTypedName",
														"src": "678:6:6",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "686:6:6",
														"nodeType": "YulTypedName",
														"src": "686:6:6",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "694:6:6",
														"nodeType": "YulTypedName",
														"src": "694:6:6",
														"type": ""
													}
												],
												"src": "565:849:6"
											},
											{
												"body": {
													"nativeSrc": "1518:103:6",
													"nodeType": "YulBlock",
													"src": "1518:103:6",
													"statements": [
														{
															"nativeSrc": "1528:26:6",
															"nodeType": "YulAssignment",
															"src": "1528:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1540:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1540:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1551:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1551:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1536:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1536:3:6"
																},
																"nativeSrc": "1536:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1536:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1528:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1528:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1570:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1570:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "1585:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1585:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "1597:3:6",
																						"nodeType": "YulLiteral",
																						"src": "1597:3:6",
																						"type": "",
																						"value": "224"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1602:10:6",
																						"nodeType": "YulLiteral",
																						"src": "1602:10:6",
																						"type": "",
																						"value": "0xffffffff"
																					}
																				],
																				"functionName": {
																					"name": "shl",
																					"nativeSrc": "1593:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "1593:3:6"
																				},
																				"nativeSrc": "1593:20:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1593:20:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1581:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1581:3:6"
																		},
																		"nativeSrc": "1581:33:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1581:33:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1563:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1563:6:6"
																},
																"nativeSrc": "1563:52:6",
																"nodeType": "YulFunctionCall",
																"src": "1563:52:6"
															},
															"nativeSrc": "1563:52:6",
															"nodeType": "YulExpressionStatement",
															"src": "1563:52:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nativeSrc": "1419:202:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1487:9:6",
														"nodeType": "YulTypedName",
														"src": "1487:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1498:6:6",
														"nodeType": "YulTypedName",
														"src": "1498:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1509:4:6",
														"nodeType": "YulTypedName",
														"src": "1509:4:6",
														"type": ""
													}
												],
												"src": "1419:202:6"
											},
											{
												"body": {
													"nativeSrc": "1696:156:6",
													"nodeType": "YulBlock",
													"src": "1696:156:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1742:16:6",
																"nodeType": "YulBlock",
																"src": "1742:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1751:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1751:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1754:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1754:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1744:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1744:6:6"
																			},
																			"nativeSrc": "1744:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1744:12:6"
																		},
																		"nativeSrc": "1744:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1744:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1717:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1717:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1726:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1726:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1713:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1713:3:6"
																		},
																		"nativeSrc": "1713:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1713:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1738:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1738:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1709:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1709:3:6"
																},
																"nativeSrc": "1709:32:6",
																"nodeType": "YulFunctionCall",
																"src": "1709:32:6"
															},
															"nativeSrc": "1706:52:6",
															"nodeType": "YulIf",
															"src": "1706:52:6"
														},
														{
															"nativeSrc": "1767:14:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1767:14:6",
															"value": {
																"kind": "number",
																"nativeSrc": "1780:1:6",
																"nodeType": "YulLiteral",
																"src": "1780:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1771:5:6",
																	"nodeType": "YulTypedName",
																	"src": "1771:5:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1790:32:6",
															"nodeType": "YulAssignment",
															"src": "1790:32:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1812:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1812:9:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1799:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "1799:12:6"
																},
																"nativeSrc": "1799:23:6",
																"nodeType": "YulFunctionCall",
																"src": "1799:23:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1790:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1790:5:6"
																}
															]
														},
														{
															"nativeSrc": "1831:15:6",
															"nodeType": "YulAssignment",
															"src": "1831:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "1841:5:6",
																"nodeType": "YulIdentifier",
																"src": "1841:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1831:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1831:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1626:226:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1662:9:6",
														"nodeType": "YulTypedName",
														"src": "1662:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1673:7:6",
														"nodeType": "YulTypedName",
														"src": "1673:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1685:6:6",
														"nodeType": "YulTypedName",
														"src": "1685:6:6",
														"type": ""
													}
												],
												"src": "1626:226:6"
											},
											{
												"body": {
													"nativeSrc": "1973:102:6",
													"nodeType": "YulBlock",
													"src": "1973:102:6",
													"statements": [
														{
															"nativeSrc": "1983:26:6",
															"nodeType": "YulAssignment",
															"src": "1983:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1995:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1995:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2006:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2006:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1991:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1991:3:6"
																},
																"nativeSrc": "1991:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1991:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1983:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1983:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2025:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2025:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2040:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2040:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2056:3:6",
																								"nodeType": "YulLiteral",
																								"src": "2056:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2061:1:6",
																								"nodeType": "YulLiteral",
																								"src": "2061:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2052:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2052:3:6"
																						},
																						"nativeSrc": "2052:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2052:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2065:1:6",
																						"nodeType": "YulLiteral",
																						"src": "2065:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2048:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2048:3:6"
																				},
																				"nativeSrc": "2048:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2048:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2036:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2036:3:6"
																		},
																		"nativeSrc": "2036:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2036:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2018:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2018:6:6"
																},
																"nativeSrc": "2018:51:6",
																"nodeType": "YulFunctionCall",
																"src": "2018:51:6"
															},
															"nativeSrc": "2018:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "2018:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$457__to_t_address__fromStack_reversed",
												"nativeSrc": "1857:218:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1942:9:6",
														"nodeType": "YulTypedName",
														"src": "1942:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1953:6:6",
														"nodeType": "YulTypedName",
														"src": "1953:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1964:4:6",
														"nodeType": "YulTypedName",
														"src": "1964:4:6",
														"type": ""
													}
												],
												"src": "1857:218:6"
											},
											{
												"body": {
													"nativeSrc": "2195:102:6",
													"nodeType": "YulBlock",
													"src": "2195:102:6",
													"statements": [
														{
															"nativeSrc": "2205:26:6",
															"nodeType": "YulAssignment",
															"src": "2205:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2217:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2217:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2228:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2228:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2213:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2213:3:6"
																},
																"nativeSrc": "2213:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2213:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2205:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2205:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2247:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2247:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2262:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2262:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2278:3:6",
																								"nodeType": "YulLiteral",
																								"src": "2278:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2283:1:6",
																								"nodeType": "YulLiteral",
																								"src": "2283:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2274:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2274:3:6"
																						},
																						"nativeSrc": "2274:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2274:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2287:1:6",
																						"nodeType": "YulLiteral",
																						"src": "2287:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2270:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2270:3:6"
																				},
																				"nativeSrc": "2270:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2270:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2258:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2258:3:6"
																		},
																		"nativeSrc": "2258:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2258:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2240:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2240:6:6"
																},
																"nativeSrc": "2240:51:6",
																"nodeType": "YulFunctionCall",
																"src": "2240:51:6"
															},
															"nativeSrc": "2240:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "2240:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$341__to_t_address__fromStack_reversed",
												"nativeSrc": "2080:217:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2164:9:6",
														"nodeType": "YulTypedName",
														"src": "2164:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2175:6:6",
														"nodeType": "YulTypedName",
														"src": "2175:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2186:4:6",
														"nodeType": "YulTypedName",
														"src": "2186:4:6",
														"type": ""
													}
												],
												"src": "2080:217:6"
											},
											{
												"body": {
													"nativeSrc": "2403:102:6",
													"nodeType": "YulBlock",
													"src": "2403:102:6",
													"statements": [
														{
															"nativeSrc": "2413:26:6",
															"nodeType": "YulAssignment",
															"src": "2413:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2425:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2425:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2436:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2436:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2421:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2421:3:6"
																},
																"nativeSrc": "2421:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2421:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2413:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2413:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2455:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2455:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2470:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2470:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2486:3:6",
																								"nodeType": "YulLiteral",
																								"src": "2486:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2491:1:6",
																								"nodeType": "YulLiteral",
																								"src": "2491:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2482:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2482:3:6"
																						},
																						"nativeSrc": "2482:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2482:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2495:1:6",
																						"nodeType": "YulLiteral",
																						"src": "2495:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2478:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2478:3:6"
																				},
																				"nativeSrc": "2478:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2478:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2466:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2466:3:6"
																		},
																		"nativeSrc": "2466:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2466:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2448:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2448:6:6"
																},
																"nativeSrc": "2448:51:6",
																"nodeType": "YulFunctionCall",
																"src": "2448:51:6"
															},
															"nativeSrc": "2448:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "2448:51:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2302:203:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2372:9:6",
														"nodeType": "YulTypedName",
														"src": "2372:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2383:6:6",
														"nodeType": "YulTypedName",
														"src": "2383:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2394:4:6",
														"nodeType": "YulTypedName",
														"src": "2394:4:6",
														"type": ""
													}
												],
												"src": "2302:203:6"
											},
											{
												"body": {
													"nativeSrc": "2542:95:6",
													"nodeType": "YulBlock",
													"src": "2542:95:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2559:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2559:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "2566:3:6",
																				"nodeType": "YulLiteral",
																				"src": "2566:3:6",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2571:10:6",
																				"nodeType": "YulLiteral",
																				"src": "2571:10:6",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "2562:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2562:3:6"
																		},
																		"nativeSrc": "2562:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2562:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2552:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2552:6:6"
																},
																"nativeSrc": "2552:31:6",
																"nodeType": "YulFunctionCall",
																"src": "2552:31:6"
															},
															"nativeSrc": "2552:31:6",
															"nodeType": "YulExpressionStatement",
															"src": "2552:31:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2599:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2599:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2602:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2602:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2592:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2592:6:6"
																},
																"nativeSrc": "2592:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2592:15:6"
															},
															"nativeSrc": "2592:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2592:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2623:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2623:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2626:4:6",
																		"nodeType": "YulLiteral",
																		"src": "2626:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2616:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2616:6:6"
																},
																"nativeSrc": "2616:15:6",
																"nodeType": "YulFunctionCall",
																"src": "2616:15:6"
															},
															"nativeSrc": "2616:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "2616:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "2510:127:6",
												"nodeType": "YulFunctionDefinition",
												"src": "2510:127:6"
											},
											{
												"body": {
													"nativeSrc": "2691:79:6",
													"nodeType": "YulBlock",
													"src": "2691:79:6",
													"statements": [
														{
															"nativeSrc": "2701:17:6",
															"nodeType": "YulAssignment",
															"src": "2701:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2713:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2713:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2716:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2716:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "2709:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2709:3:6"
																},
																"nativeSrc": "2709:9:6",
																"nodeType": "YulFunctionCall",
																"src": "2709:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "2701:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "2701:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2742:22:6",
																"nodeType": "YulBlock",
																"src": "2742:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2744:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "2744:16:6"
																			},
																			"nativeSrc": "2744:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2744:18:6"
																		},
																		"nativeSrc": "2744:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2744:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "2733:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2733:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "2739:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2739:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2730:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2730:2:6"
																},
																"nativeSrc": "2730:11:6",
																"nodeType": "YulFunctionCall",
																"src": "2730:11:6"
															},
															"nativeSrc": "2727:37:6",
															"nodeType": "YulIf",
															"src": "2727:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "2642:128:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2673:1:6",
														"nodeType": "YulTypedName",
														"src": "2673:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2676:1:6",
														"nodeType": "YulTypedName",
														"src": "2676:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "2682:4:6",
														"nodeType": "YulTypedName",
														"src": "2682:4:6",
														"type": ""
													}
												],
												"src": "2642:128:6"
											},
											{
												"body": {
													"nativeSrc": "2827:116:6",
													"nodeType": "YulBlock",
													"src": "2827:116:6",
													"statements": [
														{
															"nativeSrc": "2837:20:6",
															"nodeType": "YulAssignment",
															"src": "2837:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "2852:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2852:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "2855:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "2855:1:6"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2848:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2848:3:6"
																},
																"nativeSrc": "2848:9:6",
																"nodeType": "YulFunctionCall",
																"src": "2848:9:6"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "2837:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2837:7:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2915:22:6",
																"nodeType": "YulBlock",
																"src": "2915:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "2917:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "2917:16:6"
																			},
																			"nativeSrc": "2917:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2917:18:6"
																		},
																		"nativeSrc": "2917:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2917:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "2886:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "2886:1:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "2879:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "2879:6:6"
																				},
																				"nativeSrc": "2879:9:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2879:9:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "2893:1:6",
																						"nodeType": "YulIdentifier",
																						"src": "2893:1:6"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "2900:7:6",
																								"nodeType": "YulIdentifier",
																								"src": "2900:7:6"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "2909:1:6",
																								"nodeType": "YulIdentifier",
																								"src": "2909:1:6"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "2896:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "2896:3:6"
																						},
																						"nativeSrc": "2896:15:6",
																						"nodeType": "YulFunctionCall",
																						"src": "2896:15:6"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "2890:2:6",
																					"nodeType": "YulIdentifier",
																					"src": "2890:2:6"
																				},
																				"nativeSrc": "2890:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2890:22:6"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "2876:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2876:2:6"
																		},
																		"nativeSrc": "2876:37:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2876:37:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2869:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2869:6:6"
																},
																"nativeSrc": "2869:45:6",
																"nodeType": "YulFunctionCall",
																"src": "2869:45:6"
															},
															"nativeSrc": "2866:71:6",
															"nodeType": "YulIf",
															"src": "2866:71:6"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "2775:168:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2806:1:6",
														"nodeType": "YulTypedName",
														"src": "2806:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2809:1:6",
														"nodeType": "YulTypedName",
														"src": "2809:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "2815:7:6",
														"nodeType": "YulTypedName",
														"src": "2815:7:6",
														"type": ""
													}
												],
												"src": "2775:168:6"
											},
											{
												"body": {
													"nativeSrc": "2994:171:6",
													"nodeType": "YulBlock",
													"src": "2994:171:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3025:111:6",
																"nodeType": "YulBlock",
																"src": "3025:111:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3046:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3046:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "3053:3:6",
																							"nodeType": "YulLiteral",
																							"src": "3053:3:6",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "3058:10:6",
																							"nodeType": "YulLiteral",
																							"src": "3058:10:6",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "3049:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "3049:3:6"
																					},
																					"nativeSrc": "3049:20:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3049:20:6"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3039:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3039:6:6"
																			},
																			"nativeSrc": "3039:31:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3039:31:6"
																		},
																		"nativeSrc": "3039:31:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3039:31:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3090:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3090:1:6",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3093:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3093:4:6",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "3083:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3083:6:6"
																			},
																			"nativeSrc": "3083:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3083:15:6"
																		},
																		"nativeSrc": "3083:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3083:15:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3118:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3118:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3121:4:6",
																					"nodeType": "YulLiteral",
																					"src": "3121:4:6",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3111:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3111:6:6"
																			},
																			"nativeSrc": "3111:15:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3111:15:6"
																		},
																		"nativeSrc": "3111:15:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3111:15:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "3014:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3014:1:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3007:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3007:6:6"
																},
																"nativeSrc": "3007:9:6",
																"nodeType": "YulFunctionCall",
																"src": "3007:9:6"
															},
															"nativeSrc": "3004:132:6",
															"nodeType": "YulIf",
															"src": "3004:132:6"
														},
														{
															"nativeSrc": "3145:14:6",
															"nodeType": "YulAssignment",
															"src": "3145:14:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3154:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3154:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3157:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3157:1:6"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "3150:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3150:3:6"
																},
																"nativeSrc": "3150:9:6",
																"nodeType": "YulFunctionCall",
																"src": "3150:9:6"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "3145:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "3145:1:6"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "2948:217:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "2979:1:6",
														"nodeType": "YulTypedName",
														"src": "2979:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "2982:1:6",
														"nodeType": "YulTypedName",
														"src": "2982:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "2988:1:6",
														"nodeType": "YulTypedName",
														"src": "2988:1:6",
														"type": ""
													}
												],
												"src": "2948:217:6"
											},
											{
												"body": {
													"nativeSrc": "3218:77:6",
													"nodeType": "YulBlock",
													"src": "3218:77:6",
													"statements": [
														{
															"nativeSrc": "3228:16:6",
															"nodeType": "YulAssignment",
															"src": "3228:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3239:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3239:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "3242:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3242:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3235:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3235:3:6"
																},
																"nativeSrc": "3235:9:6",
																"nodeType": "YulFunctionCall",
																"src": "3235:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "3228:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3228:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3267:22:6",
																"nodeType": "YulBlock",
																"src": "3267:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3269:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "3269:16:6"
																			},
																			"nativeSrc": "3269:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3269:18:6"
																		},
																		"nativeSrc": "3269:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3269:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "3259:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "3259:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "3262:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3262:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3256:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3256:2:6"
																},
																"nativeSrc": "3256:10:6",
																"nodeType": "YulFunctionCall",
																"src": "3256:10:6"
															},
															"nativeSrc": "3253:36:6",
															"nodeType": "YulIf",
															"src": "3253:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "3170:125:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "3201:1:6",
														"nodeType": "YulTypedName",
														"src": "3201:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "3204:1:6",
														"nodeType": "YulTypedName",
														"src": "3204:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "3210:3:6",
														"nodeType": "YulTypedName",
														"src": "3210:3:6",
														"type": ""
													}
												],
												"src": "3170:125:6"
											},
											{
												"body": {
													"nativeSrc": "3347:88:6",
													"nodeType": "YulBlock",
													"src": "3347:88:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3378:22:6",
																"nodeType": "YulBlock",
																"src": "3378:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3380:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "3380:16:6"
																			},
																			"nativeSrc": "3380:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3380:18:6"
																		},
																		"nativeSrc": "3380:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3380:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3363:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3363:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3374:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3374:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3370:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3370:3:6"
																		},
																		"nativeSrc": "3370:6:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3370:6:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "3360:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3360:2:6"
																},
																"nativeSrc": "3360:17:6",
																"nodeType": "YulFunctionCall",
																"src": "3360:17:6"
															},
															"nativeSrc": "3357:43:6",
															"nodeType": "YulIf",
															"src": "3357:43:6"
														},
														{
															"nativeSrc": "3409:20:6",
															"nodeType": "YulAssignment",
															"src": "3409:20:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3420:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3420:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3427:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3427:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3416:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3416:3:6"
																},
																"nativeSrc": "3416:13:6",
																"nodeType": "YulFunctionCall",
																"src": "3416:13:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3409:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3409:3:6"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "3300:135:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3329:5:6",
														"nodeType": "YulTypedName",
														"src": "3329:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3339:3:6",
														"nodeType": "YulTypedName",
														"src": "3339:3:6",
														"type": ""
													}
												],
												"src": "3300:135:6"
											},
											{
												"body": {
													"nativeSrc": "3614:170:6",
													"nodeType": "YulBlock",
													"src": "3614:170:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3631:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3631:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3642:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3642:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3624:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3624:6:6"
																},
																"nativeSrc": "3624:21:6",
																"nodeType": "YulFunctionCall",
																"src": "3624:21:6"
															},
															"nativeSrc": "3624:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "3624:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3665:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3665:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3676:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3676:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3661:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3661:3:6"
																		},
																		"nativeSrc": "3661:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3661:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3681:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3681:2:6",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3654:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3654:6:6"
																},
																"nativeSrc": "3654:30:6",
																"nodeType": "YulFunctionCall",
																"src": "3654:30:6"
															},
															"nativeSrc": "3654:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "3654:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3704:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3704:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3715:2:6",
																				"nodeType": "YulLiteral",
																				"src": "3715:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3700:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3700:3:6"
																		},
																		"nativeSrc": "3700:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3700:18:6"
																	},
																	{
																		"hexValue": "546f6b656e206973206e6f74207374616b65642e",
																		"kind": "string",
																		"nativeSrc": "3720:22:6",
																		"nodeType": "YulLiteral",
																		"src": "3720:22:6",
																		"type": "",
																		"value": "Token is not staked."
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3693:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3693:6:6"
																},
																"nativeSrc": "3693:50:6",
																"nodeType": "YulFunctionCall",
																"src": "3693:50:6"
															},
															"nativeSrc": "3693:50:6",
															"nodeType": "YulExpressionStatement",
															"src": "3693:50:6"
														},
														{
															"nativeSrc": "3752:26:6",
															"nodeType": "YulAssignment",
															"src": "3752:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3764:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3764:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3775:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3775:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3760:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3760:3:6"
																},
																"nativeSrc": "3760:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3760:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3752:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3752:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7047e1907ec48195b0277350fe86675187cd3cbb8bd2baa58bb8272dc08b5034__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "3440:344:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3591:9:6",
														"nodeType": "YulTypedName",
														"src": "3591:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3605:4:6",
														"nodeType": "YulTypedName",
														"src": "3605:4:6",
														"type": ""
													}
												],
												"src": "3440:344:6"
											},
											{
												"body": {
													"nativeSrc": "3836:89:6",
													"nodeType": "YulBlock",
													"src": "3836:89:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3863:22:6",
																"nodeType": "YulBlock",
																"src": "3863:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "3865:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "3865:16:6"
																			},
																			"nativeSrc": "3865:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3865:18:6"
																		},
																		"nativeSrc": "3865:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3865:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3856:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3856:5:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3849:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3849:6:6"
																},
																"nativeSrc": "3849:13:6",
																"nodeType": "YulFunctionCall",
																"src": "3849:13:6"
															},
															"nativeSrc": "3846:39:6",
															"nodeType": "YulIf",
															"src": "3846:39:6"
														},
														{
															"nativeSrc": "3894:25:6",
															"nodeType": "YulAssignment",
															"src": "3894:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3905:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3905:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3916:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3916:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "3912:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3912:3:6"
																		},
																		"nativeSrc": "3912:6:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3912:6:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3901:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3901:3:6"
																},
																"nativeSrc": "3901:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3901:18:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3894:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3894:3:6"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "3789:136:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3818:5:6",
														"nodeType": "YulTypedName",
														"src": "3818:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3828:3:6",
														"nodeType": "YulTypedName",
														"src": "3828:3:6",
														"type": ""
													}
												],
												"src": "3789:136:6"
											},
											{
												"body": {
													"nativeSrc": "4087:214:6",
													"nodeType": "YulBlock",
													"src": "4087:214:6",
													"statements": [
														{
															"nativeSrc": "4097:26:6",
															"nodeType": "YulAssignment",
															"src": "4097:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4109:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4109:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4120:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4120:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4105:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4105:3:6"
																},
																"nativeSrc": "4105:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4105:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4097:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4097:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4139:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4139:9:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4154:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4154:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4170:3:6",
																								"nodeType": "YulLiteral",
																								"src": "4170:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4175:1:6",
																								"nodeType": "YulLiteral",
																								"src": "4175:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4166:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "4166:3:6"
																						},
																						"nativeSrc": "4166:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "4166:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4179:1:6",
																						"nodeType": "YulLiteral",
																						"src": "4179:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4162:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4162:3:6"
																				},
																				"nativeSrc": "4162:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4162:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4150:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4150:3:6"
																		},
																		"nativeSrc": "4150:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4150:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4132:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4132:6:6"
																},
																"nativeSrc": "4132:51:6",
																"nodeType": "YulFunctionCall",
																"src": "4132:51:6"
															},
															"nativeSrc": "4132:51:6",
															"nodeType": "YulExpressionStatement",
															"src": "4132:51:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4203:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4203:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4214:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4214:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4199:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4199:3:6"
																		},
																		"nativeSrc": "4199:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4199:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "4223:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4223:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4239:3:6",
																								"nodeType": "YulLiteral",
																								"src": "4239:3:6",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4244:1:6",
																								"nodeType": "YulLiteral",
																								"src": "4244:1:6",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4235:3:6",
																							"nodeType": "YulIdentifier",
																							"src": "4235:3:6"
																						},
																						"nativeSrc": "4235:11:6",
																						"nodeType": "YulFunctionCall",
																						"src": "4235:11:6"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4248:1:6",
																						"nodeType": "YulLiteral",
																						"src": "4248:1:6",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4231:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4231:3:6"
																				},
																				"nativeSrc": "4231:19:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4231:19:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4219:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4219:3:6"
																		},
																		"nativeSrc": "4219:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4219:32:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4192:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4192:6:6"
																},
																"nativeSrc": "4192:60:6",
																"nodeType": "YulFunctionCall",
																"src": "4192:60:6"
															},
															"nativeSrc": "4192:60:6",
															"nodeType": "YulExpressionStatement",
															"src": "4192:60:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4272:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4272:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4283:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4283:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4268:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4268:3:6"
																		},
																		"nativeSrc": "4268:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4268:18:6"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "4288:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4288:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4261:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4261:6:6"
																},
																"nativeSrc": "4261:34:6",
																"nodeType": "YulFunctionCall",
																"src": "4261:34:6"
															},
															"nativeSrc": "4261:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "4261:34:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "3930:371:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4040:9:6",
														"nodeType": "YulTypedName",
														"src": "4040:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4051:6:6",
														"nodeType": "YulTypedName",
														"src": "4051:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4059:6:6",
														"nodeType": "YulTypedName",
														"src": "4059:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4067:6:6",
														"nodeType": "YulTypedName",
														"src": "4067:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4078:4:6",
														"nodeType": "YulTypedName",
														"src": "4078:4:6",
														"type": ""
													}
												],
												"src": "3930:371:6"
											},
											{
												"body": {
													"nativeSrc": "4480:167:6",
													"nodeType": "YulBlock",
													"src": "4480:167:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4497:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4497:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4508:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4508:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4490:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4490:6:6"
																},
																"nativeSrc": "4490:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4490:21:6"
															},
															"nativeSrc": "4490:21:6",
															"nodeType": "YulExpressionStatement",
															"src": "4490:21:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4531:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4531:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4542:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4542:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4527:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4527:3:6"
																		},
																		"nativeSrc": "4527:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4527:18:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4547:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4547:2:6",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4520:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4520:6:6"
																},
																"nativeSrc": "4520:30:6",
																"nodeType": "YulFunctionCall",
																"src": "4520:30:6"
															},
															"nativeSrc": "4520:30:6",
															"nodeType": "YulExpressionStatement",
															"src": "4520:30:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4570:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4570:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4581:2:6",
																				"nodeType": "YulLiteral",
																				"src": "4581:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4566:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4566:3:6"
																		},
																		"nativeSrc": "4566:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4566:18:6"
																	},
																	{
																		"hexValue": "4e6f7468696e6720746f2072656465656d",
																		"kind": "string",
																		"nativeSrc": "4586:19:6",
																		"nodeType": "YulLiteral",
																		"src": "4586:19:6",
																		"type": "",
																		"value": "Nothing to redeem"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4559:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4559:6:6"
																},
																"nativeSrc": "4559:47:6",
																"nodeType": "YulFunctionCall",
																"src": "4559:47:6"
															},
															"nativeSrc": "4559:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "4559:47:6"
														},
														{
															"nativeSrc": "4615:26:6",
															"nodeType": "YulAssignment",
															"src": "4615:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4627:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4627:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4638:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4638:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4623:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4623:3:6"
																},
																"nativeSrc": "4623:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4623:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4615:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4615:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_4814ee9298a6ee14dd8d406f87112f1967472b7011a3ae8ceed8f6adee3d0290__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4306:341:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4457:9:6",
														"nodeType": "YulTypedName",
														"src": "4457:9:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4471:4:6",
														"nodeType": "YulTypedName",
														"src": "4471:4:6",
														"type": ""
													}
												],
												"src": "4306:341:6"
											},
											{
												"body": {
													"nativeSrc": "4730:199:6",
													"nodeType": "YulBlock",
													"src": "4730:199:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4776:16:6",
																"nodeType": "YulBlock",
																"src": "4776:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4785:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4785:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4788:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4788:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4778:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4778:6:6"
																			},
																			"nativeSrc": "4778:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4778:12:6"
																		},
																		"nativeSrc": "4778:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4778:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4751:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4751:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4760:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4760:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4747:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4747:3:6"
																		},
																		"nativeSrc": "4747:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4747:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4772:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4772:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4743:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4743:3:6"
																},
																"nativeSrc": "4743:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4743:32:6"
															},
															"nativeSrc": "4740:52:6",
															"nodeType": "YulIf",
															"src": "4740:52:6"
														},
														{
															"nativeSrc": "4801:29:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4801:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4820:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4820:9:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4814:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "4814:5:6"
																},
																"nativeSrc": "4814:16:6",
																"nodeType": "YulFunctionCall",
																"src": "4814:16:6"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "4805:5:6",
																	"nodeType": "YulTypedName",
																	"src": "4805:5:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4883:16:6",
																"nodeType": "YulBlock",
																"src": "4883:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4892:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4892:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4895:1:6",
																					"nodeType": "YulLiteral",
																					"src": "4895:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4885:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "4885:6:6"
																			},
																			"nativeSrc": "4885:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4885:12:6"
																		},
																		"nativeSrc": "4885:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4885:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4852:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4852:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "4873:5:6",
																								"nodeType": "YulIdentifier",
																								"src": "4873:5:6"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "4866:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "4866:6:6"
																						},
																						"nativeSrc": "4866:13:6",
																						"nodeType": "YulFunctionCall",
																						"src": "4866:13:6"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4859:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "4859:6:6"
																				},
																				"nativeSrc": "4859:21:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4859:21:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "4849:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "4849:2:6"
																		},
																		"nativeSrc": "4849:32:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4849:32:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4842:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4842:6:6"
																},
																"nativeSrc": "4842:40:6",
																"nodeType": "YulFunctionCall",
																"src": "4842:40:6"
															},
															"nativeSrc": "4839:60:6",
															"nodeType": "YulIf",
															"src": "4839:60:6"
														},
														{
															"nativeSrc": "4908:15:6",
															"nodeType": "YulAssignment",
															"src": "4908:15:6",
															"value": {
																"name": "value",
																"nativeSrc": "4918:5:6",
																"nodeType": "YulIdentifier",
																"src": "4918:5:6"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4908:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4908:6:6"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "4652:277:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4696:9:6",
														"nodeType": "YulTypedName",
														"src": "4696:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4707:7:6",
														"nodeType": "YulTypedName",
														"src": "4707:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4719:6:6",
														"nodeType": "YulTypedName",
														"src": "4719:6:6",
														"type": ""
													}
												],
												"src": "4652:277:6"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        let value := 0\n        value := calldataload(add(headStart, 64))\n        value2 := value\n        let offset := calldataload(add(headStart, 96))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        value3 := add(_1, 32)\n        value4 := length\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_IERC721_$457__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IERC20_$341__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_7047e1907ec48195b0277350fe86675187cd3cbb8bd2baa58bb8272dc08b5034__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Token is not staked.\")\n        tail := add(headStart, 96)\n    }\n    function decrement_t_uint256(value) -> ret\n    {\n        if iszero(value) { panic_error_0x11() }\n        ret := add(value, not(0))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_4814ee9298a6ee14dd8d406f87112f1967472b7011a3ae8ceed8f6adee3d0290__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Nothing to redeem\")\n        tail := add(headStart, 96)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b50600436106100a6575f3560e01c806347ccca021161006e57806347ccca021461013957806370a0823114610163578063a694fc3a14610182578063be040fb014610195578063f7c618c11461019d578063fb75b2c7146101b0575f5ffd5b806310098ad5146100aa578063150b7a02146100d05780632ce9aead146100fc5780632d6a1fa61461011b5780632e1a7d4d14610124575b5f5ffd5b6100bd6100b83660046105ac565b6101c3565b6040519081526020015b60405180910390f35b6100e36100de3660046105cc565b610259565b6040516001600160e01b031990911681526020016100c7565b6100bd61010a3660046105ac565b60066020525f908152604090205481565b6100bd60035481565b610137610132366004610661565b6102da565b005b5f5461014b906001600160a01b031681565b6040516001600160a01b0390911681526020016100c7565b6100bd6101713660046105ac565b60056020525f908152604090205481565b610137610190366004610661565b610409565b61013761047e565b60015461014b906001600160a01b031681565b60025461014b906001600160a01b031681565b6001600160a01b0381165f9081526006602052604081205481906101e7904261068c565b6003546001600160a01b0385165f90815260056020526040812054929350916201518091906102179085906106a5565b61022191906106a5565b61022b91906106bc565b6001600160a01b0385165f908152600760205260409020549091506102519082906106db565b949350505050565b5f84610264816101c3565b6001600160a01b038281165f90815260076020908152604080832094909455600681528382204290558882526004815283822080546001600160a01b031916938b16938417905591815260059091529081208054916102c2836106ee565b90915550630a85bd0160e11b98975050505050505050565b336102e4816101c3565b6001600160a01b038281165f90815260076020908152604080832094909455600681528382204290558582526004905291909120541633146103645760405162461bcd60e51b81526020600482015260146024820152732a37b5b2b71034b9903737ba1039ba30b5b2b21760611b60448201526064015b60405180910390fd5b5f82815260046020908152604080832080546001600160a01b03191690553383526005909152812080549161039883610706565b90915550505f8054604080516323b872dd60e01b81523060048201523360248201526044810186905290516001600160a01b03909216926323b872dd9260648084019382900301818387803b1580156103ef575f5ffd5b505af1158015610401573d5f5f3e3d5ffd5b505050505050565b5f546001600160a01b03166342842e0e336040516001600160e01b031960e084901b1681526001600160a01b039091166004820152306024820152604481018490526064015f604051808303815f87803b158015610465575f5ffd5b505af1158015610477573d5f5f3e3d5ffd5b5050505050565b33610488816101c3565b6001600160a01b0382165f9081526007602081815260408084209490945560068152838320429055338352522054806104f75760405162461bcd60e51b81526020600482015260116024820152704e6f7468696e6720746f2072656465656d60781b604482015260640161035b565b335f81815260076020908152604080832083905560015460025482516323b872dd60e01b81526001600160a01b03918216600482015260248101969096526044860187905291519116936323b872dd93606480830194939283900301908290875af1158015610568573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061058c919061071b565b505050565b80356001600160a01b03811681146105a7575f5ffd5b919050565b5f602082840312156105bc575f5ffd5b6105c582610591565b9392505050565b5f5f5f5f5f608086880312156105e0575f5ffd5b6105e986610591565b94506105f760208701610591565b935060408601359250606086013567ffffffffffffffff811115610619575f5ffd5b8601601f81018813610629575f5ffd5b803567ffffffffffffffff81111561063f575f5ffd5b886020828401011115610650575f5ffd5b959894975092955050506020019190565b5f60208284031215610671575f5ffd5b5035919050565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561069f5761069f610678565b92915050565b808202811582820484141761069f5761069f610678565b5f826106d657634e487b7160e01b5f52601260045260245ffd5b500490565b8082018082111561069f5761069f610678565b5f600182016106ff576106ff610678565b5060010190565b5f8161071457610714610678565b505f190190565b5f6020828403121561072b575f5ffd5b815180151581146105c5575f5ffdfea2646970667358221220f110e4b4f082c754c2397783ac698a064cdee6c32be957f81cf45f7db40b006464736f6c634300081b0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA6 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x47CCCA02 GT PUSH2 0x6E JUMPI DUP1 PUSH4 0x47CCCA02 EQ PUSH2 0x139 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x163 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x182 JUMPI DUP1 PUSH4 0xBE040FB0 EQ PUSH2 0x195 JUMPI DUP1 PUSH4 0xF7C618C1 EQ PUSH2 0x19D JUMPI DUP1 PUSH4 0xFB75B2C7 EQ PUSH2 0x1B0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 PUSH4 0x10098AD5 EQ PUSH2 0xAA JUMPI DUP1 PUSH4 0x150B7A02 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x2CE9AEAD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x2D6A1FA6 EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x124 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0xBD PUSH2 0xB8 CALLDATASIZE PUSH1 0x4 PUSH2 0x5AC JUMP JUMPDEST PUSH2 0x1C3 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE3 PUSH2 0xDE CALLDATASIZE PUSH1 0x4 PUSH2 0x5CC JUMP JUMPDEST PUSH2 0x259 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC7 JUMP JUMPDEST PUSH2 0xBD PUSH2 0x10A CALLDATASIZE PUSH1 0x4 PUSH2 0x5AC JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xBD PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x137 PUSH2 0x132 CALLDATASIZE PUSH1 0x4 PUSH2 0x661 JUMP JUMPDEST PUSH2 0x2DA JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD PUSH2 0x14B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC7 JUMP JUMPDEST PUSH2 0xBD PUSH2 0x171 CALLDATASIZE PUSH1 0x4 PUSH2 0x5AC JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x137 PUSH2 0x190 CALLDATASIZE PUSH1 0x4 PUSH2 0x661 JUMP JUMPDEST PUSH2 0x409 JUMP JUMPDEST PUSH2 0x137 PUSH2 0x47E JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x14B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x14B SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 PUSH2 0x1E7 SWAP1 TIMESTAMP PUSH2 0x68C JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD SWAP3 SWAP4 POP SWAP2 PUSH3 0x15180 SWAP2 SWAP1 PUSH2 0x217 SWAP1 DUP6 SWAP1 PUSH2 0x6A5 JUMP JUMPDEST PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x6A5 JUMP JUMPDEST PUSH2 0x22B SWAP2 SWAP1 PUSH2 0x6BC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x251 SWAP1 DUP3 SWAP1 PUSH2 0x6DB JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP5 PUSH2 0x264 DUP2 PUSH2 0x1C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP3 KECCAK256 TIMESTAMP SWAP1 SSTORE DUP9 DUP3 MSTORE PUSH1 0x4 DUP2 MSTORE DUP4 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP4 DUP12 AND SWAP4 DUP5 OR SWAP1 SSTORE SWAP2 DUP2 MSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x2C2 DUP4 PUSH2 0x6EE JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH4 0xA85BD01 PUSH1 0xE1 SHL SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST CALLER PUSH2 0x2E4 DUP2 PUSH2 0x1C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP3 KECCAK256 TIMESTAMP SWAP1 SSTORE DUP6 DUP3 MSTORE PUSH1 0x4 SWAP1 MSTORE SWAP2 SWAP1 SWAP2 KECCAK256 SLOAD AND CALLER EQ PUSH2 0x364 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x2A37B5B2B71034B9903737BA1039BA30B5B2B217 PUSH1 0x61 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE CALLER DUP4 MSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 DUP1 SLOAD SWAP2 PUSH2 0x398 DUP4 PUSH2 0x706 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP7 SWAP1 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP3 PUSH4 0x23B872DD SWAP3 PUSH1 0x64 DUP1 DUP5 ADD SWAP4 DUP3 SWAP1 SUB ADD DUP2 DUP4 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3EF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x401 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x42842E0E CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP5 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x465 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x477 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLER PUSH2 0x488 DUP2 PUSH2 0x1C3 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE PUSH1 0x6 DUP2 MSTORE DUP4 DUP4 KECCAK256 TIMESTAMP SWAP1 SSTORE CALLER DUP4 MSTORE MSTORE KECCAK256 SLOAD DUP1 PUSH2 0x4F7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x4E6F7468696E6720746F2072656465656D PUSH1 0x78 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x35B JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x1 SLOAD PUSH1 0x2 SLOAD DUP3 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x44 DUP7 ADD DUP8 SWAP1 MSTORE SWAP2 MLOAD SWAP2 AND SWAP4 PUSH4 0x23B872DD SWAP4 PUSH1 0x64 DUP1 DUP4 ADD SWAP5 SWAP4 SWAP3 DUP4 SWAP1 SUB ADD SWAP1 DUP3 SWAP1 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x568 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x58C SWAP2 SWAP1 PUSH2 0x71B JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x5A7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5BC JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x5C5 DUP3 PUSH2 0x591 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x5E0 JUMPI PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x5E9 DUP7 PUSH2 0x591 JUMP JUMPDEST SWAP5 POP PUSH2 0x5F7 PUSH1 0x20 DUP8 ADD PUSH2 0x591 JUMP JUMPDEST SWAP4 POP PUSH1 0x40 DUP7 ADD CALLDATALOAD SWAP3 POP PUSH1 0x60 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x619 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP7 ADD PUSH1 0x1F DUP2 ADD DUP9 SGT PUSH2 0x629 JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x63F JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x650 JUMPI PUSH0 PUSH0 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP SWAP3 SWAP6 POP POP POP PUSH1 0x20 ADD SWAP2 SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x671 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x69F JUMPI PUSH2 0x69F PUSH2 0x678 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x69F JUMPI PUSH2 0x69F PUSH2 0x678 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x6D6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x69F JUMPI PUSH2 0x69F PUSH2 0x678 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x6FF JUMPI PUSH2 0x6FF PUSH2 0x678 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH0 DUP2 PUSH2 0x714 JUMPI PUSH2 0x714 PUSH2 0x678 JUMP JUMPDEST POP PUSH0 NOT ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x72B JUMPI PUSH0 PUSH0 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x5C5 JUMPI PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALL LT 0xE4 0xB4 CREATE DUP3 0xC7 SLOAD 0xC2 CODECOPY PUSH24 0x83AC698A064CDEE6C32BE957F81CF45F7DB40B006464736F PUSH13 0x634300081B0033000000000000 ",
							"sourceMap": "2582:2918:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3921:309;;;;;;:::i;:::-;;:::i;:::-;;;529:25:6;;;517:2;502:18;3921:309:0;;;;;;;;5199:298;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;;1581:33:6;;;1563:52;;1551:2;1536:18;5199:298:0;1419:202:6;2916:49:0;;;;;;:::i;:::-;;;;;;;;;;;;;;2766:35;;;;;;4558:294;;;;;;:::i;:::-;;:::i;:::-;;2645:18;;;;;-1:-1:-1;;;;;2645:18:0;;;;;;-1:-1:-1;;;;;2036:32:6;;;2018:51;;2006:2;1991:18;2645::0;1857:218:6;2865:44:0;;;;;;:::i;:::-;;;;;;;;;;;;;;4326:118;;;;;;:::i;:::-;;:::i;4930:261::-;;;:::i;2670:25::-;;;;;-1:-1:-1;;;;;2670:25:0;;;2702:27;;;;;-1:-1:-1;;;;;2702:27:0;;;3921:309;-1:-1:-1;;;;;4038:23:0;;3978:7;4038:23;;;:14;:23;;;;;;3978:7;;4020:41;;:15;:41;:::i;:::-;4151:20;;-1:-1:-1;;;;;4090:18:0;;4072:14;4090:18;;;:9;:18;;;;;;3998:63;;-1:-1:-1;4072:14:0;4175:5;;4151:20;4090:45;;3998:63;;4090:45;:::i;:::-;:81;;;;:::i;:::-;4089:91;;;;:::i;:::-;-1:-1:-1;;;;;4198:15:0;;;;;;:6;:15;;;;;;4072:108;;-1:-1:-1;4198:24:0;;4072:108;;4198:24;:::i;:::-;4191:31;3921:309;-1:-1:-1;;;;3921:309:0:o;5199:298::-;5355:6;5340:4;3700:18;3710:7;3700:9;:18::i;:::-;-1:-1:-1;;;;;3682:15:0;;;;;;;:6;:15;;;;;;;;:36;;;;3729:14;:23;;;;;3755:15;3729:41;;5374:21;;;:12:::1;:21:::0;;;;;:28;;-1:-1:-1;;;;;;5374:28:0::1;::::0;;::::1;::::0;;::::1;::::0;;5413:15;;;:9:::1;:15:::0;;;;;;:17;;;::::1;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;;;5448:41:0;5199:298;-1:-1:-1;;;;;;;;5199:298:0:o;4558:294::-;2013:10:4;3700:18:0;3710:7;3700:9;:18::i;:::-;-1:-1:-1;;;;;3682:15:0;;;;;;;:6;:15;;;;;;;;:36;;;;3729:14;:23;;;;;3755:15;3729:41;;4642:21;;;:12:::1;:21:::0;;;;;;;::::1;2013:10:4::0;4642:37:0::1;4634:70;;;::::0;-1:-1:-1;;;4634:70:0;;3642:2:6;4634:70:0::1;::::0;::::1;3624:21:6::0;3681:2;3661:18;;;3654:30;-1:-1:-1;;;3700:18:6;;;3693:50;3760:18;;4634:70:0::1;;;;;;;;;4722:21;::::0;;;:12:::1;:21;::::0;;;;;;;4715:28;;-1:-1:-1;;;;;;4715:28:0::1;::::0;;2013:10:4;4754:23:0;;:9:::1;:23:::0;;;;;:25;;;::::1;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;4790:3:0::1;::::0;;:54:::1;::::0;;-1:-1:-1;;;4790:54:0;;4815:4:::1;4790:54;::::0;::::1;4132:51:6::0;2013:10:4;4199:18:6;;;4192:60;4268:18;;;4261:34;;;4790:54:0;;-1:-1:-1;;;;;4790:3:0;;::::1;::::0;:16:::1;::::0;4105:18:6;;;;;4790:54:0;;;;;:3;;:54;::::1;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;4558:294:::0;;:::o;4326:118::-;4378:3;;-1:-1:-1;;;;;4378:3:0;:20;2013:10:4;4378:58:0;;-1:-1:-1;;;;;;4378:58:0;;;;;;;-1:-1:-1;;;;;4150:32:6;;;4378:58:0;;;4132:51:6;4421:4:0;4199:18:6;;;4192:60;4268:18;;;4261:34;;;4105:18;;4378:58:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4326:118;:::o;4930:261::-;2013:10:4;3700:18:0;3710:7;3700:9;:18::i;:::-;-1:-1:-1;;;;;3682:15:0;;;;;;:6;:15;;;;;;;;:36;;;;3729:14;:23;;;;;3755:15;3729:41;;2013:10:4;5006:20:0;;;;;5045:10;5037:40:::1;;;::::0;-1:-1:-1;;;5037:40:0;;4508:2:6;5037:40:0::1;::::0;::::1;4490:21:6::0;4547:2;4527:18;;;4520:30;-1:-1:-1;;;4566:18:6;;;4559:47;4623:18;;5037:40:0::1;4306:341:6::0;5037:40:0::1;2013:10:4::0;5111:1:0::1;5088:20:::0;;;:6:::1;:20;::::0;;;;;;;:24;;;5123:11:::1;::::0;5148:12:::1;::::0;5123:60;;-1:-1:-1;;;5123:60:0;;-1:-1:-1;;;;;5148:12:0;;::::1;5123:60;::::0;::::1;4132:51:6::0;4199:18;;;4192:60;;;;4268:18;;;4261:34;;;5123:60:0;;:11;::::1;::::0;:24:::1;::::0;4105:18:6;;;;;5088:20:0;5123:60;;;;;;;;:11;:60:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4978:213;4930:261:::0;:::o;14:173:6:-;82:20;;-1:-1:-1;;;;;131:31:6;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:6:o;565:849::-;662:6;670;678;686;694;747:3;735:9;726:7;722:23;718:33;715:53;;;764:1;761;754:12;715:53;787:29;806:9;787:29;:::i;:::-;777:39;;835:38;869:2;858:9;854:18;835:38;:::i;:::-;825:48;-1:-1:-1;942:2:6;927:18;;914:32;;-1:-1:-1;1021:2:6;1006:18;;993:32;1048:18;1037:30;;1034:50;;;1080:1;1077;1070:12;1034:50;1103:22;;1156:4;1148:13;;1144:27;-1:-1:-1;1134:55:6;;1185:1;1182;1175:12;1134:55;1225:2;1212:16;1251:18;1243:6;1240:30;1237:50;;;1283:1;1280;1273:12;1237:50;1328:7;1323:2;1314:6;1310:2;1306:15;1302:24;1299:37;1296:57;;;1349:1;1346;1339:12;1296:57;565:849;;;;-1:-1:-1;565:849:6;;-1:-1:-1;;;1380:2:6;1372:11;;1402:6;565:849::o;1626:226::-;1685:6;1738:2;1726:9;1717:7;1713:23;1709:32;1706:52;;;1754:1;1751;1744:12;1706:52;-1:-1:-1;1799:23:6;;1626:226;-1:-1:-1;1626:226:6:o;2510:127::-;2571:10;2566:3;2562:20;2559:1;2552:31;2602:4;2599:1;2592:15;2626:4;2623:1;2616:15;2642:128;2709:9;;;2730:11;;;2727:37;;;2744:18;;:::i;:::-;2642:128;;;;:::o;2775:168::-;2848:9;;;2879;;2896:15;;;2890:22;;2876:37;2866:71;;2917:18;;:::i;2948:217::-;2988:1;3014;3004:132;;3058:10;3053:3;3049:20;3046:1;3039:31;3093:4;3090:1;3083:15;3121:4;3118:1;3111:15;3004:132;-1:-1:-1;3150:9:6;;2948:217::o;3170:125::-;3235:9;;;3256:10;;;3253:36;;;3269:18;;:::i;3300:135::-;3339:3;3360:17;;;3357:43;;3380:18;;:::i;:::-;-1:-1:-1;3427:1:6;3416:13;;3300:135::o;3789:136::-;3828:3;3856:5;3846:39;;3865:18;;:::i;:::-;-1:-1:-1;;;3901:18:6;;3789:136::o;4652:277::-;4719:6;4772:2;4760:9;4751:7;4747:23;4743:32;4740:52;;;4788:1;4785;4778:12;4740:52;4820:9;4814:16;4873:5;4866:13;4859:21;4852:5;4849:32;4839:60;;4895:1;4892;4885:12"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "380800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"available(address)": "infinite",
								"balanceOf(address)": "2527",
								"lastUpdateTime(address)": "2550",
								"nft()": "2335",
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"redeem()": "infinite",
								"rewardPerTokenPerDay()": "2350",
								"rewardToken()": "2424",
								"rewardWallet()": "2446",
								"stake(uint256)": "infinite",
								"withdraw(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 2582,
									"end": 5500,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 2582,
									"end": 5500,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2582,
									"end": 5500,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 3294,
									"end": 3630,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 3294,
									"end": 3630,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3457,
									"end": 3460,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3457,
									"end": 3482,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3457,
									"end": 3482,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 3457,
									"end": 3482,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3457,
									"end": 3482,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3457,
									"end": 3482,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 3457,
									"end": 3482,
									"name": "SWAP7",
									"source": 0
								},
								{
									"begin": 3457,
									"end": 3482,
									"name": "DUP8",
									"source": 0
								},
								{
									"begin": 3457,
									"end": 3482,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3457,
									"end": 3482,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3457,
									"end": 3482,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3457,
									"end": 3482,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3457,
									"end": 3482,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 3493,
									"end": 3533,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3493,
									"end": 3533,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3493,
									"end": 3533,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 3493,
									"end": 3533,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3493,
									"end": 3533,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 3493,
									"end": 3533,
									"name": "DUP7",
									"source": 0
								},
								{
									"begin": 3493,
									"end": 3533,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3493,
									"end": 3533,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 3493,
									"end": 3533,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3493,
									"end": 3533,
									"name": "SWAP5",
									"source": 0
								},
								{
									"begin": 3493,
									"end": 3533,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3493,
									"end": 3533,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3493,
									"end": 3533,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3493,
									"end": 3533,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3544,
									"end": 3556,
									"name": "PUSH",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 3544,
									"end": 3578,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3544,
									"end": 3578,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3544,
									"end": 3578,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3544,
									"end": 3578,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3544,
									"end": 3578,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3544,
									"end": 3578,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3544,
									"end": 3578,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3544,
									"end": 3578,
									"name": "SWAP4",
									"source": 0
								},
								{
									"begin": 3544,
									"end": 3578,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3544,
									"end": 3578,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3544,
									"end": 3578,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3544,
									"end": 3578,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3589,
									"end": 3609,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 3589,
									"end": 3622,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 5500,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "8"
								},
								{
									"begin": 2582,
									"end": 5500,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 14,
									"end": 191,
									"name": "tag",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 14,
									"end": 191,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 93,
									"end": 106,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 93,
									"end": 106,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 135,
									"end": 166,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 135,
									"end": 166,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 125,
									"end": 167,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 125,
									"end": 167,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 115,
									"end": 185,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 181,
									"end": 182,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 178,
									"end": 179,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 171,
									"end": 183,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 115,
									"end": 185,
									"name": "tag",
									"source": 6,
									"value": "10"
								},
								{
									"begin": 115,
									"end": 185,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 14,
									"end": 191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 636,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 196,
									"end": 636,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 293,
									"end": 299,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 301,
									"end": 307,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 309,
									"end": 315,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 317,
									"end": 323,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 370,
									"end": 373,
									"name": "PUSH",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 358,
									"end": 367,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 349,
									"end": 356,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 345,
									"end": 368,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 341,
									"end": 374,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 338,
									"end": 391,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 338,
									"end": 391,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 338,
									"end": 391,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 387,
									"end": 388,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 384,
									"end": 385,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 377,
									"end": 389,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 338,
									"end": 391,
									"name": "tag",
									"source": 6,
									"value": "12"
								},
								{
									"begin": 338,
									"end": 391,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 410,
									"end": 450,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 440,
									"end": 449,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 410,
									"end": 450,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 410,
									"end": 450,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 410,
									"end": 450,
									"name": "tag",
									"source": 6,
									"value": "13"
								},
								{
									"begin": 410,
									"end": 450,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 400,
									"end": 450,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 400,
									"end": 450,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 469,
									"end": 518,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 514,
									"end": 516,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 503,
									"end": 512,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 499,
									"end": 517,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 469,
									"end": 518,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 469,
									"end": 518,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 469,
									"end": 518,
									"name": "tag",
									"source": 6,
									"value": "14"
								},
								{
									"begin": 469,
									"end": 518,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 459,
									"end": 518,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 459,
									"end": 518,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 537,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 582,
									"end": 584,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 571,
									"end": 580,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 567,
									"end": 585,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 537,
									"end": 586,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 537,
									"end": 586,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 537,
									"end": 586,
									"name": "tag",
									"source": 6,
									"value": "15"
								},
								{
									"begin": 537,
									"end": 586,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 626,
									"end": 628,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 611,
									"end": 629,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 611,
									"end": 629,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 611,
									"end": 629,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 611,
									"end": 629,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 605,
									"end": 630,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 196,
									"end": 636,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 196,
									"end": 636,
									"name": "SWAP7",
									"source": 6
								},
								{
									"begin": 196,
									"end": 636,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 196,
									"end": 636,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 196,
									"end": 636,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 196,
									"end": 636,
									"name": "tag",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 196,
									"end": 636,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2582,
									"end": 5500,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2582,
									"end": 5500,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 5500,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 2582,
									"end": 5500,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2582,
									"end": 5500,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 2582,
									"end": 5500,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2582,
									"end": 5500,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f110e4b4f082c754c2397783ac698a064cdee6c32be957f81cf45f7db40b006464736f6c634300081b0033",
									".code": [
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "47CCCA02"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "47CCCA02"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "A694FC3A"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "BE040FB0"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "F7C618C1"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "FB75B2C7"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "10098AD5"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "150B7A02"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "2CE9AEAD"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "2D6A1FA6"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "2E1A7D4D"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2582,
											"end": 5500,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 3921,
											"end": 4230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3921,
											"end": 4230,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 529,
											"end": 554,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 529,
											"end": 554,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 529,
											"end": 554,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 517,
											"end": 519,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 502,
											"end": 520,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 5199,
											"end": 5497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5199,
											"end": 5497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1581,
											"end": 1614,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1581,
											"end": 1614,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1581,
											"end": 1614,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1615,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1563,
											"end": 1615,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1551,
											"end": 1553,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1536,
											"end": 1554,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1419,
											"end": 1621,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2916,
											"end": 2965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2916,
											"end": 2965,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2801,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 2766,
											"end": 2801,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2801,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2766,
											"end": 2801,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2766,
											"end": 2801,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2801,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2766,
											"end": 2801,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4558,
											"end": 4852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4558,
											"end": 4852,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2036,
											"end": 2068,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2068,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2036,
											"end": 2068,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2018,
											"end": 2069,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2018,
											"end": 2069,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2006,
											"end": 2008,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1991,
											"end": 2009,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2645,
											"end": 2663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1857,
											"end": 2075,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 2865,
											"end": 2909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2865,
											"end": 2909,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4326,
											"end": 4444,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 4326,
											"end": 4444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4326,
											"end": 4444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4326,
											"end": 4444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4326,
											"end": 4444,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4326,
											"end": 4444,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4326,
											"end": 4444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 4326,
											"end": 4444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4326,
											"end": 4444,
											"name": "tag",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 4326,
											"end": 4444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4326,
											"end": 4444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4326,
											"end": 4444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4930,
											"end": 5191,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 4930,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4930,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4930,
											"end": 5191,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4930,
											"end": 5191,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2670,
											"end": 2695,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2702,
											"end": 2729,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3978,
											"end": 3985,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4052,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4038,
											"end": 4061,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3978,
											"end": 3985,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3978,
											"end": 3985,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4020,
											"end": 4061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4035,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4061,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4020,
											"end": 4061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4061,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4020,
											"end": 4061,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4151,
											"end": 4171,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4151,
											"end": 4171,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4086,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4099,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4108,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3998,
											"end": 4061,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3998,
											"end": 4061,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4072,
											"end": 4086,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4175,
											"end": 4180,
											"name": "PUSH",
											"source": 0,
											"value": "15180"
										},
										{
											"begin": 4175,
											"end": 4180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4151,
											"end": 4171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4090,
											"end": 4135,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3998,
											"end": 4061,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3998,
											"end": 4061,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4135,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4090,
											"end": 4135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4135,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 4090,
											"end": 4135,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4090,
											"end": 4171,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4171,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4171,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4090,
											"end": 4171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4090,
											"end": 4171,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4090,
											"end": 4171,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4089,
											"end": 4180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4180,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 4089,
											"end": 4180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4089,
											"end": 4180,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4089,
											"end": 4180,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4204,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4213,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4180,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4198,
											"end": 4222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4198,
											"end": 4222,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4180,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4072,
											"end": 4180,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4222,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 4198,
											"end": 4222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4198,
											"end": 4222,
											"name": "tag",
											"source": 0,
											"value": "67"
										},
										{
											"begin": 4198,
											"end": 4222,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4191,
											"end": 4222,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3921,
											"end": 4230,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3921,
											"end": 4230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5355,
											"end": 5361,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5344,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3700,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3710,
											"end": 3717,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3700,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3700,
											"end": 3718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3700,
											"end": 3718,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3700,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3688,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3718,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3718,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3718,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3743,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3755,
											"end": 3770,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3770,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5395,
											"name": "DUP9",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5386,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5374,
											"end": 5395,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5395,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5395,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5395,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5395,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5402,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5402,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5374,
											"end": 5402,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5402,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5402,
											"name": "DUP12",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5402,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5402,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5402,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5402,
											"modifierDepth": 1,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5402,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5374,
											"end": 5402,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5428,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5422,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5413,
											"end": 5428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5428,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5428,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5428,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5428,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5428,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5430,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5430,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5430,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5430,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5413,
											"end": 5430,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5430,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5413,
											"end": 5430,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5430,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 5413,
											"end": 5430,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5430,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5430,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5413,
											"end": 5430,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A85BD01"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5448,
											"end": 5489,
											"name": "SWAP9",
											"source": 0
										},
										{
											"begin": 5199,
											"end": 5497,
											"name": "SWAP8",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5199,
											"end": 5497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2013,
											"end": 2023,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3700,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3710,
											"end": 3717,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3700,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3700,
											"end": 3718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3700,
											"end": 3718,
											"name": "tag",
											"source": 0,
											"value": "77"
										},
										{
											"begin": 3700,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3688,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3718,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3718,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3718,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3743,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3755,
											"end": 3770,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3770,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4663,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4663,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4663,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4642,
											"end": 4663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4663,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4663,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4663,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4663,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4663,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4642,
											"end": 4663,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2013,
											"end": 2023,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4642,
											"end": 4679,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4634,
											"end": 4704,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4634,
											"end": 4704,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4634,
											"end": 4704,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3642,
											"end": 3644,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4634,
											"end": 4704,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3624,
											"end": 3645,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3681,
											"end": 3683,
											"name": "PUSH",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 3661,
											"end": 3679,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3661,
											"end": 3679,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3661,
											"end": 3679,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3654,
											"end": 3684,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2A37B5B2B71034B9903737BA1039BA30B5B2B217"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "61"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3700,
											"end": 3718,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 3700,
											"end": 3718,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3700,
											"end": 3718,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3693,
											"end": 3743,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 3760,
											"end": 3778,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 4634,
											"end": 4704,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4722,
											"end": 4743,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4722,
											"end": 4743,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4722,
											"end": 4743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4722,
											"end": 4743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4722,
											"end": 4734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4722,
											"end": 4743,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4722,
											"end": 4743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4722,
											"end": 4743,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4722,
											"end": 4743,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4722,
											"end": 4743,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4722,
											"end": 4743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4722,
											"end": 4743,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4722,
											"end": 4743,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4715,
											"end": 4743,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4715,
											"end": 4743,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4715,
											"end": 4743,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4715,
											"end": 4743,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4715,
											"end": 4743,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2013,
											"end": 2023,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4754,
											"end": 4777,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4777,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 4754,
											"end": 4777,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4777,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4777,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4777,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4777,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4779,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4779,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4779,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4779,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4754,
											"end": 4779,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4779,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 4754,
											"end": 4779,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4779,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 4754,
											"end": 4779,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4779,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4779,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4754,
											"end": 4779,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4790,
											"end": 4793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4793,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4793,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4790,
											"end": 4844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4790,
											"end": 4844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4815,
											"end": 4819,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4790,
											"end": 4844,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4132,
											"end": 4183,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2013,
											"end": 2023,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4192,
											"end": 4252,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4268,
											"end": 4286,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4268,
											"end": 4286,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4268,
											"end": 4286,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4261,
											"end": 4295,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4261,
											"end": 4295,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4261,
											"end": 4295,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4790,
											"end": 4844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4790,
											"end": 4793,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4793,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4793,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4806,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4123,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4105,
											"end": 4123,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4105,
											"end": 4123,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4105,
											"end": 4123,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4105,
											"end": 4123,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 4790,
											"end": 4844,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4793,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4793,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4790,
											"end": 4844,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4852,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4558,
											"end": 4852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4326,
											"end": 4444,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 4326,
											"end": 4444,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4381,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4381,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4378,
											"end": 4381,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4398,
											"name": "PUSH",
											"source": 0,
											"value": "42842E0E"
										},
										{
											"begin": 2013,
											"end": 2023,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4150,
											"end": 4182,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4150,
											"end": 4182,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4150,
											"end": 4182,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4132,
											"end": 4183,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4421,
											"end": 4425,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4192,
											"end": 4252,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4268,
											"end": 4286,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4268,
											"end": 4286,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4268,
											"end": 4286,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4261,
											"end": 4295,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4261,
											"end": 4295,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4261,
											"end": 4295,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4105,
											"end": 4123,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4105,
											"end": 4123,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4378,
											"end": 4436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4326,
											"end": 4444,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4326,
											"end": 4444,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4930,
											"end": 5191,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4930,
											"end": 5191,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2013,
											"end": 2023,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3700,
											"end": 3718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3710,
											"end": 3717,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3700,
											"end": 3709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3700,
											"end": 3718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3700,
											"end": 3718,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3700,
											"end": 3718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3688,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3697,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3718,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3718,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": 3682,
											"end": 3718,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3743,
											"name": "PUSH",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3752,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3755,
											"end": 3770,
											"name": "TIMESTAMP",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3770,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3729,
											"end": 3770,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2013,
											"end": 2023,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5006,
											"end": 5026,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5006,
											"end": 5026,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5006,
											"end": 5026,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5006,
											"end": 5026,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5006,
											"end": 5026,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5077,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 5037,
											"end": 5077,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5037,
											"end": 5077,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5037,
											"end": 5077,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5077,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4508,
											"end": 4510,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5037,
											"end": 5077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5037,
											"end": 5077,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5037,
											"end": 5077,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4490,
											"end": 4511,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4547,
											"end": 4549,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 4527,
											"end": 4545,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4527,
											"end": 4545,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4527,
											"end": 4545,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4520,
											"end": 4550,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4E6F7468696E6720746F2072656465656D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "78"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4566,
											"end": 4584,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4566,
											"end": 4584,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4566,
											"end": 4584,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4559,
											"end": 4606,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4623,
											"end": 4641,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5037,
											"end": 5077,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 4306,
											"end": 4647,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5037,
											"end": 5077,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 5037,
											"end": 5077,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2013,
											"end": 2023,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 5111,
											"end": 5112,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5088,
											"end": 5108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5088,
											"end": 5108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5088,
											"end": 5108,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5088,
											"end": 5094,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5088,
											"end": 5108,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 5088,
											"end": 5108,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5088,
											"end": 5108,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5088,
											"end": 5108,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5088,
											"end": 5108,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5088,
											"end": 5108,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5088,
											"end": 5108,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5088,
											"end": 5108,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 5088,
											"end": 5112,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5088,
											"end": 5112,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5088,
											"end": 5112,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5134,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 5123,
											"end": 5134,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5148,
											"end": 5160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 5148,
											"end": 5160,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5123,
											"end": 5183,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5148,
											"end": 5160,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5148,
											"end": 5160,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5148,
											"end": 5160,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5123,
											"end": 5183,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4132,
											"end": 4183,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4199,
											"end": 4217,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4192,
											"end": 4252,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 4192,
											"end": 4252,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4192,
											"end": 4252,
											"name": "SWAP7",
											"source": 6
										},
										{
											"begin": 4192,
											"end": 4252,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4268,
											"end": 4286,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 4268,
											"end": 4286,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4268,
											"end": 4286,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4261,
											"end": 4295,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4261,
											"end": 4295,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4261,
											"end": 4295,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5123,
											"end": 5183,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5134,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5134,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5134,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5147,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "23B872DD"
										},
										{
											"begin": 5123,
											"end": 5147,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4105,
											"end": 4123,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 4105,
											"end": 4123,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4105,
											"end": 4123,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4105,
											"end": 4123,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4105,
											"end": 4123,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 5088,
											"end": 5108,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5134,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 5123,
											"end": 5183,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "111"
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5123,
											"end": 5183,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4978,
											"end": 5191,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4930,
											"end": 5191,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4930,
											"end": 5191,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 14,
											"end": 187,
											"name": "tag",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 14,
											"end": 187,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 82,
											"end": 102,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 82,
											"end": 102,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 131,
											"end": 162,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 131,
											"end": 162,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 121,
											"end": 163,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 121,
											"end": 163,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 111,
											"end": 181,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 177,
											"end": 178,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 174,
											"end": 175,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 167,
											"end": 179,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 111,
											"end": 181,
											"name": "tag",
											"source": 6,
											"value": "118"
										},
										{
											"begin": 111,
											"end": 181,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 14,
											"end": 187,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 14,
											"end": 187,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 14,
											"end": 187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 192,
											"end": 378,
											"name": "tag",
											"source": 6,
											"value": "17"
										},
										{
											"begin": 192,
											"end": 378,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 251,
											"end": 257,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 304,
											"end": 306,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 292,
											"end": 301,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 283,
											"end": 290,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 279,
											"end": 302,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 275,
											"end": 307,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 272,
											"end": 324,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 272,
											"end": 324,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 320,
											"end": 321,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 317,
											"end": 318,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 310,
											"end": 322,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 272,
											"end": 324,
											"name": "tag",
											"source": 6,
											"value": "120"
										},
										{
											"begin": 272,
											"end": 324,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 362,
											"end": 371,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 343,
											"end": 372,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 343,
											"end": 372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 343,
											"end": 372,
											"name": "tag",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 343,
											"end": 372,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 333,
											"end": 372,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 192,
											"end": 378,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 192,
											"end": 378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 565,
											"end": 1414,
											"name": "tag",
											"source": 6,
											"value": "23"
										},
										{
											"begin": 565,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 662,
											"end": 668,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 670,
											"end": 676,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 678,
											"end": 684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 686,
											"end": 692,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 694,
											"end": 700,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 747,
											"end": 750,
											"name": "PUSH",
											"source": 6,
											"value": "80"
										},
										{
											"begin": 735,
											"end": 744,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 726,
											"end": 733,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 722,
											"end": 745,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 718,
											"end": 751,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 715,
											"end": 768,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 715,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 715,
											"end": 768,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 764,
											"end": 765,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 761,
											"end": 762,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 754,
											"end": 766,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 715,
											"end": 768,
											"name": "tag",
											"source": 6,
											"value": "124"
										},
										{
											"begin": 715,
											"end": 768,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 787,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 806,
											"end": 815,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 787,
											"end": 816,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 787,
											"end": 816,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 787,
											"end": 816,
											"name": "tag",
											"source": 6,
											"value": "125"
										},
										{
											"begin": 787,
											"end": 816,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 777,
											"end": 816,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 777,
											"end": 816,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 835,
											"end": 873,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 869,
											"end": 871,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 858,
											"end": 867,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 854,
											"end": 872,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 835,
											"end": 873,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "114"
										},
										{
											"begin": 835,
											"end": 873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 835,
											"end": 873,
											"name": "tag",
											"source": 6,
											"value": "126"
										},
										{
											"begin": 835,
											"end": 873,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 825,
											"end": 873,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 942,
											"end": 944,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 927,
											"end": 945,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 927,
											"end": 945,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 914,
											"end": 946,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 914,
											"end": 946,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1021,
											"end": 1023,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 1006,
											"end": 1024,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1006,
											"end": 1024,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 993,
											"end": 1025,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1048,
											"end": 1066,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1037,
											"end": 1067,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1037,
											"end": 1067,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1034,
											"end": 1084,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1034,
											"end": 1084,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 1034,
											"end": 1084,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1080,
											"end": 1081,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1077,
											"end": 1078,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1070,
											"end": 1082,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1034,
											"end": 1084,
											"name": "tag",
											"source": 6,
											"value": "127"
										},
										{
											"begin": 1034,
											"end": 1084,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1103,
											"end": 1125,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 1103,
											"end": 1125,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1156,
											"end": 1160,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 1148,
											"end": 1161,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1148,
											"end": 1161,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1144,
											"end": 1171,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 1134,
											"end": 1189,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1134,
											"end": 1189,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1185,
											"end": 1186,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1182,
											"end": 1183,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1175,
											"end": 1187,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1134,
											"end": 1189,
											"name": "tag",
											"source": 6,
											"value": "128"
										},
										{
											"begin": 1134,
											"end": 1189,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1225,
											"end": 1227,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1212,
											"end": 1228,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1251,
											"end": 1269,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1243,
											"end": 1249,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1240,
											"end": 1270,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1237,
											"end": 1287,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1237,
											"end": 1287,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1237,
											"end": 1287,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1283,
											"end": 1284,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1280,
											"end": 1281,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1285,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1237,
											"end": 1287,
											"name": "tag",
											"source": 6,
											"value": "129"
										},
										{
											"begin": 1237,
											"end": 1287,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1328,
											"end": 1335,
											"name": "DUP9",
											"source": 6
										},
										{
											"begin": 1323,
											"end": 1325,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1314,
											"end": 1320,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1310,
											"end": 1312,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1306,
											"end": 1321,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1302,
											"end": 1326,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1299,
											"end": 1336,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 1296,
											"end": 1353,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1296,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1296,
											"end": 1353,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1349,
											"end": 1350,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1346,
											"end": 1347,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1339,
											"end": 1351,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1296,
											"end": 1353,
											"name": "tag",
											"source": 6,
											"value": "130"
										},
										{
											"begin": 1296,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 565,
											"end": 1414,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": 565,
											"end": 1414,
											"name": "SWAP9",
											"source": 6
										},
										{
											"begin": 565,
											"end": 1414,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 565,
											"end": 1414,
											"name": "SWAP8",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 565,
											"end": 1414,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 565,
											"end": 1414,
											"name": "SWAP6",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1380,
											"end": 1382,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1372,
											"end": 1383,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1372,
											"end": 1383,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1402,
											"end": 1408,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 565,
											"end": 1414,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1626,
											"end": 1852,
											"name": "tag",
											"source": 6,
											"value": "36"
										},
										{
											"begin": 1626,
											"end": 1852,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1685,
											"end": 1691,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1738,
											"end": 1740,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1726,
											"end": 1735,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1717,
											"end": 1724,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1709,
											"end": 1741,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 1706,
											"end": 1758,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1706,
											"end": 1758,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1706,
											"end": 1758,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1754,
											"end": 1755,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1751,
											"end": 1752,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1744,
											"end": 1756,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1706,
											"end": 1758,
											"name": "tag",
											"source": 6,
											"value": "133"
										},
										{
											"begin": 1706,
											"end": 1758,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1799,
											"end": 1822,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1799,
											"end": 1822,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1626,
											"end": 1852,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1626,
											"end": 1852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2510,
											"end": 2637,
											"name": "tag",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 2510,
											"end": 2637,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2571,
											"end": 2581,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 2566,
											"end": 2569,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 2562,
											"end": 2582,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 2559,
											"end": 2560,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2552,
											"end": 2583,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2602,
											"end": 2606,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 2599,
											"end": 2600,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 2592,
											"end": 2607,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 2626,
											"end": 2630,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 2623,
											"end": 2624,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2616,
											"end": 2631,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2642,
											"end": 2770,
											"name": "tag",
											"source": 6,
											"value": "61"
										},
										{
											"begin": 2642,
											"end": 2770,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2709,
											"end": 2718,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2709,
											"end": 2718,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2709,
											"end": 2718,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2730,
											"end": 2741,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2730,
											"end": 2741,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2730,
											"end": 2741,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 2727,
											"end": 2764,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2727,
											"end": 2764,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2727,
											"end": 2764,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2762,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2744,
											"end": 2762,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 2744,
											"end": 2762,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2762,
											"name": "tag",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2744,
											"end": 2762,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2642,
											"end": 2770,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2642,
											"end": 2770,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2642,
											"end": 2770,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2642,
											"end": 2770,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2642,
											"end": 2770,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2775,
											"end": 2943,
											"name": "tag",
											"source": 6,
											"value": "63"
										},
										{
											"begin": 2775,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2848,
											"end": 2857,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2848,
											"end": 2857,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2848,
											"end": 2857,
											"name": "MUL",
											"source": 6
										},
										{
											"begin": 2879,
											"end": 2888,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2879,
											"end": 2888,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2896,
											"end": 2911,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2896,
											"end": 2911,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2896,
											"end": 2911,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 2890,
											"end": 2912,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 2890,
											"end": 2912,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2876,
											"end": 2913,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 2866,
											"end": 2937,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2866,
											"end": 2937,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2917,
											"end": 2935,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 2917,
											"end": 2935,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 2917,
											"end": 2935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 3165,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 2948,
											"end": 3165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2988,
											"end": 2989,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3014,
											"end": 3015,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3136,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 3004,
											"end": 3136,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3058,
											"end": 3068,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B71"
										},
										{
											"begin": 3053,
											"end": 3056,
											"name": "PUSH",
											"source": 6,
											"value": "E0"
										},
										{
											"begin": 3049,
											"end": 3069,
											"name": "SHL",
											"source": 6
										},
										{
											"begin": 3046,
											"end": 3047,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3039,
											"end": 3070,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3093,
											"end": 3097,
											"name": "PUSH",
											"source": 6,
											"value": "12"
										},
										{
											"begin": 3090,
											"end": 3091,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3083,
											"end": 3098,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3121,
											"end": 3125,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 3118,
											"end": 3119,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3111,
											"end": 3126,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 3004,
											"end": 3136,
											"name": "tag",
											"source": 6,
											"value": "145"
										},
										{
											"begin": 3004,
											"end": 3136,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3150,
											"end": 3159,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 3150,
											"end": 3159,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2948,
											"end": 3165,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3170,
											"end": 3295,
											"name": "tag",
											"source": 6,
											"value": "68"
										},
										{
											"begin": 3170,
											"end": 3295,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3244,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3244,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3235,
											"end": 3244,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3266,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3266,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3256,
											"end": 3266,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3289,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3253,
											"end": 3289,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 3253,
											"end": 3289,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3269,
											"end": 3287,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "140"
										},
										{
											"begin": 3269,
											"end": 3287,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3269,
											"end": 3287,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3300,
											"end": 3435,
											"name": "tag",
											"source": 6,
											"value": "73"
										},
										{
											"begin": 3300,
											"end": 3435,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3342,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3360,
											"end": 3377,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3360,
											"end": 3377,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3360,
											"end": 3377,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3357,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 3357,
											"end": 3400,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3380,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 3380,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3380,
											"end": 3398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3380,
											"end": 3398,
											"name": "tag",
											"source": 6,
											"value": "151"
										},
										{
											"begin": 3380,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3427,
											"end": 3428,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3416,
											"end": 3429,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3416,
											"end": 3429,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3300,
											"end": 3435,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3789,
											"end": 3925,
											"name": "tag",
											"source": 6,
											"value": "85"
										},
										{
											"begin": 3789,
											"end": 3925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3828,
											"end": 3831,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3856,
											"end": 3861,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3846,
											"end": 3885,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3846,
											"end": 3885,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3865,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "115"
										},
										{
											"begin": 3865,
											"end": 3883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3865,
											"end": 3883,
											"name": "tag",
											"source": 6,
											"value": "155"
										},
										{
											"begin": 3865,
											"end": 3883,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3901,
											"end": 3919,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3789,
											"end": 3925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4652,
											"end": 4929,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 4652,
											"end": 4929,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4719,
											"end": 4725,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4772,
											"end": 4774,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4760,
											"end": 4769,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4751,
											"end": 4758,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4747,
											"end": 4770,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4743,
											"end": 4775,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4740,
											"end": 4792,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4740,
											"end": 4792,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 4740,
											"end": 4792,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4788,
											"end": 4789,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4785,
											"end": 4786,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4778,
											"end": 4790,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 4740,
											"end": 4792,
											"name": "tag",
											"source": 6,
											"value": "159"
										},
										{
											"begin": 4740,
											"end": 4792,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4820,
											"end": 4829,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4814,
											"end": 4830,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 4873,
											"end": 4878,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 4866,
											"end": 4879,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4859,
											"end": 4880,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4852,
											"end": 4857,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4849,
											"end": 4881,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 4839,
											"end": 4899,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "121"
										},
										{
											"begin": 4839,
											"end": 4899,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4895,
											"end": 4896,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4892,
											"end": 4893,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4885,
											"end": 4897,
											"name": "REVERT",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol",
								"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721.sol",
								"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
								"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol",
								"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"available(address)": "10098ad5",
							"balanceOf(address)": "70a08231",
							"lastUpdateTime(address)": "2ce9aead",
							"nft()": "47ccca02",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"redeem()": "be040fb0",
							"rewardPerTokenPerDay()": "2d6a1fa6",
							"rewardToken()": "f7c618c1",
							"rewardWallet()": "fb75b2c7",
							"stake(uint256)": "a694fc3a",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nftAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"rewardWalletAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"rewardRate\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"available\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastUpdateTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nft\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"redeem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardPerTokenPerDay\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardWallet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Breakthrough Labs Inc.\",\"custom:address\":\"51\",\"custom:default-precision\":\"0\",\"custom:simple-description\":\"NFT staking contract that rewards stakers with an exact number of ERC20 tokens per day.\",\"custom:version\":\"1.0.0\",\"details\":\"NFT staking contract that rewards stakers with an exact number of ERC20 tokens per day. On deployment, the owner specifies a daily reward rate, and an address that tokens will be pulled from. Neither of these can be changed. Each staked NFT receives the same number of tokens every day. The per NFT rate stays the same even when the number of staked NFTs increases/decreases. A common usecase is for blockchain-based games, where each NFT rewards a certain number of lives per day.\",\"kind\":\"dev\",\"methods\":{\"available(address)\":{\"details\":\"returns the number of reward tokens available for an address\",\"params\":{\"account\":\"account\"}},\"constructor\":{\"params\":{\"nftAddress\":\"Staked NFT Address\",\"rewardRate\":\"# of tokens per staked NFT per day | precision:18\",\"rewardTokenAddress\":\"Reward Token Address\",\"rewardWalletAddress\":\"Wallet that holds rewards to be paid out\"}},\"redeem()\":{\"details\":\"redeems all of a user's reward tokens.\"},\"stake(uint256)\":{\"details\":\"stakes a specific tokenID\",\"params\":{\"tokenId\":\"tokenId\"}},\"withdraw(uint256)\":{\"details\":\"withdraws a token from the staking contract\",\"params\":{\"tokenId\":\"tokenId\"}}},\"stateVariables\":{\"rewardPerTokenPerDay\":{\"custom:precision\":\"18\"}},\"title\":\"NFT Staking with Infinite Rewards\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Staking, NFT, ERC721\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":\"NFTStakingPerToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol\":{\"keccak256\":\"0x70f4fd5f6c305f9eb44e883cd054cc304264dba768f4a0e299b0eaccf3525a3d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a9a6be26926c9424530d162590e53331654a40649de81e91e52aea1debca4232\",\"dweb:/ipfs/QmcmEm92goGguPYSkvifeat2J7yB6V46ytDSsmv8LtnaN2\"]},\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c5aa4dacc753e5375a0e19b159849e82b020052579b4a546669585041fc3777\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eab50e4c7cceee5d032da46f15c9e732039464f58cd2c6466ce14950af5fb860\",\"dweb:/ipfs/QmQgzjQ8TWyWAGsv5e4f1fWm5wpizQvUqCVUsjkkR4Ru22\"]},\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xde5e97f248f6fc86c870a25d11f75cdd818c2a3aafed34ae8f0feaf241d2c5b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9bd8ae9da43450817d47f6580b9b2de592263fb20360d0a683ab8ed3152fdda1\",\"dweb:/ipfs/QmZCCnyP6RNLNXRkpUnJaQjuHUa4NZZuDQmJofmbgkQMfQ\"]},\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x225d4e860183e7d82ef25b0c31b579e87ac0964c382fef8c92a3fbca818d590d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://752c834b7d33c5ab675d958a87c79622401327d3e1e28284851b5cc3fdc3b0a4\",\"dweb:/ipfs/Qmb5qK7mmQ6PpWQXZDFXNyL2os9fjGtgLJyg3cQN5B2PVG\"]},\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xaabd25ddbc91c7c09b05e6fb7eb79d1851e509fa21a405100967568542e1c08b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://911616537df7b67957a53adb57c4e02542c4a0f1388f367ff7c56303fddfea26\",\"dweb:/ipfs/QmXNsCDS4aHhN4Li9DUZ36w7XHu7wp2pkjfqSM8b9UdGry\"]},\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x668ff4050c0126670a9f09988abf10045122365391d356080aff18c6c78002c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://933bcc6a8ab217cd9943c4f3fbb615b6a6c1f0a7af06a3a5a82f9de743c85641\",\"dweb:/ipfs/QmZCW29EG1VpLJNJfMq4ajxii3S5cByPW8UabbCqnK6yiK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 13,
								"contract": "nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol:NFTStakingPerToken",
								"label": "nft",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC721)457"
							},
							{
								"astId": 16,
								"contract": "nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol:NFTStakingPerToken",
								"label": "rewardToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)341"
							},
							{
								"astId": 18,
								"contract": "nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol:NFTStakingPerToken",
								"label": "rewardWallet",
								"offset": 0,
								"slot": "2",
								"type": "t_address"
							},
							{
								"astId": 21,
								"contract": "nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol:NFTStakingPerToken",
								"label": "rewardPerTokenPerDay",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 25,
								"contract": "nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol:NFTStakingPerToken",
								"label": "stakedTokens",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 29,
								"contract": "nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol:NFTStakingPerToken",
								"label": "balanceOf",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 33,
								"contract": "nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol:NFTStakingPerToken",
								"label": "lastUpdateTime",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 37,
								"contract": "nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol:NFTStakingPerToken",
								"label": "reward",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)341": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721)457": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"notice": "Staking, NFT, ERC721",
						"version": 1
					}
				}
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5c5aa4dacc753e5375a0e19b159849e82b020052579b4a546669585041fc3777\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eab50e4c7cceee5d032da46f15c9e732039464f58cd2c6466ce14950af5fb860\",\"dweb:/ipfs/QmQgzjQ8TWyWAGsv5e4f1fWm5wpizQvUqCVUsjkkR4Ru22\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xde5e97f248f6fc86c870a25d11f75cdd818c2a3aafed34ae8f0feaf241d2c5b5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9bd8ae9da43450817d47f6580b9b2de592263fb20360d0a683ab8ed3152fdda1\",\"dweb:/ipfs/QmZCCnyP6RNLNXRkpUnJaQjuHUa4NZZuDQmJofmbgkQMfQ\"]},\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x668ff4050c0126670a9f09988abf10045122365391d356080aff18c6c78002c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://933bcc6a8ab217cd9943c4f3fbb615b6a6c1f0a7af06a3a5a82f9de743c85641\",\"dweb:/ipfs/QmZCW29EG1VpLJNJfMq4ajxii3S5cByPW8UabbCqnK6yiK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"IERC721Receiver": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.",
						"kind": "dev",
						"methods": {
							"onERC721Received(address,address,uint256,bytes)": {
								"details": "Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
							}
						},
						"title": "ERC721 token receiver interface",
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for any contract that wants to support safeTransfers from ERC721 asset contracts.\",\"kind\":\"dev\",\"methods\":{\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom} by `operator` from `from`, this function is called. It must return its Solidity selector to confirm the token transfer. If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted. The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`.\"}},\"title\":\"ERC721 token receiver interface\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":\"IERC721Receiver\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x225d4e860183e7d82ef25b0c31b579e87ac0964c382fef8c92a3fbca818d590d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://752c834b7d33c5ab675d958a87c79622401327d3e1e28284851b5cc3fdc3b0a4\",\"dweb:/ipfs/Qmb5qK7mmQ6PpWQXZDFXNyL2os9fjGtgLJyg3cQN5B2PVG\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xaabd25ddbc91c7c09b05e6fb7eb79d1851e509fa21a405100967568542e1c08b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://911616537df7b67957a53adb57c4e02542c4a0f1388f367ff7c56303fddfea26\",\"dweb:/ipfs/QmXNsCDS4aHhN4Li9DUZ36w7XHu7wp2pkjfqSM8b9UdGry\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.27+commit.40a35a09\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x668ff4050c0126670a9f09988abf10045122365391d356080aff18c6c78002c1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://933bcc6a8ab217cd9943c4f3fbb615b6a6c1f0a7af06a3a5a82f9de743c85641\",\"dweb:/ipfs/QmZCW29EG1VpLJNJfMq4ajxii3S5cByPW8UabbCqnK6yiK\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol": {
				"ast": {
					"absolutePath": "nft-staking-with-infinite-rewards(copy)/nft-staking-with-infinite-rewards.sol",
					"exportedSymbols": {
						"Context": [
							497
						],
						"IERC165": [
							509
						],
						"IERC20": [
							341
						],
						"IERC721": [
							457
						],
						"IERC721Receiver": [
							475
						],
						"NFTStakingPerToken": [
							263
						]
					},
					"id": 264,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1344:23:0"
						},
						{
							"absolutePath": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol",
							"file": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 264,
							"sourceUnit": 498,
							"src": "1371:85:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 264,
							"sourceUnit": 342,
							"src": "1458:90:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 264,
							"sourceUnit": 458,
							"src": "1550:92:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"file": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 264,
							"sourceUnit": 476,
							"src": "1644:100:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Context",
										"nameLocations": [
											"2613:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 497,
										"src": "2613:7:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "2613:7:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IERC721Receiver",
										"nameLocations": [
											"2622:15:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 475,
										"src": "2622:15:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "2622:15:0"
								}
							],
							"canonicalName": "NFTStakingPerToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "1748:832:0",
								"text": " @title NFT Staking with Infinite Rewards\n @author Breakthrough Labs Inc.\n @notice Staking, NFT, ERC721\n @custom:version 1.0.0\n @custom:address 51\n @custom:default-precision 0\n @custom:simple-description NFT staking contract that rewards stakers with an exact number of ERC20 tokens per day.\n @dev NFT staking contract that rewards stakers with an exact number of ERC20 tokens per day. On deployment, the owner specifies a daily reward rate,\n and an address that tokens will be pulled from. Neither of these can be changed. Each staked NFT receives the same number of tokens every day. The per NFT\n rate stays the same even when the number of staked NFTs increases/decreases.\n A common usecase is for blockchain-based games, where each NFT rewards a certain number of lives per day."
							},
							"fullyImplemented": true,
							"id": 263,
							"linearizedBaseContracts": [
								263,
								475,
								497
							],
							"name": "NFTStakingPerToken",
							"nameLocation": "2591:18:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "47ccca02",
									"id": 13,
									"mutability": "mutable",
									"name": "nft",
									"nameLocation": "2660:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 263,
									"src": "2645:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721_$457",
										"typeString": "contract IERC721"
									},
									"typeName": {
										"id": 12,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 11,
											"name": "IERC721",
											"nameLocations": [
												"2645:7:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 457,
											"src": "2645:7:0"
										},
										"referencedDeclaration": 457,
										"src": "2645:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$457",
											"typeString": "contract IERC721"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "f7c618c1",
									"id": 16,
									"mutability": "mutable",
									"name": "rewardToken",
									"nameLocation": "2684:11:0",
									"nodeType": "VariableDeclaration",
									"scope": 263,
									"src": "2670:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$341",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 15,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 14,
											"name": "IERC20",
											"nameLocations": [
												"2670:6:0"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 341,
											"src": "2670:6:0"
										},
										"referencedDeclaration": 341,
										"src": "2670:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$341",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fb75b2c7",
									"id": 18,
									"mutability": "mutable",
									"name": "rewardWallet",
									"nameLocation": "2717:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 263,
									"src": "2702:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 17,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "2702:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "2736:24:0",
										"text": "@custom:precision 18"
									},
									"functionSelector": "2d6a1fa6",
									"id": 21,
									"mutability": "mutable",
									"name": "rewardPerTokenPerDay",
									"nameLocation": "2781:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 263,
									"src": "2766:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 20,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2766:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 25,
									"mutability": "mutable",
									"name": "stakedTokens",
									"nameLocation": "2846:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 263,
									"src": "2810:48:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 24,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 22,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2818:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "2810:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 23,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2829:7:0",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "70a08231",
									"id": 29,
									"mutability": "mutable",
									"name": "balanceOf",
									"nameLocation": "2900:9:0",
									"nodeType": "VariableDeclaration",
									"scope": 263,
									"src": "2865:44:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 28,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 26,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2873:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2865:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 27,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2884:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "2ce9aead",
									"id": 33,
									"mutability": "mutable",
									"name": "lastUpdateTime",
									"nameLocation": "2951:14:0",
									"nodeType": "VariableDeclaration",
									"scope": 263,
									"src": "2916:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 32,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 30,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2924:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2916:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 31,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2935:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 37,
									"mutability": "mutable",
									"name": "reward",
									"nameLocation": "3008:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 263,
									"src": "2972:42:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 36,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 34,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "2980:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "2972:27:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 35,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "2991:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 69,
										"nodeType": "Block",
										"src": "3446:184:0",
										"statements": [
											{
												"expression": {
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 49,
														"name": "nft",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "3457:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$457",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 51,
																"name": "nftAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 40,
																"src": "3471:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 50,
															"name": "IERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 457,
															"src": "3463:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721_$457_$",
																"typeString": "type(contract IERC721)"
															}
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3463:19:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$457",
															"typeString": "contract IERC721"
														}
													},
													"src": "3457:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$457",
														"typeString": "contract IERC721"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "3457:25:0"
											},
											{
												"expression": {
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 55,
														"name": "rewardToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 16,
														"src": "3493:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$341",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 57,
																"name": "rewardTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 42,
																"src": "3514:18:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 56,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "3507:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$341_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 58,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3507:26:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$341",
															"typeString": "contract IERC20"
														}
													},
													"src": "3493:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$341",
														"typeString": "contract IERC20"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "3493:40:0"
											},
											{
												"expression": {
													"id": 63,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 61,
														"name": "rewardWallet",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 18,
														"src": "3544:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 62,
														"name": "rewardWalletAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 44,
														"src": "3559:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3544:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 64,
												"nodeType": "ExpressionStatement",
												"src": "3544:34:0"
											},
											{
												"expression": {
													"id": 67,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 65,
														"name": "rewardPerTokenPerDay",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 21,
														"src": "3589:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 66,
														"name": "rewardRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "3612:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3589:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 68,
												"nodeType": "ExpressionStatement",
												"src": "3589:33:0"
											}
										]
									},
									"documentation": {
										"id": 38,
										"nodeType": "StructuredDocumentation",
										"src": "3023:265:0",
										"text": " @param nftAddress  Staked NFT Address\n @param rewardTokenAddress Reward Token Address\n @param rewardWalletAddress Wallet that holds rewards to be paid out\n @param rewardRate # of tokens per staked NFT per day | precision:18"
									},
									"id": 70,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"mutability": "mutable",
												"name": "nftAddress",
												"nameLocation": "3324:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3316:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 39,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3316:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "rewardTokenAddress",
												"nameLocation": "3353:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3345:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"mutability": "mutable",
												"name": "rewardWalletAddress",
												"nameLocation": "3390:19:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3382:27:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3382:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "rewardRate",
												"nameLocation": "3428:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 70,
												"src": "3420:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3420:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3305:140:0"
									},
									"returnParameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3446:0:0"
									},
									"scope": 263,
									"src": "3294:336:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "3671:119:0",
										"statements": [
											{
												"expression": {
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 74,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "3682:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 76,
														"indexExpression": {
															"id": 75,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "3689:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3682:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 78,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 72,
																"src": "3710:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 77,
															"name": "available",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "3700:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																"typeString": "function (address) view returns (uint256)"
															}
														},
														"id": 79,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3700:18:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3682:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "3682:36:0"
											},
											{
												"expression": {
													"id": 87,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 82,
															"name": "lastUpdateTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "3729:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 84,
														"indexExpression": {
															"id": 83,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "3744:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3729:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 85,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3755:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 86,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3761:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "3755:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3729:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 88,
												"nodeType": "ExpressionStatement",
												"src": "3729:41:0"
											},
											{
												"id": 89,
												"nodeType": "PlaceholderStatement",
												"src": "3781:1:0"
											}
										]
									},
									"id": 91,
									"name": "update",
									"nameLocation": "3647:6:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3662:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3654:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 71,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3654:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3653:17:0"
									},
									"src": "3638:152:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 127,
										"nodeType": "Block",
										"src": "3987:243:0",
										"statements": [
											{
												"assignments": [
													100
												],
												"declarations": [
													{
														"constant": false,
														"id": 100,
														"mutability": "mutable",
														"name": "timeElapsed",
														"nameLocation": "4006:11:0",
														"nodeType": "VariableDeclaration",
														"scope": 127,
														"src": "3998:19:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 99,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3998:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 107,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 101,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "4020:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 102,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4026:9:0",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "4020:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"baseExpression": {
															"id": 103,
															"name": "lastUpdateTime",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "4038:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 105,
														"indexExpression": {
															"id": 104,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "4053:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4038:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4020:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3998:63:0"
											},
											{
												"assignments": [
													109
												],
												"declarations": [
													{
														"constant": false,
														"id": 109,
														"mutability": "mutable",
														"name": "earned",
														"nameLocation": "4080:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 127,
														"src": "4072:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 108,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4072:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 120,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 119,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 116,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 114,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"baseExpression": {
																			"id": 110,
																			"name": "balanceOf",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 29,
																			"src": "4090:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 112,
																		"indexExpression": {
																			"id": 111,
																			"name": "account",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 94,
																			"src": "4100:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "4090:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 113,
																		"name": "timeElapsed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 100,
																		"src": "4124:11:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4090:45:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 115,
																	"name": "rewardPerTokenPerDay",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 21,
																	"src": "4151:20:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4090:81:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 117,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4089:83:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "3836343030",
														"id": 118,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4175:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_86400_by_1",
															"typeString": "int_const 86400"
														},
														"value": "86400"
													},
													"src": "4089:91:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4072:108:0"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 125,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"baseExpression": {
															"id": 121,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "4198:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 123,
														"indexExpression": {
															"id": 122,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "4205:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4198:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 124,
														"name": "earned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 109,
														"src": "4216:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4198:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 98,
												"id": 126,
												"nodeType": "Return",
												"src": "4191:31:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "3798:117:0",
										"text": " @dev returns the number of reward tokens available for an address\n @param account account"
									},
									"functionSelector": "10098ad5",
									"id": 128,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "available",
									"nameLocation": "3930:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3948:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3940:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3939:17:0"
									},
									"returnParameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 128,
												"src": "3978:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 96,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3978:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3977:9:0"
									},
									"scope": 263,
									"src": "3921:309:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 146,
										"nodeType": "Block",
										"src": "4367:77:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 137,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "4399:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 138,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4399:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 141,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4421:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTStakingPerToken_$263",
																		"typeString": "contract NFTStakingPerToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTStakingPerToken_$263",
																		"typeString": "contract NFTStakingPerToken"
																	}
																],
																"id": 140,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4413:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 139,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4413:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 142,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4413:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 143,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "4428:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 134,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "4378:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$457",
																"typeString": "contract IERC721"
															}
														},
														"id": 136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4382:16:0",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 412,
														"src": "4378:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 144,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4378:58:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 145,
												"nodeType": "ExpressionStatement",
												"src": "4378:58:0"
											}
										]
									},
									"documentation": {
										"id": 129,
										"nodeType": "StructuredDocumentation",
										"src": "4238:82:0",
										"text": " @dev stakes a specific tokenID\n @param tokenId tokenId"
									},
									"functionSelector": "a694fc3a",
									"id": 147,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "stake",
									"nameLocation": "4335:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4349:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 147,
												"src": "4341:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4341:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4340:17:0"
									},
									"returnParameters": {
										"id": 133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4367:0:0"
									},
									"scope": 263,
									"src": "4326:118:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 190,
										"nodeType": "Block",
										"src": "4623:229:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 163,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 158,
																	"name": "stakedTokens",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 25,
																	"src": "4642:12:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 160,
																"indexExpression": {
																	"id": 159,
																	"name": "tokenId",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 150,
																	"src": "4655:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4642:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 161,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 487,
																	"src": "4667:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4667:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4642:37:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e206973206e6f74207374616b65642e",
															"id": 164,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4681:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7047e1907ec48195b0277350fe86675187cd3cbb8bd2baa58bb8272dc08b5034",
																"typeString": "literal_string \"Token is not staked.\""
															},
															"value": "Token is not staked."
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7047e1907ec48195b0277350fe86675187cd3cbb8bd2baa58bb8272dc08b5034",
																"typeString": "literal_string \"Token is not staked.\""
															}
														],
														"id": 157,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4634:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4634:70:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 166,
												"nodeType": "ExpressionStatement",
												"src": "4634:70:0"
											},
											{
												"expression": {
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "4715:28:0",
													"subExpression": {
														"baseExpression": {
															"id": 167,
															"name": "stakedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "4722:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 169,
														"indexExpression": {
															"id": 168,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4735:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4722:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "4715:28:0"
											},
											{
												"expression": {
													"id": 176,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "--",
													"prefix": false,
													"src": "4754:25:0",
													"subExpression": {
														"baseExpression": {
															"id": 172,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "4754:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 175,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 173,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "4764:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4764:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4754:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 177,
												"nodeType": "ExpressionStatement",
												"src": "4754:25:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 183,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4815:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_NFTStakingPerToken_$263",
																		"typeString": "contract NFTStakingPerToken"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_NFTStakingPerToken_$263",
																		"typeString": "contract NFTStakingPerToken"
																	}
																],
																"id": 182,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4807:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 181,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4807:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 184,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4807:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 185,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "4822:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4822:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 187,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 150,
															"src": "4836:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 178,
															"name": "nft",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 13,
															"src": "4790:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$457",
																"typeString": "contract IERC721"
															}
														},
														"id": 180,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4794:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 422,
														"src": "4790:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4790:54:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 189,
												"nodeType": "ExpressionStatement",
												"src": "4790:54:0"
											}
										]
									},
									"documentation": {
										"id": 148,
										"nodeType": "StructuredDocumentation",
										"src": "4452:100:0",
										"text": " @dev withdraws a token from the staking contract\n @param tokenId tokenId"
									},
									"functionSelector": "2e1a7d4d",
									"id": 191,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 153,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "4609:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4609:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 155,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 152,
												"name": "update",
												"nameLocations": [
													"4602:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 91,
												"src": "4602:6:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4602:20:0"
										}
									],
									"name": "withdraw",
									"nameLocation": "4567:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 150,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4584:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "4576:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 149,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4576:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4575:17:0"
									},
									"returnParameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4623:0:0"
									},
									"scope": 263,
									"src": "4558:294:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 229,
										"nodeType": "Block",
										"src": "4978:213:0",
										"statements": [
											{
												"assignments": [
													200
												],
												"declarations": [
													{
														"constant": false,
														"id": 200,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "4997:6:0",
														"nodeType": "VariableDeclaration",
														"scope": 229,
														"src": "4989:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 199,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4989:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 205,
												"initialValue": {
													"baseExpression": {
														"id": 201,
														"name": "reward",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "5006:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 204,
													"indexExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 202,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "5013:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 203,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5013:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5006:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4989:37:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 207,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 200,
																"src": "5045:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 208,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5054:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5045:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7468696e6720746f2072656465656d",
															"id": 210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5057:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_4814ee9298a6ee14dd8d406f87112f1967472b7011a3ae8ceed8f6adee3d0290",
																"typeString": "literal_string \"Nothing to redeem\""
															},
															"value": "Nothing to redeem"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_4814ee9298a6ee14dd8d406f87112f1967472b7011a3ae8ceed8f6adee3d0290",
																"typeString": "literal_string \"Nothing to redeem\""
															}
														],
														"id": 206,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5037:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 211,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5037:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 212,
												"nodeType": "ExpressionStatement",
												"src": "5037:40:0"
											},
											{
												"expression": {
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 213,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 37,
															"src": "5088:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 216,
														"indexExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 214,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "5095:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 215,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5095:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5088:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 217,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5111:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5088:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "5088:24:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 223,
															"name": "rewardWallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 18,
															"src": "5148:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 224,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 487,
																"src": "5162:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5162:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 226,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 200,
															"src": "5176:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 220,
															"name": "rewardToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 16,
															"src": "5123:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$341",
																"typeString": "contract IERC20"
															}
														},
														"id": 222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5135:12:0",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 340,
														"src": "5123:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 227,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5123:60:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 228,
												"nodeType": "ExpressionStatement",
												"src": "5123:60:0"
											}
										]
									},
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "4860:64:0",
										"text": " @dev redeems all of a user's reward tokens."
									},
									"functionSelector": "be040fb0",
									"id": 230,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 195,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 487,
														"src": "4964:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4964:12:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 197,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 194,
												"name": "update",
												"nameLocations": [
													"4957:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 91,
												"src": "4957:6:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "4957:20:0"
										}
									],
									"name": "redeem",
									"nameLocation": "4939:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4945:2:0"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4978:0:0"
									},
									"scope": 263,
									"src": "4930:261:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										474
									],
									"body": {
										"id": 261,
										"nodeType": "Block",
										"src": "5363:134:0",
										"statements": [
											{
												"expression": {
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 246,
															"name": "stakedTokens",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "5374:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 248,
														"indexExpression": {
															"id": 247,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 236,
															"src": "5387:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5374:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 249,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 234,
														"src": "5398:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5374:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 251,
												"nodeType": "ExpressionStatement",
												"src": "5374:28:0"
											},
											{
												"expression": {
													"id": 255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "5413:17:0",
													"subExpression": {
														"baseExpression": {
															"id": 252,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 29,
															"src": "5413:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 254,
														"indexExpression": {
															"id": 253,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 234,
															"src": "5423:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5413:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 256,
												"nodeType": "ExpressionStatement",
												"src": "5413:17:0"
											},
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 257,
															"name": "IERC721Receiver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 475,
															"src": "5448:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721Receiver_$475_$",
																"typeString": "type(contract IERC721Receiver)"
															}
														},
														"id": 258,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5464:16:0",
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 474,
														"src": "5448:32:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
															"typeString": "function IERC721Receiver.onERC721Received(address,address,uint256,bytes calldata) returns (bytes4)"
														}
													},
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "5481:8:0",
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "5448:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 245,
												"id": 260,
												"nodeType": "Return",
												"src": "5441:48:0"
											}
										]
									},
									"functionSelector": "150b7a02",
									"id": 262,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 241,
													"name": "from",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 234,
													"src": "5340:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 242,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 240,
												"name": "update",
												"nameLocations": [
													"5333:6:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 91,
												"src": "5333:6:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5333:12:0"
										}
									],
									"name": "onERC721Received",
									"nameLocation": "5208:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 232,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "5235:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 231,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5235:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5261:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "5253:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5253:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5284:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "5276:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5276:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 238,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "5302:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 237,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5302:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5224:99:0"
									},
									"returnParameters": {
										"id": 245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 262,
												"src": "5355:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 243,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "5355:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5354:8:0"
									},
									"scope": 263,
									"src": "5199:298:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 264,
							"src": "2582:2918:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "1344:4160:0"
				},
				"id": 0
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							341
						]
					},
					"id": 342,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 265,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1400:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 266,
								"nodeType": "StructuredDocumentation",
								"src": "1425:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 341,
							"linearizedBaseContracts": [
								341
							],
							"name": "IERC20",
							"nameLocation": "1506:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "1519:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 275,
									"name": "Transfer",
									"nameLocation": "1688:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1713:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "1697:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1697:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 271,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1735:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "1719:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1719:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1747:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 275,
												"src": "1739:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1739:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1696:57:1"
									},
									"src": "1682:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 276,
										"nodeType": "StructuredDocumentation",
										"src": "1760:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 284,
									"name": "Approval",
									"nameLocation": "1919:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1944:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1928:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 277,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1928:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 280,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1967:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1951:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 279,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1951:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 282,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1984:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1976:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1976:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1927:63:1"
									},
									"src": "1913:78:1"
								},
								{
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "1997:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 290,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2077:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 286,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2088:2:1"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "2114:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 287,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2114:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2113:9:1"
									},
									"scope": 341,
									"src": "2068:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "2129:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 298,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2215:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2233:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "2225:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2225:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2224:17:1"
									},
									"returnParameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "2265:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2265:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2264:9:1"
									},
									"scope": 341,
									"src": "2206:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "2280:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 308,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "2496:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2513:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "2505:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2505:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2525:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "2517:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2517:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2504:28:1"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 308,
												"src": "2551:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 305,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2551:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2550:6:1"
									},
									"scope": 341,
									"src": "2487:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 309,
										"nodeType": "StructuredDocumentation",
										"src": "2563:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 318,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "2841:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 314,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2859:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "2851:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2851:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2874:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "2866:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2866:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2850:32:1"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 318,
												"src": "2906:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2906:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2905:9:1"
									},
									"scope": 341,
									"src": "2832:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "2921:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 328,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3577:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "3585:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 320,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3610:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "3602:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 322,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3602:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3584:33:1"
									},
									"returnParameters": {
										"id": 327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 326,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 328,
												"src": "3636:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 325,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3636:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3635:6:1"
									},
									"scope": 341,
									"src": "3568:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 329,
										"nodeType": "StructuredDocumentation",
										"src": "3648:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 340,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3949:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3979:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "3971:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3971:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4001:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "3993:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3993:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4021:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "4013:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 334,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3961:72:1"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 340,
												"src": "4052:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 337,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4052:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4051:6:1"
									},
									"scope": 341,
									"src": "3940:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 342,
							"src": "1496:2564:1",
							"usedErrors": [],
							"usedEvents": [
								275,
								284
							]
						}
					],
					"src": "1400:2661:1"
				},
				"id": 1
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							509
						],
						"IERC721": [
							457
						]
					},
					"id": 458,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 343,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1402:23:2"
						},
						{
							"absolutePath": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 344,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 458,
							"sourceUnit": 510,
							"src": "1427:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 346,
										"name": "IERC165",
										"nameLocations": [
											"1565:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 509,
										"src": "1565:7:2"
									},
									"id": 347,
									"nodeType": "InheritanceSpecifier",
									"src": "1565:7:2"
								}
							],
							"canonicalName": "IERC721",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 345,
								"nodeType": "StructuredDocumentation",
								"src": "1476:67:2",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 457,
							"linearizedBaseContracts": [
								457,
								509
							],
							"name": "IERC721",
							"nameLocation": "1554:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "1579:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 356,
									"name": "Transfer",
									"nameLocation": "1678:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1703:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "1687:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1687:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1725:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "1709:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 351,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1709:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 354,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1745:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 356,
												"src": "1729:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1729:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1686:67:2"
									},
									"src": "1672:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 357,
										"nodeType": "StructuredDocumentation",
										"src": "1760:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 365,
									"name": "Approval",
									"nameLocation": "1865:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1890:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "1874:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1874:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1913:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "1897:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1897:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1939:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "1923:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1873:74:2"
									},
									"src": "1859:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "1954:117:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 374,
									"name": "ApprovalForAll",
									"nameLocation": "2082:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2113:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "2097:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2097:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2136:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "2120:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2120:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2151:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 374,
												"src": "2146:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 371,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2146:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2096:64:2"
									},
									"src": "2076:85:2"
								},
								{
									"documentation": {
										"id": 375,
										"nodeType": "StructuredDocumentation",
										"src": "2167:76:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 382,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "2257:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2275:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "2267:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 376,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2267:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2266:15:2"
									},
									"returnParameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 380,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "2313:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 382,
												"src": "2305:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 379,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2305:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2304:17:2"
									},
									"scope": 457,
									"src": "2248:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "2328:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 390,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "2473:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2489:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "2481:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2481:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2480:17:2"
									},
									"returnParameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 388,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2529:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 390,
												"src": "2521:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 387,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2521:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2520:15:2"
									},
									"scope": 457,
									"src": "2464:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 391,
										"nodeType": "StructuredDocumentation",
										"src": "2542:556:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 402,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3112:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 393,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3146:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "3138:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 392,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3138:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3168:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "3160:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 394,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3160:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 397,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3188:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "3180:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 396,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3180:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3220:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "3205:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 398,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3205:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3128:102:2"
									},
									"returnParameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3239:0:2"
									},
									"scope": 457,
									"src": "3103:137:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "3246:687:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 412,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3947:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 410,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 405,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3981:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "3973:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 404,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3973:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 407,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4003:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "3995:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 406,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3995:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 409,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4023:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 412,
												"src": "4015:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 408,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3963:73:2"
									},
									"returnParameters": {
										"id": 411,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4045:0:2"
									},
									"scope": 457,
									"src": "3938:108:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "4052:504:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 422,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4570:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4600:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "4592:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4592:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4622:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "4614:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4614:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 419,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4642:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 422,
												"src": "4634:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 418,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4634:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4582:73:2"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4664:0:2"
									},
									"scope": 457,
									"src": "4561:104:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 423,
										"nodeType": "StructuredDocumentation",
										"src": "4671:452:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 430,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "5137:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5153:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "5145:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5145:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5165:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 430,
												"src": "5157:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5157:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5144:29:2"
									},
									"returnParameters": {
										"id": 429,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5182:0:2"
									},
									"scope": 457,
									"src": "5128:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 431,
										"nodeType": "StructuredDocumentation",
										"src": "5189:309:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 438,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "5512:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 433,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5538:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "5530:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5530:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "5553:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "5548:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 434,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5548:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5529:34:2"
									},
									"returnParameters": {
										"id": 437,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5572:0:2"
									},
									"scope": 457,
									"src": "5503:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "5579:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 446,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "5732:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 441,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "5752:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "5744:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5744:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5743:17:2"
									},
									"returnParameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5792:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 446,
												"src": "5784:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5784:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5783:18:2"
									},
									"scope": 457,
									"src": "5723:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 447,
										"nodeType": "StructuredDocumentation",
										"src": "5808:138:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 456,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "5960:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5985:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "5977:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 448,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5977:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 451,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6000:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "5992:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 450,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5992:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5976:33:2"
									},
									"returnParameters": {
										"id": 455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "6033:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 453,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6033:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6032:6:2"
									},
									"scope": 457,
									"src": "5951:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 458,
							"src": "1544:4497:2",
							"usedErrors": [],
							"usedEvents": [
								356,
								365,
								374
							]
						}
					],
					"src": "1402:4640:2"
				},
				"id": 2
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol": {
				"ast": {
					"absolutePath": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/token/ERC721/IERC721Receiver.sol",
					"exportedSymbols": {
						"IERC721Receiver": [
							475
						]
					},
					"id": 476,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 459,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1410:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Receiver",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 460,
								"nodeType": "StructuredDocumentation",
								"src": "1435:152:3",
								"text": " @title ERC721 token receiver interface\n @dev Interface for any contract that wants to support safeTransfers\n from ERC721 asset contracts."
							},
							"fullyImplemented": false,
							"id": 475,
							"linearizedBaseContracts": [
								475
							],
							"name": "IERC721Receiver",
							"nameLocation": "1598:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 461,
										"nodeType": "StructuredDocumentation",
										"src": "1620:493:3",
										"text": " @dev Whenever an {IERC721} `tokenId` token is transferred to this contract via {IERC721-safeTransferFrom}\n by `operator` from `from`, this function is called.\n It must return its Solidity selector to confirm the token transfer.\n If any other value is returned or the interface is not implemented by the recipient, the transfer will be reverted.\n The selector can be obtained in Solidity with `IERC721Receiver.onERC721Received.selector`."
									},
									"functionSelector": "150b7a02",
									"id": 474,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "2127:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 463,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2161:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2153:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2153:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2187:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2179:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 464,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2179:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2209:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2201:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 466,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2201:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 469,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2241:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2226:19:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 468,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2226:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2143:108:3"
									},
									"returnParameters": {
										"id": 473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 472,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 474,
												"src": "2270:6:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 471,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2270:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2269:8:3"
									},
									"scope": 475,
									"src": "2118:160:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 476,
							"src": "1588:692:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "1410:871:3"
				},
				"id": 3
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							497
						]
					},
					"id": 498,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 477,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1380:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 478,
								"nodeType": "StructuredDocumentation",
								"src": "1405:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 497,
							"linearizedBaseContracts": [
								497
							],
							"name": "Context",
							"nameLocation": "1920:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 486,
										"nodeType": "Block",
										"src": "1996:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 483,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2013:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 484,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2017:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "2013:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 482,
												"id": 485,
												"nodeType": "Return",
												"src": "2006:17:4"
											}
										]
									},
									"id": 487,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "1943:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 479,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1953:2:4"
									},
									"returnParameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 481,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 487,
												"src": "1987:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1987:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1986:9:4"
									},
									"scope": 497,
									"src": "1934:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 495,
										"nodeType": "Block",
										"src": "2103:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 492,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "2120:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 493,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2124:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "2120:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 491,
												"id": 494,
												"nodeType": "Return",
												"src": "2113:15:4"
											}
										]
									},
									"id": 496,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "2045:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2053:2:4"
									},
									"returnParameters": {
										"id": 491,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 490,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 496,
												"src": "2087:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 489,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2087:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2086:16:4"
									},
									"scope": 497,
									"src": "2036:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 498,
							"src": "1902:235:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "1380:758:4"
				},
				"id": 4
			},
			"nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "nft-staking-with-infinite-rewards/@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							509
						]
					},
					"id": 510,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 499,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1394:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 500,
								"nodeType": "StructuredDocumentation",
								"src": "1419:279:5",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 509,
							"linearizedBaseContracts": [
								509
							],
							"name": "IERC165",
							"nameLocation": "1709:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 501,
										"nodeType": "StructuredDocumentation",
										"src": "1723:340:5",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 508,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2077:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 504,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 503,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2102:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "2095:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 502,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2095:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2094:20:5"
									},
									"returnParameters": {
										"id": 507,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 506,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 508,
												"src": "2138:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 505,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2138:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:6:5"
									},
									"scope": 509,
									"src": "2068:76:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 510,
							"src": "1699:447:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "1394:753:5"
				},
				"id": 5
			}
		}
	}
}