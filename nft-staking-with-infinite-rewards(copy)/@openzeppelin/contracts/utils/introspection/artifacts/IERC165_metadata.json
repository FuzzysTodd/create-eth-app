{
	"compiler": {
		"version": "0.8.27+commit.40a35a09"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "bytes4",
						"name": "interfaceId",
						"type": "bytes4"
					}
				],
				"name": "supportsInterface",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
			"kind": "dev",
			"methods": {
				"supportsInterface(bytes4)": {
					"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
				}
			},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"nft-staking-with-infinite-rewards(copy)/@openzeppelin/contracts/utils/introspection/IERC165.sol": "IERC165"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"nft-staking-with-infinite-rewards(copy)/@openzeppelin/contracts/utils/introspection/IERC165.sol": {
			"keccak256": "0x668ff4050c0126670a9f09988abf10045122365391d356080aff18c6c78002c1",
			"license": "MIT",
			"urls": [
				"bzz-raw://933bcc6a8ab217cd9943c4f3fbb615b6a6c1f0a7af06a3a5a82f9de743c85641",
				"dweb:/ipfs/QmZCW29EG1VpLJNJfMq4ajxii3S5cByPW8UabbCqnK6yiK"
			]
		}
	},
	"version": 1
}