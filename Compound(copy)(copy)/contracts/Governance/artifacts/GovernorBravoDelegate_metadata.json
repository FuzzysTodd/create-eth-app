{
	"compiler": {
		"version": "0.8.27+commit.40a35a09"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "oldAdmin",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "newAdmin",
						"type": "address"
					}
				],
				"name": "NewAdmin",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "oldImplementation",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "newImplementation",
						"type": "address"
					}
				],
				"name": "NewImplementation",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "oldPendingAdmin",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "newPendingAdmin",
						"type": "address"
					}
				],
				"name": "NewPendingAdmin",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "ProposalCanceled",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "proposer",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address[]",
						"name": "targets",
						"type": "address[]"
					},
					{
						"indexed": false,
						"internalType": "uint256[]",
						"name": "values",
						"type": "uint256[]"
					},
					{
						"indexed": false,
						"internalType": "string[]",
						"name": "signatures",
						"type": "string[]"
					},
					{
						"indexed": false,
						"internalType": "bytes[]",
						"name": "calldatas",
						"type": "bytes[]"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "startBlock",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "endBlock",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "description",
						"type": "string"
					}
				],
				"name": "ProposalCreated",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					}
				],
				"name": "ProposalExecuted",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "eta",
						"type": "uint256"
					}
				],
				"name": "ProposalQueued",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "oldProposalThreshold",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newProposalThreshold",
						"type": "uint256"
					}
				],
				"name": "ProposalThresholdSet",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "voter",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "proposalId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "support",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "votes",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "string",
						"name": "reason",
						"type": "string"
					}
				],
				"name": "VoteCast",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "oldVotingDelay",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newVotingDelay",
						"type": "uint256"
					}
				],
				"name": "VotingDelaySet",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "oldVotingPeriod",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "newVotingPeriod",
						"type": "uint256"
					}
				],
				"name": "VotingPeriodSet",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "expiration",
						"type": "uint256"
					}
				],
				"name": "WhitelistAccountExpirationSet",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "oldGuardian",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "newGuardian",
						"type": "address"
					}
				],
				"name": "WhitelistGuardianSet",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "BALLOT_TYPEHASH",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "DOMAIN_TYPEHASH",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "MAX_PROPOSAL_THRESHOLD",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "MAX_VOTING_DELAY",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "MAX_VOTING_PERIOD",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "MIN_PROPOSAL_THRESHOLD",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "MIN_VOTING_DELAY",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "MIN_VOTING_PERIOD",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "_acceptAdmin",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "governorAlpha",
						"type": "address"
					}
				],
				"name": "_initiate",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newPendingAdmin",
						"type": "address"
					}
				],
				"name": "_setPendingAdmin",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "newProposalThreshold",
						"type": "uint256"
					}
				],
				"name": "_setProposalThreshold",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "newVotingDelay",
						"type": "uint256"
					}
				],
				"name": "_setVotingDelay",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "newVotingPeriod",
						"type": "uint256"
					}
				],
				"name": "_setVotingPeriod",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "expiration",
						"type": "uint256"
					}
				],
				"name": "_setWhitelistAccountExpiration",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "_setWhitelistGuardian",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "admin",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "proposalId",
						"type": "uint256"
					}
				],
				"name": "cancel",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "proposalId",
						"type": "uint256"
					},
					{
						"internalType": "uint8",
						"name": "support",
						"type": "uint8"
					}
				],
				"name": "castVote",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "proposalId",
						"type": "uint256"
					},
					{
						"internalType": "uint8",
						"name": "support",
						"type": "uint8"
					},
					{
						"internalType": "uint8",
						"name": "v",
						"type": "uint8"
					},
					{
						"internalType": "bytes32",
						"name": "r",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "s",
						"type": "bytes32"
					}
				],
				"name": "castVoteBySig",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "proposalId",
						"type": "uint256"
					},
					{
						"internalType": "uint8",
						"name": "support",
						"type": "uint8"
					},
					{
						"internalType": "string",
						"name": "reason",
						"type": "string"
					}
				],
				"name": "castVoteWithReason",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "comp",
				"outputs": [
					{
						"internalType": "contract CompInterface",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "proposalId",
						"type": "uint256"
					}
				],
				"name": "execute",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "proposalId",
						"type": "uint256"
					}
				],
				"name": "getActions",
				"outputs": [
					{
						"internalType": "address[]",
						"name": "targets",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "values",
						"type": "uint256[]"
					},
					{
						"internalType": "string[]",
						"name": "signatures",
						"type": "string[]"
					},
					{
						"internalType": "bytes[]",
						"name": "calldatas",
						"type": "bytes[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "proposalId",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "voter",
						"type": "address"
					}
				],
				"name": "getReceipt",
				"outputs": [
					{
						"components": [
							{
								"internalType": "bool",
								"name": "hasVoted",
								"type": "bool"
							},
							{
								"internalType": "uint8",
								"name": "support",
								"type": "uint8"
							},
							{
								"internalType": "uint96",
								"name": "votes",
								"type": "uint96"
							}
						],
						"internalType": "struct GovernorBravoDelegateStorageV1.Receipt",
						"name": "",
						"type": "tuple"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "implementation",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "initialProposalId",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "timelock_",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "comp_",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "votingPeriod_",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "votingDelay_",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "proposalThreshold_",
						"type": "uint256"
					}
				],
				"name": "initialize",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "isWhitelisted",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "latestProposalIds",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pendingAdmin",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "proposalCount",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "proposalMaxOperations",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "proposalThreshold",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "proposals",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "proposer",
						"type": "address"
					},
					{
						"internalType": "uint256",
						"name": "eta",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "startBlock",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "endBlock",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "forVotes",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "againstVotes",
						"type": "uint256"
					},
					{
						"internalType": "uint256",
						"name": "abstainVotes",
						"type": "uint256"
					},
					{
						"internalType": "bool",
						"name": "canceled",
						"type": "bool"
					},
					{
						"internalType": "bool",
						"name": "executed",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[]",
						"name": "targets",
						"type": "address[]"
					},
					{
						"internalType": "uint256[]",
						"name": "values",
						"type": "uint256[]"
					},
					{
						"internalType": "string[]",
						"name": "signatures",
						"type": "string[]"
					},
					{
						"internalType": "bytes[]",
						"name": "calldatas",
						"type": "bytes[]"
					},
					{
						"internalType": "string",
						"name": "description",
						"type": "string"
					}
				],
				"name": "propose",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "proposalId",
						"type": "uint256"
					}
				],
				"name": "queue",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "quorumVotes",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "proposalId",
						"type": "uint256"
					}
				],
				"name": "state",
				"outputs": [
					{
						"internalType": "enum GovernorBravoDelegateStorageV1.ProposalState",
						"name": "",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "timelock",
				"outputs": [
					{
						"internalType": "contract TimelockInterface",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "votingDelay",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "votingPeriod",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "whitelistAccountExpirations",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "whitelistGuardian",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"events": {
				"VoteCast(address,uint256,uint8,uint256,string)": {
					"params": {
						"proposalId": "The proposal id which was voted on",
						"reason": "The reason given for the vote by the voter",
						"support": "Support value for the vote. 0=against, 1=for, 2=abstain",
						"voter": "The address which casted a vote",
						"votes": "Number of votes which were cast by the voter"
					}
				}
			},
			"kind": "dev",
			"methods": {
				"_acceptAdmin()": {
					"details": "Admin function for pending admin to accept role and update admin"
				},
				"_initiate(address)": {
					"details": "Admin only. Sets initial proposal id which initiates the contract, ensuring a continuous proposal id count",
					"params": {
						"governorAlpha": "The address for the Governor to continue the proposal id count from"
					}
				},
				"_setPendingAdmin(address)": {
					"details": "Admin function to begin change of admin. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer.",
					"params": {
						"newPendingAdmin": "New pending admin."
					}
				},
				"_setProposalThreshold(uint256)": {
					"details": "newProposalThreshold must be greater than the hardcoded min",
					"params": {
						"newProposalThreshold": "new proposal threshold"
					}
				},
				"_setVotingDelay(uint256)": {
					"params": {
						"newVotingDelay": "new voting delay, in blocks"
					}
				},
				"_setVotingPeriod(uint256)": {
					"params": {
						"newVotingPeriod": "new voting period, in blocks"
					}
				},
				"_setWhitelistAccountExpiration(address,uint256)": {
					"params": {
						"account": "Account address to set whitelist expiration for",
						"expiration": "Expiration for account whitelist status as timestamp (if now < expiration, whitelisted)"
					}
				},
				"_setWhitelistGuardian(address)": {
					"params": {
						"account": "Account to set whitelistGuardian to (0x0 to remove whitelistGuardian)"
					}
				},
				"cancel(uint256)": {
					"params": {
						"proposalId": "The id of the proposal to cancel"
					}
				},
				"castVote(uint256,uint8)": {
					"params": {
						"proposalId": "The id of the proposal to vote on",
						"support": "The support value for the vote. 0=against, 1=for, 2=abstain"
					}
				},
				"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)": {
					"details": "External function that accepts EIP-712 signatures for voting on proposals."
				},
				"castVoteWithReason(uint256,uint8,string)": {
					"params": {
						"proposalId": "The id of the proposal to vote on",
						"reason": "The reason given for the vote by the voter",
						"support": "The support value for the vote. 0=against, 1=for, 2=abstain"
					}
				},
				"execute(uint256)": {
					"params": {
						"proposalId": "The id of the proposal to execute"
					}
				},
				"getActions(uint256)": {
					"params": {
						"proposalId": "the id of the proposal"
					},
					"returns": {
						"calldatas": "of the proposal actions",
						"signatures": "of the proposal actions",
						"targets": "of the proposal actions",
						"values": "of the proposal actions"
					}
				},
				"getReceipt(uint256,address)": {
					"params": {
						"proposalId": "the id of proposal",
						"voter": "The address of the voter"
					},
					"returns": {
						"_0": "The voting receipt"
					}
				},
				"initialize(address,address,uint256,uint256,uint256)": {
					"params": {
						"comp_": "The address of the COMP token",
						"proposalThreshold_": "The initial proposal threshold",
						"timelock_": "The address of the Timelock",
						"votingDelay_": "The initial voting delay",
						"votingPeriod_": "The initial voting period"
					}
				},
				"isWhitelisted(address)": {
					"params": {
						"account": "Account to check white list status of"
					},
					"returns": {
						"_0": "If the account is whitelisted"
					}
				},
				"propose(address[],uint256[],string[],bytes[],string)": {
					"params": {
						"calldatas": "Calldatas for proposal calls",
						"description": "String description of the proposal",
						"signatures": "Function signatures for proposal calls",
						"targets": "Target addresses for proposal calls",
						"values": "Eth values for proposal calls"
					},
					"returns": {
						"_0": "Proposal id of new proposal"
					}
				},
				"queue(uint256)": {
					"params": {
						"proposalId": "The id of the proposal to queue"
					}
				},
				"state(uint256)": {
					"params": {
						"proposalId": "The id of the proposal"
					},
					"returns": {
						"_0": "Proposal state"
					}
				}
			},
			"version": 1
		},
		"userdoc": {
			"events": {
				"NewAdmin(address,address)": {
					"notice": "Emitted when pendingAdmin is accepted, which means admin is updated"
				},
				"NewImplementation(address,address)": {
					"notice": "Emitted when implementation is changed"
				},
				"NewPendingAdmin(address,address)": {
					"notice": "Emitted when pendingAdmin is changed"
				},
				"ProposalCanceled(uint256)": {
					"notice": "An event emitted when a proposal has been canceled"
				},
				"ProposalCreated(uint256,address,address[],uint256[],string[],bytes[],uint256,uint256,string)": {
					"notice": "An event emitted when a new proposal is created"
				},
				"ProposalExecuted(uint256)": {
					"notice": "An event emitted when a proposal has been executed in the Timelock"
				},
				"ProposalQueued(uint256,uint256)": {
					"notice": "An event emitted when a proposal has been queued in the Timelock"
				},
				"ProposalThresholdSet(uint256,uint256)": {
					"notice": "Emitted when proposal threshold is set"
				},
				"VoteCast(address,uint256,uint8,uint256,string)": {
					"notice": "An event emitted when a vote has been cast on a proposal"
				},
				"VotingDelaySet(uint256,uint256)": {
					"notice": "An event emitted when the voting delay is set"
				},
				"VotingPeriodSet(uint256,uint256)": {
					"notice": "An event emitted when the voting period is set"
				},
				"WhitelistAccountExpirationSet(address,uint256)": {
					"notice": "Emitted when whitelist account expiration is set"
				},
				"WhitelistGuardianSet(address,address)": {
					"notice": "Emitted when the whitelistGuardian is set"
				}
			},
			"kind": "user",
			"methods": {
				"BALLOT_TYPEHASH()": {
					"notice": "The EIP-712 typehash for the ballot struct used by the contract"
				},
				"DOMAIN_TYPEHASH()": {
					"notice": "The EIP-712 typehash for the contract's domain"
				},
				"MAX_PROPOSAL_THRESHOLD()": {
					"notice": "The maximum setable proposal threshold"
				},
				"MAX_VOTING_DELAY()": {
					"notice": "The max setable voting delay"
				},
				"MAX_VOTING_PERIOD()": {
					"notice": "The max setable voting period"
				},
				"MIN_PROPOSAL_THRESHOLD()": {
					"notice": "The minimum setable proposal threshold"
				},
				"MIN_VOTING_DELAY()": {
					"notice": "The min setable voting delay"
				},
				"MIN_VOTING_PERIOD()": {
					"notice": "The minimum setable voting period"
				},
				"_acceptAdmin()": {
					"notice": "Accepts transfer of admin rights. msg.sender must be pendingAdmin"
				},
				"_initiate(address)": {
					"notice": "Initiate the GovernorBravo contract"
				},
				"_setPendingAdmin(address)": {
					"notice": "Begins transfer of admin rights. The newPendingAdmin must call `_acceptAdmin` to finalize the transfer."
				},
				"_setProposalThreshold(uint256)": {
					"notice": "Admin function for setting the proposal threshold"
				},
				"_setVotingDelay(uint256)": {
					"notice": "Admin function for setting the voting delay"
				},
				"_setVotingPeriod(uint256)": {
					"notice": "Admin function for setting the voting period"
				},
				"_setWhitelistAccountExpiration(address,uint256)": {
					"notice": "Admin function for setting the whitelist expiration as a timestamp for an account. Whitelist status allows accounts to propose without meeting threshold"
				},
				"_setWhitelistGuardian(address)": {
					"notice": "Admin function for setting the whitelistGuardian. WhitelistGuardian can cancel proposals from whitelisted addresses"
				},
				"admin()": {
					"notice": "Administrator for this contract"
				},
				"cancel(uint256)": {
					"notice": "Cancels a proposal only if sender is the proposer, or proposer delegates dropped below proposal threshold"
				},
				"castVote(uint256,uint8)": {
					"notice": "Cast a vote for a proposal"
				},
				"castVoteBySig(uint256,uint8,uint8,bytes32,bytes32)": {
					"notice": "Cast a vote for a proposal by signature"
				},
				"castVoteWithReason(uint256,uint8,string)": {
					"notice": "Cast a vote for a proposal with a reason"
				},
				"comp()": {
					"notice": "The address of the Compound governance token"
				},
				"execute(uint256)": {
					"notice": "Executes a queued proposal if eta has passed"
				},
				"getActions(uint256)": {
					"notice": "Gets actions of a proposal"
				},
				"getReceipt(uint256,address)": {
					"notice": "Gets the receipt for a voter on a given proposal"
				},
				"implementation()": {
					"notice": "Active brains of Governor"
				},
				"initialProposalId()": {
					"notice": "Initial proposal id set at become"
				},
				"initialize(address,address,uint256,uint256,uint256)": {
					"notice": "Used to initialize the contract during delegator constructor"
				},
				"isWhitelisted(address)": {
					"notice": "View function which returns if an account is whitelisted"
				},
				"latestProposalIds(address)": {
					"notice": "The latest proposal for each proposer"
				},
				"name()": {
					"notice": "The name of this contract"
				},
				"pendingAdmin()": {
					"notice": "Pending administrator for this contract"
				},
				"proposalCount()": {
					"notice": "The total number of proposals"
				},
				"proposalMaxOperations()": {
					"notice": "The maximum number of actions that can be included in a proposal"
				},
				"proposalThreshold()": {
					"notice": "The number of votes required in order for a voter to become a proposer"
				},
				"proposals(uint256)": {
					"notice": "The official record of all proposals ever proposed"
				},
				"propose(address[],uint256[],string[],bytes[],string)": {
					"notice": "Function used to propose a new proposal. Sender must have delegates above the proposal threshold"
				},
				"queue(uint256)": {
					"notice": "Queues a proposal of state succeeded"
				},
				"quorumVotes()": {
					"notice": "The number of votes in support of a proposal required in order for a quorum to be reached and for a vote to succeed"
				},
				"state(uint256)": {
					"notice": "Gets the state of a proposal"
				},
				"timelock()": {
					"notice": "The address of the Compound Protocol Timelock"
				},
				"votingDelay()": {
					"notice": "The delay before voting on a proposal may take place, once proposed, in blocks"
				},
				"votingPeriod()": {
					"notice": "The duration of voting on a proposal, in blocks"
				},
				"whitelistAccountExpirations(address)": {
					"notice": "Stores the expiration of account whitelist status as a timestamp"
				},
				"whitelistGuardian()": {
					"notice": "Address which manages whitelisted proposals and whitelist accounts"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"Compound(copy)(copy)/contracts/Governance/GovernorBravoDelegate.sol": "GovernorBravoDelegate"
		},
		"evmVersion": "cancun",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"Compound(copy)(copy)/contracts/Governance/GovernorBravoDelegate.sol": {
			"keccak256": "0xd503be459391496763ef8b204f992583f4388f0fc3bc5684a36abd789f0292a0",
			"license": "BSD-3-Clause",
			"urls": [
				"bzz-raw://238b9ee211cb61fb750b4602b473d6fd747aa2daa2a71c1b8e026fb75e796393",
				"dweb:/ipfs/QmV26eB3rPpJcfR88jqxNLj57dRrH8j6QmN9LgyAfaWtSf"
			]
		},
		"Compound(copy)(copy)/contracts/Governance/GovernorBravoInterfaces.sol": {
			"keccak256": "0xedcde61f7b912cf62706abbdb1b8065472b873b6cf7c94689d1389cac1815826",
			"license": "BSD-3-Clause",
			"urls": [
				"bzz-raw://d29559105fa8a220a2f8d19e10735fcd93e3e4af70a7c2f176d5c52b76683512",
				"dweb:/ipfs/QmTLW7D644EaNyECG5LySLZudwU89rKm2RjSzB5yaDcMgG"
			]
		}
	},
	"version": 1
}